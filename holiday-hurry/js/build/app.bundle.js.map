{"version":3,"sources":["webpack://Alvin/webpack/bootstrap","webpack://Alvin/./js/game.js","webpack://Alvin/./js/index.js","webpack://Alvin/./js/item.js","webpack://Alvin/./js/timer.js"],"names":["LEVELS","collectible_lists","not_collectible","used_items","speed","density","time","ITEMS","CHARACTERS","DROP_INTERVAL","SCORE_PER_ROUND","SCORE_PER_SECOND","LAST_LEVEL","LAST_LEVEL_COMPETITION","CLOCK_ID","ICE_ID","PAINT_ID","clickSound","backgroundSound","createjs","Sound","registerSound","on","loadHandler","event","id","play","volume","loop","mobile","test","navigator","userAgent","mobileDimension","document","documentElement","style","width","fontSize","clientWidth","window","innerWidth","Game","gameMode","level","getUrlParameter","currentCharacterId","timer","Timer","currentLevel","currentCollectedRounds","currentCollected","currentItems","currentScore","lastLevel","windowFocused","levelIsRunning","suitcaseFrozen","highScore","parseInt","localStorage","getItem","$","startGame","onMouseMove","startNewLevel","tryAgain","nextLevel","toggleSound","focus","resumeOnFocus","blur","pauseOnBlur","removeDrag","forEach","element","addEventListener","e","preventDefault","passive","showNewLevel","ga","eventCategory","eventAction","eventLabel","addClass","removeClass","gameHeight","height","gameWidth","suitcaseWidth","text","getRandomArbitrary","i","push","shuffleArray","generateNewLevelItems","generateLevelItems","setTimeout","dropItems","start","showEnterCompetitionScreen","newPoints","timeBonus","getCurrentSeconds","hasClass","stop","dropItemsIntervalInstance","setInterval","newItem","getNewItem","append","Item","data","usedItemsLength","length","item","itemId","prop","offset","currentTarget","totalWidth","x","changedTouches","pageX","left","xOffset","css","html","newList","j","indexOf","clearInterval","remove","src","eq","find","min","max","Math","ceil","floor","random","array","currentIndex","temporaryValue","randomIndex","name","replace","regex","RegExp","results","exec","location","search","decodeURIComponent","DROP_SPEED","DROPPING_STATE","COLLECTING_STATE","COLLECTED_STATE","INSIDE_STATE","GOING_LEFT_STATE","GOING_RIGHT_STATE","MISSED_STATE","CORRECT_ANIMATION_DURATION","INCORRECT_ANIMATION_DURATION","SPLASH_ANIMATION_DURATION","SUITCASE_FROZEN_DURATION","badCollectSound","goodCollectSound","penaltyFreezeSound","penaltySplatSound","type","wrapperHeight","querySelector","clientHeight","droppingSpeed","droppingInSuitcaseSpeed","droppingOutSpeed","startDropping","detectCollision","checkClock","updateTimer","isTheRightItem","showCorrectAnimation","isTheItemsOrderDone","isTheLevelDone","showEndLevelScreen","showIncorrectAnimation","refreshCollectedItems","showSplashAnimation","showHighScoreScreen","setItem","showBadLuckScreen","requestAnimationFrame","itemRect","getBoundingClientRect","suitcaseRect","bottom","top","right","frontSuitcaseRect","correctAnimation","clone","clearTimeout","correctAnimationTimeout","incorrectAnimation","incorrectAnimationTimeout","splashAnimation","splashAnimationTimeout","GAINED_SECONDS","YELLOW_LIMIT","RED_LIMIT","timeInSeconds","refresh","setCountdownTimer","gainedSeconds"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/index.js\");\n","import Timer from './timer';\nimport Item from './item';\n\nconst LEVELS = [\n    // Level 1\n    {\n        collectible_lists: 1,\n        not_collectible: [],\n        used_items: [1, 2, 3, 4, 5, 6],\n        speed: 1,\n        density: 1,\n        time: 40,\n    },\n    // Level 2\n    {\n        collectible_lists: 2,\n        not_collectible: [],\n        used_items: [1, 2, 3, 4, 5, 6],\n        speed: 1.05,\n        density: 1,\n        time: 60,\n    },\n    // Level 3\n    {\n        collectible_lists: 3,\n        not_collectible: [7],\n        used_items: [1, 2, 3, 4, 5, 6, 7],\n        speed: 1.1,\n        density: 1,\n        time: 80,\n    },\n    // Level 4\n    {\n        collectible_lists: 1,\n        not_collectible: [7, 8],\n        used_items: [1, 2, 3, 4, 5, 6, 7, 8],\n        speed: 1.15,\n        density: 0.85,\n        time: 40,\n    },\n    // Level 5\n    {\n        collectible_lists: 2,\n        not_collectible: [7, 8],\n        used_items: [1, 2, 3, 4, 5, 6, 7, 8],\n        speed: 1.2,\n        density: 0.85,\n        time: 60,\n    },\n    // Level 6\n    {\n        collectible_lists: 3,\n        not_collectible: [7, 8],\n        used_items: [1, 2, 3, 4, 5, 6, 7, 8],\n        speed: 1.25,\n        density: 0.85,\n        time: 80,\n    },\n    // Level 7\n    {\n        collectible_lists: 2,\n        not_collectible: [7, 8],\n        used_items: [1, 2, 3, 4, 5, 6, 7, 8],\n        speed: 1.3,\n        density: 0.85,\n        time: 50,\n    },\n    // Level 8\n    {\n        collectible_lists: 3,\n        not_collectible: [8],\n        used_items: [1, 2, 3, 4, 5, 7, 8],\n        speed: 1.35,\n        density: 0.8,\n        time: 70,\n    },\n    // Level 9\n    {\n        collectible_lists: 4,\n        not_collectible: [7, 8],\n        used_items: [1, 2, 3, 4, 5, 7, 8],\n        speed: 1.4,\n        density: 0.8,\n        time: 60,\n    },\n    // Level 10\n    {\n        collectible_lists: 4,\n        not_collectible: [7, 8],\n        used_items: [1, 2, 3, 4, 5, 7, 8],\n        speed: 1.45,\n        density: 0.7,\n        time: 80,\n    },\n];\n\nconst ITEMS = {\n    1: 'balloon.png',\n    2: 'ball.png',\n    3: 'shield.png',\n    4: 'hat.png',\n    5: 'bear.png',\n};\n\nconst CHARACTERS = {\n    1: 'alvin.png',\n    2: 'simon.png',\n    3: 'theadore.png',\n};\n\nconst DROP_INTERVAL = 750;\n\nconst SCORE_PER_ROUND = 50;\n\nconst SCORE_PER_SECOND = 2;\n\nconst LAST_LEVEL = 10;\n\nconst LAST_LEVEL_COMPETITION = 1;\n\nconst CLOCK_ID = 6;\n\nconst ICE_ID = 7;\n\nconst PAINT_ID = 8;\n\nconst clickSound = 'ClickSound';\nconst backgroundSound = 'BackgroundSound';\n\ncreatejs.Sound.registerSound('sounds/click.mp3', clickSound);\n\ncreatejs.Sound.on('fileload', loadHandler);\ncreatejs.Sound.registerSound('sounds/background.mp3', backgroundSound);\n\nfunction loadHandler(event) {\n    if (event.id === backgroundSound) {\n        createjs.Sound.play(backgroundSound, { volume: 0.1, loop: -1 });\n    }\n}\n\nconst mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n);\n\n// Sets \"font-size\" of \"<html>\" to the width of it, in pixels. All other elements get their dimensions\n//relative to this font-size, in rems;\nfunction mobileDimension() {\n    document.documentElement.style.width = '100%';\n    document.documentElement.style.fontSize =\n        document.documentElement.clientWidth;\n}\n\n// If mobile, resize elements;\nif (window.innerWidth < 562) {\n    mobileDimension();\n}\n\nexport default class Game {\n    /**\n     * Timer instance.\n     */\n    static timer;\n\n    /**\n     * True if the game has started.\n     */\n    #gameStarted;\n\n    /**\n     * Dropped items count.\n     */\n    #itemsCount;\n\n    /**\n     * Last dropped item id.\n     */\n    #lastDroppedItemId;\n\n    /**\n     * Current character id of the level.\n     */\n    static currentCharacterId;\n\n    /**\n     * Current level running.\n     */\n    static currentLevel;\n\n    /**\n     * Current items order arrays.\n     */\n    static currentItems;\n\n    /**\n     * Current collected items.\n     */\n    static currentCollected;\n\n    /**\n     * Current collected rounds count.\n     */\n    static currentCollectedRounds;\n\n    /**\n     * Current score.\n     */\n    static currentScore;\n\n    /**\n     * Game mode (classic/competition).\n     */\n    static gameMode;\n\n    /**\n     * Last level.\n     */\n    static lastLevel;\n\n    /**\n     * Highest score.\n     */\n    static highScore;\n\n    /**\n     * Drop items interval.\n     */\n    static dropItemsIntervalInstance;\n\n    /**\n     * Game wrapper height.\n     */\n    static gameHeight;\n\n    /**\n     * Game wrapper width.\n     */\n    static gameWidth;\n\n    /**\n     * Suitcase width.\n     */\n    static suitcaseWidth;\n\n    /**\n     * Correct animation timeout.\n     */\n    static correctAnimationTimeout;\n\n    /**\n     * Incorrect animation timeout.\n     */\n    static incorrectAnimationTimeout;\n\n    /**\n     * Splash animation timeout.\n     */\n    static splashAnimationTimeout;\n\n    /**\n     * True if the window is currently focused.\n     */\n    static windowFocused;\n\n    /**\n     * True if the level is running.\n     */\n    static levelIsRunning;\n\n    /**\n     * True if the suitcase is frozen by ice item.\n     */\n    static suitcaseFrozen;\n\n    constructor(gameMode) {\n        this.#itemsCount = 0;\n        this.#lastDroppedItemId = 0;\n\n        const level = Game.getUrlParameter('level');\n\n        Game.currentCharacterId = 1;\n        Game.timer = new Timer();\n        Game.currentLevel = level || 1;\n        Game.currentCollectedRounds = 0;\n        Game.currentCollected = [];\n        Game.currentItems = [];\n        Game.currentScore = 0;\n        Game.gameMode = gameMode;\n        if (gameMode === 'classic') {\n            Game.lastLevel = LAST_LEVEL;\n        } else {\n            Game.lastLevel = LAST_LEVEL_COMPETITION;\n        }\n        Game.windowFocused = true;\n        Game.levelIsRunning = false;\n        Game.suitcaseFrozen = false;\n        Game.highScore =\n            parseInt(window.localStorage.getItem('high_score')) || 0;\n\n        $('.start-game-button').on('click', () => this.startGame());\n        mobile\n            ? $('.game').on('touchmove', (event) => this.onMouseMove(event))\n            : $('.game').on('mousemove', (event) => this.onMouseMove(event));\n        $('.play-button').on('click', () => this.startNewLevel());\n        $('.try-again-button').on('click', () => this.tryAgain());\n        $('.next-level-button').on('click', () => this.nextLevel());\n        $('.sound-button').on('click', () => this.toggleSound());\n        $(window).focus(() => {\n            Game.timer.resumeOnFocus();\n            Game.windowFocused = true;\n        });\n        $(window).blur(() => {\n            Game.windowFocused = false;\n            Game.timer.pauseOnBlur();\n        });\n        $(window).on('resize', mobileDimension);\n\n        if (mobile) {\n            // on mobile, remove default dragging from certain elements;\n            let removeDrag = [document, $('.suitcase')[0], $('.level-ui')[0]];\n\n            removeDrag.forEach((element) => {\n                element.addEventListener(\n                    'touchmove',\n                    function (e) {\n                        e.preventDefault();\n                    },\n                    { passive: false }\n                );\n            });\n        }\n\n        this.showNewLevel();\n    }\n\n    /**\n     * Method user to hide the splash screen and show the game screen.\n     */\n    startGame() {\n        createjs.Sound.play(clickSound);\n\n        ga('send', 'event', {\n            eventCategory: 'Start Game',\n            eventAction: 'Games',\n            eventLabel: 'Alvin and the Chipmunks',\n        });\n\n        $('.splash').addClass('hidden');\n        $('.splash-competition').addClass('hidden');\n        $('.wrapper').removeClass('hidden');\n\n        Game.gameHeight = $('.game').height();\n        Game.gameWidth = $('.game').width();\n        Game.suitcaseWidth = $('.game .suitcase').width();\n    }\n\n    /**\n     * Method used to show the new level info.\n     */\n    showNewLevel() {\n        $('.timer-bar').removeClass('show');\n        $('.new-level-ui').addClass('show');\n        $('#newLevel').text(Game.currentLevel);\n        $('#highScore').text(Game.highScore);\n        $('.level-ui').removeClass('show');\n        $('.dark-background').addClass('show');\n\n        Game.currentCharacterId = Game.getRandomArbitrary(1, 3);\n\n        Game.currentItems = [];\n        for (\n            let i = 0;\n            i < LEVELS[Game.currentLevel - 1].collectible_lists;\n            i++\n        ) {\n            Game.currentItems.push(Game.shuffleArray([1, 2, 3, 4, 5]));\n        }\n\n        Game.generateNewLevelItems();\n    }\n\n    /**\n     * Method used to start a new level.\n     */\n    startNewLevel() {\n        createjs.Sound.play(clickSound);\n\n        ga('send', 'event', {\n            eventCategory: 'Play Level',\n            eventAction: 'Games',\n            eventLabel: 'Alvin and the Chipmunks',\n        });\n\n        $('.timer-bar').addClass('show');\n        $('.level-ui').addClass('show');\n        $('.dark-background').removeClass('show');\n        $('.new-level-ui').removeClass('show');\n\n        Game.generateLevelItems();\n\n        this.#gameStarted = true;\n        $('.game').addClass('game-running');\n\n        $('.game .suitcase, .game .suitcase-front').removeClass('hidden');\n\n        // Start dropping items after a slight delay.\n        setTimeout(() => {\n            Game.levelIsRunning = true;\n            this.dropItems();\n            // Start the timer of the level.\n            Game.timer.start(LEVELS[Game.currentLevel - 1].time);\n        }, 500);\n    }\n\n    /**\n     * Method called on try again button click.\n     */\n    tryAgain() {\n        createjs.Sound.play(clickSound);\n\n        ga('send', 'event', {\n            eventCategory: 'Try Again',\n            eventAction: 'Games',\n            eventLabel: 'Alvin and the Chipmunks',\n        });\n\n        Game.currentLevel = 1;\n        Game.currentCollectedRounds = 0;\n        Game.currentCollected = [];\n        Game.currentItems = [];\n        Game.currentScore = 0;\n\n        $('#badLuckUi').removeClass('show');\n        $('#highScoreUi').removeClass('show');\n        $('.current-level').removeClass('hidden');\n        $('.current-level-label').text(` ${Game.currentLevel}`);\n\n        this.showNewLevel();\n        if (Game.gameMode === 'competition') {\n            $('.splash-competition').removeClass('hidden');\n            $('.wrapper').addClass('hidden');\n        }\n    }\n\n    /**\n     * Method called on next level button click.\n     */\n    nextLevel() {\n        createjs.Sound.play(clickSound);\n\n        ga('send', 'event', {\n            eventCategory: 'Next Level',\n            eventAction: 'Games',\n            eventLabel: 'Alvin and the Chipmunks',\n        });\n\n        if (Game.currentLevel === Game.lastLevel) {\n            Game.showEnterCompetitionScreen();\n        } else {\n            $('#endLevelUi').removeClass('show');\n\n            const newPoints = SCORE_PER_ROUND * Game.currentCollectedRounds;\n            const timeBonus = SCORE_PER_SECOND * Game.timer.getCurrentSeconds();\n            Game.currentScore += newPoints + timeBonus;\n\n            $('#currentScore').text(Game.currentScore);\n\n            Game.currentLevel++;\n\n            $('.current-level').removeClass('hidden');\n            $('.current-level-label').text(` ${Game.currentLevel}`);\n\n            Game.currentCollectedRounds = 0;\n            Game.currentCollected = [];\n            Game.currentItems = [];\n\n            this.showNewLevel();\n        }\n    }\n\n    toggleSound() {\n        if ($('.sound-button').hasClass('sound-on')) {\n            $('.sound-button').removeClass('sound-on').addClass('sound-off');\n            createjs.Sound.stop(backgroundSound);\n        } else {\n            $('.sound-button').removeClass('sound-off').addClass('sound-on');\n            createjs.Sound.play(backgroundSound, { volume: 0.1, loop: -1 });\n        }\n    }\n\n    /**\n     * Method used to drop the items in the interval.\n     */\n    dropItems() {\n        Game.dropItemsIntervalInstance = setInterval(() => {\n            if (Game.windowFocused) {\n                const newItem = this.getNewItem();\n                $('.game').append(newItem);\n                new Item(\n                    'collectible',\n                    '#item' + this.#itemsCount,\n                    newItem.data('id'),\n                    LEVELS[Game.currentLevel - 1].speed\n                );\n                this.#itemsCount++;\n            }\n        }, DROP_INTERVAL * LEVELS[Game.currentLevel - 1].density);\n    }\n\n    /**\n     * Method used to get a new random item.\n     */\n    getNewItem() {\n        const usedItemsLength = LEVELS[Game.currentLevel - 1].used_items.length;\n        const item = $('<div class=\"item\"></div>');\n        let itemId = Game.getRandomArbitrary(\n            LEVELS[Game.currentLevel - 1].used_items[0],\n            LEVELS[Game.currentLevel - 1].used_items[usedItemsLength - 1]\n        );\n        while (\n            itemId === this.#lastDroppedItemId ||\n            ((itemId === 7 || itemId === 8) &&\n                $('.item-7, .item-8').length >= 2)\n        ) {\n            itemId = Game.getRandomArbitrary(\n                LEVELS[Game.currentLevel - 1].used_items[0],\n                LEVELS[Game.currentLevel - 1].used_items[usedItemsLength - 1]\n            );\n        }\n\n        // remove clock item from level 8, 9 and 10;\n        while (Game.currentLevel > 7 && itemId === 6) {\n            itemId = Game.getRandomArbitrary(\n                LEVELS[Game.currentLevel - 1].used_items[0],\n                LEVELS[Game.currentLevel - 1].used_items[usedItemsLength - 1]\n            );\n        }\n\n        this.#lastDroppedItemId = itemId;\n        item.addClass('item-' + itemId);\n        item.prop('id', 'item' + this.#itemsCount);\n        item.data('id', itemId);\n\n        return item;\n    }\n\n    /**\n     * Methods called on mouse move event and set position of the suitcase.\n     *\n     * @param {*} event\n     */\n    onMouseMove(event) {\n        // If the game has started.\n        if (this.#gameStarted && !Game.suitcaseFrozen) {\n            const offset = $(event.currentTarget).offset();\n            const width = $('.game .suitcase').width();\n            const totalWidth = $('.game').width();\n            const x = mobile\n                ? event.changedTouches[0].pageX - offset.left\n                : event.pageX - offset.left;\n            const xOffset = x - width / 2;\n            // If the offset is within the game boundaries.\n            if (xOffset > 0 && xOffset + width < totalWidth) {\n                $('.game .suitcase, .game .suitcase-front').css(\n                    'left',\n                    x - width / 2\n                );\n            }\n        }\n    }\n\n    /**\n     * Method used to generate the level items elements.\n     */\n    static generateLevelItems() {\n        $('.level-ui .ui-items-list').html('');\n        for (\n            let i = 0;\n            i < Game.currentItems[Game.currentCollectedRounds].length;\n            i++\n        ) {\n            $('.ui-items-list').append(\n                '<div class=\"ui-item\"><img src=\"img/collect-' +\n                    ITEMS[Game.currentItems[Game.currentCollectedRounds][i]] +\n                    '\" alt=\"item\" class=\"ui-item-icon\"/></div>'\n            );\n        }\n    }\n\n    /**\n     * Method used to generate the new level items elements.\n     */\n    static generateNewLevelItems() {\n        $(\n            '.new-level-ui .character, .level-ui .character, .end-game-ui .character'\n        ).prop('src', 'img/' + CHARACTERS[Game.currentCharacterId]);\n        $('.new-level-ui .ui-items-lists').html('');\n        for (let i = 0; i < Game.currentItems.length; i++) {\n            let newList = $('<div class=\"ui-items-list\"></div>');\n            for (let j = 0; j < Game.currentItems[i].length; j++) {\n                newList.append(\n                    '<div class=\"ui-item\"><img src=\"img/collect-' +\n                        ITEMS[Game.currentItems[i][j]] +\n                        '\" alt=\"item\" class=\"ui-item-icon\"/></div>'\n                );\n            }\n            $('.new-level-ui .ui-items-lists').append(newList);\n        }\n        $('.ui-wrong-items-list').addClass('hidden');\n        if (LEVELS[Game.currentLevel - 1].not_collectible.length > 0) {\n            $('.ui-wrong-items-list').removeClass('hidden');\n            if (\n                LEVELS[Game.currentLevel - 1].not_collectible.indexOf(\n                    ICE_ID\n                ) !== -1\n            ) {\n                $(\n                    '.ui-wrong-items-list img[data-id=\"' + ICE_ID + '\"]'\n                ).removeClass('hidden');\n            }\n            if (\n                LEVELS[Game.currentLevel - 1].not_collectible.indexOf(\n                    PAINT_ID\n                ) !== -1\n            ) {\n                $(\n                    '.ui-wrong-items-list img[data-id=\"' + PAINT_ID + '\"]'\n                ).removeClass('hidden');\n            }\n        }\n    }\n\n    /**\n     * Method used to check if the given element is the right one in the correct position.\n     *\n     * @param {*} item\n     */\n    static isTheRightItem(item) {\n        return (\n            item ===\n                Game.currentItems[Game.currentCollectedRounds][\n                    Game.currentCollected.length - 1\n                ] || item === 6\n        );\n    }\n\n    /**\n     * Method used to check if item is clock.\n     */\n    static checkClock(item) {\n        return item === CLOCK_ID;\n    }\n\n    /**\n     * Method used to check if the collected are are 5.\n     */\n    static isTheItemsOrderDone() {\n        return Game.currentCollected.length === 5;\n    }\n\n    /**\n     * Method used to check if the level is completed.\n     */\n    static isTheLevelDone() {\n        return (\n            Game.currentCollectedRounds ===\n            LEVELS[Game.currentLevel - 1].collectible_lists\n        );\n    }\n\n    /**\n     * Method used to show the end level screen.\n     */\n    static showEndLevelScreen() {\n        ga('send', 'event', {\n            eventCategory: 'End Level <' + Game.currentLevel + '>',\n            eventAction: 'Games',\n            eventLabel: 'Alvin and the Chipmunks',\n        });\n        $('.game').removeClass('game-running');\n        Game.levelIsRunning = false;\n        // Stop the timer.\n        Game.timer.stop();\n        // Clear the drop items interval.\n        clearInterval(Game.dropItemsIntervalInstance);\n        // Remove remaining items.\n        $('.game .item').remove();\n        // Prepare and show end level data.\n        const newPoints = SCORE_PER_ROUND * Game.currentCollectedRounds;\n        const timeBonus = SCORE_PER_SECOND * Game.timer.getCurrentSeconds();\n        $('#levelNumber').text(Game.currentLevel);\n        $('#currentScoreValue').text(Game.currentScore);\n        $('#newPointsValue').text(newPoints);\n        $('#timeBonusValue').text(timeBonus);\n        $('#totalValue').text(Game.currentScore + newPoints + timeBonus);\n        // Show the UI and hide the not needed elements.\n        $('#endLevelUi').addClass('show');\n        $('.level-ui').removeClass('show');\n        $('.dark-background').addClass('show');\n        $('.timer-bar').removeClass('show');\n        $('.game .suitcase, .game .suitcase-front').addClass('hidden');\n        $('.current-level').addClass('hidden');\n\n        if (Game.gameMode === 'competition') {\n            Game.showEnterCompetitionScreen();\n        }\n    }\n\n    /**\n     * Method used to show the bad luck screen.\n     */\n    static showBadLuckScreen() {\n        $('.game').removeClass('game-running');\n        Game.levelIsRunning = false;\n        // Stop the timer.\n        Game.timer.stop();\n        // Clear the drop items interval.\n        clearInterval(Game.dropItemsIntervalInstance);\n        // Remove remaining items.\n        $('.game .item').remove();\n        // Show the UI and hide the not needed elements.\n        $('#badLuckUi').addClass('show');\n        $('.level-ui').removeClass('show');\n        $('.dark-background').addClass('show');\n        $('.timer-bar').removeClass('show');\n        $('.game .suitcase, .game .suitcase-front').addClass('hidden');\n        $('.current-level').addClass('hidden');\n    }\n\n    /**\n     * Method used to show the high score screen.\n     */\n    static showHighScoreScreen() {\n        $('.game').removeClass('game-running');\n        Game.levelIsRunning = false;\n        $('#highScoreValue').text(Game.currentScore);\n        // Stop the timer.\n        Game.timer.stop();\n        // Clear the drop items interval.\n        clearInterval(Game.dropItemsIntervalInstance);\n        // Remove remaining items.\n        $('.game .item').remove();\n        // Show the UI and hide the not needed elements.\n        $('#highScoreUi').addClass('show');\n        $('.level-ui').removeClass('show');\n        $('.dark-background').addClass('show');\n        $('.timer-bar').removeClass('show');\n        $('.game .suitcase, .game .suitcase-front').addClass('hidden');\n    }\n\n    /**\n     * Method used to show the enter competition screen.\n     */\n    static showEnterCompetitionScreen() {\n        $('.game').removeClass('game-running');\n        // Show the UI and hide the not needed elements.\n        $('#endLevelUi').removeClass('show');\n        $('#enterCompetitionUi').addClass('show');\n    }\n\n    /**\n     * Method used to refresh the collected items\n     */\n    static refreshCollectedItems() {\n        Game.generateLevelItems();\n        for (let i = 0; i < Game.currentCollected.length; i++) {\n            let src = 'img/collected-' + ITEMS[Game.currentCollected[i]];\n            $('.level-ui .ui-items-list .ui-item')\n                .eq(i)\n                .find('.ui-item-icon')\n                .prop('src', src)\n                .addClass('collected');\n        }\n    }\n\n    /**\n     * Method used to get a random number in the given interval.\n     *\n     * @param {*} min\n     * @param {*} max\n     */\n    static getRandomArbitrary(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    /**\n     * Method used to shuffle a given array.\n     *\n     * @param {*} array\n     */\n    static shuffleArray(array) {\n        let currentIndex = array.length,\n            temporaryValue,\n            randomIndex;\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    static getUrlParameter(name) {\n        name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n        var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n        var results = regex.exec(location.search);\n        return results === null\n            ? ''\n            : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n    }\n}\n","import Game from './game';\n\nexport { Game };\n","import Game from './game';\n\nconst DROP_SPEED = 2;\n\nconst DROPPING_STATE = 'dropping';\n\nconst COLLECTING_STATE = 'collecting';\n\nconst COLLECTED_STATE = 'collected';\n\nconst INSIDE_STATE = 'inside';\n\nconst GOING_LEFT_STATE = 'going_left';\n\nconst GOING_RIGHT_STATE = 'going_right';\n\nconst MISSED_STATE = 'missed';\n\nconst CORRECT_ANIMATION_DURATION = 500;\n\nconst INCORRECT_ANIMATION_DURATION = 500;\n\nconst SPLASH_ANIMATION_DURATION = 500;\n\nconst SUITCASE_FROZEN_DURATION = 4000;\n\nconst CLOCK_ID = 6;\n\nconst ICE_ID = 7;\n\nconst PAINT_ID = 8;\n\nconst badCollectSound = 'BadCollectSound';\nconst goodCollectSound = 'GoodCollectSound';\nconst penaltyFreezeSound = 'PenaltyFreezeSound';\nconst penaltySplatSound = 'PenaltySplatSound';\n\ncreatejs.Sound.registerSound('sounds/bad_collect.mp3', badCollectSound);\ncreatejs.Sound.registerSound('sounds/good_collect.mp3', goodCollectSound);\ncreatejs.Sound.registerSound('sounds/penalty_freeze.mp3', penaltyFreezeSound);\ncreatejs.Sound.registerSound('sounds/penalty_splat.mp3', penaltySplatSound);\n\nexport default class Item {\n    // Collectible or not.\n    #type;\n\n    // Id of the element.\n    #id;\n\n    // The type id of the item.\n    #itemId;\n\n    #currentSpeed;\n\n    #inSuitcaseSpeed;\n\n    #outSuitcaseSpeed;\n\n    // Current x position relative to the game container.\n    #currentX;\n\n    // Current y position relative to the game container.\n    #currentY;\n\n    // Current height of the element.\n    #currentHeight;\n\n    // Current width of the element.\n    #currentWidth;\n\n    // Current state of the item.\n    #currentState;\n\n    #isCollected;\n\n    #animationShown;\n\n    #soundPlayed;\n\n    constructor(type, id, itemId, speed) {\n        this.#type = type;\n        this.#id = id;\n        this.#itemId = itemId;\n        this.#currentState = DROPPING_STATE;\n        this.#currentHeight = $(this.#id).height();\n        this.#currentWidth = $(this.#id).width();\n        this.#animationShown = false;\n        this.#isCollected = false;\n        this.#soundPlayed = false;\n        this.#currentY = 0;\n        this.#currentX = Game.getRandomArbitrary(\n            0,\n            Game.gameWidth - this.#currentWidth\n        );\n\n        // Setting speed of items dynamically so it's available for mobile;\n        let wrapperHeight = document.querySelector('.wrapper').clientHeight;\n        let droppingSpeed = wrapperHeight * 0.0013333333333333333;\n        let droppingInSuitcaseSpeed = wrapperHeight * 0.0024000000000000002;\n        let droppingOutSpeed = wrapperHeight * 0.0031999999999999995;\n\n        this.#currentSpeed = droppingSpeed * speed;\n        this.#inSuitcaseSpeed = droppingInSuitcaseSpeed * speed;\n        this.#outSuitcaseSpeed = droppingOutSpeed * speed;\n\n        $(this.#id).css('left', this.#currentX);\n\n        this.startDropping();\n    }\n\n    startDropping() {\n        if (Game.windowFocused) {\n            if (Game.levelIsRunning) {\n                // Set collision state.\n                this.detectCollision();\n\n                if (\n                    this.#currentState === COLLECTING_STATE ||\n                    this.#currentState === COLLECTED_STATE\n                ) {\n                    if (!this.#isCollected) {\n                        this.#isCollected = true;\n                        if (\n                            this.#itemId !== ICE_ID &&\n                            this.#itemId !== PAINT_ID\n                        ) {\n                            // if item is clock prevent adding it to current collected items and update timer bar;\n                            if (Game.checkClock(this.#itemId)) {\n                                Game.timer.updateTimer(true);\n                            } else {\n                                Game.currentCollected.push(this.#itemId);\n                            }\n\n                            // Show the animation.\n                            if (Game.isTheRightItem(this.#itemId)) {\n                                ga('send', 'event', {\n                                    eventCategory: 'Right Order',\n                                    eventAction: 'Games',\n                                    eventLabel: 'Alvin and the Chipmunks',\n                                });\n                                this.showCorrectAnimation();\n                                if (!this.#soundPlayed) {\n                                    this.#soundPlayed = true;\n                                    createjs.Sound.play(goodCollectSound);\n                                }\n                                if (Game.isTheItemsOrderDone()) {\n                                    Game.currentCollectedRounds++;\n                                    Game.currentCollected = [];\n                                    if (Game.isTheLevelDone()) {\n                                        Game.showEndLevelScreen();\n                                    } else {\n                                        Game.generateLevelItems();\n                                    }\n                                    // Remove the item and end function.\n                                    $(this.#id).remove();\n                                    return;\n                                }\n                            } else {\n                                ga('send', 'event', {\n                                    eventCategory: 'Wrong Order',\n                                    eventAction: 'Games',\n                                    eventLabel: 'Alvin and the Chipmunks',\n                                });\n                                this.showIncorrectAnimation();\n                                if (!this.#soundPlayed) {\n                                    this.#soundPlayed = true;\n                                    createjs.Sound.play(badCollectSound);\n                                }\n                                // If the item is not right, reset the current collected items array.\n                                Game.currentCollected = [];\n                            }\n                            // if clock item collected, then prevent refreshing collected items and update timer bar;\n                            if (this.#itemId !== CLOCK_ID) {\n                                Game.refreshCollectedItems();\n                            } else {\n                                Game.timer.updateTimer();\n                            }\n                        } else if (this.#itemId === ICE_ID) {\n                            Game.suitcaseFrozen = true;\n                            $('.game .suitcase').addClass('suitcase-frozen');\n                            // Play the sound.\n                            createjs.Sound.play(penaltyFreezeSound);\n                            setTimeout(() => {\n                                Game.suitcaseFrozen = false;\n                                $('.game .suitcase').removeClass(\n                                    'suitcase-frozen'\n                                );\n                            }, SUITCASE_FROZEN_DURATION);\n                        } else if (this.#itemId === PAINT_ID) {\n                            // Show the animation.\n                            this.showSplashAnimation();\n                            // Play the sound.\n                            createjs.Sound.play(penaltySplatSound);\n                            // Show the bad luck screen.\n                            setTimeout(() => {\n                                if (Game.currentScore > Game.highScore) {\n                                    Game.showHighScoreScreen();\n                                    window.localStorage.setItem(\n                                        'high_score',\n                                        Game.currentScore\n                                    );\n                                } else {\n                                    Game.showBadLuckScreen();\n                                }\n                            }, 750);\n                        }\n                    }\n                    // Increase speed.\n                    this.#currentSpeed = this.#inSuitcaseSpeed;\n                    // \"Stick\" the item to the suitcase while it goes inside.\n                    $(this.#id).css(\n                        'left',\n                        parseInt($('.game .suitcase').css('left')) +\n                            Game.suitcaseWidth / 2 -\n                            this.#currentWidth / 2\n                    );\n\n                    if (this.#currentState === COLLECTED_STATE) {\n                        this.#currentHeight -= DROP_SPEED * this.#currentSpeed;\n                        $(this.#id).css('height', this.#currentHeight);\n                    }\n                    if (this.#currentHeight <= 0) {\n                        this.#currentState = INSIDE_STATE;\n                    }\n                }\n\n                if (\n                    this.#currentState === INSIDE_STATE ||\n                    (this.#currentY > Game.gameHeight &&\n                        (this.#currentState === MISSED_STATE ||\n                            this.#currentState === GOING_LEFT_STATE ||\n                            this.#currentState == GOING_RIGHT_STATE))\n                ) {\n                    // Remove the item and end function.\n                    $(this.#id).remove();\n                    return;\n                }\n\n                if (\n                    this.#currentState === MISSED_STATE ||\n                    this.#currentState === GOING_LEFT_STATE ||\n                    this.#currentState === GOING_RIGHT_STATE\n                ) {\n                    this.#currentSpeed = this.#outSuitcaseSpeed;\n                }\n\n                if (this.#currentState === GOING_LEFT_STATE) {\n                    if (!this.#animationShown) {\n                        this.#animationShown = true;\n                        $(this.#id).addClass('going-left-animation');\n                    }\n                }\n                if (this.#currentState === GOING_RIGHT_STATE) {\n                    if (!this.#animationShown) {\n                        this.#animationShown = true;\n                        $(this.#id).addClass('going-right-animation');\n                    }\n                }\n                this.#currentY += DROP_SPEED * this.#currentSpeed;\n                $(this.#id).css('top', this.#currentY);\n            } else {\n                return;\n            }\n        }\n\n        requestAnimationFrame(() => this.startDropping());\n    }\n\n    detectCollision() {\n        const itemRect = $(this.#id)[0].getBoundingClientRect();\n        const suitcaseRect = $('.game .suitcase')[0].getBoundingClientRect();\n        // If the item is in missed state, ignore further calculations.\n        if (this.#currentState === MISSED_STATE) {\n            if (itemRect.bottom > suitcaseRect.top + DROP_SPEED) {\n                $(this.#id).css('z-index', '98');\n            }\n            return;\n        }\n        if (itemRect.bottom < suitcaseRect.top - DROP_SPEED) {\n            // If the item is above the hit line (Hit line = +/- the DROP_SPEED).\n        } else if (\n            itemRect.bottom >= suitcaseRect.top - DROP_SPEED &&\n            itemRect.bottom <= suitcaseRect.top + DROP_SPEED\n        ) {\n            // If the item is on the hit line.\n            if (\n                itemRect.right < suitcaseRect.left ||\n                itemRect.left > suitcaseRect.right\n            ) {\n                // If it's outside the suitcase hitbox.\n                this.#currentState = MISSED_STATE;\n            } else {\n                if (\n                    itemRect.right <\n                    suitcaseRect.left + Game.suitcaseWidth / 2\n                ) {\n                    if (this.#currentState !== GOING_LEFT_STATE) {\n                        this.#currentState = GOING_LEFT_STATE;\n                    }\n                } else if (\n                    itemRect.left >\n                    suitcaseRect.right - Game.suitcaseWidth / 2\n                ) {\n                    if (this.#currentState !== GOING_RIGHT_STATE) {\n                        this.#currentState = GOING_RIGHT_STATE;\n                    }\n                } else {\n                    if (this.#currentState === DROPPING_STATE) {\n                        this.#currentState = COLLECTING_STATE;\n                    }\n                }\n            }\n        } else {\n            // If the item is under the hit line.\n            const frontSuitcaseRect = $(\n                '.game .suitcase-front'\n            )[0].getBoundingClientRect();\n            if (\n                itemRect.bottom >= frontSuitcaseRect.top &&\n                this.#currentState === COLLECTING_STATE\n            ) {\n                this.#currentState = COLLECTED_STATE;\n            }\n            if (this.#currentState === MISSED_STATE) {\n            }\n        }\n    }\n\n    showCorrectAnimation() {\n        if (!this.#animationShown) {\n            this.#animationShown = true;\n            const correctAnimation = $('.game .correct-animation').clone(true);\n            $('.game .correct-animation').remove();\n            correctAnimation.removeClass('hidden');\n            $('.game .suitcase').append(correctAnimation);\n            clearTimeout(Game.correctAnimationTimeout);\n            Game.correctAnimationTimeout = setTimeout(() => {\n                $('.game .correct-animation').addClass('hidden');\n            }, CORRECT_ANIMATION_DURATION);\n        }\n    }\n\n    showIncorrectAnimation() {\n        if (!this.#animationShown) {\n            this.#animationShown = true;\n            const incorrectAnimation = $('.game .incorrect-animation').clone(\n                true\n            );\n            $('.game .incorrect-animation').remove();\n            incorrectAnimation.removeClass('hidden');\n            $('.game .suitcase').append(incorrectAnimation);\n            clearTimeout(Game.incorrectAnimationTimeout);\n            Game.incorrectAnimationTimeout = setTimeout(() => {\n                $('.game .incorrect-animation').addClass('hidden');\n            }, INCORRECT_ANIMATION_DURATION);\n        }\n    }\n\n    showSplashAnimation() {\n        if (!this.#animationShown) {\n            this.#animationShown = true;\n            const splashAnimation = $('.game .splash-animation').clone(true);\n            $('.game .splash-animation').remove();\n            splashAnimation.removeClass('hidden');\n            $('.game .suitcase').append(splashAnimation);\n            clearTimeout(Game.splashAnimationTimeout);\n            Game.splashAnimationTimeout = setTimeout(() => {\n                $('.game .splash-animation').addClass('hidden');\n            }, SPLASH_ANIMATION_DURATION);\n        }\n    }\n}\n","import Game from './game';\n\nconst GAINED_SECONDS = 2.5;\n\nconst YELLOW_LIMIT = 20;\n\nconst RED_LIMIT = 10;\n\nexport default class Timer {\n    #initialTimeInSeconds; // added to properly calculate timer's blue bar width;\n\n    #timeInSeconds;\n\n    #currentTimeInSeconds;\n\n    #intervalInstance;\n\n    #timeoutInstance;\n\n    start(timeInSeconds) {\n        this.#timeInSeconds = timeInSeconds;\n        this.#initialTimeInSeconds = timeInSeconds;\n        this.#currentTimeInSeconds = timeInSeconds;\n        this.refresh();\n        this.#intervalInstance = setInterval(() => {\n            this.#currentTimeInSeconds--;\n            this.updateTimer();\n        }, 1000);\n        // separated the \"setTimeout\" function so that it can be called in 2 places, here and in \"updateTimer()\";\n        this.setCountdownTimer();\n    }\n\n    stop() {\n        clearTimeout(this.#timeoutInstance);\n        clearInterval(this.#intervalInstance);\n    }\n\n    pauseOnBlur() {\n        if (!Game.levelIsRunning) return;\n        clearTimeout(this.#timeoutInstance);\n        clearInterval(this.#intervalInstance);\n        this.#timeInSeconds = this.#currentTimeInSeconds;\n    }\n\n    resumeOnFocus() {\n        if (!Game.levelIsRunning) return;\n        this.#intervalInstance = setInterval(() => {\n            this.#currentTimeInSeconds--;\n            this.updateTimer();\n        }, 1000);\n        this.setCountdownTimer();\n    }\n\n    refresh() {\n        $('.timer-bar .timer').css('width', '100%');\n        $('.timer-bar .timer')\n            .removeClass('yellow-timer red-timer')\n            .addClass('blue-timer');\n    }\n\n    updateTimer(gainedSeconds) {\n        // \"gainedSeconds\" parameter is only available when user catches \"clock\" item. So when it's available\n        //update the timer bar;\n        if (gainedSeconds) {\n            // if adding number of seconds to current exceeds maximum seconds allowed per level\n            this.#currentTimeInSeconds + GAINED_SECONDS >\n            this.#initialTimeInSeconds\n                ? // then make it maximum;\n                  (this.#currentTimeInSeconds = this.#initialTimeInSeconds)\n                : // else add number of seconds to current time;\n                  (this.#currentTimeInSeconds += GAINED_SECONDS);\n            this.#timeInSeconds = this.#currentTimeInSeconds;\n            // update countdown of timer bar;\n            this.setCountdownTimer();\n        }\n\n        let width =\n            (this.#currentTimeInSeconds / this.#initialTimeInSeconds) * 100;\n        $('.timer-bar .timer').css('width', width + '%');\n        if (width < RED_LIMIT) {\n            $('.timer-bar .timer')\n                .removeClass('blue-timer yellow-timer')\n                .addClass('red-timer');\n        } else if (width < YELLOW_LIMIT) {\n            $('.timer-bar .timer')\n                .removeClass('blue-timer red-timer')\n                .addClass('yellow-timer');\n        }\n    }\n\n    getCurrentSeconds() {\n        return this.#currentTimeInSeconds;\n    }\n\n    setCountdownTimer() {\n        clearTimeout(this.#timeoutInstance);\n        this.#timeoutInstance = setTimeout(() => {\n            clearInterval(this.#intervalInstance);\n            if (Game.currentScore > Game.highScore) {\n                Game.showHighScoreScreen();\n                window.localStorage.setItem('high_score', Game.currentScore);\n            } else {\n                Game.showBadLuckScreen();\n            }\n        }, this.#timeInSeconds * 1000);\n    }\n}\n"],"sourceRoot":""}