(function (console, $hx_exports, $global) { "use strict";
$hx_exports.openfl = $hx_exports.openfl || {};
$hx_exports.lime = $hx_exports.lime || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var ApplicationMain = function() { };
$hxClasses["ApplicationMain"] = ApplicationMain;
ApplicationMain.__name__ = ["ApplicationMain"];
ApplicationMain.config = null;
ApplicationMain.preloader = null;
ApplicationMain.create = function() {
	var app = new openfl_display_Application();
	app.create(ApplicationMain.config);
	var display = new Preloader();
	ApplicationMain.preloader = new openfl_display_Preloader(display);
	app.setPreloader(ApplicationMain.preloader);
	ApplicationMain.preloader.onComplete.add(ApplicationMain.init);
	ApplicationMain.preloader.create(ApplicationMain.config);
	var urls = [];
	var types = [];
	urls.push("preloader/bar.png");
	types.push("IMAGE");
	urls.push("preloader/CNGames/CNAmarillo.jpg");
	types.push("IMAGE");
	urls.push("preloader/CNGames/CNCyan.jpg");
	types.push("IMAGE");
	urls.push("preloader/CNGames/CNMagenta.jpg");
	types.push("IMAGE");
	urls.push("preloader/CNGames/CNNegro.jpg");
	types.push("IMAGE");
	urls.push("preloader/CNGames/Triangulo.png");
	types.push("IMAGE");
	urls.push("preloader/CNGames/TrianguloAmarillo.png");
	types.push("IMAGE");
	urls.push("preloader/CNGames/TrianguloCyan.png");
	types.push("IMAGE");
	urls.push("preloader/CNGames/TrianguloMagenta.png");
	types.push("IMAGE");
	urls.push("preloader/loading.png");
	types.push("IMAGE");
	urls.push("img/aliens/alien fuego - arma.png");
	types.push("IMAGE");
	urls.push("img/aliens/alien fuego - cabeza.png");
	types.push("IMAGE");
	urls.push("img/aliens/alien fuego - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/aliens/alien fuego - disparo.png");
	types.push("IMAGE");
	urls.push("img/aliens/alien fuego - especial.png");
	types.push("IMAGE");
	urls.push("img/aliens/alien insectoide - alas.png");
	types.push("IMAGE");
	urls.push("img/aliens/alien insectoide - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/aliens/alien insectoide - disparo.png");
	types.push("IMAGE");
	urls.push("img/aliens/alien insectoide - especial.png");
	types.push("IMAGE");
	urls.push("img/aliens/alien overflow - arma.png");
	types.push("IMAGE");
	urls.push("img/aliens/alien overflow - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/aliens/alien overflow - disparo.png");
	types.push("IMAGE");
	urls.push("img/aliens/alien overflow - especial.png");
	types.push("IMAGE");
	urls.push("img/aliens/ben.png");
	types.push("IMAGE");
	urls.push("img/aliens/mascara transformacion.png");
	types.push("IMAGE");
	urls.push("img/aliens/sombra.png");
	types.push("IMAGE");
	urls.push("img/aliens/target.png");
	types.push("IMAGE");
	urls.push("img/bosses/barra energia - jefe1 - fondo.png");
	types.push("IMAGE");
	urls.push("img/bosses/barra energia - jefe1.png");
	types.push("IMAGE");
	urls.push("img/bosses/barra energia - jefe2 - fondo.png");
	types.push("IMAGE");
	urls.push("img/bosses/barra energia - jefe2.png");
	types.push("IMAGE");
	urls.push("img/bosses/barra energia - jefe3 - fondo.png");
	types.push("IMAGE");
	urls.push("img/bosses/barra energia - jefe3.png");
	types.push("IMAGE");
	urls.push("img/bosses/jefe1.png");
	types.push("IMAGE");
	urls.push("img/bosses/jefe2 - boca.png");
	types.push("IMAGE");
	urls.push("img/bosses/jefe2 - fondo.png");
	types.push("IMAGE");
	urls.push("img/bosses/jefe2 - interior.png");
	types.push("IMAGE");
	urls.push("img/bosses/jefe2.png");
	types.push("IMAGE");
	urls.push("img/bosses/jefe3 - bomba.png");
	types.push("IMAGE");
	urls.push("img/bosses/jefe3 - cabeza grande atras.png");
	types.push("IMAGE");
	urls.push("img/bosses/jefe3 - cabeza grande.png");
	types.push("IMAGE");
	urls.push("img/bosses/jefe3 - carro.png");
	types.push("IMAGE");
	urls.push("img/bosses/jefe3 - zombozo.png");
	types.push("IMAGE");
	urls.push("img/bosses/montania2.png");
	types.push("IMAGE");
	urls.push("img/bosses/sillon jefe1.png");
	types.push("IMAGE");
	urls.push("img/bosses/sombra.png");
	types.push("IMAGE");
	urls.push("img/end/cartel final.png");
	types.push("IMAGE");
	urls.push("img/end/personajes final 01.png");
	types.push("IMAGE");
	urls.push("img/end/personajes final 02.png");
	types.push("IMAGE");
	urls.push("img/end/personajes final 03.png");
	types.push("IMAGE");
	urls.push("img/end/personajes final 04.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja - disparo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja1-1 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja1-1 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja1-1 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja1-2 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja1-2 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja1-2 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja1-3 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja1-3 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja1-3 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja2-1 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja2-1 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja2-1 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja2-2 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja2-2 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja2-2 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja2-3 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja2-3 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja2-3 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja3-1 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja3-1 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja3-1 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja3-2 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja3-2 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja3-2 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja3-3 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja3-3 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/abejas/abeja3-3 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho - agua.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho1-1 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho1-1 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho1-2 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho1-2 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho1-3 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho1-3 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho2-1 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho2-1 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho2-2 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho2-2 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho2-3 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho2-3 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho3-1 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho3-1 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho3-2 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho3-2 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho3-3 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/bichos/bicho3-3 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso1-1 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso1-1 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso1-1 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso1-2 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso1-2 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso1-2 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso1-3 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso1-3 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso1-3 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso2-1 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso2-1 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso2-1 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso2-2 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso2-2 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso2-2 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso2-3 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso2-3 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso2-3 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso3-1 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso3-1 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso3-1 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso3-2 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso3-2 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso3-2 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso3-3 - arma.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso3-3 - cabeza.png");
	types.push("IMAGE");
	urls.push("img/enemigos/payasos/payaso3-3 - cuerpo.png");
	types.push("IMAGE");
	urls.push("img/gameplay/boxes/caja1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/boxes/caja2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/boxes/caja3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/collectables/energia.png");
	types.push("IMAGE");
	urls.push("img/gameplay/collectables/moneda - oro.png");
	types.push("IMAGE");
	urls.push("img/gameplay/collectables/moneda - plata.png");
	types.push("IMAGE");
	urls.push("img/gameplay/collectables/moneda - sombra.png");
	types.push("IMAGE");
	urls.push("img/gameplay/collectables/omnitrix - holograma.png");
	types.push("IMAGE");
	urls.push("img/gameplay/collectables/omnitrix.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 1 - oro 1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 1 - oro 2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 1 - oro 3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 1 - oro grande 1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 1 - oro grande 2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 1 - piedras chicas 1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 1 - piedras chicas 2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 1 - piedras chicas 3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 1 - piedras grandes 1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 1 - piedras grandes 2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 1 - piedras grandes 3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 1 - planta 1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 1 - planta 2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 1 - planta 3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - agua.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - camalote 1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - camalote 2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - camalote 3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - oro grande 3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - oro grande 4.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - piedras chicas 1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - piedras chicas 2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - piedras chicas 3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - piedras grandes 1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - piedras grandes 2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - piedras grandes 3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - planta 1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - planta 2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 2 - planta 3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 3 - mancha 1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 3 - mancha 2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 3 - mancha 3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 3 - mano 1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 3 - mano 2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 3 - mano 3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 3 - papeles 1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 3 - papeles 2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 3 - papeles 3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 3 - piedras grandes 1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 3 - piedras grandes 2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/decorations/adornos 3 - piedras grandes 3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/traps/explosion.png");
	types.push("IMAGE");
	urls.push("img/gameplay/traps/mina1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/traps/mina2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/traps/mina3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/traps/pinches1.png");
	types.push("IMAGE");
	urls.push("img/gameplay/traps/pinches2.png");
	types.push("IMAGE");
	urls.push("img/gameplay/traps/pinches3.png");
	types.push("IMAGE");
	urls.push("img/gameplay/watermarks/carrera (arranque).png");
	types.push("IMAGE");
	urls.push("img/gameplay/watermarks/carrera (llegada).png");
	types.push("IMAGE");
	urls.push("img/gameplay/watermarks/fin de pantalla.png");
	types.push("IMAGE");
	urls.push("img/gui/barra - boss - fondo.png");
	types.push("IMAGE");
	urls.push("img/gui/barra - boss.png");
	types.push("IMAGE");
	urls.push("img/gui/barra - energia - fondo.png");
	types.push("IMAGE");
	urls.push("img/gui/barra - energia.png");
	types.push("IMAGE");
	urls.push("img/gui/barra - hiscore coin.png");
	types.push("IMAGE");
	urls.push("img/gui/barra - negra.png");
	types.push("IMAGE");
	urls.push("img/gui/barra - pausa.png");
	types.push("IMAGE");
	urls.push("img/gui/barra - tiro - fondo.png");
	types.push("IMAGE");
	urls.push("img/gui/barra - tiro.png");
	types.push("IMAGE");
	urls.push("img/gui/barra - verde.png");
	types.push("IMAGE");
	urls.push("img/gui/boton - borde.png");
	types.push("IMAGE");
	urls.push("img/gui/boton - home.png");
	types.push("IMAGE");
	urls.push("img/gui/boton - pausa.png");
	types.push("IMAGE");
	urls.push("img/gui/boton - play.png");
	types.push("IMAGE");
	urls.push("img/gui/boton - reiniciar.png");
	types.push("IMAGE");
	urls.push("img/gui/boton - selector.png");
	types.push("IMAGE");
	urls.push("img/gui/boton - sonido off.png");
	types.push("IMAGE");
	urls.push("img/gui/boton - sonido on.png");
	types.push("IMAGE");
	urls.push("img/gui/boton play - como jugar.png");
	types.push("IMAGE");
	urls.push("img/gui/boton reiniciar.png");
	types.push("IMAGE");
	urls.push("img/gui/cara -  insectoide.png");
	types.push("IMAGE");
	urls.push("img/gui/cara - ben.png");
	types.push("IMAGE");
	urls.push("img/gui/cara - fuego.png");
	types.push("IMAGE");
	urls.push("img/gui/cara - overflow.png");
	types.push("IMAGE");
	urls.push("img/gui/cartel - como jugar.png");
	types.push("IMAGE");
	urls.push("img/gui/cartel - ganar fin.png");
	types.push("IMAGE");
	urls.push("img/gui/cartel - ganar.png");
	types.push("IMAGE");
	urls.push("img/gui/cartel - n pantalla.png");
	types.push("IMAGE");
	urls.push("img/gui/cartel - perder.png");
	types.push("IMAGE");
	urls.push("img/gui/coin - silver.png");
	types.push("IMAGE");
	urls.push("img/gui/coin.png");
	types.push("IMAGE");
	urls.push("img/intro/barra - boton play.png");
	types.push("IMAGE");
	urls.push("img/intro/boton - creditos.png");
	types.push("IMAGE");
	urls.push("img/intro/cartel - creditos.png");
	types.push("IMAGE");
	urls.push("img/intro/intro - aliens.png");
	types.push("IMAGE");
	urls.push("img/intro/intro - ben.png");
	types.push("IMAGE");
	urls.push("img/intro/intro - fondo1.png");
	types.push("IMAGE");
	urls.push("img/intro/intro - fondo2.png");
	types.push("IMAGE");
	urls.push("img/intro/intro - fondo3.png");
	types.push("IMAGE");
	urls.push("img/intro/intro - piso.png");
	types.push("IMAGE");
	urls.push("img/intro/nombre juego.png");
	types.push("IMAGE");
	urls.push("img/Joypad/boton (mando) contenedor.png");
	types.push("IMAGE");
	urls.push("img/Joypad/boton (mando) disparo1.png");
	types.push("IMAGE");
	urls.push("img/Joypad/boton (mando) disparo2.png");
	types.push("IMAGE");
	urls.push("img/Joypad/flecha (mando) contenedor.png");
	types.push("IMAGE");
	urls.push("img/Joypad/flecha (mando).png");
	types.push("IMAGE");
	urls.push("img/levelselect/cartel - selector de pantalla.png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla - puntaje.png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 1 (no).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 1 (seleccionado).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 1 (si).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 2 (no).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 2 (seleccionado).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 2 (si).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 3 (no).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 3 (seleccionado).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 3 (si).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 4 (no).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 4 (seleccionado).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 4 (si).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 5 (no).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 5 (seleccionado).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 5 (si).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 6 (no).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 6 (seleccionado).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 6 (si).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 7 (no).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 7 (seleccionado).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 7 (si).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 8 (no).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 8 (seleccionado).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 8 (si).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 9 (no).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 9 (seleccionado).png");
	types.push("IMAGE");
	urls.push("img/levelselect/pantalla 9 (si).png");
	types.push("IMAGE");
	urls.push("img/textures/fondo carrera.png");
	types.push("IMAGE");
	urls.push("img/textures/fondo mundo1.png");
	types.push("IMAGE");
	urls.push("img/textures/fondo mundo2.png");
	types.push("IMAGE");
	urls.push("img/textures/fondo mundo3.png");
	types.push("IMAGE");
	urls.push("img/textures/pared mundo1.png");
	types.push("IMAGE");
	urls.push("img/textures/pared mundo2.png");
	types.push("IMAGE");
	urls.push("img/textures/pared mundo3.png");
	types.push("IMAGE");
	urls.push("img/textures/rotate.jpg");
	types.push("IMAGE");
	urls.push("img/textures/rotate_device.jpg");
	types.push("IMAGE");
	urls.push("img/textures/rotate_device2.jpg");
	types.push("IMAGE");
	urls.push("audio/fx/Bip.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Bip.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Bip.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Boom01.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Boom01.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Boom01.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Boom02.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Boom02.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Boom02.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Boom03.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Boom03.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Boom03.ogg");
	types.push("SOUND");
	urls.push("audio/fx/CN.m4a");
	types.push("SOUND");
	urls.push("audio/fx/CN.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/CN.ogg");
	types.push("SOUND");
	urls.push("audio/fx/CN0.m4a");
	types.push("SOUND");
	urls.push("audio/fx/CN0.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/CN0.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Coin.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Coin.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Coin.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Coin2.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Coin2.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Coin2.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Disparo Heatblast.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Disparo Heatblast.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Disparo Heatblast.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Disparo Overflow.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Disparo Overflow.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Disparo Overflow.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Disparo Stinkfly.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Disparo Stinkfly.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Disparo Stinkfly.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Golpe.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Golpe.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Golpe.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Golpe2.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Golpe2.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Golpe2.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Hydromancer.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Hydromancer.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Hydromancer.ogg");
	types.push("SOUND");
	urls.push("audio/fx/lose_B.m4a");
	types.push("SOUND");
	urls.push("audio/fx/lose_B.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/lose_B.ogg");
	types.push("SOUND");
	urls.push("audio/fx/lose_Eb.m4a");
	types.push("SOUND");
	urls.push("audio/fx/lose_Eb.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/lose_Eb.ogg");
	types.push("SOUND");
	urls.push("audio/fx/MouseClick.m4a");
	types.push("SOUND");
	urls.push("audio/fx/MouseClick.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/MouseClick.ogg");
	types.push("SOUND");
	urls.push("audio/fx/MouseOver.m4a");
	types.push("SOUND");
	urls.push("audio/fx/MouseOver.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/MouseOver.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Omnitrix.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Omnitrix.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Omnitrix.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Orbe.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Orbe.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Orbe.ogg");
	types.push("SOUND");
	urls.push("audio/fx/ReinaAbeja.m4a");
	types.push("SOUND");
	urls.push("audio/fx/ReinaAbeja.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/ReinaAbeja.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Tiro.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Tiro.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Tiro.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Transformacion Heatblast.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Transformacion Heatblast.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Transformacion Heatblast.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Transformacion Overflow.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Transformacion Overflow.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Transformacion Overflow.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Transformacion Stinkfly.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Transformacion Stinkfly.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Transformacion Stinkfly.ogg");
	types.push("SOUND");
	urls.push("audio/fx/win_B.m4a");
	types.push("SOUND");
	urls.push("audio/fx/win_B.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/win_B.ogg");
	types.push("SOUND");
	urls.push("audio/fx/win_Eb.m4a");
	types.push("SOUND");
	urls.push("audio/fx/win_Eb.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/win_Eb.ogg");
	types.push("SOUND");
	urls.push("audio/fx/Zombozo.m4a");
	types.push("SOUND");
	urls.push("audio/fx/Zombozo.mp3");
	types.push("MUSIC");
	urls.push("audio/fx/Zombozo.ogg");
	types.push("SOUND");
	urls.push("audio/music/game.m4a");
	types.push("MUSIC");
	urls.push("audio/music/game.mp3");
	types.push("MUSIC");
	urls.push("audio/music/game.ogg");
	types.push("MUSIC");
	urls.push("audio/music/intro.m4a");
	types.push("SOUND");
	urls.push("audio/music/intro.mp3");
	types.push("MUSIC");
	urls.push("audio/music/intro.ogg");
	types.push("SOUND");
	urls.push("audio/music/menu.m4a");
	types.push("MUSIC");
	urls.push("audio/music/menu.mp3");
	types.push("MUSIC");
	urls.push("audio/music/menu.ogg");
	types.push("MUSIC");
	urls.push("locale/en_US.xml");
	types.push("TEXT");
	urls.push("locale/es_AR.xml");
	types.push("TEXT");
	urls.push("locale/pt_BR.xml");
	types.push("TEXT");
	urls.push("levels/boss abeja.xml");
	types.push("TEXT");
	urls.push("levels/boss axolote.xml");
	types.push("TEXT");
	urls.push("levels/boss zombozo.xml");
	types.push("TEXT");
	urls.push("levels/level 1.xml");
	types.push("TEXT");
	urls.push("levels/level 2.xml");
	types.push("TEXT");
	urls.push("levels/level 2b.xml");
	types.push("TEXT");
	urls.push("levels/level 4.xml");
	types.push("TEXT");
	urls.push("levels/level 5.xml");
	types.push("TEXT");
	urls.push("levels/level 7.xml");
	types.push("TEXT");
	urls.push("levels/level 8.xml");
	types.push("TEXT");
	urls.push("levels/test abeja.xml");
	types.push("TEXT");
	urls.push("levels/test axolote.xml");
	types.push("TEXT");
	urls.push("levels/test zombozo.xml");
	types.push("TEXT");
	urls.push("fonts/HelveticaRoundedLTBlack.eot");
	types.push("BINARY");
	urls.push("fonts/HelveticaRoundedLTBlack.svg");
	types.push("TEXT");
	urls.push("Helvetica Rounded LT Black");
	types.push("FONT");
	urls.push("fonts/HelveticaRoundedLTBlack.woff");
	types.push("BINARY");
	urls.push("fonts/HelveticaRoundedLTBlack.woff2");
	types.push("BINARY");
	urls.push("data/aliens/alien fuego.json");
	types.push("TEXT");
	urls.push("data/aliens/alien insectoide.json");
	types.push("TEXT");
	urls.push("data/aliens/alien overflow.json");
	types.push("TEXT");
	urls.push("data/aliens/ben.json");
	types.push("TEXT");
	urls.push("data/aliens/sombra.json");
	types.push("TEXT");
	urls.push("data/enemigos/abejas/abeja1-1.json");
	types.push("TEXT");
	urls.push("data/enemigos/abejas/abeja1-2.json");
	types.push("TEXT");
	urls.push("data/enemigos/abejas/abeja1-3.json");
	types.push("TEXT");
	urls.push("data/enemigos/abejas/abeja2-1.json");
	types.push("TEXT");
	urls.push("data/enemigos/abejas/abeja2-2.json");
	types.push("TEXT");
	urls.push("data/enemigos/abejas/abeja2-3.json");
	types.push("TEXT");
	urls.push("data/enemigos/abejas/abeja3-1.json");
	types.push("TEXT");
	urls.push("data/enemigos/abejas/abeja3-2.json");
	types.push("TEXT");
	urls.push("data/enemigos/abejas/abeja3-3.json");
	types.push("TEXT");
	urls.push("data/enemigos/bichos/bicho1-1.json");
	types.push("TEXT");
	urls.push("data/enemigos/bichos/bicho1-2.json");
	types.push("TEXT");
	urls.push("data/enemigos/bichos/bicho1-3.json");
	types.push("TEXT");
	urls.push("data/enemigos/bichos/bicho2-1.json");
	types.push("TEXT");
	urls.push("data/enemigos/bichos/bicho2-2.json");
	types.push("TEXT");
	urls.push("data/enemigos/bichos/bicho2-3.json");
	types.push("TEXT");
	urls.push("data/enemigos/bichos/bicho3-1.json");
	types.push("TEXT");
	urls.push("data/enemigos/bichos/bicho3-2.json");
	types.push("TEXT");
	urls.push("data/enemigos/bichos/bicho3-3.json");
	types.push("TEXT");
	urls.push("data/enemigos/payasos/payaso1-1.json");
	types.push("TEXT");
	urls.push("data/enemigos/payasos/payaso1-2.json");
	types.push("TEXT");
	urls.push("data/enemigos/payasos/payaso1-3.json");
	types.push("TEXT");
	urls.push("data/enemigos/payasos/payaso2-1.json");
	types.push("TEXT");
	urls.push("data/enemigos/payasos/payaso2-2.json");
	types.push("TEXT");
	urls.push("data/enemigos/payasos/payaso2-3.json");
	types.push("TEXT");
	urls.push("data/enemigos/payasos/payaso3-1.json");
	types.push("TEXT");
	urls.push("data/enemigos/payasos/payaso3-2.json");
	types.push("TEXT");
	urls.push("data/enemigos/payasos/payaso3-3.json");
	types.push("TEXT");
	if(ApplicationMain.config.assetsPrefix != null) {
		var _g1 = 0;
		var _g = urls.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(types[i] != "FONT") urls[i] = ApplicationMain.config.assetsPrefix + urls[i];
		}
	}
	ApplicationMain.preloader.load(urls,types);
	var result = app.exec();
};
ApplicationMain.init = function() {
	var loaded = 0;
	var total = 0;
	var library_onLoad = function(__) {
		loaded++;
		if(loaded == total) ApplicationMain.start();
	};
	ApplicationMain.preloader = null;
	if(total == 0) ApplicationMain.start();
};
ApplicationMain.main = function() {
	ApplicationMain.config = { build : "2", company : "Killabunnies", file : "Ben10Reboot", fps : 60, name : "Ben10Reboot", orientation : "", packageName : "com.Killabunnies.Ben10Reboot", version : "1.0.0", windows : [{ antialiasing : 0, background : 0, borderless : false, depthBuffer : false, display : 0, fullscreen : false, hardware : false, height : 480, parameters : "{}", resizable : true, stencilBuffer : true, title : "Ben10Reboot", vsync : false, width : 640, x : null, y : null}]};
};
ApplicationMain.start = function() {
	var hasMain = false;
	var entryPoint = Type.resolveClass("Main");
	var _g = 0;
	var _g1 = Type.getClassFields(entryPoint);
	while(_g < _g1.length) {
		var methodName = _g1[_g];
		++_g;
		if(methodName == "main") {
			hasMain = true;
			break;
		}
	}
	lime_Assets.initialize();
	if(hasMain) Reflect.callMethod(entryPoint,Reflect.field(entryPoint,"main"),[]); else {
		var instance = Type.createInstance(DocumentClass,[]);
	}
	if(openfl_Lib.current.stage.window.__fullscreen) openfl_Lib.current.stage.dispatchEvent(new openfl_events_FullScreenEvent("fullScreen",false,false,true,true));
	openfl_Lib.current.stage.dispatchEvent(new openfl_events_Event("resize",false,false));
};
var openfl_events_IEventDispatcher = function() { };
$hxClasses["openfl.events.IEventDispatcher"] = openfl_events_IEventDispatcher;
openfl_events_IEventDispatcher.__name__ = ["openfl","events","IEventDispatcher"];
openfl_events_IEventDispatcher.prototype = {
	__class__: openfl_events_IEventDispatcher
};
var openfl_events_EventDispatcher = function(target) {
	if(target != null) this.__targetDispatcher = target;
};
$hxClasses["openfl.events.EventDispatcher"] = openfl_events_EventDispatcher;
openfl_events_EventDispatcher.__name__ = ["openfl","events","EventDispatcher"];
openfl_events_EventDispatcher.__interfaces__ = [openfl_events_IEventDispatcher];
openfl_events_EventDispatcher.__sortByPriority = function(l1,l2) {
	if(l1.priority == l2.priority) return 0; else if(l1.priority > l2.priority) return -1; else return 1;
};
openfl_events_EventDispatcher.prototype = {
	addEventListener: function(type,listener,useCapture,priority,useWeakReference) {
		if(useWeakReference == null) useWeakReference = false;
		if(priority == null) priority = 0;
		if(useCapture == null) useCapture = false;
		if(this.__eventMap == null) {
			this.__dispatching = new haxe_ds_StringMap();
			this.__eventMap = new haxe_ds_StringMap();
			this.__newEventMap = new haxe_ds_StringMap();
		}
		if(!this.__eventMap.exists(type)) {
			var list = [];
			list.push(new openfl_events__$EventDispatcher_Listener(listener,useCapture,priority));
			this.__eventMap.set(type,list);
		} else {
			var list1;
			if(this.__dispatching.get(type) == true) {
				if(!this.__newEventMap.exists(type)) {
					var _this = this.__eventMap.get(type);
					list1 = _this.slice();
					this.__newEventMap.set(type,list1);
				} else list1 = this.__newEventMap.get(type);
			} else list1 = this.__eventMap.get(type);
			var _g1 = 0;
			var _g = list1.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(Reflect.compareMethods(list1[i].callback,listener)) return;
			}
			list1.push(new openfl_events__$EventDispatcher_Listener(listener,useCapture,priority));
			list1.sort(openfl_events_EventDispatcher.__sortByPriority);
		}
	}
	,dispatchEvent: function(event) {
		if(this.__targetDispatcher != null) event.target = this.__targetDispatcher; else event.target = this;
		return this.__dispatchEvent(event);
	}
	,hasEventListener: function(type) {
		if(this.__eventMap == null) return false;
		if(this.__dispatching.get(type) == true && this.__newEventMap.exists(type)) return this.__newEventMap.get(type).length > 0; else return this.__eventMap.exists(type);
	}
	,removeEventListener: function(type,listener,useCapture) {
		if(useCapture == null) useCapture = false;
		if(this.__eventMap == null) return;
		var list = this.__eventMap.get(type);
		if(list == null) return;
		var dispatching = this.__dispatching.get(type) == true;
		if(dispatching) {
			if(!this.__newEventMap.exists(type)) {
				var _this = this.__eventMap.get(type);
				list = _this.slice();
				this.__newEventMap.set(type,list);
			} else list = this.__newEventMap.get(type);
		}
		var _g1 = 0;
		var _g = list.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(list[i].match(listener,useCapture)) {
				list.splice(i,1);
				break;
			}
		}
		if(!dispatching) {
			if(list.length == 0) this.__eventMap.remove(type);
			if(!this.__eventMap.iterator().hasNext()) {
				this.__eventMap = null;
				this.__newEventMap = null;
			}
		}
	}
	,toString: function() {
		var full = Type.getClassName(js_Boot.getClass(this));
		var $short = full.split(".").pop();
		return "[object " + $short + "]";
	}
	,willTrigger: function(type) {
		return this.hasEventListener(type);
	}
	,__dispatchEvent: function(event) {
		if(this.__eventMap == null || event == null) return false;
		var type = event.type;
		var list;
		if(this.__dispatching.get(type) == true) {
			list = this.__newEventMap.get(type);
			if(list == null) return false;
			list = list.slice();
		} else {
			list = this.__eventMap.get(type);
			if(list == null) return false;
			this.__dispatching.set(type,true);
		}
		if(event.target == null) {
			if(this.__targetDispatcher != null) event.target = this.__targetDispatcher; else event.target = this;
		}
		event.currentTarget = this;
		var capture = event.eventPhase == 1;
		var index = 0;
		var listener;
		while(index < list.length) {
			listener = list[index];
			if(listener.useCapture == capture) {
				listener.callback(event);
				if(event.__isCanceledNow) break;
			}
			if(listener == list[index]) index++;
		}
		if(this.__newEventMap != null && this.__newEventMap.exists(type)) {
			var list1 = this.__newEventMap.get(type);
			if(list1.length > 0) this.__eventMap.set(type,list1); else this.__eventMap.remove(type);
			if(!this.__eventMap.iterator().hasNext()) {
				this.__eventMap = null;
				this.__newEventMap = null;
			} else this.__newEventMap.remove(type);
		}
		this.__dispatching.set(event.type,false);
		return true;
	}
	,__class__: openfl_events_EventDispatcher
};
var openfl_display_IBitmapDrawable = function() { };
$hxClasses["openfl.display.IBitmapDrawable"] = openfl_display_IBitmapDrawable;
openfl_display_IBitmapDrawable.__name__ = ["openfl","display","IBitmapDrawable"];
openfl_display_IBitmapDrawable.prototype = {
	__class__: openfl_display_IBitmapDrawable
};
var openfl_display_DisplayObject = function() {
	this.__cacheAsBitmapSmooth = true;
	this.__cacheAsBitmap = false;
	this.__maskCached = false;
	openfl_events_EventDispatcher.call(this);
	this.__alpha = 1;
	this.__transform = new openfl_geom_Matrix();
	this.__visible = true;
	this.__rotation = 0;
	this.__rotationSine = 0;
	this.__rotationCosine = 1;
	this.__renderTransform = new openfl_geom_Matrix();
	this.__offset = new openfl_geom_Point();
	this.__worldOffset = new openfl_geom_Point();
	this.__worldAlpha = 1;
	this.__worldTransform = new openfl_geom_Matrix();
	this.__worldColorTransform = new openfl_geom_ColorTransform();
	this.set_name("instance" + ++openfl_display_DisplayObject.__instanceCount);
};
$hxClasses["openfl.display.DisplayObject"] = openfl_display_DisplayObject;
openfl_display_DisplayObject.__name__ = ["openfl","display","DisplayObject"];
openfl_display_DisplayObject.__interfaces__ = [openfl_display_IBitmapDrawable];
openfl_display_DisplayObject.__super__ = openfl_events_EventDispatcher;
openfl_display_DisplayObject.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	getBounds: function(targetCoordinateSpace) {
		var matrix;
		if(targetCoordinateSpace != null) {
			matrix = this.__getWorldTransform().clone();
			matrix.concat(targetCoordinateSpace.__getWorldTransform().clone().invert());
		} else {
			matrix = openfl_geom_Matrix.__temp;
			matrix.identity();
		}
		var bounds = new openfl_geom_Rectangle();
		this.__getBounds(bounds,matrix);
		return bounds;
	}
	,getRect: function(targetCoordinateSpace) {
		return this.getBounds(targetCoordinateSpace);
	}
	,globalToLocal: function(pos) {
		pos = pos.clone();
		this.__getWorldTransform().__transformInversePoint(pos);
		return pos;
	}
	,hitTestObject: function(obj) {
		if(obj != null && obj.parent != null && this.parent != null) {
			var currentBounds = this.getBounds(this);
			var targetBounds = obj.getBounds(this);
			return currentBounds.intersects(targetBounds);
		}
		return false;
	}
	,hitTestPoint: function(x,y,shapeFlag) {
		if(shapeFlag == null) shapeFlag = false;
		if(this.parent != null) {
			var bounds = new openfl_geom_Rectangle();
			this.__getBounds(bounds,this.__getWorldTransform());
			return bounds.containsPoint(new openfl_geom_Point(x,y));
		}
		return false;
	}
	,localToGlobal: function(point) {
		return this.__getWorldTransform().transformPoint(point);
	}
	,__broadcast: function(event,notifyChilden) {
		if(this.__eventMap != null && this.hasEventListener(event.type)) {
			var result = openfl_events_EventDispatcher.prototype.__dispatchEvent.call(this,event);
			if(event.__isCanceled) return true;
			return result;
		}
		return false;
	}
	,__dispatchEvent: function(event) {
		var result = openfl_events_EventDispatcher.prototype.__dispatchEvent.call(this,event);
		if(event.__isCanceled) return true;
		if(event.bubbles && this.parent != null && this.parent != this) {
			event.eventPhase = 3;
			if(event.target == null) event.target = this;
			this.parent.__dispatchEvent(event);
		}
		return result;
	}
	,__enterFrame: function(deltaTime) {
	}
	,__getBounds: function(rect,matrix) {
		if(this.__graphics != null) this.__graphics.__getBounds(rect,matrix);
	}
	,__getCursor: function() {
		return null;
	}
	,__getInteractive: function(stack) {
		return false;
	}
	,__getLocalBounds: function(rect) {
		this.__getBounds(rect,this.__transform);
	}
	,__getRenderBounds: function(rect,matrix) {
		if(this.__scrollRect == null) this.__getBounds(rect,matrix); else {
			var r = openfl_geom_Rectangle.__temp;
			r.copyFrom(this.__scrollRect);
			r.__transform(r,matrix);
			rect.__expand(matrix.tx,matrix.ty,r.width,r.height);
		}
	}
	,__getWorldTransform: function() {
		if(this.__transformDirty || openfl_display_DisplayObject.__worldTransformDirty > 0) {
			var list = [];
			var current = this;
			var transformDirty = this.__transformDirty;
			if(this.parent == null) {
				if(transformDirty) this.__update(true,false);
			} else while(current.parent != null) {
				list.push(current);
				current = current.parent;
				if(current.__transformDirty) transformDirty = true;
			}
			if(transformDirty) {
				var i = list.length;
				while(--i >= 0) list[i].__update(true,false);
			}
		}
		return this.__worldTransform;
	}
	,__hitTest: function(x,y,shapeFlag,stack,interactiveOnly,hitObject) {
		if(this.__graphics != null) {
			if(!hitObject.get_visible() || this.__isMask) return false;
			if(this.get_mask() != null && !this.get_mask().__hitTestMask(x,y)) return false;
			if(this.__graphics.__hitTest(x,y,shapeFlag,this.__getWorldTransform())) {
				if(stack != null && !interactiveOnly) stack.push(hitObject);
				return true;
			}
		}
		return false;
	}
	,__hitTestMask: function(x,y) {
		if(this.__graphics != null) {
			if(this.__graphics.__hitTest(x,y,true,this.__getWorldTransform())) return true;
		}
		return false;
	}
	,__renderCairo: function(renderSession) {
		if(this.__graphics != null) openfl__$internal_renderer_cairo_CairoShape.render(this,renderSession);
	}
	,__renderCairoMask: function(renderSession) {
		if(this.__graphics != null) openfl__$internal_renderer_cairo_CairoGraphics.renderMask(this.__graphics,renderSession);
	}
	,__renderCanvas: function(renderSession) {
		if(this.__graphics != null) openfl__$internal_renderer_canvas_CanvasShape.render(this,renderSession);
	}
	,__renderCanvasMask: function(renderSession) {
		if(this.__graphics != null) openfl__$internal_renderer_canvas_CanvasGraphics.renderMask(this.__graphics,renderSession);
	}
	,__renderDOM: function(renderSession) {
		if(this.__graphics != null) openfl__$internal_renderer_dom_DOMShape.render(this,renderSession);
	}
	,__renderGL: function(renderSession) {
		if(!this.__renderable || this.__worldAlpha <= 0) return;
		if(this.__cacheAsBitmap) {
			this.__cacheGL(renderSession);
			return;
		}
		if(this.__scrollRect != null) renderSession.maskManager.pushRect(this.__scrollRect,this.__renderTransform);
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.pushMask(this);
		if(this.__graphics != null) {
			if(this.__graphics.__hardware) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.render(this,renderSession); else {
				openfl__$internal_renderer_canvas_CanvasGraphics.render(this.__graphics,renderSession);
				openfl__$internal_renderer_opengl_GLRenderer.renderBitmap(this,renderSession);
			}
		}
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.popMask();
		if(this.__scrollRect != null) renderSession.maskManager.popRect();
	}
	,__drawGraphicsGL: function(renderSession) {
		if(this.__graphics != null) {
			if(this.__graphics.__hardware) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.render(this,renderSession); else {
				openfl__$internal_renderer_canvas_CanvasGraphics.render(this.__graphics,renderSession);
				openfl__$internal_renderer_opengl_GLRenderer.renderBitmap(this,renderSession);
			}
		}
	}
	,__preRenderGL: function(renderSession) {
		if(this.__scrollRect != null) renderSession.maskManager.pushRect(this.__scrollRect,this.__renderTransform);
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.pushMask(this);
	}
	,__postRenderGL: function(renderSession) {
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.popMask();
		if(this.__scrollRect != null) renderSession.maskManager.popRect();
	}
	,__cacheGL: function(renderSession) {
		var hasCacheMatrix = this.__cacheAsBitmapMatrix != null;
		var x = this.__cachedBitmapBounds.x;
		var y = this.__cachedBitmapBounds.y;
		var w = this.__cachedBitmapBounds.width;
		var h = this.__cachedBitmapBounds.height;
		if(this.__cacheGLMatrix == null) this.__cacheGLMatrix = new openfl_geom_Matrix();
		if(hasCacheMatrix) {
			var bmpBounds = openfl_geom_Rectangle.__temp;
			this.__cachedBitmapBounds.__transform(bmpBounds,this.__cacheAsBitmapMatrix);
			x = bmpBounds.x;
			y = bmpBounds.y;
			w = bmpBounds.width;
			h = bmpBounds.height;
			this.__cacheGLMatrix = this.__cacheAsBitmapMatrix.clone();
		} else this.__cacheGLMatrix.identity();
		if(w <= 0 && h <= 0) return;
		if(this.__updateCachedBitmap || this.__updateFilters) {
			if(this.__cachedFilterBounds != null) {
				w += Math.abs(this.__cachedFilterBounds.x) + Math.abs(this.__cachedFilterBounds.width);
				h += Math.abs(this.__cachedFilterBounds.y) + Math.abs(this.__cachedFilterBounds.height);
			}
			if(this.__cachedBitmap == null) this.__cachedBitmap = openfl_display_BitmapData.__asRenderTexture();
			this.__cachedBitmap.__resize(Math.ceil(w),Math.ceil(h));
			var m = this.__cacheGLMatrix.clone();
			m.translate(-x,-y);
			var shader = this.__shader;
			this.__shader = null;
			this.__cachedBitmap.__drawGL(renderSession,this,m,null,null,null,true,false,true);
			this.__shader = shader;
			this.__updateCachedBitmap = false;
		}
		if(this.__updateFilters) {
			openfl_filters_BitmapFilter.__applyFilters(this.__filters,renderSession,this.__cachedBitmap,this.__cachedBitmap,null,null);
			this.__updateFilters = false;
		}
		this.__cacheGLMatrix.invert();
		this.__cacheGLMatrix.__translateTransformed(x,y);
		this.__cacheGLMatrix.concat(this.__renderTransform);
		this.__cacheGLMatrix.translate(this.__offset.x,this.__offset.y);
		renderSession.spriteBatch.renderBitmapData(this.__cachedBitmap,this.__cacheAsBitmapSmooth,this.__cacheGLMatrix,this.__worldColorTransform,this.__worldAlpha,this.blendMode,this.__shader,0);
	}
	,__setStageReference: function(stage) {
		if(this.stage != stage) {
			if(this.stage != null) {
				if(this.stage.get_focus() == this) this.stage.set_focus(null);
				this.dispatchEvent(new openfl_events_Event("removedFromStage",false,false));
			}
			this.stage = stage;
			if(stage != null) this.dispatchEvent(new openfl_events_Event("addedToStage",false,false));
		}
	}
	,__setRenderDirty: function() {
		if(!this.__renderDirty) {
			this.__updateCachedBitmap = true;
			this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
			this.__renderDirty = true;
			openfl_display_DisplayObject.__worldRenderDirty++;
		}
	}
	,__setTransformDirty: function() {
		if(!this.__transformDirty) {
			this.__transformDirty = true;
			openfl_display_DisplayObject.__worldTransformDirty++;
		}
	}
	,__update: function(transformOnly,updateChildren,maskGraphics) {
		this.__renderable = this.get_visible() && this.get_scaleX() != 0 && this.get_scaleY() != 0 && !this.__isMask;
		this.__updateTransforms();
		if(this.parent != null && this.__isMask) this.__maskCached = false;
		if(updateChildren && this.__transformDirty) {
			this.__transformDirty = false;
			openfl_display_DisplayObject.__worldTransformDirty--;
		}
		if(!transformOnly && this.__mask != null && !this.__mask.__maskCached) {
			if(this.__maskGraphics == null) this.__maskGraphics = new openfl_display_Graphics();
			this.__maskGraphics.clear();
			this.__mask.__update(true,true,this.__maskGraphics);
			this.__mask.__maskCached = true;
		}
		if(maskGraphics != null) this.__updateMask(maskGraphics);
		if(!transformOnly && this.__cacheAsBitmap) {
			if(this.__updateCachedBitmap || this.__updateFilters) {
				if(this.__cachedBitmapBounds == null) this.__cachedBitmapBounds = new openfl_geom_Rectangle();
				if(this.cacheAsBitmapBounds != null) this.__cachedBitmapBounds.copyFrom(this.cacheAsBitmapBounds); else {
					this.__cachedBitmapBounds.setEmpty();
					this.__getRenderBounds(this.__cachedBitmapBounds,openfl_geom_Matrix.__identity);
				}
				if(this.__filters != null) {
					if(this.__cachedFilterBounds == null) this.__cachedFilterBounds = new openfl_geom_Rectangle();
					this.__cachedFilterBounds.setEmpty();
					openfl_filters_BitmapFilter.__expandBounds(this.__filters,this.__cachedFilterBounds,openfl_geom_Matrix.__identity);
					this.__cachedBitmapBounds.x += this.__cachedFilterBounds.x;
					this.__cachedBitmapBounds.y += this.__cachedFilterBounds.y;
				}
			}
		}
		if(!transformOnly) {
			if(!this.__worldColorTransform.__equals(this.get_transform().get_colorTransform())) this.__worldColorTransform = this.get_transform().get_colorTransform().__clone();
			if(this.parent != null) {
				this.__worldAlpha = this.get_alpha() * this.parent.__worldAlpha;
				this.__worldColorTransform.__combine(this.parent.__worldColorTransform);
				if(this.blendMode == null || this.blendMode == 10) this.__blendMode = this.parent.__blendMode;
				if(this.shader == null) this.__shader = this.parent.__shader;
			} else this.__worldAlpha = this.get_alpha();
			if(updateChildren && this.__renderDirty) this.__renderDirty = false;
		}
	}
	,__updateChildren: function(transformOnly) {
		this.__renderable = this.get_visible() && this.get_scaleX() != 0 && this.get_scaleY() != 0 && !this.__isMask;
		if(!this.__renderable && !this.__isMask) return;
		this.__worldAlpha = this.get_alpha();
		if(this.__transformDirty) {
			this.__transformDirty = false;
			openfl_display_DisplayObject.__worldTransformDirty--;
		}
	}
	,__updateMask: function(maskGraphics) {
		if(this.__graphics != null) {
			maskGraphics.__commands.overrideMatrix(this.__worldTransform);
			maskGraphics.__commands.append(this.__graphics.__commands);
			maskGraphics.set___dirty(true);
			maskGraphics.__visible = true;
			if(maskGraphics.__bounds == null) maskGraphics.__bounds = new openfl_geom_Rectangle();
			this.__graphics.__getBounds(maskGraphics.__bounds,openfl_geom_Matrix.__identity);
		}
	}
	,__updateTransforms: function(overrideTransform) {
		var overrided = overrideTransform != null;
		var local;
		if(overrided) local = overrideTransform.clone(); else local = this.__transform;
		if(this.__worldTransform == null) this.__worldTransform = new openfl_geom_Matrix();
		if(!overrided && this.parent != null) {
			var parentTransform = this.parent.__worldTransform;
			this.__worldTransform.a = local.a * parentTransform.a + local.b * parentTransform.c;
			this.__worldTransform.b = local.a * parentTransform.b + local.b * parentTransform.d;
			this.__worldTransform.c = local.c * parentTransform.a + local.d * parentTransform.c;
			this.__worldTransform.d = local.c * parentTransform.b + local.d * parentTransform.d;
			this.__worldTransform.tx = local.tx * parentTransform.a + local.ty * parentTransform.c + parentTransform.tx;
			this.__worldTransform.ty = local.tx * parentTransform.b + local.ty * parentTransform.d + parentTransform.ty;
			this.__worldOffset.copyFrom(this.parent.__worldOffset);
		} else {
			this.__worldTransform.copyFrom(local);
			this.__worldOffset.setTo(0,0);
		}
		if(this.__scrollRect != null) {
			this.__offset = this.__worldTransform.deltaTransformPoint(this.__scrollRect.get_topLeft());
			this.__worldOffset.offset(this.__offset.x,this.__offset.y);
		} else this.__offset.setTo(0,0);
		this.__renderTransform.copyFrom(this.__worldTransform);
		this.__renderTransform.translate(-this.__worldOffset.x,-this.__worldOffset.y);
	}
	,get_alpha: function() {
		return this.__alpha;
	}
	,set_alpha: function(value) {
		if(value > 1.0) value = 1.0;
		if(value != this.__alpha) {
			if(!this.__renderDirty) {
				this.__updateCachedBitmap = true;
				this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
				this.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
		}
		return this.__alpha = value;
	}
	,set_blendMode: function(value) {
		this.__blendMode = value;
		return this.blendMode = value;
	}
	,set_shader: function(value) {
		this.__shader = value;
		return this.shader = value;
	}
	,get_cacheAsBitmap: function() {
		return this.__cacheAsBitmap;
	}
	,set_cacheAsBitmap: function(value) {
		if(!this.__renderDirty) {
			this.__updateCachedBitmap = true;
			this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
			this.__renderDirty = true;
			openfl_display_DisplayObject.__worldRenderDirty++;
		}
		return this.__forceCacheAsBitmap?this.__cacheAsBitmap = true:this.__cacheAsBitmap = value;
	}
	,get_cacheAsBitmapMatrix: function() {
		return this.__cacheAsBitmapMatrix;
	}
	,set_cacheAsBitmapMatrix: function(value) {
		if(!this.__renderDirty) {
			this.__updateCachedBitmap = true;
			this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
			this.__renderDirty = true;
			openfl_display_DisplayObject.__worldRenderDirty++;
		}
		return this.__cacheAsBitmapMatrix = value.clone();
	}
	,get_cacheAsBitmapSmooth: function() {
		return this.__cacheAsBitmapSmooth;
	}
	,set_cacheAsBitmapSmooth: function(value) {
		return this.__cacheAsBitmapSmooth = value;
	}
	,get_filters: function() {
		if(this.__filters == null) return []; else return this.__filters.slice();
	}
	,set_filters: function(value) {
		if(value != null && value.length > 0) {
			this.__filters = value;
			this.__forceCacheAsBitmap = true;
			this.__cacheAsBitmap = true;
			this.__updateFilters = true;
		} else {
			this.__filters = null;
			this.__forceCacheAsBitmap = false;
			this.__cacheAsBitmap = false;
			this.__updateFilters = false;
		}
		if(!this.__renderDirty) {
			this.__updateCachedBitmap = true;
			this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
			this.__renderDirty = true;
			openfl_display_DisplayObject.__worldRenderDirty++;
		}
		return value;
	}
	,get_height: function() {
		var bounds = new openfl_geom_Rectangle();
		this.__getBounds(bounds,this.__transform);
		return bounds.height;
	}
	,set_height: function(value) {
		var bounds = new openfl_geom_Rectangle();
		var matrix = openfl_geom_Matrix.__temp;
		matrix.identity();
		this.__getBounds(bounds,matrix);
		if(value != bounds.height) this.set_scaleY(value / bounds.height); else this.set_scaleY(1);
		return value;
	}
	,get_mask: function() {
		return this.__mask;
	}
	,set_mask: function(value) {
		if(value != this.__mask) {
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
			if(!this.__renderDirty) {
				this.__updateCachedBitmap = true;
				this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
				this.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
		}
		if(this.__mask != null) {
			this.__mask.__isMask = false;
			this.__mask.__maskCached = false;
			this.__mask.__setTransformDirty();
			this.__mask.__setRenderDirty();
			this.__maskGraphics = null;
		}
		if(value != null) value.__isMask = true;
		return this.__mask = value;
	}
	,get_mouseX: function() {
		var mouseX;
		if(this.stage != null) mouseX = this.stage.__mouseX; else mouseX = openfl_Lib.current.stage.__mouseX;
		var mouseY;
		if(this.stage != null) mouseY = this.stage.__mouseY; else mouseY = openfl_Lib.current.stage.__mouseY;
		return this.__getWorldTransform().__transformInverseX(mouseX,mouseY);
	}
	,get_mouseY: function() {
		var mouseX;
		if(this.stage != null) mouseX = this.stage.__mouseX; else mouseX = openfl_Lib.current.stage.__mouseX;
		var mouseY;
		if(this.stage != null) mouseY = this.stage.__mouseY; else mouseY = openfl_Lib.current.stage.__mouseY;
		return this.__getWorldTransform().__transformInverseY(mouseX,mouseY);
	}
	,get_name: function() {
		return this.__name;
	}
	,set_name: function(value) {
		return this.__name = value;
	}
	,get_root: function() {
		if(this.stage != null) return openfl_Lib.current;
		return null;
	}
	,get_rotation: function() {
		return this.__rotation;
	}
	,set_rotation: function(value) {
		if(value != this.__rotation) {
			this.__rotation = value;
			var radians = this.__rotation * (Math.PI / 180);
			this.__rotationSine = Math.sin(radians);
			this.__rotationCosine = Math.cos(radians);
			var __scaleX = this.get_scaleX();
			var __scaleY = this.get_scaleY();
			this.__transform.a = this.__rotationCosine * __scaleX;
			this.__transform.b = this.__rotationSine * __scaleX;
			this.__transform.c = -this.__rotationSine * __scaleY;
			this.__transform.d = this.__rotationCosine * __scaleY;
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
		}
		return value;
	}
	,get_scaleX: function() {
		if(this.__transform.b == 0) return this.__transform.a; else return Math.sqrt(this.__transform.a * this.__transform.a + this.__transform.b * this.__transform.b);
	}
	,set_scaleX: function(value) {
		if(this.__transform.c == 0) {
			if(value != this.__transform.a) {
				if(!this.__transformDirty) {
					this.__transformDirty = true;
					openfl_display_DisplayObject.__worldTransformDirty++;
				}
			}
			this.__transform.a = value;
		} else {
			var a = this.__rotationCosine * value;
			var b = this.__rotationSine * value;
			if(this.__transform.a != a || this.__transform.b != b) {
				if(!this.__transformDirty) {
					this.__transformDirty = true;
					openfl_display_DisplayObject.__worldTransformDirty++;
				}
			}
			this.__transform.a = a;
			this.__transform.b = b;
		}
		return value;
	}
	,get_scaleY: function() {
		if(this.__transform.c == 0) return this.__transform.d; else return Math.sqrt(this.__transform.c * this.__transform.c + this.__transform.d * this.__transform.d);
	}
	,set_scaleY: function(value) {
		if(this.__transform.c == 0) {
			if(value != this.__transform.d) {
				if(!this.__transformDirty) {
					this.__transformDirty = true;
					openfl_display_DisplayObject.__worldTransformDirty++;
				}
			}
			this.__transform.d = value;
		} else {
			var c = -this.__rotationSine * value;
			var d = this.__rotationCosine * value;
			if(this.__transform.d != d || this.__transform.c != c) {
				if(!this.__transformDirty) {
					this.__transformDirty = true;
					openfl_display_DisplayObject.__worldTransformDirty++;
				}
			}
			this.__transform.c = c;
			this.__transform.d = d;
		}
		return value;
	}
	,get_scrollRect: function() {
		if(this.__scrollRect == null) return null;
		return this.__scrollRect.clone();
	}
	,set_scrollRect: function(value) {
		if(value != this.__scrollRect) {
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
		}
		return this.__scrollRect = value;
	}
	,get_transform: function() {
		if(this.__objectTransform == null) this.__objectTransform = new openfl_geom_Transform(this);
		return this.__objectTransform;
	}
	,set_transform: function(value) {
		if(value == null) throw new js__$Boot_HaxeError(new openfl_errors_TypeError("Parameter transform must be non-null."));
		if(this.__objectTransform == null) this.__objectTransform = new openfl_geom_Transform(this);
		if(!this.__transformDirty) {
			this.__transformDirty = true;
			openfl_display_DisplayObject.__worldTransformDirty++;
		}
		this.__objectTransform.set_matrix(value.get_matrix());
		this.__objectTransform.set_colorTransform(value.get_colorTransform().__clone());
		return this.__objectTransform;
	}
	,get_visible: function() {
		return this.__visible;
	}
	,set_visible: function(value) {
		if(value != this.__visible) {
			if(!this.__renderDirty) {
				this.__updateCachedBitmap = true;
				this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
				this.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
		}
		return this.__visible = value;
	}
	,get_width: function() {
		var bounds = new openfl_geom_Rectangle();
		this.__getBounds(bounds,this.__transform);
		return bounds.width;
	}
	,set_width: function(value) {
		var bounds = new openfl_geom_Rectangle();
		var matrix = openfl_geom_Matrix.__temp;
		matrix.identity();
		this.__getBounds(bounds,matrix);
		if(value != bounds.width) this.set_scaleX(value / bounds.width); else this.set_scaleX(1);
		return value;
	}
	,get_x: function() {
		return this.__transform.tx;
	}
	,set_x: function(value) {
		if(value != this.__transform.tx) {
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
		}
		return this.__transform.tx = value;
	}
	,get_y: function() {
		return this.__transform.ty;
	}
	,set_y: function(value) {
		if(value != this.__transform.ty) {
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
		}
		return this.__transform.ty = value;
	}
	,__class__: openfl_display_DisplayObject
	,__properties__: {set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x",set_width:"set_width",get_width:"get_width",set_visible:"set_visible",get_visible:"get_visible",set_transform:"set_transform",get_transform:"get_transform",set_shader:"set_shader",set_scrollRect:"set_scrollRect",get_scrollRect:"get_scrollRect",set_scaleY:"set_scaleY",get_scaleY:"get_scaleY",set_scaleX:"set_scaleX",get_scaleX:"get_scaleX",set_rotation:"set_rotation",get_rotation:"get_rotation",get_root:"get_root",set_name:"set_name",get_name:"get_name",get_mouseY:"get_mouseY",get_mouseX:"get_mouseX",set_mask:"set_mask",get_mask:"get_mask",set_height:"set_height",get_height:"get_height",set_filters:"set_filters",get_filters:"get_filters",set_cacheAsBitmapSmooth:"set_cacheAsBitmapSmooth",get_cacheAsBitmapSmooth:"get_cacheAsBitmapSmooth",set_cacheAsBitmapMatrix:"set_cacheAsBitmapMatrix",get_cacheAsBitmapMatrix:"get_cacheAsBitmapMatrix",set_cacheAsBitmap:"set_cacheAsBitmap",get_cacheAsBitmap:"get_cacheAsBitmap",set_blendMode:"set_blendMode",set_alpha:"set_alpha",get_alpha:"get_alpha"}
});
var openfl_display_InteractiveObject = function() {
	openfl_display_DisplayObject.call(this);
	this.doubleClickEnabled = false;
	this.mouseEnabled = true;
	this.needsSoftKeyboard = false;
	this.__tabEnabled = false;
	this.tabIndex = -1;
};
$hxClasses["openfl.display.InteractiveObject"] = openfl_display_InteractiveObject;
openfl_display_InteractiveObject.__name__ = ["openfl","display","InteractiveObject"];
openfl_display_InteractiveObject.__super__ = openfl_display_DisplayObject;
openfl_display_InteractiveObject.prototype = $extend(openfl_display_DisplayObject.prototype,{
	requestSoftKeyboard: function() {
		openfl_Lib.notImplemented("InteractiveObject.requestSoftKeyboard");
		return false;
	}
	,__getInteractive: function(stack) {
		if(stack != null) {
			stack.push(this);
			if(this.parent != null) this.parent.__getInteractive(stack);
		}
		return true;
	}
	,__hitTest: function(x,y,shapeFlag,stack,interactiveOnly,hitObject) {
		if(!hitObject.get_visible() || this.__isMask || interactiveOnly && !this.mouseEnabled) return false;
		return openfl_display_DisplayObject.prototype.__hitTest.call(this,x,y,shapeFlag,stack,interactiveOnly,hitObject);
	}
	,get_tabEnabled: function() {
		return this.__tabEnabled;
	}
	,set_tabEnabled: function(value) {
		return this.__tabEnabled = value;
	}
	,__class__: openfl_display_InteractiveObject
	,__properties__: $extend(openfl_display_DisplayObject.prototype.__properties__,{set_tabEnabled:"set_tabEnabled",get_tabEnabled:"get_tabEnabled"})
});
var openfl_display_DisplayObjectContainer = function() {
	openfl_display_InteractiveObject.call(this);
	this.mouseChildren = true;
	this.__children = [];
	this.__removedChildren = [];
};
$hxClasses["openfl.display.DisplayObjectContainer"] = openfl_display_DisplayObjectContainer;
openfl_display_DisplayObjectContainer.__name__ = ["openfl","display","DisplayObjectContainer"];
openfl_display_DisplayObjectContainer.__super__ = openfl_display_InteractiveObject;
openfl_display_DisplayObjectContainer.prototype = $extend(openfl_display_InteractiveObject.prototype,{
	addChild: function(child) {
		if(child != null) {
			if(child.parent != null) child.parent.removeChild(child);
			this.__children.push(child);
			child.parent = this;
			if(this.stage != null) child.__setStageReference(this.stage);
			if(!child.__transformDirty) {
				child.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
			if(!child.__renderDirty) {
				child.__updateCachedBitmap = true;
				child.__updateFilters = child.get_filters() != null && child.get_filters().length > 0;
				child.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
			if(!this.__renderDirty) {
				this.__updateCachedBitmap = true;
				this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
				this.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
			var event = new openfl_events_Event("added",true);
			event.target = child;
			child.__dispatchEvent(event);
		}
		return child;
	}
	,addChildAt: function(child,index) {
		if(index > this.__children.length || index < 0) throw new js__$Boot_HaxeError("Invalid index position " + index);
		if(child.parent == this) HxOverrides.remove(this.__children,child); else {
			if(child.parent != null) child.parent.removeChild(child);
			child.parent = this;
			if(this.stage != null) child.__setStageReference(this.stage);
			if(!child.__transformDirty) {
				child.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
			if(!child.__renderDirty) {
				child.__updateCachedBitmap = true;
				child.__updateFilters = child.get_filters() != null && child.get_filters().length > 0;
				child.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
			if(!this.__renderDirty) {
				this.__updateCachedBitmap = true;
				this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
				this.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
			var event = new openfl_events_Event("added",true);
			event.target = child;
			child.__dispatchEvent(event);
		}
		this.__children.splice(index,0,child);
		return child;
	}
	,areInaccessibleObjectsUnderPoint: function(point) {
		return false;
	}
	,contains: function(child) {
		while(child != this && child != null) child = child.parent;
		return child == this;
	}
	,getChildAt: function(index) {
		if(index >= 0 && index < this.__children.length) return this.__children[index];
		return null;
	}
	,getChildByName: function(name) {
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_name() == name) return child;
		}
		return null;
	}
	,getChildIndex: function(child) {
		var _g1 = 0;
		var _g = this.__children.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.__children[i] == child) return i;
		}
		return -1;
	}
	,getObjectsUnderPoint: function(point) {
		var stack = [];
		this.__hitTest(point.x,point.y,false,stack,false,this);
		stack.reverse();
		return stack;
	}
	,removeChild: function(child) {
		if(child != null && child.parent == this) {
			child.__dispatchEvent(new openfl_events_Event("removed",true));
			if(this.stage != null) child.__setStageReference(null);
			child.parent = null;
			HxOverrides.remove(this.__children,child);
			this.__removedChildren.push(child);
			if(!child.__transformDirty) {
				child.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
			if(!child.__renderDirty) {
				child.__updateCachedBitmap = true;
				child.__updateFilters = child.get_filters() != null && child.get_filters().length > 0;
				child.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
			if(!this.__renderDirty) {
				this.__updateCachedBitmap = true;
				this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
				this.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
		}
		return child;
	}
	,removeChildAt: function(index) {
		if(index >= 0 && index < this.__children.length) return this.removeChild(this.__children[index]);
		return null;
	}
	,removeChildren: function(beginIndex,endIndex) {
		if(endIndex == null) endIndex = 2147483647;
		if(beginIndex == null) beginIndex = 0;
		if(endIndex == 2147483647) {
			endIndex = this.__children.length - 1;
			if(endIndex < 0) return;
		}
		if(beginIndex > this.__children.length - 1) return; else if(endIndex < beginIndex || beginIndex < 0 || endIndex > this.__children.length) throw new js__$Boot_HaxeError(new openfl_errors_RangeError("The supplied index is out of bounds."));
		var numRemovals = endIndex - beginIndex;
		while(numRemovals >= 0) {
			this.removeChildAt(beginIndex);
			numRemovals--;
		}
	}
	,resolve: function(fieldName) {
		if(this.__children == null) return null;
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_name() == fieldName) return child;
		}
		return null;
	}
	,setChildIndex: function(child,index) {
		if(index >= 0 && index <= this.__children.length && child.parent == this) {
			HxOverrides.remove(this.__children,child);
			this.__children.splice(index,0,child);
		}
	}
	,swapChildren: function(child1,child2) {
		if(child1.parent == this && child2.parent == this) {
			var index1 = HxOverrides.indexOf(this.__children,child1,0);
			var index2 = HxOverrides.indexOf(this.__children,child2,0);
			this.__children[index1] = child2;
			this.__children[index2] = child1;
		}
	}
	,swapChildrenAt: function(index1,index2) {
		var swap = this.__children[index1];
		this.__children[index1] = this.__children[index2];
		this.__children[index2] = swap;
		swap = null;
	}
	,__broadcast: function(event,notifyChilden) {
		if(event.target == null) event.target = this;
		var result = openfl_display_InteractiveObject.prototype.__broadcast.call(this,event,notifyChilden);
		if(!event.__isCanceled && notifyChilden) {
			var _g = 0;
			var _g1 = this.__children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.__broadcast(event,true);
				if(event.__isCanceled) return true;
			}
		}
		return result;
	}
	,__enterFrame: function(deltaTime) {
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__enterFrame(deltaTime);
		}
	}
	,__getBounds: function(rect,matrix) {
		openfl_display_InteractiveObject.prototype.__getBounds.call(this,rect,matrix);
		if(this.__children.length == 0) return;
		if(matrix != null) {
			this.__updateTransforms(matrix);
			this.__updateChildren(true);
		}
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_scaleX() == 0 || child.get_scaleY() == 0) continue;
			child.__getBounds(rect,child.__worldTransform);
		}
		if(matrix != null) {
			this.__updateTransforms();
			this.__updateChildren(true);
		}
	}
	,__getRenderBounds: function(rect,matrix) {
		if(this.__scrollRect != null) {
			openfl_display_InteractiveObject.prototype.__getRenderBounds.call(this,rect,matrix);
			return;
		} else openfl_display_InteractiveObject.prototype.__getBounds.call(this,rect,matrix);
		if(this.__children.length == 0) return;
		if(matrix != null) {
			this.__updateTransforms(matrix);
			this.__updateChildren(true);
		}
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_scaleX() == 0 || child.get_scaleY() == 0 || child.__isMask) continue;
			child.__getRenderBounds(rect,child.__worldTransform);
		}
		if(matrix != null) {
			this.__updateTransforms();
			this.__updateChildren(true);
		}
	}
	,__hitTest: function(x,y,shapeFlag,stack,interactiveOnly,hitObject) {
		if(!hitObject.get_visible() || this.__isMask || interactiveOnly && !this.mouseEnabled && !this.mouseChildren) return false;
		if(this.get_mask() != null && !this.get_mask().__hitTestMask(x,y)) return false;
		if(this.get_scrollRect() != null && !this.get_scrollRect().containsPoint(this.globalToLocal(new openfl_geom_Point(x,y)))) return false;
		var i = this.__children.length;
		if(interactiveOnly) {
			if(stack == null || !this.mouseChildren) {
				while(--i >= 0) if(this.__children[i].__hitTest(x,y,shapeFlag,null,true,this.__children[i])) {
					if(stack != null) stack.push(hitObject);
					return true;
				}
			} else if(stack != null) {
				var length = stack.length;
				var interactive = false;
				var hitTest = false;
				while(--i >= 0) {
					interactive = this.__children[i].__getInteractive(null);
					if(interactive || this.mouseEnabled && !hitTest) {
						if(this.__children[i].__hitTest(x,y,shapeFlag,stack,true,this.__children[i])) {
							hitTest = true;
							if(interactive) break;
						}
					}
				}
				if(hitTest) {
					stack.splice(length,0,hitObject);
					return true;
				}
			}
		} else while(--i >= 0) this.__children[i].__hitTest(x,y,shapeFlag,stack,false,this.__children[i]);
		return false;
	}
	,__hitTestMask: function(x,y) {
		var i = this.__children.length;
		while(--i >= 0) if(this.__children[i].__hitTestMask(x,y)) return true;
		return false;
	}
	,__renderCairo: function(renderSession) {
		if(!this.__renderable || this.__worldAlpha <= 0) return;
		openfl_display_InteractiveObject.prototype.__renderCairo.call(this,renderSession);
		if(this.get_scrollRect() != null) renderSession.maskManager.pushRect(this.get_scrollRect(),this.__worldTransform);
		if(this.__mask != null) renderSession.maskManager.pushMask(this.__mask);
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__renderCairo(renderSession);
		}
		if(this.__removedChildren.length > 0) this.__removedChildren.splice(0,this.__removedChildren.length);
		if(this.__mask != null) renderSession.maskManager.popMask();
		if(this.get_scrollRect() != null) renderSession.maskManager.popRect();
	}
	,__renderCairoMask: function(renderSession) {
		if(this.__graphics != null) openfl__$internal_renderer_cairo_CairoGraphics.renderMask(this.__graphics,renderSession);
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__renderCairoMask(renderSession);
		}
	}
	,__renderCanvas: function(renderSession) {
		if(!this.__renderable || this.__worldAlpha <= 0) return;
		openfl_display_InteractiveObject.prototype.__renderCanvas.call(this,renderSession);
		if(this.get_scrollRect() != null) renderSession.maskManager.pushRect(this.get_scrollRect(),this.__worldTransform);
		if(this.__mask != null) renderSession.maskManager.pushMask(this.__mask);
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__renderCanvas(renderSession);
		}
		if(this.__removedChildren.length > 0) this.__removedChildren.splice(0,this.__removedChildren.length);
		if(this.__mask != null) renderSession.maskManager.popMask();
		if(this.get_scrollRect() != null) renderSession.maskManager.popRect();
	}
	,__renderCanvasMask: function(renderSession) {
		if(this.__graphics != null) openfl__$internal_renderer_canvas_CanvasGraphics.renderMask(this.__graphics,renderSession);
		var bounds = new openfl_geom_Rectangle();
		this.__getBounds(bounds,this.__transform);
		renderSession.context.rect(0,0,bounds.width,bounds.height);
	}
	,__renderDOM: function(renderSession) {
		openfl_display_InteractiveObject.prototype.__renderDOM.call(this,renderSession);
		if(this.__mask != null) renderSession.maskManager.pushMask(this.__mask);
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__renderDOM(renderSession);
		}
		var _g2 = 0;
		var _g11 = this.__removedChildren;
		while(_g2 < _g11.length) {
			var orphan = _g11[_g2];
			++_g2;
			if(orphan.stage == null) orphan.__renderDOM(renderSession);
		}
		if(this.__removedChildren.length > 0) this.__removedChildren.splice(0,this.__removedChildren.length);
		if(this.__mask != null) renderSession.maskManager.popMask();
	}
	,__renderGL: function(renderSession) {
		if(!this.__renderable || this.__worldAlpha <= 0) return;
		if(this.__cacheAsBitmap) {
			this.__cacheGL(renderSession);
			return;
		}
		if(this.__scrollRect != null) renderSession.maskManager.pushRect(this.__scrollRect,this.__renderTransform);
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.pushMask(this);
		if(this.__graphics != null) {
			if(this.__graphics.__hardware) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.render(this,renderSession); else {
				openfl__$internal_renderer_canvas_CanvasGraphics.render(this.__graphics,renderSession);
				openfl__$internal_renderer_opengl_GLRenderer.renderBitmap(this,renderSession);
			}
		}
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__renderGL(renderSession);
		}
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.popMask();
		if(this.__scrollRect != null) renderSession.maskManager.popRect();
		if(this.__removedChildren.length > 0) this.__removedChildren.splice(0,this.__removedChildren.length);
	}
	,__setStageReference: function(stage) {
		if(this.stage != stage) {
			if(this.stage != null) this.__dispatchEvent(new openfl_events_Event("removedFromStage",false,false));
			this.stage = stage;
			if(stage != null) this.__dispatchEvent(new openfl_events_Event("addedToStage",false,false));
			if(this.__children != null) {
				var _g = 0;
				var _g1 = this.__children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.__setStageReference(stage);
				}
			}
		}
	}
	,__update: function(transformOnly,updateChildren,maskGraphics) {
		openfl_display_InteractiveObject.prototype.__update.call(this,transformOnly,updateChildren,maskGraphics);
		if(!this.__renderable && !this.__isMask) return;
		if(updateChildren) {
			var _g = 0;
			var _g1 = this.__children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.__update(transformOnly,true,maskGraphics);
			}
		}
	}
	,__updateChildren: function(transformOnly) {
		openfl_display_InteractiveObject.prototype.__updateChildren.call(this,transformOnly);
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__update(transformOnly,true);
		}
	}
	,get_numChildren: function() {
		return this.__children.length;
	}
	,__class__: openfl_display_DisplayObjectContainer
	,__properties__: $extend(openfl_display_InteractiveObject.prototype.__properties__,{get_numChildren:"get_numChildren"})
});
var openfl_display_Sprite = function() {
	openfl_display_DisplayObjectContainer.call(this);
	this.buttonMode = false;
	this.useHandCursor = true;
	this.loaderInfo = openfl_display_LoaderInfo.create(null);
};
$hxClasses["openfl.display.Sprite"] = openfl_display_Sprite;
openfl_display_Sprite.__name__ = ["openfl","display","Sprite"];
openfl_display_Sprite.__super__ = openfl_display_DisplayObjectContainer;
openfl_display_Sprite.prototype = $extend(openfl_display_DisplayObjectContainer.prototype,{
	startDrag: function(lockCenter,bounds) {
		if(lockCenter == null) lockCenter = false;
		if(this.stage != null) this.stage.__startDrag(this,lockCenter,bounds);
	}
	,stopDrag: function() {
		if(this.stage != null) this.stage.__stopDrag(this);
	}
	,__getCursor: function() {
		if(this.buttonMode && this.useHandCursor) return lime_ui_MouseCursor.POINTER; else return null;
	}
	,__hitTest: function(x,y,shapeFlag,stack,interactiveOnly,hitObject) {
		if(this.hitArea != null) {
			if(!this.hitArea.mouseEnabled) {
				this.hitArea.mouseEnabled = true;
				var hitTest = this.hitArea.__hitTest(x,y,shapeFlag,null,true,hitObject);
				this.hitArea.mouseEnabled = false;
				if(hitTest) stack[stack.length] = hitObject;
				return hitTest;
			}
		} else {
			if(!hitObject.get_visible() || this.__isMask || interactiveOnly && !this.mouseEnabled && !this.mouseChildren) return false;
			if(this.get_mask() != null && !this.get_mask().__hitTestMask(x,y)) return false;
			if(openfl_display_DisplayObjectContainer.prototype.__hitTest.call(this,x,y,shapeFlag,stack,interactiveOnly,hitObject)) return interactiveOnly; else if((!interactiveOnly || this.mouseEnabled) && this.__graphics != null && this.__graphics.__hitTest(x,y,shapeFlag,this.__getWorldTransform())) {
				if(stack != null) stack.push(hitObject);
				return true;
			}
		}
		return false;
	}
	,__hitTestMask: function(x,y) {
		if(openfl_display_DisplayObjectContainer.prototype.__hitTestMask.call(this,x,y)) return true; else if(this.__graphics != null && this.__graphics.__hitTest(x,y,true,this.__getWorldTransform())) return true;
		return false;
	}
	,get_graphics: function() {
		if(this.__graphics == null) {
			this.__graphics = new openfl_display_Graphics();
			this.__graphics.__owner = this;
		}
		return this.__graphics;
	}
	,get_tabEnabled: function() {
		return this.__tabEnabled || this.buttonMode;
	}
	,__class__: openfl_display_Sprite
	,__properties__: $extend(openfl_display_DisplayObjectContainer.prototype.__properties__,{get_graphics:"get_graphics"})
});
var Main = function() {
	openfl_display_Sprite.call(this);
	this.addEventListener("addedToStage",$bind(this,this.onResize));
	openfl_Lib.current.stage.addEventListener("resize",$bind(this,this.onResize));
	this.onResize(null);
	this.checkMobile();
	utils_DataManager.init();
	utils_KeyboardMap.init(this);
	utils_Localization.init();
	Main.fadeMusic = new utils_FadeMusic();
	this.addChild(Main.fadeMusic);
	this.manager = new scenes_Manager(this);
	if(Main.isMobile) {
		Main.joypad = new joypad_Joypad();
		Main.joypad.hideJoystick();
		this.addChild(Main.joypad);
	}
	if(utils_Utils.IS_DEBUG) utils_DataManager.unlockAllLevels();
};
$hxClasses["Main"] = Main;
Main.__name__ = ["Main"];
Main.isMobile = null;
Main.joypad = null;
Main.fadeMusic = null;
Main.pauseGame = $hx_exports.pauseGame = function() {
	if(scenes_Gameplay.current == null) return;
	scenes_Gameplay.current.focusOut(null);
};
Main.__super__ = openfl_display_Sprite;
Main.prototype = $extend(openfl_display_Sprite.prototype,{
	checkMobile: function() {
		Main.isMobile = openfl_ui_Multitouch.get_supportsTouchEvents();
		openfl_ui_Multitouch.set_inputMode(2);
	}
	,onResize: function(e) {
		var stageScaleX = this.stage.stageWidth / 640;
		var stageScaleY = this.stage.stageHeight / 480;
		var stageScale = Math.min(stageScaleX,stageScaleY);
		openfl_Lib.current.set_x(0);
		openfl_Lib.current.set_y(0);
		openfl_Lib.current.set_scaleX(stageScale);
		openfl_Lib.current.set_scaleY(stageScale);
		if(stageScaleX > stageScaleY) openfl_Lib.current.set_x((this.stage.stageWidth - 640 * stageScale) / 2); else openfl_Lib.current.set_y((this.stage.stageHeight - 480 * stageScale) / 2);
		haxe_Log.trace([this.stage.stageWidth,this.stage.stageHeight,stageScaleX,stageScaleY,stageScale],{ fileName : "Main.hx", lineNumber : 112, className : "Main", methodName : "onResize"});
	}
	,__class__: Main
});
var DocumentClass = function() {
	openfl_Lib.current.addChild(this);
	Main.call(this);
	this.dispatchEvent(new openfl_events_Event("addedToStage",false,false));
};
$hxClasses["DocumentClass"] = DocumentClass;
DocumentClass.__name__ = ["DocumentClass"];
DocumentClass.__super__ = Main;
DocumentClass.prototype = $extend(Main.prototype,{
	__class__: DocumentClass
});
var lime_AssetLibrary = function() {
	this.onChange = new lime_app_Event_$Void_$Void();
};
$hxClasses["lime.AssetLibrary"] = lime_AssetLibrary;
lime_AssetLibrary.__name__ = ["lime","AssetLibrary"];
lime_AssetLibrary.prototype = {
	exists: function(id,type) {
		return false;
	}
	,getAudioBuffer: function(id) {
		return null;
	}
	,getBytes: function(id) {
		return null;
	}
	,getFont: function(id) {
		return null;
	}
	,getImage: function(id) {
		return null;
	}
	,getPath: function(id) {
		return null;
	}
	,getText: function(id) {
		var bytes = this.getBytes(id);
		if(bytes == null) return null; else return bytes.getString(0,bytes.length);
	}
	,isLocal: function(id,type) {
		return true;
	}
	,list: function(type) {
		return null;
	}
	,load: function() {
		var _g = this;
		return new lime_app_Future(function() {
			return _g;
		});
	}
	,loadAudioBuffer: function(id) {
		var _g = this;
		return new lime_app_Future(function() {
			return _g.getAudioBuffer(id);
		});
	}
	,loadBytes: function(id) {
		var _g = this;
		return new lime_app_Future(function() {
			return _g.getBytes(id);
		});
	}
	,loadFont: function(id) {
		var _g = this;
		return new lime_app_Future(function() {
			return _g.getFont(id);
		});
	}
	,loadImage: function(id) {
		var _g = this;
		return new lime_app_Future(function() {
			return _g.getImage(id);
		});
	}
	,loadText: function(id) {
		return this.loadBytes(id).then(function(bytes) {
			return new lime_app_Future(function() {
				if(bytes == null) return null; else return bytes.getString(0,bytes.length);
			});
		});
	}
	,unload: function() {
	}
	,__class__: lime_AssetLibrary
};
var DefaultAssetLibrary = function() {
	this.type = new haxe_ds_StringMap();
	this.path = new haxe_ds_StringMap();
	this.className = new haxe_ds_StringMap();
	lime_AssetLibrary.call(this);
	openfl_text_Font.registerFont(_$_$ASSET_$_$OPENFL_$_$fonts_$helveticaroundedltblack_$ttf);
	var id;
	id = "preloader/bar.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "preloader/CNGames/CNAmarillo.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "preloader/CNGames/CNCyan.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "preloader/CNGames/CNMagenta.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "preloader/CNGames/CNNegro.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "preloader/CNGames/Triangulo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "preloader/CNGames/TrianguloAmarillo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "preloader/CNGames/TrianguloCyan.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "preloader/CNGames/TrianguloMagenta.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "preloader/loading.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/alien fuego - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/alien fuego - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/alien fuego - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/alien fuego - disparo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/alien fuego - especial.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/alien insectoide - alas.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/alien insectoide - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/alien insectoide - disparo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/alien insectoide - especial.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/alien overflow - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/alien overflow - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/alien overflow - disparo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/alien overflow - especial.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/ben.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/mascara transformacion.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/sombra.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/aliens/target.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/barra energia - jefe1 - fondo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/barra energia - jefe1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/barra energia - jefe2 - fondo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/barra energia - jefe2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/barra energia - jefe3 - fondo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/barra energia - jefe3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/jefe1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/jefe2 - boca.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/jefe2 - fondo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/jefe2 - interior.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/jefe2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/jefe3 - bomba.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/jefe3 - cabeza grande atras.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/jefe3 - cabeza grande.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/jefe3 - carro.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/jefe3 - zombozo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/montania2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/sillon jefe1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/bosses/sombra.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/end/cartel final.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/end/personajes final 01.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/end/personajes final 02.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/end/personajes final 03.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/end/personajes final 04.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja - disparo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja1-1 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja1-1 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja1-1 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja1-2 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja1-2 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja1-2 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja1-3 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja1-3 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja1-3 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja2-1 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja2-1 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja2-1 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja2-2 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja2-2 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja2-2 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja2-3 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja2-3 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja2-3 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja3-1 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja3-1 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja3-1 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja3-2 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja3-2 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja3-2 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja3-3 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja3-3 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/abejas/abeja3-3 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho - agua.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho1-1 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho1-1 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho1-2 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho1-2 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho1-3 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho1-3 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho2-1 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho2-1 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho2-2 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho2-2 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho2-3 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho2-3 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho3-1 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho3-1 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho3-2 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho3-2 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho3-3 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/bichos/bicho3-3 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso1-1 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso1-1 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso1-1 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso1-2 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso1-2 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso1-2 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso1-3 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso1-3 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso1-3 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso2-1 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso2-1 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso2-1 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso2-2 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso2-2 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso2-2 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso2-3 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso2-3 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso2-3 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso3-1 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso3-1 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso3-1 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso3-2 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso3-2 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso3-2 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso3-3 - arma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso3-3 - cabeza.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/enemigos/payasos/payaso3-3 - cuerpo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/boxes/caja1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/boxes/caja2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/boxes/caja3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/collectables/energia.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/collectables/moneda - oro.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/collectables/moneda - plata.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/collectables/moneda - sombra.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/collectables/omnitrix - holograma.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/collectables/omnitrix.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 1 - oro 1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 1 - oro 2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 1 - oro 3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 1 - oro grande 1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 1 - oro grande 2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 1 - piedras chicas 1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 1 - piedras chicas 2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 1 - piedras chicas 3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 1 - piedras grandes 1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 1 - piedras grandes 2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 1 - piedras grandes 3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 1 - planta 1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 1 - planta 2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 1 - planta 3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - agua.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - camalote 1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - camalote 2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - camalote 3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - oro grande 3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - oro grande 4.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - piedras chicas 1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - piedras chicas 2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - piedras chicas 3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - piedras grandes 1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - piedras grandes 2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - piedras grandes 3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - planta 1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - planta 2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 2 - planta 3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 3 - mancha 1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 3 - mancha 2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 3 - mancha 3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 3 - mano 1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 3 - mano 2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 3 - mano 3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 3 - papeles 1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 3 - papeles 2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 3 - papeles 3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 3 - piedras grandes 1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 3 - piedras grandes 2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/decorations/adornos 3 - piedras grandes 3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/traps/explosion.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/traps/mina1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/traps/mina2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/traps/mina3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/traps/pinches1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/traps/pinches2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/traps/pinches3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/watermarks/carrera (arranque).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/watermarks/carrera (llegada).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gameplay/watermarks/fin de pantalla.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/barra - boss - fondo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/barra - boss.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/barra - energia - fondo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/barra - energia.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/barra - hiscore coin.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/barra - negra.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/barra - pausa.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/barra - tiro - fondo.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/barra - tiro.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/barra - verde.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/boton - borde.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/boton - home.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/boton - pausa.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/boton - play.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/boton - reiniciar.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/boton - selector.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/boton - sonido off.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/boton - sonido on.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/boton play - como jugar.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/boton reiniciar.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/cara -  insectoide.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/cara - ben.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/cara - fuego.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/cara - overflow.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/cartel - como jugar.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/cartel - ganar fin.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/cartel - ganar.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/cartel - n pantalla.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/cartel - perder.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/coin - silver.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/gui/coin.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/intro/barra - boton play.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/intro/boton - creditos.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/intro/cartel - creditos.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/intro/intro - aliens.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/intro/intro - ben.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/intro/intro - fondo1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/intro/intro - fondo2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/intro/intro - fondo3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/intro/intro - piso.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/intro/nombre juego.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/Joypad/boton (mando) contenedor.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/Joypad/boton (mando) disparo1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/Joypad/boton (mando) disparo2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/Joypad/flecha (mando) contenedor.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/Joypad/flecha (mando).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/cartel - selector de pantalla.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla - puntaje.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 1 (no).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 1 (seleccionado).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 1 (si).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 2 (no).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 2 (seleccionado).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 2 (si).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 3 (no).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 3 (seleccionado).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 3 (si).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 4 (no).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 4 (seleccionado).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 4 (si).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 5 (no).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 5 (seleccionado).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 5 (si).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 6 (no).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 6 (seleccionado).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 6 (si).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 7 (no).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 7 (seleccionado).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 7 (si).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 8 (no).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 8 (seleccionado).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 8 (si).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 9 (no).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 9 (seleccionado).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/levelselect/pantalla 9 (si).png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/textures/fondo carrera.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/textures/fondo mundo1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/textures/fondo mundo2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/textures/fondo mundo3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/textures/pared mundo1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/textures/pared mundo2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/textures/pared mundo3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/textures/rotate.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/textures/rotate_device.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "img/textures/rotate_device2.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "audio/fx/Bip.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Bip.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Bip.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Boom01.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Boom01.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Boom01.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Boom02.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Boom02.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Boom02.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Boom03.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Boom03.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Boom03.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/CN.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/CN.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/CN.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/CN0.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/CN0.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/CN0.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Coin.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Coin.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Coin.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Coin2.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Coin2.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Coin2.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Disparo Heatblast.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Disparo Heatblast.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Disparo Heatblast.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Disparo Overflow.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Disparo Overflow.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Disparo Overflow.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Disparo Stinkfly.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Disparo Stinkfly.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Disparo Stinkfly.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Golpe.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Golpe.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Golpe.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Golpe2.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Golpe2.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Golpe2.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Hydromancer.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Hydromancer.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Hydromancer.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/lose_B.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/lose_B.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/lose_B.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/lose_Eb.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/lose_Eb.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/lose_Eb.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/MouseClick.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/MouseClick.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/MouseClick.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/MouseOver.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/MouseOver.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/MouseOver.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Omnitrix.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Omnitrix.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Omnitrix.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Orbe.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Orbe.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Orbe.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/ReinaAbeja.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/ReinaAbeja.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/ReinaAbeja.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Tiro.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Tiro.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Tiro.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Transformacion Heatblast.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Transformacion Heatblast.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Transformacion Heatblast.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Transformacion Overflow.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Transformacion Overflow.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Transformacion Overflow.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Transformacion Stinkfly.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Transformacion Stinkfly.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Transformacion Stinkfly.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/win_B.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/win_B.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/win_B.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/win_Eb.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/win_Eb.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/win_Eb.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Zombozo.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/fx/Zombozo.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/fx/Zombozo.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/music/game.m4a";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/music/game.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/music/game.ogg";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/music/intro.m4a";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/music/intro.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/music/intro.ogg";
	this.path.set(id,id);
	this.type.set(id,"SOUND");
	id = "audio/music/menu.m4a";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/music/menu.mp3";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "audio/music/menu.ogg";
	this.path.set(id,id);
	this.type.set(id,"MUSIC");
	id = "locale/en_US.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "locale/es_AR.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "locale/pt_BR.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "levels/boss abeja.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "levels/boss axolote.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "levels/boss zombozo.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "levels/level 1.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "levels/level 2.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "levels/level 2b.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "levels/level 4.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "levels/level 5.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "levels/level 7.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "levels/level 8.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "levels/test abeja.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "levels/test axolote.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "levels/test zombozo.xml";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "fonts/HelveticaRoundedLTBlack.eot";
	this.path.set(id,id);
	this.type.set(id,"BINARY");
	id = "fonts/HelveticaRoundedLTBlack.svg";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "fonts/HelveticaRoundedLTBlack.ttf";
	this.className.set(id,_$_$ASSET_$_$fonts_$helveticaroundedltblack_$ttf);
	this.type.set(id,"FONT");
	id = "fonts/HelveticaRoundedLTBlack.woff";
	this.path.set(id,id);
	this.type.set(id,"BINARY");
	id = "fonts/HelveticaRoundedLTBlack.woff2";
	this.path.set(id,id);
	this.type.set(id,"BINARY");
	id = "data/aliens/alien fuego.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/aliens/alien insectoide.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/aliens/alien overflow.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/aliens/ben.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/aliens/sombra.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/abejas/abeja1-1.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/abejas/abeja1-2.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/abejas/abeja1-3.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/abejas/abeja2-1.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/abejas/abeja2-2.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/abejas/abeja2-3.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/abejas/abeja3-1.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/abejas/abeja3-2.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/abejas/abeja3-3.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/bichos/bicho1-1.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/bichos/bicho1-2.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/bichos/bicho1-3.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/bichos/bicho2-1.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/bichos/bicho2-2.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/bichos/bicho2-3.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/bichos/bicho3-1.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/bichos/bicho3-2.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/bichos/bicho3-3.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/payasos/payaso1-1.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/payasos/payaso1-2.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/payasos/payaso1-3.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/payasos/payaso2-1.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/payasos/payaso2-2.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/payasos/payaso2-3.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/payasos/payaso3-1.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/payasos/payaso3-2.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "data/enemigos/payasos/payaso3-3.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	var assetsPrefix = null;
	if(ApplicationMain.config != null && Object.prototype.hasOwnProperty.call(ApplicationMain.config,"assetsPrefix")) assetsPrefix = ApplicationMain.config.assetsPrefix;
	if(assetsPrefix != null) {
		var $it0 = this.path.keys();
		while( $it0.hasNext() ) {
			var k = $it0.next();
			var value = assetsPrefix + this.path.get(k);
			this.path.set(k,value);
		}
	}
};
$hxClasses["DefaultAssetLibrary"] = DefaultAssetLibrary;
DefaultAssetLibrary.__name__ = ["DefaultAssetLibrary"];
DefaultAssetLibrary.__super__ = lime_AssetLibrary;
DefaultAssetLibrary.prototype = $extend(lime_AssetLibrary.prototype,{
	exists: function(id,type) {
		var requestedType;
		if(type != null) requestedType = js_Boot.__cast(type , String); else requestedType = null;
		var assetType = this.type.get(id);
		if(assetType != null) {
			if(assetType == requestedType || (requestedType == "SOUND" || requestedType == "MUSIC") && (assetType == "MUSIC" || assetType == "SOUND")) return true;
			if(requestedType == "BINARY" || requestedType == null || assetType == "BINARY" && requestedType == "TEXT") return true;
		}
		return false;
	}
	,getAudioBuffer: function(id) {
		return null;
	}
	,getBytes: function(id) {
		var loader;
		var key = this.path.get(id);
		loader = lime_app_Preloader.loaders.get(key);
		if(loader == null) return null;
		var bytes = loader.bytes;
		if(bytes != null) return bytes; else return null;
	}
	,getFont: function(id) {
		return js_Boot.__cast(Type.createInstance(this.className.get(id),[]) , lime_text_Font);
	}
	,getImage: function(id) {
		return lime_graphics_Image.fromImageElement((function($this) {
			var $r;
			var key = $this.path.get(id);
			$r = lime_app_Preloader.images.get(key);
			return $r;
		}(this)));
	}
	,getPath: function(id) {
		return this.path.get(id);
	}
	,getText: function(id) {
		var loader;
		var key = this.path.get(id);
		loader = lime_app_Preloader.loaders.get(key);
		if(loader == null) return null;
		var bytes = loader.bytes;
		if(bytes != null) return bytes.getString(0,bytes.length); else return null;
	}
	,isLocal: function(id,type) {
		var requestedType;
		if(type != null) requestedType = js_Boot.__cast(type , String); else requestedType = null;
		return true;
	}
	,list: function(type) {
		var requestedType;
		if(type != null) requestedType = js_Boot.__cast(type , String); else requestedType = null;
		var items = [];
		var $it0 = this.type.keys();
		while( $it0.hasNext() ) {
			var id = $it0.next();
			if(requestedType == null || this.exists(id,type)) items.push(id);
		}
		return items;
	}
	,loadAudioBuffer: function(id) {
		var _g = this;
		var promise = new lime_app_Promise();
		promise.completeWith(new lime_app_Future(function() {
			return _g.getAudioBuffer(id);
		}));
		return promise.future;
	}
	,loadBytes: function(id) {
		var promise = new lime_app_Promise();
		if(this.path.exists(id)) {
			var request = new lime_net_HTTPRequest();
			promise.completeWith(request.load(this.path.get(id) + "?" + lime_Assets.cache.version));
		} else promise.complete(this.getBytes(id));
		return promise.future;
	}
	,loadImage: function(id) {
		var promise = new lime_app_Promise();
		if(this.path.exists(id)) {
			var image = new Image();
			image.onload = function(_) {
				promise.complete(lime_graphics_Image.fromImageElement(image));
			};
			image.onerror = $bind(promise,promise.error);
			image.src = this.path.get(id) + "?" + lime_Assets.cache.version;
		} else promise.complete(this.getImage(id));
		return promise.future;
	}
	,loadText: function(id) {
		var promise = new lime_app_Promise();
		if(this.path.exists(id)) {
			var request = new lime_net_HTTPRequest();
			var future = request.load(this.path.get(id) + "?" + lime_Assets.cache.version);
			future.onProgress(function(progress) {
				promise.progress(progress);
			});
			future.onError(function(msg) {
				promise.error(msg);
			});
			future.onComplete(function(bytes) {
				promise.complete(bytes.getString(0,bytes.length));
			});
		} else promise.complete(this.getText(id));
		return promise.future;
	}
	,__class__: DefaultAssetLibrary
});
var lime_text_Font = function(name) {
	if(name != null) this.name = name;
	if(this.__fontPath != null) this.__fromFile(this.__fontPath);
};
$hxClasses["lime.text.Font"] = lime_text_Font;
lime_text_Font.__name__ = ["lime","text","Font"];
lime_text_Font.fromBytes = function(bytes) {
	var font = new lime_text_Font();
	font.__fromBytes(bytes);
	return font;
};
lime_text_Font.fromFile = function(path) {
	var font = new lime_text_Font();
	font.__fromFile(path);
	return font;
};
lime_text_Font.prototype = {
	decompose: function() {
		return null;
	}
	,getGlyph: function(character) {
		return -1;
	}
	,getGlyphs: function(characters) {
		if(characters == null) characters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^`'\"/\\&*()[]{}<>|:;_-+=?,. ";
		return null;
	}
	,getGlyphMetrics: function(glyph) {
		return null;
	}
	,renderGlyph: function(glyph,fontSize) {
		return null;
	}
	,renderGlyphs: function(glyphs,fontSize) {
		return null;
	}
	,__fromBytes: function(bytes) {
		this.__fontPath = null;
	}
	,__fromFile: function(path) {
		this.__fontPath = path;
	}
	,__setSize: function(size) {
	}
	,get_ascender: function() {
		return 0;
	}
	,get_descender: function() {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,get_numGlyphs: function() {
		return 0;
	}
	,get_underlinePosition: function() {
		return 0;
	}
	,get_underlineThickness: function() {
		return 0;
	}
	,get_unitsPerEM: function() {
		return 0;
	}
	,__class__: lime_text_Font
	,__properties__: {get_unitsPerEM:"get_unitsPerEM",get_underlineThickness:"get_underlineThickness",get_underlinePosition:"get_underlinePosition",get_numGlyphs:"get_numGlyphs",get_height:"get_height",get_descender:"get_descender",get_ascender:"get_ascender"}
};
var _$_$ASSET_$_$fonts_$helveticaroundedltblack_$ttf = function() {
	lime_text_Font.call(this);
	this.name = "Helvetica Rounded LT Black";
};
$hxClasses["__ASSET__fonts_helveticaroundedltblack_ttf"] = _$_$ASSET_$_$fonts_$helveticaroundedltblack_$ttf;
_$_$ASSET_$_$fonts_$helveticaroundedltblack_$ttf.__name__ = ["__ASSET__fonts_helveticaroundedltblack_ttf"];
_$_$ASSET_$_$fonts_$helveticaroundedltblack_$ttf.__super__ = lime_text_Font;
_$_$ASSET_$_$fonts_$helveticaroundedltblack_$ttf.prototype = $extend(lime_text_Font.prototype,{
	__class__: _$_$ASSET_$_$fonts_$helveticaroundedltblack_$ttf
});
var openfl_text_Font = function(name) {
	lime_text_Font.call(this,name);
};
$hxClasses["openfl.text.Font"] = openfl_text_Font;
openfl_text_Font.__name__ = ["openfl","text","Font"];
openfl_text_Font.enumerateFonts = function(enumerateDeviceFonts) {
	if(enumerateDeviceFonts == null) enumerateDeviceFonts = false;
	return openfl_text_Font.__registeredFonts;
};
openfl_text_Font.fromBytes = function(bytes) {
	var font = new openfl_text_Font();
	font.__fromBytes(openfl_utils__$ByteArray_ByteArray_$Impl_$.toBytes(bytes));
	return font;
};
openfl_text_Font.fromFile = function(path) {
	var font = new openfl_text_Font();
	font.__fromFile(path);
	return font;
};
openfl_text_Font.registerFont = function(font) {
	var instance;
	instance = js_Boot.__cast(Type.createInstance(font,[]) , openfl_text_Font);
	if(instance != null) openfl_text_Font.__registeredFonts.push(instance);
};
openfl_text_Font.__fromLimeFont = function(value) {
	var font = new openfl_text_Font();
	font.name = value.name;
	font.src = value.src;
	return font;
};
openfl_text_Font.__super__ = lime_text_Font;
openfl_text_Font.prototype = $extend(lime_text_Font.prototype,{
	get_fontName: function() {
		return this.name;
	}
	,set_fontName: function(value) {
		return this.name = value;
	}
	,__class__: openfl_text_Font
	,__properties__: $extend(lime_text_Font.prototype.__properties__,{set_fontName:"set_fontName",get_fontName:"get_fontName"})
});
var _$_$ASSET_$_$OPENFL_$_$fonts_$helveticaroundedltblack_$ttf = function() {
	var font = new _$_$ASSET_$_$fonts_$helveticaroundedltblack_$ttf();
	this.src = font.src;
	this.name = font.name;
	openfl_text_Font.call(this);
};
$hxClasses["__ASSET__OPENFL__fonts_helveticaroundedltblack_ttf"] = _$_$ASSET_$_$OPENFL_$_$fonts_$helveticaroundedltblack_$ttf;
_$_$ASSET_$_$OPENFL_$_$fonts_$helveticaroundedltblack_$ttf.__name__ = ["__ASSET__OPENFL__fonts_helveticaroundedltblack_ttf"];
_$_$ASSET_$_$OPENFL_$_$fonts_$helveticaroundedltblack_$ttf.__super__ = openfl_text_Font;
_$_$ASSET_$_$OPENFL_$_$fonts_$helveticaroundedltblack_$ttf.prototype = $extend(openfl_text_Font.prototype,{
	__class__: _$_$ASSET_$_$OPENFL_$_$fonts_$helveticaroundedltblack_$ttf
});
var EReg = function(r,opt) {
	opt = opt.split("u").join("");
	this.r = new RegExp(r,opt);
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) this.r.lastIndex = 0;
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) return this.r.m[n]; else throw new js__$Boot_HaxeError("EReg::matched");
	}
	,replace: function(s,by) {
		return s.replace(this.r,by);
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) return undefined;
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(pos != null && pos != 0 && len != null && len < 0) return "";
	if(len == null) len = s.length;
	if(pos < 0) {
		pos = s.length + pos;
		if(pos < 0) pos = 0;
	} else if(len < 0) len = s.length + len - pos;
	return s.substr(pos,len);
};
HxOverrides.indexOf = function(a,obj,i) {
	var len = a.length;
	if(i < 0) {
		i += len;
		if(i < 0) i = 0;
	}
	while(i < len) {
		if(a[i] === obj) return i;
		i++;
	}
	return -1;
};
HxOverrides.remove = function(a,obj) {
	var i = HxOverrides.indexOf(a,obj,0);
	if(i == -1) return false;
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = [item];
		if(this.h == null) this.h = x; else this.q[1] = x;
		this.q = x;
		this.length++;
	}
	,pop: function() {
		if(this.h == null) return null;
		var x = this.h[0];
		this.h = this.h[1];
		if(this.h == null) this.q = null;
		this.length--;
		return x;
	}
	,__class__: List
};
Math.__name__ = ["Math"];
var NMEPreloader = function() {
	openfl_display_Sprite.call(this);
	var backgroundColor = this.getBackgroundColor();
	var r = backgroundColor >> 16 & 255;
	var g = backgroundColor >> 8 & 255;
	var b = backgroundColor & 255;
	var perceivedLuminosity = 0.299 * r + 0.587 * g + 0.114 * b;
	var color = 0;
	if(perceivedLuminosity < 70) color = 16777215;
	var x = 30;
	var height = 7;
	var y = this.getHeight() / 2 - height / 2;
	var width = this.getWidth() - x * 2;
	var padding = 2;
	this.outline = new openfl_display_Sprite();
	this.outline.get_graphics().beginFill(color,0.07);
	this.outline.get_graphics().drawRect(0,0,width,height);
	this.outline.set_x(x);
	this.outline.set_y(y);
	this.addChild(this.outline);
	this.progress = new openfl_display_Sprite();
	this.progress.get_graphics().beginFill(color,0.35);
	this.progress.get_graphics().drawRect(0,0,width - padding * 2,height - padding * 2);
	this.progress.set_x(x + padding);
	this.progress.set_y(y + padding);
	this.progress.set_scaleX(0);
	this.addChild(this.progress);
};
$hxClasses["NMEPreloader"] = NMEPreloader;
NMEPreloader.__name__ = ["NMEPreloader"];
NMEPreloader.__super__ = openfl_display_Sprite;
NMEPreloader.prototype = $extend(openfl_display_Sprite.prototype,{
	getBackgroundColor: function() {
		return 0;
	}
	,getHeight: function() {
		var height = 480;
		if(height > 0) return height; else return openfl_Lib.current.stage.stageHeight;
	}
	,getWidth: function() {
		var width = 640;
		if(width > 0) return width; else return openfl_Lib.current.stage.stageWidth;
	}
	,onInit: function() {
	}
	,onLoaded: function() {
		this.dispatchEvent(new openfl_events_Event("complete"));
	}
	,onUpdate: function(bytesLoaded,bytesTotal) {
		var percentLoaded = bytesLoaded / bytesTotal;
		if(percentLoaded > 1) percentLoaded = 1;
		this.progress.set_scaleX(percentLoaded);
	}
	,__class__: NMEPreloader
});
var Helvetica = function() {
	openfl_text_Font.call(this);
	this.__fromBytes(haxe_Resource.getBytes(Helvetica.resourceName));
};
$hxClasses["Helvetica"] = Helvetica;
Helvetica.__name__ = ["Helvetica"];
Helvetica.__super__ = openfl_text_Font;
Helvetica.prototype = $extend(openfl_text_Font.prototype,{
	__class__: Helvetica
});
var openfl_display_BitmapData = function(width,height,transparent,fillColor) {
	if(fillColor == null) fillColor = -1;
	if(transparent == null) transparent = true;
	this.__usingPingPongTexture = false;
	this.transparent = transparent;
	if(width == null) width = 0; else width = width;
	if(height == null) height = 0; else height = height;
	if(width < 0) width = 0; else width = width;
	if(height < 0) height = 0; else height = height;
	this.width = width;
	this.height = height;
	this.rect = new openfl_geom_Rectangle(0,0,width,height);
	if(width > 0 && height > 0) {
		if(transparent) {
			if((fillColor & -16777216) == 0) fillColor = 0;
		} else fillColor = -16777216 | fillColor & 16777215;
		fillColor = fillColor << 8 | fillColor >> 24 & 255;
		this.image = new lime_graphics_Image(null,0,0,width,height,fillColor);
		this.image.set_transparent(transparent);
		this.__isValid = true;
	}
	this.__createUVs();
	this.__worldTransform = new openfl_geom_Matrix();
	this.__worldColorTransform = new openfl_geom_ColorTransform();
};
$hxClasses["openfl.display.BitmapData"] = openfl_display_BitmapData;
openfl_display_BitmapData.__name__ = ["openfl","display","BitmapData"];
openfl_display_BitmapData.__interfaces__ = [openfl_display_IBitmapDrawable];
openfl_display_BitmapData.fromBase64 = function(base64,type,onload) {
	var bitmapData = new openfl_display_BitmapData(0,0,true);
	bitmapData.__fromBase64(base64,type,onload);
	return bitmapData;
};
openfl_display_BitmapData.fromBytes = function(bytes,rawAlpha,onload) {
	var bitmapData = new openfl_display_BitmapData(0,0,true);
	bitmapData.__fromBytes(bytes,rawAlpha,onload);
	return bitmapData;
};
openfl_display_BitmapData.fromCanvas = function(canvas,transparent) {
	if(transparent == null) transparent = true;
	if(canvas == null) return null;
	var bitmapData = new openfl_display_BitmapData(0,0,transparent);
	bitmapData.__fromImage(lime_graphics_Image.fromCanvas(canvas));
	bitmapData.image.set_transparent(transparent);
	return bitmapData;
};
openfl_display_BitmapData.fromFile = function(path,onload,onerror) {
	var bitmapData = new openfl_display_BitmapData(0,0,true);
	bitmapData.__fromFile(path,onload,onerror);
	return bitmapData;
};
openfl_display_BitmapData.fromImage = function(image,transparent) {
	if(transparent == null) transparent = true;
	if(image == null || image.buffer == null) return null;
	var bitmapData = new openfl_display_BitmapData(0,0,transparent);
	bitmapData.__fromImage(image);
	bitmapData.image.set_transparent(transparent);
	return bitmapData;
};
openfl_display_BitmapData.__asRenderTexture = function(width,height) {
	if(height == null) height = 0;
	if(width == null) width = 0;
	var b = new openfl_display_BitmapData(0,0);
	b.__resize(width,height);
	return b;
};
openfl_display_BitmapData.prototype = {
	applyFilter: function(sourceBitmapData,sourceRect,destPoint,filter) {
		if(!this.__isValid || sourceBitmapData == null || !sourceBitmapData.__isValid) return;
		lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this.image);
		lime_graphics_utils_ImageCanvasUtil.createImageData(this.image);
		lime_graphics_utils_ImageCanvasUtil.convertToCanvas(sourceBitmapData.image);
		lime_graphics_utils_ImageCanvasUtil.createImageData(sourceBitmapData.image);
		filter.__applyFilter(this.image.buffer.__srcImageData,sourceBitmapData.image.buffer.__srcImageData,sourceRect,destPoint);
		this.image.dirty = true;
	}
	,clone: function() {
		if(!this.__isValid) return new openfl_display_BitmapData(this.width,this.height,this.transparent); else return openfl_display_BitmapData.fromImage(this.image.clone(),this.transparent);
	}
	,colorTransform: function(rect,colorTransform) {
		if(!this.__isValid) return;
		this.image.colorTransform(rect.__toLimeRectangle(),colorTransform.__toLimeColorMatrix());
		this.__usingPingPongTexture = false;
	}
	,compare: function(otherBitmapData) {
		if(otherBitmapData == this) return 0; else if(otherBitmapData == null) return -1; else if(this.__isValid == false || otherBitmapData.__isValid == false) return -2; else if(this.width != otherBitmapData.width) return -3; else if(this.height != otherBitmapData.height) return -4;
		if(this.image != null && otherBitmapData.image != null && this.image.get_format() == otherBitmapData.image.get_format()) {
			var bytes = this.image.get_data();
			var otherBytes = otherBitmapData.image.get_data();
			var equal = true;
			var _g1 = 0;
			var _g = bytes.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(bytes[i] != otherBytes[i]) {
					equal = false;
					break;
				}
			}
			if(equal) return 0;
		}
		var bitmapData = null;
		var foundDifference;
		var pixel;
		var otherPixel;
		var comparePixel;
		var r;
		var g;
		var b;
		var a;
		var _g11 = 0;
		var _g2 = this.height;
		while(_g11 < _g2) {
			var y = _g11++;
			var _g3 = 0;
			var _g21 = this.width;
			while(_g3 < _g21) {
				var x = _g3++;
				foundDifference = false;
				pixel = this.getPixel32(x,y);
				otherPixel = otherBitmapData.getPixel32(x,y);
				comparePixel = 0;
				if(pixel != otherPixel) {
					r = (pixel >> 16 & 255) - (otherPixel >> 16 & 255);
					g = (pixel >> 8 & 255) - (otherPixel >> 8 & 255);
					b = (pixel & 255) - (otherPixel & 255);
					if(r < 0) r *= -1;
					if(g < 0) g *= -1;
					if(b < 0) b *= -1;
					if(r == 0 && g == 0 && b == 0) {
						a = (pixel >> 24 & 255) - (otherPixel >> 24 & 255);
						if(a != 0) {
							comparePixel = (comparePixel >> 24 & 255 & 255) << 24 | 16711680 | (comparePixel >> 8 & 255 & 255) << 8 | comparePixel & 255 & 255;
							255;
							comparePixel = (comparePixel >> 24 & 255 & 255) << 24 | (comparePixel >> 16 & 255 & 255) << 16 | 65280 | comparePixel & 255 & 255;
							255;
							comparePixel = (comparePixel >> 24 & 255 & 255) << 24 | (comparePixel >> 16 & 255 & 255) << 16 | (comparePixel >> 8 & 255 & 255) << 8 | 255;
							255;
							comparePixel = (a & 255) << 24 | (comparePixel >> 16 & 255 & 255) << 16 | (comparePixel >> 8 & 255 & 255) << 8 | comparePixel & 255 & 255;
							a;
							foundDifference = true;
						}
					} else {
						comparePixel = (comparePixel >> 24 & 255 & 255) << 24 | (r & 255) << 16 | (comparePixel >> 8 & 255 & 255) << 8 | comparePixel & 255 & 255;
						r;
						comparePixel = (comparePixel >> 24 & 255 & 255) << 24 | (comparePixel >> 16 & 255 & 255) << 16 | (g & 255) << 8 | comparePixel & 255 & 255;
						g;
						comparePixel = (comparePixel >> 24 & 255 & 255) << 24 | (comparePixel >> 16 & 255 & 255) << 16 | (comparePixel >> 8 & 255 & 255) << 8 | b & 255;
						b;
						comparePixel = -16777216 | (comparePixel >> 16 & 255 & 255) << 16 | (comparePixel >> 8 & 255 & 255) << 8 | comparePixel & 255 & 255;
						255;
						foundDifference = true;
					}
				}
				if(foundDifference) {
					if(bitmapData == null) bitmapData = new openfl_display_BitmapData(this.width,this.height,this.transparent || otherBitmapData.transparent,0);
					bitmapData.setPixel32(x,y,comparePixel);
				}
			}
		}
		if(bitmapData == null) return 0;
		return bitmapData;
	}
	,copyChannel: function(sourceBitmapData,sourceRect,destPoint,sourceChannel,destChannel) {
		if(!this.__isValid) return;
		var sourceChannel1;
		switch(sourceChannel) {
		case 1:
			sourceChannel1 = lime_graphics_ImageChannel.RED;
			break;
		case 2:
			sourceChannel1 = lime_graphics_ImageChannel.GREEN;
			break;
		case 4:
			sourceChannel1 = lime_graphics_ImageChannel.BLUE;
			break;
		case 8:
			sourceChannel1 = lime_graphics_ImageChannel.ALPHA;
			break;
		default:
			return;
		}
		var destChannel1;
		switch(destChannel) {
		case 1:
			destChannel1 = lime_graphics_ImageChannel.RED;
			break;
		case 2:
			destChannel1 = lime_graphics_ImageChannel.GREEN;
			break;
		case 4:
			destChannel1 = lime_graphics_ImageChannel.BLUE;
			break;
		case 8:
			destChannel1 = lime_graphics_ImageChannel.ALPHA;
			break;
		default:
			return;
		}
		this.image.copyChannel(sourceBitmapData.image,sourceRect.__toLimeRectangle(),destPoint.__toLimeVector2(),sourceChannel1,destChannel1);
		this.__usingPingPongTexture = false;
	}
	,copyPixels: function(sourceBitmapData,sourceRect,destPoint,alphaBitmapData,alphaPoint,mergeAlpha) {
		if(mergeAlpha == null) mergeAlpha = false;
		if(!this.__isValid || sourceBitmapData == null) return;
		this.image.copyPixels(sourceBitmapData.image,sourceRect.__toLimeRectangle(),destPoint.__toLimeVector2(),alphaBitmapData != null?alphaBitmapData.image:null,alphaPoint != null?alphaPoint.__toLimeVector2():null,mergeAlpha);
		this.__usingPingPongTexture = false;
	}
	,dispose: function() {
		this.image = null;
		this.width = 0;
		this.height = 0;
		this.rect = null;
		this.__isValid = false;
		if(this.__texture != null) {
			var renderer = openfl_Lib.current.stage.__renderer;
			if(renderer != null) {
				var renderSession = renderer.renderSession;
				var gl = renderSession.gl;
				if(gl != null) {
					gl.deleteTexture(this.__texture);
					this.__texture = null;
				}
			}
		}
		if(this.__pingPongTexture != null) {
			this.__pingPongTexture.destroy();
			this.__pingPongTexture = null;
		}
	}
	,draw: function(source,matrix,colorTransform,blendMode,clipRect,smoothing) {
		if(smoothing == null) smoothing = false;
		if(!this.__isValid) return;
		if(colorTransform != null) {
			var copy = new openfl_display_BitmapData(Reflect.getProperty(source,"width"),Reflect.getProperty(source,"height"),true,0);
			copy.draw(source);
			copy.colorTransform(copy.rect,colorTransform);
			source = copy;
		}
		lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this.image);
		lime_graphics_utils_ImageCanvasUtil.sync(this.image,true);
		var buffer = this.image.buffer;
		var renderSession = new openfl__$internal_renderer_RenderSession();
		renderSession.context = buffer.__srcContext;
		renderSession.roundPixels = true;
		renderSession.maskManager = new openfl__$internal_renderer_canvas_CanvasMaskManager(renderSession);
		if(!smoothing) {
			buffer.__srcContext.mozImageSmoothingEnabled = false;
			buffer.__srcContext.msImageSmoothingEnabled = false;
			buffer.__srcContext.imageSmoothingEnabled = false;
		}
		if(clipRect != null) renderSession.maskManager.pushRect(clipRect,new openfl_geom_Matrix());
		var matrixCache = source.__worldTransform;
		source.__updateTransforms(matrix != null?matrix:new openfl_geom_Matrix());
		source.__updateChildren(false);
		source.__renderCanvas(renderSession);
		source.__updateTransforms(matrixCache);
		source.__updateChildren(true);
		if(!smoothing) {
			buffer.__srcContext.mozImageSmoothingEnabled = true;
			buffer.__srcContext.msImageSmoothingEnabled = true;
			buffer.__srcContext.imageSmoothingEnabled = true;
		}
		if(clipRect != null) renderSession.maskManager.popMask();
		buffer.__srcContext.setTransform(1,0,0,1,0,0);
		buffer.__srcImageData = null;
		buffer.data = null;
	}
	,encode: function(rect,compressor,byteArray) {
		if(!this.__isValid || rect == null) return byteArray = null;
		if(js_Boot.__instanceof(compressor,openfl_display_PNGEncoderOptions)) return byteArray = openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes(this.image.encode("png")); else if(js_Boot.__instanceof(compressor,openfl_display_JPEGEncoderOptions)) return byteArray = openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes(this.image.encode("jpg",(js_Boot.__cast(compressor , openfl_display_JPEGEncoderOptions)).quality));
		return byteArray = null;
	}
	,fillRect: function(rect,color) {
		if(!this.__isValid || rect == null) return;
		if(this.transparent && (color & -16777216) == 0) color = 0;
		this.image.fillRect(rect.__toLimeRectangle(),color,1);
		this.__usingPingPongTexture = false;
	}
	,floodFill: function(x,y,color) {
		if(!this.__isValid) return;
		this.image.floodFill(x,y,color,1);
		this.__usingPingPongTexture = false;
	}
	,generateFilterRect: function(sourceRect,filter) {
		return sourceRect.clone();
	}
	,getBuffer: function(gl) {
		if(this.__buffer == null) {
			var data = [this.width,this.height,0,1,1,0,this.height,0,0,1,this.width,0,0,1,0,0,0,0,0,0];
			this.__buffer = gl.createBuffer();
			gl.bindBuffer(gl.ARRAY_BUFFER,this.__buffer);
			gl.bufferData(gl.ARRAY_BUFFER,(function($this) {
				var $r;
				var this1;
				if(data != null) this1 = new Float32Array(data); else this1 = null;
				$r = this1;
				return $r;
			}(this)),gl.STATIC_DRAW);
			gl.bindBuffer(gl.ARRAY_BUFFER,null);
		}
		return this.__buffer;
	}
	,getColorBoundsRect: function(mask,color,findColor) {
		if(findColor == null) findColor = true;
		if(!this.__isValid) return new openfl_geom_Rectangle(0,0,this.width,this.height);
		if(!this.transparent || (mask >> 24 & 255) > 0) {
			var color1 = color;
			if((color1 >> 24 & 255) == 0) color1 = 0;
		}
		var rect = this.image.getColorBoundsRect(mask,color,findColor,1);
		return new openfl_geom_Rectangle(rect.x,rect.y,rect.width,rect.height);
	}
	,getPixel: function(x,y) {
		if(!this.__isValid) return 0;
		return this.image.getPixel(x,y,1);
	}
	,getPixel32: function(x,y) {
		if(!this.__isValid) return 0;
		return this.image.getPixel32(x,y,1);
	}
	,getPixels: function(rect) {
		if(!this.__isValid) return null;
		if(rect == null) rect = this.rect;
		return openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes(this.image.getPixels(rect.__toLimeRectangle(),1));
	}
	,getSurface: function() {
		if(!this.__isValid) return null;
		if(this.__surface == null) this.__surface = lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.fromImage(this.image);
		return this.__surface;
	}
	,getTexture: function(gl) {
		if(!this.__isValid) return null;
		if(this.__usingPingPongTexture && this.__pingPongTexture != null) return this.__pingPongTexture.get_texture();
		if(this.__texture == null) {
			this.__texture = gl.createTexture();
			gl.bindTexture(gl.TEXTURE_2D,this.__texture);
			gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);
			gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);
			this.image.dirty = true;
		}
		if(this.image != null && this.image.dirty) {
			var internalFormat;
			var format;
			if(this.__surface != null) lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$.flush(this.__surface);
			if(this.image.buffer.bitsPerPixel == 1) {
				internalFormat = gl.ALPHA;
				format = gl.ALPHA;
			} else {
				internalFormat = gl.RGBA;
				format = gl.RGBA;
			}
			gl.bindTexture(gl.TEXTURE_2D,this.__texture);
			var textureImage = this.image;
			if(!textureImage.get_premultiplied() && textureImage.get_transparent() || textureImage.get_format() != 0) {
				textureImage = textureImage.clone();
				textureImage.set_format(0);
				textureImage.set_premultiplied(true);
			}
			gl.texImage2D(gl.TEXTURE_2D,0,internalFormat,this.width,this.height,0,format,gl.UNSIGNED_BYTE,textureImage.get_data());
			gl.bindTexture(gl.TEXTURE_2D,null);
			this.image.dirty = false;
		}
		return this.__texture;
	}
	,getVector: function(rect) {
		var pixels = this.getPixels(rect);
		var length = Std["int"](openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(pixels) / 4);
		var result;
		var this1;
		this1 = new openfl_VectorData();
		var this2;
		this2 = new Array(length);
		this1.data = this2;
		this1.length = length;
		this1.fixed = true;
		result = this1;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var value = pixels.readUnsignedInt();
			if(!result.fixed) {
				if(i >= result.length) result.length = i + 1;
				if(result.data.length < result.length) {
					var data;
					var this3;
					this3 = new Array(result.data.length + 10);
					data = this3;
					haxe_ds__$Vector_Vector_$Impl_$.blit(result.data,0,data,0,result.data.length);
					result.data = data;
				}
			}
			result.data[i] = value;
		}
		return result;
	}
	,histogram: function(hRect) {
		var rect;
		if(hRect != null) rect = hRect; else rect = new openfl_geom_Rectangle(0,0,this.width,this.height);
		var pixels = this.getPixels(rect);
		var result;
		var _g = [];
		var _g1 = 0;
		while(_g1 < 4) {
			var i = _g1++;
			_g.push((function($this) {
				var $r;
				var _g2 = [];
				{
					var _g3 = 0;
					while(_g3 < 256) {
						var j = _g3++;
						_g2.push(0);
					}
				}
				$r = _g2;
				return $r;
			}(this)));
		}
		result = _g;
		var _g21 = 0;
		var _g11 = openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(pixels);
		while(_g21 < _g11) {
			var i1 = _g21++;
			++result[i1 % 4][pixels.readUnsignedByte()];
		}
		return result;
	}
	,hitTest: function(firstPoint,firstAlphaThreshold,secondObject,secondBitmapDataPoint,secondAlphaThreshold) {
		if(secondAlphaThreshold == null) secondAlphaThreshold = 1;
		if(!this.__isValid) return false;
		if(js_Boot.__instanceof(secondObject,openfl_display_Bitmap)) secondObject = (js_Boot.__cast(secondObject , openfl_display_Bitmap)).bitmapData;
		if(js_Boot.__instanceof(secondObject,openfl_geom_Point)) {
			var secondPoint = secondObject;
			var x = secondPoint.x - firstPoint.x | 0;
			var y = secondPoint.y - firstPoint.y | 0;
			if(this.rect.contains(x,y)) {
				var pixel = this.getPixel32(x,y);
				if((pixel >> 24 & 255) >= firstAlphaThreshold) return true;
			}
		} else if(js_Boot.__instanceof(secondObject,openfl_display_BitmapData)) {
			var secondBitmapData = secondObject;
			var x1;
			var y1;
			if(secondBitmapDataPoint == null) {
				x1 = 0;
				y1 = 0;
			} else {
				x1 = secondBitmapDataPoint.x - firstPoint.x | 0;
				y1 = secondBitmapDataPoint.y - firstPoint.y | 0;
			}
			if(this.rect.contains(x1,y1)) {
				var hitRect = openfl_geom_Rectangle.__temp;
				hitRect.setTo(x1,y1,Math.min(secondBitmapData.width,this.width - x1),Math.min(secondBitmapData.height,this.height - y1));
				var pixels = this.getPixels(hitRect);
				hitRect.offset(-x1,-y1);
				var testPixels = secondBitmapData.getPixels(hitRect);
				var length = hitRect.width * hitRect.height | 0;
				var pixel1;
				var testPixel;
				var _g = 0;
				while(_g < length) {
					var i = _g++;
					pixel1 = pixels.readUnsignedInt();
					testPixel = testPixels.readUnsignedInt();
					if((pixel1 >> 24 & 255) >= firstAlphaThreshold && (testPixel >> 24 & 255) >= secondAlphaThreshold) return true;
				}
				return false;
			}
		} else if(js_Boot.__instanceof(secondObject,openfl_geom_Rectangle)) {
			var secondRectangle = openfl_geom_Rectangle.__temp;
			secondRectangle.copyFrom(secondObject);
			secondRectangle.offset(-firstPoint.x,-firstPoint.y);
			secondRectangle.__contract(0,0,this.width,this.height);
			if(secondRectangle.width > 0 && secondRectangle.height > 0) {
				var pixels1 = this.getPixels(secondRectangle);
				var length1 = Std["int"](openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(pixels1) / 4);
				var pixel2;
				var _g1 = 0;
				while(_g1 < length1) {
					var i1 = _g1++;
					pixel2 = pixels1.readUnsignedInt();
					if((pixel2 >> 24 & 255) >= firstAlphaThreshold) return true;
				}
			}
		}
		return false;
	}
	,lock: function() {
	}
	,merge: function(sourceBitmapData,sourceRect,destPoint,redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier) {
		if(!this.__isValid || sourceBitmapData == null || !sourceBitmapData.__isValid || sourceRect == null || destPoint == null) return;
		this.image.merge(sourceBitmapData.image,sourceRect.__toLimeRectangle(),destPoint.__toLimeVector2(),redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier);
		this.__usingPingPongTexture = false;
	}
	,noise: function(randomSeed,low,high,channelOptions,grayScale) {
		if(grayScale == null) grayScale = false;
		if(channelOptions == null) channelOptions = 7;
		if(high == null) high = 255;
		if(low == null) low = 0;
		if(!this.__isValid) return;
		var rand;
		var func = function() {
			randomSeed = randomSeed * 1103515245 + 12345;
			return Std["int"](Math.abs(randomSeed / 65536)) % 32768;
		};
		rand = func;
		rand();
		var range = high - low;
		var data = new openfl_utils_ByteArrayData(0);
		var redChannel = (channelOptions & 1) == 1;
		var greenChannel = (channelOptions & 2) >> 1 == 1;
		var blueChannel = (channelOptions & 4) >> 2 == 1;
		var alphaChannel = (channelOptions & 8) >> 3 == 1;
		var _g1 = 0;
		var _g = this.height;
		while(_g1 < _g) {
			var y = _g1++;
			var _g3 = 0;
			var _g2 = this.width;
			while(_g3 < _g2) {
				var x = _g3++;
				var red = 0;
				var blue = 0;
				var green = 0;
				var alpha = 255;
				if(grayScale) {
					red = green = blue = low + rand() % range;
					alpha = 255;
				} else {
					if(redChannel) red = low + rand() % range;
					if(greenChannel) green = low + rand() % range;
					if(blueChannel) blue = low + rand() % range;
					if(alphaChannel) alpha = low + rand() % range;
				}
				var rgb = alpha;
				rgb = (rgb << 8) + red;
				rgb = (rgb << 8) + green;
				rgb = (rgb << 8) + blue;
				this.setPixel32(x,y,rgb);
			}
		}
	}
	,paletteMap: function(sourceBitmapData,sourceRect,destPoint,redArray,greenArray,blueArray,alphaArray) {
		var sw = sourceRect.width | 0;
		var sh = sourceRect.height | 0;
		var pixels = this.getPixels(sourceRect);
		pixels.position = 0;
		var pixelValue;
		var r;
		var g;
		var b;
		var a;
		var color;
		var c1;
		var c2;
		var c3;
		var c4;
		var _g1 = 0;
		var _g = sh * sw;
		while(_g1 < _g) {
			var i = _g1++;
			pixelValue = pixels.readUnsignedInt();
			if(alphaArray == null) c1 = pixelValue & -16777216; else c1 = alphaArray[pixelValue >> 24 & 255];
			if(redArray == null) c2 = pixelValue & 16711680; else c2 = redArray[pixelValue >> 16 & 255];
			if(greenArray == null) c3 = pixelValue & 65280; else c3 = greenArray[pixelValue >> 8 & 255];
			if(blueArray == null) c4 = pixelValue & 255; else c4 = blueArray[pixelValue & 255];
			a = (c1 >> 24 & 255) + (c2 >> 24 & 255) + (c3 >> 24 & 255) + (c4 >> 24 & 255);
			if(a > 255) a == 255;
			r = (c1 >> 16 & 255) + (c2 >> 16 & 255) + (c3 >> 16 & 255) + (c4 >> 16 & 255);
			if(r > 255) r == 255;
			g = (c1 >> 8 & 255) + (c2 >> 8 & 255) + (c3 >> 8 & 255) + (c4 >> 8 & 255);
			if(g > 255) g == 255;
			b = (c1 & 255) + (c2 & 255) + (c3 & 255) + (c4 & 255);
			if(b > 255) b == 255;
			color = a << 24 | r << 16 | g << 8 | b;
			pixels.position = i * 4;
			pixels.writeUnsignedInt(color);
		}
		pixels.position = 0;
		var destRect = new openfl_geom_Rectangle(destPoint.x,destPoint.y,sw,sh);
		this.setPixels(destRect,pixels);
	}
	,perlinNoise: function(baseX,baseY,numOctaves,randomSeed,stitch,fractalNoise,channelOptions,grayScale,offsets) {
		if(grayScale == null) grayScale = false;
		if(channelOptions == null) channelOptions = 7;
		openfl_Lib.notImplemented("BitmapData.perlinNoise");
	}
	,scroll: function(x,y) {
		if(!this.__isValid) return;
		this.image.scroll(x,y);
		this.__usingPingPongTexture = false;
	}
	,setPixel: function(x,y,color) {
		if(!this.__isValid) return;
		this.image.setPixel(x,y,color,1);
		this.__usingPingPongTexture = false;
	}
	,setPixel32: function(x,y,color) {
		if(!this.__isValid) return;
		this.image.setPixel32(x,y,color,1);
		this.__usingPingPongTexture = false;
	}
	,setPixels: function(rect,byteArray) {
		if(!this.__isValid || rect == null) return;
		this.image.setPixels(rect.__toLimeRectangle(),openfl_utils__$ByteArray_ByteArray_$Impl_$.toBytes(byteArray),1);
		this.__usingPingPongTexture = false;
	}
	,setVector: function(rect,inputVector) {
		var byteArray = new openfl_utils_ByteArrayData(0);
		openfl_utils__$ByteArray_ByteArray_$Impl_$.set_length(byteArray,inputVector.length * 4);
		var _g = 0;
		while(_g < inputVector.length) {
			var color = inputVector.data[_g];
			++_g;
			byteArray.writeUnsignedInt(color);
		}
		byteArray.position = 0;
		this.setPixels(rect,byteArray);
	}
	,threshold: function(sourceBitmapData,sourceRect,destPoint,operation,threshold,color,mask,copySource) {
		if(copySource == null) copySource = false;
		if(mask == null) mask = -1;
		if(color == null) color = 0;
		if(sourceBitmapData == null || sourceRect == null || destPoint == null || sourceRect.x > sourceBitmapData.width || sourceRect.y > sourceBitmapData.height || destPoint.x > this.width || destPoint.y > this.height) return 0;
		return this.image.threshold(sourceBitmapData.image,sourceRect.__toLimeRectangle(),destPoint.__toLimeVector2(),operation,threshold,color,mask,copySource,1);
	}
	,unlock: function(changeRect) {
	}
	,__createUVs: function(x0,y0,x1,y1,x2,y2,x3,y3) {
		if(y3 == null) y3 = 1;
		if(x3 == null) x3 = 0;
		if(y2 == null) y2 = 1;
		if(x2 == null) x2 = 1;
		if(y1 == null) y1 = 0;
		if(x1 == null) x1 = 1;
		if(y0 == null) y0 = 0;
		if(x0 == null) x0 = 0;
		if(this.__uvData == null) this.__uvData = new openfl_display_TextureUvs();
		this.__uvData.x0 = x0;
		this.__uvData.y0 = y0;
		this.__uvData.x1 = x1;
		this.__uvData.y1 = y1;
		this.__uvData.x2 = x2;
		this.__uvData.y2 = y2;
		this.__uvData.x3 = x3;
		this.__uvData.y3 = y3;
	}
	,__drawGL: function(renderSession,source,matrix,colorTransform,blendMode,clipRect,smoothing,drawSelf,clearBuffer,readPixels,powerOfTwo) {
		if(powerOfTwo == null) powerOfTwo = true;
		if(readPixels == null) readPixels = false;
		if(clearBuffer == null) clearBuffer = false;
		if(drawSelf == null) drawSelf = false;
		if(smoothing == null) smoothing = false;
		this.__pingPongTexture = openfl__$internal_renderer_opengl_GLBitmap.pushFramebuffer(renderSession,this.__pingPongTexture,this.rect,smoothing,this.transparent,clearBuffer,powerOfTwo);
		openfl__$internal_renderer_opengl_GLBitmap.drawBitmapDrawable(renderSession,drawSelf?this:null,source,matrix,colorTransform,blendMode,clipRect);
		openfl__$internal_renderer_opengl_GLBitmap.popFramebuffer(renderSession,readPixels?this.image:null);
		var uv = this.__pingPongTexture.get_renderTexture().__uvData;
		this.__createUVs(uv.x0,uv.y0,uv.x1,uv.y1,uv.x2,uv.y2,uv.x3,uv.y3);
		this.__isValid = true;
		this.__usingPingPongTexture = true;
	}
	,__fromBase64: function(base64,type,onload) {
		var _g = this;
		lime_graphics_Image.fromBase64(base64,type,function(image) {
			_g.__fromImage(image);
			if(onload != null) onload(_g);
		});
	}
	,__fromBytes: function(bytes,rawAlpha,onload) {
		var _g = this;
		lime_graphics_Image.fromBytes(openfl_utils__$ByteArray_ByteArray_$Impl_$.toBytes(bytes),function(image) {
			_g.__fromImage(image);
			if(rawAlpha != null) {
				lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
				lime_graphics_utils_ImageCanvasUtil.createImageData(image);
				var data = image.buffer.data;
				var _g2 = 0;
				var _g1 = openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(rawAlpha);
				while(_g2 < _g1) {
					var i = _g2++;
					var val = rawAlpha.readUnsignedByte();
					data[i * 4 + 3] = val;
				}
				image.dirty = true;
			}
			if(onload != null) onload(_g);
		});
	}
	,__fromFile: function(path,onload,onerror) {
		var _g = this;
		lime_graphics_Image.fromFile(path,function(image) {
			_g.__fromImage(image);
			if(onload != null) onload(_g);
		},onerror);
	}
	,__fromImage: function(image) {
		if(image != null && image.buffer != null) {
			this.image = image;
			this.width = image.width;
			this.height = image.height;
			this.rect = new openfl_geom_Rectangle(0,0,image.width,image.height);
			this.__isValid = true;
		}
	}
	,__renderCairo: function(renderSession) {
		if(!this.__isValid) return;
		var cairo = renderSession.cairo;
		if(this.__worldTransform == null) this.__worldTransform = new openfl_geom_Matrix();
		var transform = this.__worldTransform;
		if(renderSession.roundPixels) {
			var matrix = transform.__toMatrix3();
			matrix.tx = Math.round(matrix.tx);
			matrix.ty = Math.round(matrix.ty);
			cairo.set_matrix(matrix);
		} else cairo.set_matrix(transform.__toMatrix3());
		var surface = this.getSurface();
		if(surface != null) {
			var pattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createForSurface(surface);
			if(cairo.get_antialias() == 1) lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_filter(pattern,3); else lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_filter(pattern,1);
			cairo.set_source(pattern);
			cairo.paint();
		}
	}
	,__renderCairoMask: function(renderSession) {
	}
	,__renderCanvas: function(renderSession) {
		if(!this.__isValid) return;
		lime_graphics_utils_ImageCanvasUtil.sync(this.image,false);
		var context = renderSession.context;
		if(this.__worldTransform == null) this.__worldTransform = new openfl_geom_Matrix();
		context.globalAlpha = 1;
		var transform = this.__worldTransform;
		if(renderSession.roundPixels) context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx | 0,transform.ty | 0); else context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);
		context.drawImage(this.image.get_src(),0,0);
	}
	,__renderCanvasMask: function(renderSession) {
	}
	,__renderGL: function(renderSession) {
		renderSession.spriteBatch.renderBitmapData(this,false,this.__worldTransform,this.__worldColorTransform,this.__worldColorTransform.alphaMultiplier,this.__blendMode,this.__shader);
	}
	,__resize: function(width,height) {
		this.width = width;
		this.height = height;
		this.rect.width = width;
		this.rect.height = height;
	}
	,__sync: function() {
		lime_graphics_utils_ImageCanvasUtil.sync(this.image,false);
	}
	,__updateChildren: function(transformOnly) {
	}
	,__updateMask: function(maskGraphics) {
	}
	,__updateTransforms: function(overrideTransform) {
		if(overrideTransform == null) this.__worldTransform.identity(); else this.__worldTransform = overrideTransform;
	}
	,__class__: openfl_display_BitmapData
};
var Splash = function(width,height,transparent,fillRGBA,onload) {
	if(fillRGBA == null) fillRGBA = -1;
	if(transparent == null) transparent = true;
	openfl_display_BitmapData.call(this,0,0,transparent,fillRGBA);
	if(Splash.preload != null) this.__fromImage(Splash.preload); else this.__fromBase64(haxe_Resource.getString(Splash.resourceName),Splash.resourceType,function(b) {
		if(Splash.preload == null) Splash.preload = b.image;
		if(onload != null) onload(b);
	});
};
$hxClasses["Splash"] = Splash;
Splash.__name__ = ["Splash"];
Splash.preload = null;
Splash.__super__ = openfl_display_BitmapData;
Splash.prototype = $extend(openfl_display_BitmapData.prototype,{
	__class__: Splash
});
var Bar = function(width,height,transparent,fillRGBA,onload) {
	if(fillRGBA == null) fillRGBA = -1;
	if(transparent == null) transparent = true;
	openfl_display_BitmapData.call(this,0,0,transparent,fillRGBA);
	if(Bar.preload != null) this.__fromImage(Bar.preload); else this.__fromBase64(haxe_Resource.getString(Bar.resourceName),Bar.resourceType,function(b) {
		if(Bar.preload == null) Bar.preload = b.image;
		if(onload != null) onload(b);
	});
};
$hxClasses["Bar"] = Bar;
Bar.__name__ = ["Bar"];
Bar.preload = null;
Bar.__super__ = openfl_display_BitmapData;
Bar.prototype = $extend(openfl_display_BitmapData.prototype,{
	__class__: Bar
});
var Preloader = function() {
	NMEPreloader.call(this);
	this.addEventListener("complete",$bind(this,this.onComplete));
	this.removeChild(this.outline);
	this.removeChild(this.progress);
	this.removeChild(this.textPercent);
	this.init();
	this.stage_onResize(null);
	openfl_Lib.current.stage.addEventListener("resize",$bind(this,this.stage_onResize));
};
$hxClasses["Preloader"] = Preloader;
Preloader.__name__ = ["Preloader"];
Preloader.__super__ = NMEPreloader;
Preloader.prototype = $extend(NMEPreloader.prototype,{
	onComplete: function(event) {
		openfl_Lib.current.stage.removeEventListener("enterFrame",$bind(this,this.onFrame));
		openfl_Lib.current.stage.removeEventListener("resize",$bind(this,this.stage_onResize));
	}
	,init: function() {
		openfl_Lib.current.stage.set_color(Preloader.backgroundColor);
		this.rectangle = new openfl_display_Sprite();
		this.bar = new openfl_display_Bitmap(new Bar(0,0));
		this.bar.smoothing = true;
		this.bar.set_x(100);
		this.bar.set_y(210);
		this.rectangle.set_x(160);
		this.rectangle.set_y(250);
		this.addChild(this.bar);
		this.addChild(this.rectangle);
		this.splash = new openfl_display_Bitmap(new Splash(0,0));
		this.splash.smoothing = true;
		this.addChild(this.splash);
		this.textPercent = new openfl_text_TextField();
		this.textPercent.set_embedFonts(true);
		this.textPercent.set_selectable(false);
		this.textPercent.set_text("0%");
		this.textPercent.set_textColor(10027059);
		this.textPercent.set_x(320);
		this.textPercent.set_y(240);
		this.splashHeight = 480;
		openfl_Lib.current.stage.addEventListener("enterFrame",$bind(this,this.onFrame));
	}
	,onUpdate: function(bytesLoaded,bytesTotal) {
		var percentLoaded = bytesLoaded / bytesTotal;
		if(percentLoaded > 1) percentLoaded = 1;
		this.textPercent.set_text((percentLoaded * 100 | 0) + "%");
		this.rectangle.get_graphics().clear();
		this.rectangle.get_graphics().beginFill(Preloader.color);
		this.rectangle.get_graphics().drawRect(percentLoaded * 320,0,(1 - percentLoaded) * 320,36);
		this.rectangle.get_graphics().endFill();
	}
	,onFrame: function(e) {
		if(this.bar.get_x() >= 152) this.bar.set_x(100);
		var _g = this.bar;
		_g.set_x(_g.get_x() + 1);
	}
	,stage_onResize: function(event) {
		this.resize(openfl_Lib.current.stage.stageWidth,openfl_Lib.current.stage.stageHeight);
	}
	,resize: function(newWidth,newHeight) {
	}
	,__class__: Preloader
});
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.hasField = function(o,field) {
	return Object.prototype.hasOwnProperty.call(o,field);
};
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return null;
	}
};
Reflect.setField = function(o,field,value) {
	o[field] = value;
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) return null; else if(o.__properties__ && (tmp = o.__properties__["get_" + field])) return o[tmp](); else return o[field];
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	if(o.__properties__ && (tmp = o.__properties__["set_" + field])) o[tmp](value); else o[field] = value;
};
Reflect.callMethod = function(o,func,args) {
	return func.apply(o,args);
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) a.push(f);
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	return typeof(f) == "function" && !(f.__name__ || f.__ename__);
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) return true;
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) return false;
	return f1.scope == f2.scope && f1.method == f2.method && f1.method != null;
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) return false;
	delete(o[field]);
	return true;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std["is"] = function(v,t) {
	return js_Boot.__instanceof(v,t);
};
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std["int"] = function(x) {
	return x | 0;
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) v = parseInt(x);
	if(isNaN(v)) return null;
	return v;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	add: function(x) {
		this.b += Std.string(x);
	}
	,addSub: function(s,pos,len) {
		if(len == null) this.b += HxOverrides.substr(s,pos,null); else this.b += HxOverrides.substr(s,pos,len);
	}
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.urlEncode = function(s) {
	return encodeURIComponent(s);
};
StringTools.urlDecode = function(s) {
	return decodeURIComponent(s.split("+").join(" "));
};
StringTools.startsWith = function(s,start) {
	return s.length >= start.length && HxOverrides.substr(s,0,start.length) == start;
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	return c > 8 && c < 14 || c == 32;
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) r++;
	if(r > 0) return HxOverrides.substr(s,r,l - r); else return s;
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) r++;
	if(r > 0) return HxOverrides.substr(s,0,l - r); else return s;
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	do {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
	} while(n > 0);
	if(digits != null) while(s.length < digits) s = "0" + s;
	return s;
};
StringTools.fastCodeAt = function(s,index) {
	return s.charCodeAt(index);
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) return null;
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) return null;
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) return null;
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
	return null;
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) throw new js__$Boot_HaxeError("No such constructor " + constr);
	if(Reflect.isFunction(f)) {
		if(params == null) throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		return Reflect.callMethod(e,f,params);
	}
	if(params != null && params.length != 0) throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	return f;
};
Type.getClassFields = function(c) {
	var a = Reflect.fields(c);
	HxOverrides.remove(a,"__name__");
	HxOverrides.remove(a,"__interfaces__");
	HxOverrides.remove(a,"__properties__");
	HxOverrides.remove(a,"__super__");
	HxOverrides.remove(a,"__meta__");
	HxOverrides.remove(a,"prototype");
	return a;
};
Type.getEnumConstructs = function(e) {
	var a = e.__constructs__;
	return a.slice();
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "string":
		return ValueType.TClass(String);
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) return ValueType.TInt;
		return ValueType.TFloat;
	case "object":
		if(v == null) return ValueType.TNull;
		var e = v.__enum__;
		if(e != null) return ValueType.TEnum(e);
		var c = js_Boot.getClass(v);
		if(c != null) return ValueType.TClass(c);
		return ValueType.TObject;
	case "function":
		if(v.__name__ || v.__ename__) return ValueType.TObject;
		return ValueType.TFunction;
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) return true;
	try {
		if(a[0] != b[0]) return false;
		var _g1 = 2;
		var _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!Type.enumEq(a[i],b[i])) return false;
		}
		var e = a.__enum__;
		if(e != b.__enum__ || e == null) return false;
	} catch( e1 ) {
		haxe_CallStack.lastException = e1;
		if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
		return false;
	}
	return true;
};
var _$UInt_UInt_$Impl_$ = {};
$hxClasses["_UInt.UInt_Impl_"] = _$UInt_UInt_$Impl_$;
_$UInt_UInt_$Impl_$.__name__ = ["_UInt","UInt_Impl_"];
_$UInt_UInt_$Impl_$.gt = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) return aNeg; else return a > b;
};
_$UInt_UInt_$Impl_$.toFloat = function(this1) {
	var $int = this1;
	if($int < 0) return 4294967296.0 + $int; else return $int + 0.0;
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = ["Xml"];
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	get_nodeName: function() {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		return this.nodeName;
	}
	,get: function(att) {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		return this.attributeMap.get(att);
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		this.attributeMap.set(att,value);
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		return this.attributeMap.exists(att);
	}
	,iterator: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		return HxOverrides.iter(this.children);
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		var ret;
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) _g.push(child);
		}
		ret = _g;
		return HxOverrides.iter(ret);
	}
	,elementsNamed: function(name) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		var ret;
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element && (function($this) {
				var $r;
				if(child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + child.nodeType);
				$r = child.nodeName;
				return $r;
			}(this)) == name) _g.push(child);
		}
		ret = _g;
		return HxOverrides.iter(ret);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) return child;
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		if(x.parent != null) x.parent.removeChild(x);
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,__class__: Xml
	,__properties__: {get_nodeName:"get_nodeName"}
};
var objects_GameObject = function() { };
$hxClasses["objects.GameObject"] = objects_GameObject;
objects_GameObject.__name__ = ["objects","GameObject"];
objects_GameObject.prototype = {
	__class__: objects_GameObject
};
var gameplay_AnimatedDecoration = function(myX,myY) {
	if(myY == null) myY = 0;
	if(myX == null) myX = 0;
	this.spawnTime = 1000;
	openfl_display_Sprite.call(this);
	this.set_x(myX + 15);
	this.set_y(myY + 15);
	this.setGraph();
};
$hxClasses["gameplay.AnimatedDecoration"] = gameplay_AnimatedDecoration;
gameplay_AnimatedDecoration.__name__ = ["gameplay","AnimatedDecoration"];
gameplay_AnimatedDecoration.__interfaces__ = [objects_GameObject];
gameplay_AnimatedDecoration.__super__ = openfl_display_Sprite;
gameplay_AnimatedDecoration.prototype = $extend(openfl_display_Sprite.prototype,{
	setGraph: function() {
		this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/decorations/adornos 2 - agua.png"),3,3,60,60);
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("stand",[0],false,20,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle",[0,1,2,3,4,5,6,7,8],false,20,0,0));
		this.spritesheet = new spritesheet_AnimatedSprite(this.mySpritesheet,true);
		this.spritesheet.showBehavior("iddle");
		this.randomizePosition();
		this.spritesheet.set_x(0);
		this.spritesheet.set_y(0);
		this.addChild(this.spritesheet);
	}
	,move: function(dt) {
		var _g = this;
		_g.set_y(_g.get_y() + scenes_Gameplay.scrollingSpeed * dt);
		if(this.spritesheet.currentFrameIndex == 8) {
			this.spritesheet.showBehavior("stand");
			this.set_visible(false);
			var randT = Math.round(Math.random() * 1000);
			this.spawnTime = 1000 + randT;
		}
		if(!this.get_visible()) {
			if(scenes_Gameplay.scrollingSpeed != 0) this.spawnTimer(dt);
		}
	}
	,randomizePosition: function() {
		var randX = Math.round(Math.random() * 16) + 1;
		this.set_x(randX * 30 + 15);
		var randY = Math.round(Math.random() * 16);
		this.set_y(randY * 30 + 15);
	}
	,spawnTimer: function(dt) {
		this.spawnTime -= dt;
		if(this.spawnTime <= 0) {
			this.randomizePosition();
			this.set_visible(true);
			this.spritesheet.showBehavior("iddle");
		}
	}
	,checkOut: function() {
		if(this.get_y() - this.get_width() * 0.5 > Main.screenHeight) this.removed();
	}
	,update: function(dt) {
		this.move(dt);
		if(this.spritesheet != null) this.spritesheet.update(dt);
	}
	,removed: function() {
		scenes_Gameplay.current.removeObject(this);
	}
	,__class__: gameplay_AnimatedDecoration
});
var spritesheet_AnimatedSprite = function(sheet,smoothing) {
	if(smoothing == null) smoothing = false;
	openfl_display_Sprite.call(this);
	this.smoothing = smoothing;
	this.spritesheet = sheet;
	this.behaviorQueue = [];
	this.bitmap = new openfl_display_Bitmap();
	this.addChild(this.bitmap);
};
$hxClasses["spritesheet.AnimatedSprite"] = spritesheet_AnimatedSprite;
spritesheet_AnimatedSprite.__name__ = ["spritesheet","AnimatedSprite"];
spritesheet_AnimatedSprite.__super__ = openfl_display_Sprite;
spritesheet_AnimatedSprite.prototype = $extend(openfl_display_Sprite.prototype,{
	getFrameData: function(index) {
		if(this.currentBehavior != null && this.currentBehavior.frameData.length > index) return this.currentBehavior.frameData[index]; else return null;
	}
	,queueBehavior: function(behavior) {
		var behaviorData = this.resolveBehavior(behavior);
		if(this.currentBehavior == null) this.updateBehavior(behaviorData); else this.behaviorQueue.push(behaviorData);
	}
	,resolveBehavior: function(behavior) {
		if(js_Boot.__instanceof(behavior,spritesheet_data_BehaviorData)) return behavior; else if(typeof(behavior) == "string") {
			if(this.spritesheet != null) return this.spritesheet.behaviors.get(behavior);
		}
		return null;
	}
	,showBehavior: function(behavior,restart) {
		if(restart == null) restart = true;
		this.behaviorQueue = [];
		this.updateBehavior(this.resolveBehavior(behavior),restart);
	}
	,showBehaviors: function(behaviors) {
		this.behaviorQueue = [];
		var _g = 0;
		while(_g < behaviors.length) {
			var behavior = behaviors[_g];
			++_g;
			this.behaviorQueue.push(this.resolveBehavior(behavior));
		}
		if(this.behaviorQueue.length > 0) this.updateBehavior(this.behaviorQueue.shift());
	}
	,update: function(deltaTime) {
		if(!this.behaviorComplete) {
			this.timeElapsed += deltaTime;
			var ratio = this.timeElapsed / this.loopTime;
			if(ratio >= 1) {
				if(this.currentBehavior.loop) ratio -= Math.floor(ratio); else {
					this.behaviorComplete = true;
					ratio = 1;
				}
			}
			this.currentFrameIndex = Math.round(ratio * (this.currentBehavior.frames.length - 1));
			var frame = this.spritesheet.getFrame(this.currentBehavior.frames[this.currentFrameIndex]);
			this.bitmap.bitmapData = frame.bitmapData;
			this.bitmap.smoothing = this.smoothing;
			this.bitmap.set_x(frame.offsetX - this.currentBehavior.originX);
			this.bitmap.set_y(frame.offsetY - this.currentBehavior.originY);
			if(this.behaviorComplete) {
				if(this.behaviorQueue.length > 0) this.updateBehavior(this.behaviorQueue.shift()); else if(this.hasEventListener("complete")) this.dispatchEvent(new openfl_events_Event("complete"));
			}
		}
	}
	,updateBehavior: function(behavior,restart) {
		if(restart == null) restart = true;
		if(behavior != null) {
			if(restart || behavior != this.currentBehavior) {
				this.currentBehavior = behavior;
				this.timeElapsed = 0;
				this.behaviorComplete = false;
				this.loopTime = behavior.frames.length / behavior.frameRate * 1000 | 0;
				if(this.bitmap.bitmapData == null) this.update(0);
			}
		} else {
			this.bitmap.bitmapData = null;
			this.currentBehavior = null;
			this.currentFrameIndex = -1;
			this.behaviorComplete = true;
		}
	}
	,__class__: spritesheet_AnimatedSprite
});
var gameplay_Blur = function() {
	var sheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/textures/fondo carrera.png"),2,2,640,480);
	sheet.addBehavior(new spritesheet_data_BehaviorData("move",[0,1,2,3],true,7,0,480));
	spritesheet_AnimatedSprite.call(this,sheet,true);
	this.set_y(480);
	this.showBehavior("move");
	this.mouseEnabled = false;
};
$hxClasses["gameplay.Blur"] = gameplay_Blur;
gameplay_Blur.__name__ = ["gameplay","Blur"];
gameplay_Blur.__interfaces__ = [objects_GameObject];
gameplay_Blur.__super__ = spritesheet_AnimatedSprite;
gameplay_Blur.prototype = $extend(spritesheet_AnimatedSprite.prototype,{
	__class__: gameplay_Blur
});
var utils_Generable = function() { };
$hxClasses["utils.Generable"] = utils_Generable;
utils_Generable.__name__ = ["utils","Generable"];
utils_Generable.prototype = {
	__class__: utils_Generable
};
var utils_FastRect = function() { };
$hxClasses["utils.FastRect"] = utils_FastRect;
utils_FastRect.__name__ = ["utils","FastRect"];
utils_FastRect.prototype = {
	__class__: utils_FastRect
};
var gameplay_Box = function(myX,myY,myType) {
	this.tint_obj = null;
	this.hit_color = new openfl_geom_ColorTransform();
	this.hit_anim_max = 150;
	this.hit_anim_time = 0;
	this.active = true;
	this.colider = new openfl_display_Sprite();
	this.HP = 10;
	this.type = "a";
	openfl_display_Sprite.call(this);
	this.set_x(myX + 15);
	this.set_y(myY + 45);
	this.type = myType;
	this.setColider(40,40);
	this.setType();
};
$hxClasses["gameplay.Box"] = gameplay_Box;
gameplay_Box.__name__ = ["gameplay","Box"];
gameplay_Box.__interfaces__ = [utils_Generable,utils_FastRect,objects_GameObject];
gameplay_Box.__super__ = openfl_display_Sprite;
gameplay_Box.prototype = $extend(openfl_display_Sprite.prototype,{
	fastRect: function() {
		this._fastRect.x = this.get_x();
		this._fastRect.y = this.get_y();
		return this._fastRect;
	}
	,fastRectParent: function() {
		return this.parent;
	}
	,setColider: function(myWidth,myHeight) {
		if(myHeight == null) myHeight = 20;
		if(myWidth == null) myWidth = 20;
		this.colider.get_graphics().beginFill(16777215);
		this.colider.get_graphics().drawRect(0,0,myWidth,myHeight);
		this.colider.get_graphics().endFill();
		this.colider.set_x(-this.colider.get_width() / 2);
		this.colider.set_y(0);
		this.colider.set_alpha(utils_Utils.DEBUG_COLLIDERS?0.75:.0);
		this.addChild(this.colider);
		this._fastRect = new openfl_geom_Rectangle();
		this._fastRect.x = this.get_x();
		this._fastRect.y = this.get_y();
		this._fastRect.width = this.colider.get_width();
		this._fastRect.height = this.colider.get_height();
	}
	,setType: function() {
		if(this.type == "random") {
			var rand1 = Math.floor(Math.random() * 3) + 1;
			switch(rand1) {
			case 1:
				this.type = "coin a";
				break;
			case 2:
				this.type = "coin b";
				break;
			case 3:
				this.type = "orbe";
				break;
			}
		}
		var _g = scenes_Gameplay.assetSet;
		switch(_g) {
		case 1:
			this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/boxes/caja1.png"),2,1,60,90);
			break;
		case 2:
			this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/boxes/caja2.png"),2,1,60,90);
			break;
		case 3:
			this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/boxes/caja3.png"),2,1,60,90);
			break;
		}
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("stand",[0],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle",[0,1],true,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("explode",[1],false,30,0,0));
		this.spritesheet = new spritesheet_AnimatedSprite(this.mySpritesheet,true);
		this.spritesheet.showBehavior("stand");
		this.spritesheet.set_x(-30);
		this.spritesheet.set_y(-60);
		this.addChild(this.spritesheet);
		var rand = Math.floor(Math.random() * 100) + 1;
		if(rand < 50) {
			var _g1 = this;
			_g1.set_scaleX(_g1.get_scaleX() * -1);
		}
	}
	,move: function(dt) {
		var _g = this;
		_g.set_y(_g.get_y() + scenes_Gameplay.scrollingSpeed * dt);
	}
	,OSUpdate: function(dt) {
		this.move(dt);
		return false;
	}
	,update: function(dt) {
		this.move(dt);
		this.checkOut();
		this.set_visible(!utils_Utils.amIOffScreen(this));
		if(!(this.get_visible() && this.active)) return;
		if(this.spritesheet != null) this.spritesheet.update(dt);
		this.hittedByBullet();
		this.animateHit(dt);
		if(this.HP <= 0) this.explode(); else this.hitPlayer();
	}
	,hitPlayer: function() {
		var d = utils_Utils.circHitTest(scenes_Gameplay.player.foot_colider,this.colider);
		if(d == null) return;
		d.normalize((scenes_Gameplay.player.foot_colider.get_width() + this.colider.get_width()) / 40);
		var _g = scenes_Gameplay.player;
		_g.set_x(_g.get_x() + d.x);
		var _g1 = scenes_Gameplay.player;
		_g1.set_y(_g1.get_y() + d.y);
		return;
	}
	,hittedByBullet: function() {
		if(!this.active) return;
		var _g = 0;
		var _g1 = scenes_Gameplay.player.bpool._pool;
		while(_g < _g1.length) {
			var bullet = _g1[_g];
			++_g;
			if(bullet.active && this.HP > 0 && utils_Utils.fastCircTest(this,bullet)) {
				if(!bullet.special) bullet.kill();
				this.hit_anim_time = 0;
				this.HP -= bullet.damage;
			}
		}
	}
	,explode: function() {
		if(!this.active) return;
		this.active = false;
		this.spritesheet.showBehavior("explode");
		this.spritesheet.update(0);
		this.untint();
		this.parent.removeChild(this);
		scenes_Gameplay.current.particlesLayerDown.addChild(this);
		var explotion = new gameplay_Explotion();
		explotion.spawn(this.get_x(),this.get_y() + 20);
		this.generateCollectable();
	}
	,generateCollectable: function() {
		var item;
		var dirx = 0;
		var diry = 0;
		var _g = this.type;
		switch(_g) {
		case "coin a":
			var _g1 = 0;
			while(_g1 < 5) {
				var i = _g1++;
				item = new gameplay_Collectable(Math.round(this.get_x()),Math.round(this.get_y()),this.type);
				dirx = 1 - (Math.floor(Math.random() * 200) + 1) / 100;
				diry = 1 - (Math.floor(Math.random() * 200) + 1) / 100;
				item.setSpeed(dirx,diry,0.6);
				scenes_Gameplay.current.addObject(item);
			}
			break;
		case "coin b":
			var _g11 = 0;
			while(_g11 < 3) {
				var i1 = _g11++;
				item = new gameplay_Collectable(Math.round(this.get_x()),Math.round(this.get_y()),this.type);
				dirx = 1 - (Math.floor(Math.random() * 200) + 1) / 100;
				diry = 1 - (Math.floor(Math.random() * 200) + 1) / 100;
				item.setSpeed(dirx,diry,0.6);
				scenes_Gameplay.current.addObject(item);
			}
			break;
		case "orbe":
			var _g12 = 0;
			while(_g12 < 5) {
				var i2 = _g12++;
				item = new gameplay_Collectable(Math.round(this.get_x()),Math.round(this.get_y()),"orbe");
				dirx = 1 - (Math.floor(Math.random() * 200) + 1) / 100;
				diry = 1 - (Math.floor(Math.random() * 200) + 1) / 100;
				item.setSpeed(dirx,diry,0.6);
				scenes_Gameplay.current.addObject(item);
			}
			break;
		}
	}
	,checkOut: function() {
		if(this.get_y() - this.colider.get_width() * 0.5 > Main.screenHeight + 200) this.removed();
	}
	,removed: function() {
		scenes_Gameplay.current.removeObject(this);
	}
	,animateHit: function(d) {
		if(this.hit_anim_time >= this.hit_anim_max) return;
		this.hit_anim_time += d;
		var p = this.hit_anim_time / this.hit_anim_max;
		if(this.hit_anim_time >= this.hit_anim_max) {
			this.untint();
			return;
		}
		this.hit_color.redOffset = Math.sin(p * Math.PI) * 150;
		this.hit_color.blueOffset = this.hit_color.greenOffset = this.hit_color.redOffset * 0.15;
		this.tint(this.hit_color);
	}
	,untint: function() {
		if(this.tint_obj != null) {
			if(this.tint_obj.parent != null) this.removeChild(this.tint_obj);
			this.tint_obj = null;
		}
	}
	,tint: function(by) {
		this.untint();
		this.tint_obj = utils_Utils.snapshot(this,by);
		this.addChild(this.tint_obj);
	}
	,__class__: gameplay_Box
});
var gameplay_Collectable = function(myX,myY,myType) {
	this.att_field = 75;
	this.attraction = 7.5;
	this.cumulativeTime = 0;
	this.myRandSeed = 1;
	this.sineHeight = 35;
	this.amplitud = 50;
	this.colider = new openfl_display_Sprite();
	this.friction = 0;
	this.speedY = 0;
	this.speedX = 0;
	this.inmune = false;
	this.awake = false;
	this.type = "coin a";
	this.score = 0;
	openfl_display_Sprite.call(this);
	this.set_x(myX);
	this.set_y(myY + 15);
	this.type = myType;
	this.setColider(30,30);
	this.setType();
	this.wakeup(this.get_x(),this.get_y());
};
$hxClasses["gameplay.Collectable"] = gameplay_Collectable;
gameplay_Collectable.__name__ = ["gameplay","Collectable"];
gameplay_Collectable.__interfaces__ = [utils_Generable,objects_GameObject];
gameplay_Collectable.__super__ = openfl_display_Sprite;
gameplay_Collectable.prototype = $extend(openfl_display_Sprite.prototype,{
	setShadow: function() {
		this.shadow = new openfl_display_Sprite();
		var bitmapData = openfl_Assets.getBitmapData("img/gameplay/collectables/moneda - sombra.png");
		var bitmap = new openfl_display_Bitmap(bitmapData);
		this.shadow.addChild(bitmap);
		this.addChild(this.shadow);
		bitmap.set_x(-this.colider.get_width() / 2);
		bitmap.set_y(this.colider.get_height() / 2);
	}
	,setColider: function(myWidth,myHeight) {
		if(myHeight == null) myHeight = 20;
		if(myWidth == null) myWidth = 20;
		this.colider.get_graphics().beginFill(16777215);
		this.colider.get_graphics().drawRect(0,0,myWidth,myHeight);
		this.colider.get_graphics().endFill();
		this.colider.set_x(-this.colider.get_width() / 2);
		this.colider.set_y(-this.colider.get_height() / 2);
		this.colider.set_alpha(utils_Utils.DEBUG_COLLIDERS?0.8:0);
		this.addChild(this.colider);
	}
	,setType: function() {
		if(this.type == "random") {
			var rand1 = Math.floor(Math.random() * 3) + 1;
			switch(rand1) {
			case 1:
				this.type = "coin a";
				break;
			case 2:
				this.type = "coin b";
				break;
			case 3:
				this.type = "orbe";
				break;
			}
		}
		var _g = this.type;
		switch(_g) {
		case "coin a":
			this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/collectables/moneda - plata.png"),4,3,30,30);
			this.score = 1;
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("stand",[0],false,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle",[0,1,2,3,4,5,6,7,8,9,10,11],true,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle1",[0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11],true,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle2",[0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,0,0,0,0,0],true,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle3",[1,2,3,4,5,6,7,8,9,10,11,0,0,0,0,0,0,0,0,0,0],true,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("hit",[0],false,30,0,0));
			this.setShadow();
			break;
		case "coin b":
			this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/collectables/moneda - oro.png"),4,3,30,30);
			this.score = 5;
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("stand",[0],false,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle",[0,1,2,3,4,5,6,7,8,9,10,11],true,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle1",[0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11],true,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle2",[0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,0,0,0,0,0],true,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle3",[1,2,3,4,5,6,7,8,9,10,11,0,0,0,0,0,0,0,0,0,0],true,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("hit",[0],false,30,0,0));
			this.setShadow();
			break;
		case "orbe":
			this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/collectables/energia.png"),5,5,30,30);
			this.score = 2;
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("stand",[0],false,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle",[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],true,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle1",[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],true,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle2",[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,0,1,2,3,4,5,6,7,8],true,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle3",[17,18,19,20,21,22,23,24,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],true,30,0,0));
			this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("hit",[0],false,30,0,0));
			this.setShadow();
			var randFloating = Math.round(Math.random() * 321654 % 2);
			if(randFloating == 1) this.myRandSeed *= -1;
			break;
		}
		this.spritesheet = new spritesheet_AnimatedSprite(this.mySpritesheet,true);
		this.spritesheet.showBehavior("stand");
		var rand = Math.round(Math.random() * 321654 % 3);
		switch(rand) {
		case 0:
			this.spritesheet.showBehavior("iddle1");
			break;
		case 1:
			this.spritesheet.showBehavior("iddle1");
			break;
		case 2:
			this.spritesheet.showBehavior("iddle2");
			break;
		case 3:
			this.spritesheet.showBehavior("iddle3");
			break;
		}
		this.spritesheet.set_x(this.colider.get_x());
		this.spritesheet.set_y(this.colider.get_y());
		this.addChild(this.spritesheet);
	}
	,wakeup: function(initX,initY) {
		this.set_x(initX);
		this.set_y(initY);
		this.awake = true;
	}
	,sleep: function() {
		this.awake = false;
		this.set_visible(false);
		this.set_x(0);
		this.set_y(0);
		this.speedY = 0;
	}
	,setSpeed: function(spdX,spdY,fCoef) {
		if(fCoef == null) fCoef = 0;
		this.speedX = spdX;
		this.speedY = spdY;
		this.friction = fCoef;
		this.inmune = true;
		motion_Actuate.timer(0.25).onComplete($bind(this,this.inmuneEnd));
	}
	,inmuneEnd: function() {
		this.inmune = false;
	}
	,OSUpdate: function(dt) {
		var _g = this;
		_g.set_y(_g.get_y() + scenes_Gameplay.scrollingSpeed * dt);
		return false;
	}
	,move: function(dt) {
		var _g = this;
		_g.set_y(_g.get_y() + scenes_Gameplay.scrollingSpeed * dt);
		if(this.speedX != 0) {
			var _g1 = this;
			_g1.set_x(_g1.get_x() + this.speedX * dt);
		}
		if(this.speedY != 0) {
			var _g2 = this;
			_g2.set_y(_g2.get_y() + this.speedY * dt);
		}
		this.applyFriction();
		if(this.type == "orbe") this.floating(dt);
		this.checkOut();
	}
	,floating: function(dt) {
		this.cumulativeTime += dt;
		var _g = this.spritesheet;
		_g.set_y(_g.get_y() + Math.sin(this.cumulativeTime / this.amplitud) * this.sineHeight / 50 * this.myRandSeed);
	}
	,applyFriction: function() {
		if(this.speedX != 0) {
			this.speedX *= this.friction;
			if(this.speedX < 0.01 && this.speedX > -0.01) this.speedX = 0;
		}
		if(this.speedY != 0) {
			this.speedY *= this.friction;
			if(this.speedY < 0.01 && this.speedY > -0.01) this.speedY = 0;
		}
	}
	,checkOut: function() {
		if(this.get_y() - this.colider.get_width() * 0.5 > Main.screenHeight) this.removed();
	}
	,update: function(dt) {
		if(this.spritesheet != null) this.spritesheet.update(dt);
		if(!this.awake) return;
		this.move(dt);
		this.set_visible(!utils_Utils.amIOffScreen(this));
		if(!this.get_visible()) return;
		if(!this.inmune) {
			this.doAttraction();
			this.hitPlayer();
		}
	}
	,doAttraction: function() {
		var att_pointX = scenes_Gameplay.player.get_x();
		var att_pointY = scenes_Gameplay.player.get_y() + scenes_Gameplay.player.colider.get_y() + scenes_Gameplay.player.colider.get_height() / 2;
		var dx = Math.abs(att_pointX - this.get_x());
		var dy = Math.abs(att_pointY - this.get_y());
		var h = Math.sqrt(dx * dx + dy * dy);
		if(h < this.att_field) {
			var total = dx + dy;
			var perc_x = dx / total;
			var perc_y = dy / total;
			if(this.get_x() < att_pointX) {
				var _g = this;
				_g.set_x(_g.get_x() + this.attraction * perc_x);
			} else if(this.get_x() > att_pointX) {
				var _g1 = this;
				_g1.set_x(_g1.get_x() - this.attraction * perc_x);
			}
			if(this.get_y() < att_pointY) {
				var _g2 = this;
				_g2.set_y(_g2.get_y() + this.attraction * perc_y);
			} else if(this.get_y() > att_pointY) {
				var _g3 = this;
				_g3.set_y(_g3.get_y() - this.attraction * perc_y);
			}
			this.attraction += 0.1;
		}
	}
	,hitPlayer: function() {
		if(this.colider.hitTestObject(scenes_Gameplay.player.colider)) {
			this.spritesheet.showBehavior("hit");
			motion_Actuate.tween(this,0.5,{ alpha : 0}).onComplete($bind(this,this.removed));
			this.awake = false;
			var _g = this.type;
			switch(_g) {
			case "coin a":
				hud_GUI.changeScore(this.score);
				scenes_Gameplay.current.particlesUp.shoot(this.get_x(),this.get_y(),10,13421568);
				utils_SoundLib.playFX("coinA");
				break;
			case "coin b":
				hud_GUI.changeScore(this.score);
				scenes_Gameplay.current.particlesUp.shoot(this.get_x(),this.get_y(),10,10066176);
				utils_SoundLib.playFX("coinB");
				break;
			case "orbe":
				scenes_Gameplay.player.changeEnergy(this.score);
				scenes_Gameplay.current.particlesUp.shoot(this.get_x(),this.get_y(),10,6684876);
				utils_SoundLib.playFX("orbe");
				break;
			}
		}
	}
	,removed: function() {
		scenes_Gameplay.current.removeObject(this);
	}
	,__class__: gameplay_Collectable
});
var gameplay_Decoration = function(myX,myY,myType) {
	this.type = "a";
	this.image = new openfl_display_Sprite();
	openfl_display_Sprite.call(this);
	this.set_x(myX + 15);
	this.set_y(myY + 30);
	this.type = myType;
	this.setGraph();
};
$hxClasses["gameplay.Decoration"] = gameplay_Decoration;
gameplay_Decoration.__name__ = ["gameplay","Decoration"];
gameplay_Decoration.__interfaces__ = [objects_GameObject];
gameplay_Decoration.__super__ = openfl_display_Sprite;
gameplay_Decoration.prototype = $extend(openfl_display_Sprite.prototype,{
	setGraph: function() {
		var myGraph = this.findGraph();
		this.image = new openfl_display_Sprite();
		var bitmapData = openfl_Assets.getBitmapData("img/gameplay/decorations/" + myGraph + ".png");
		var bitmap = new openfl_display_Bitmap(bitmapData);
		this.image.addChild(bitmap);
		this.addChild(this.image);
		bitmap.set_x(-bitmap.get_width() / 2);
		bitmap.set_y(0);
		if(this.type == "lateral a") {
			var _g = bitmap;
			_g.set_x(_g.get_x() - 30);
			var _g1 = bitmap;
			_g1.set_y(_g1.get_y() - 30);
		}
		if(this.type == "lateral b") {
			var _g2 = bitmap;
			_g2.set_x(_g2.get_x() + 30);
			var _g3 = bitmap;
			_g3.set_y(_g3.get_y() - 30);
		}
	}
	,findGraph: function() {
		var rand = Math.floor(Math.random() * 3) + 1;
		var mySet = "adornos " + (scenes_Gameplay.assetSet + "");
		var myImg = " - ";
		var _g = this.type;
		switch(_g) {
		case "a":
			var _g1 = scenes_Gameplay.assetSet;
			switch(_g1) {
			case 1:
				myImg += "piedras chicas";
				break;
			case 2:
				myImg += "piedras chicas";
				break;
			case 3:
				myImg += "papeles";
				break;
			}
			break;
		case "b":
			var _g11 = scenes_Gameplay.assetSet;
			switch(_g11) {
			case 1:
				myImg += "oro";
				break;
			case 2:
				myImg += "camalote";
				break;
			case 3:
				myImg += "mancha";
				break;
			}
			break;
		case "c":
			var _g12 = scenes_Gameplay.assetSet;
			switch(_g12) {
			case 1:
				myImg += "planta";
				break;
			case 2:
				myImg += "planta";
				break;
			case 3:
				myImg += "mano";
				break;
			}
			break;
		}
		if(this.type == "lateral a") myImg += "oro grande 1";
		if(this.type == "lateral b") myImg += "oro grande 2";
		var myString;
		if(this.type == "a" || this.type == "b" || this.type == "c") {
			var myRand = rand + "";
			myString = mySet + myImg + " " + rand;
		} else myString = mySet + myImg;
		return myString;
	}
	,move: function(dt) {
		var _g = this;
		_g.set_y(_g.get_y() + scenes_Gameplay.scrollingSpeed * dt);
	}
	,checkOut: function() {
		if(this.get_y() - this.get_width() * 0.5 > Main.screenHeight) this.removed();
	}
	,update: function(dt) {
		this.move(dt);
		this.checkOut();
	}
	,removed: function() {
		scenes_Gameplay.current.removeObject(this);
	}
	,__class__: gameplay_Decoration
});
var gameplay_ExitDoor = function(myX,myY,myType) {
	openfl_display_Sprite.call(this);
	this.set_x(0);
	this.set_y(myY);
	this.img = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/gameplay/watermarks/fin de pantalla.png"));
	this.addChild(this.img);
	this.img.set_x(0);
	var _g = this.img;
	_g.set_y(_g.get_y() - this.img.get_height() / 2);
};
$hxClasses["gameplay.ExitDoor"] = gameplay_ExitDoor;
gameplay_ExitDoor.__name__ = ["gameplay","ExitDoor"];
gameplay_ExitDoor.__interfaces__ = [objects_GameObject];
gameplay_ExitDoor.__super__ = openfl_display_Sprite;
gameplay_ExitDoor.prototype = $extend(openfl_display_Sprite.prototype,{
	update: function(dt) {
		var _g = this;
		_g.set_y(_g.get_y() + scenes_Gameplay.scrollingSpeed * dt);
		this.checkOut();
	}
	,checkOut: function() {
		if(scenes_Gameplay.current.game_phase != scenes_Gameplay.GP_PLAYING) return;
		if(this.get_y() > Main.screenHeight / 2) {
			scenes_Gameplay.scrollingSpeed = 0;
			scenes_Gameplay.current.endGame();
		}
	}
	,__class__: gameplay_ExitDoor
});
var gameplay_Explotion = function() {
	this.colider = new openfl_display_Sprite();
	openfl_display_Sprite.call(this);
	this.setGraph();
};
$hxClasses["gameplay.Explotion"] = gameplay_Explotion;
gameplay_Explotion.__name__ = ["gameplay","Explotion"];
gameplay_Explotion.__interfaces__ = [objects_GameObject];
gameplay_Explotion.__super__ = openfl_display_Sprite;
gameplay_Explotion.prototype = $extend(openfl_display_Sprite.prototype,{
	setGraph: function() {
		this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/traps/explosion.png"),2,2,135,135);
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("stand",[0],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle",[0,1,2,3],true,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("hit",[0,0,1,1,2,2,3,3],false,30,0,0));
		this.spritesheet = new spritesheet_AnimatedSprite(this.mySpritesheet,true);
		this.spritesheet.showBehavior("stand");
		this.spritesheet.set_x(-67.5);
		this.spritesheet.set_y(-67.5);
		this.set_visible(false);
		this.addChild(this.spritesheet);
	}
	,spawn: function(myX,myY) {
		this.set_x(myX);
		this.set_y(myY);
		var rand = Math.random() * 321654 % 360;
		this.set_rotation(rand);
		scenes_Gameplay.current.addObject(this,false);
		scenes_Gameplay.current.particlesLayerUp.addChild(this);
		this.play();
	}
	,play: function() {
		this.set_visible(true);
		this.spritesheet.showBehavior("hit");
		motion_Actuate.tween(this,0.1,{ alpha : 0.75}).onComplete($bind(this,this.removed));
	}
	,update: function(dt) {
		this.spritesheet.update(dt);
	}
	,removed: function() {
		scenes_Gameplay.current.removeObject(this);
	}
	,__class__: gameplay_Explotion
});
var gameplay_Mine = function(myX,myY,myType,zombozoMine) {
	if(zombozoMine == null) zombozoMine = false;
	this.bitEnabled = true;
	this.colider = new openfl_display_Sprite();
	this.dead = false;
	this.active = false;
	this.bipTimeMax = 333;
	this.bipTime = 0;
	this.timerMax = 1000;
	this.timer = 0;
	this.type = "a";
	openfl_display_Sprite.call(this);
	this.set_x(myX);
	this.set_y(myY);
	this.type = myType;
	this.setType();
	this.setRoundColider(40);
	gameplay_Mine.arrayMines.push(this);
	if(zombozoMine) this.spritesheet.showBehavior("hit");
};
$hxClasses["gameplay.Mine"] = gameplay_Mine;
gameplay_Mine.__name__ = ["gameplay","Mine"];
gameplay_Mine.__interfaces__ = [utils_Generable,objects_GameObject];
gameplay_Mine.arrayMines = null;
gameplay_Mine.__super__ = openfl_display_Sprite;
gameplay_Mine.prototype = $extend(openfl_display_Sprite.prototype,{
	setRoundColider: function(myR) {
		if(myR == null) myR = 20;
		this.colider.get_graphics().beginFill(16777215);
		this.colider.get_graphics().drawCircle(0,0,myR);
		this.colider.get_graphics().endFill();
		this.colider.set_alpha(.0);
		this.addChild(this.colider);
	}
	,setType: function() {
		this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/traps/mina1.png"),2,2,30,30);
		var _g = scenes_Gameplay.assetSet;
		switch(_g) {
		case 1:
			this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/traps/mina1.png"),2,2,30,30);
			break;
		case 2:
			this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/traps/mina2.png"),2,2,30,30);
			break;
		case 3:
			this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/traps/mina3.png"),2,2,30,30);
			break;
		}
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("stand",[0],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle",[0,0,0,1,1,1,0,0,0,1,1,1],true,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("hit",[0,1,0,1],true,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("explode",[2],false,30,0,0));
		this.spritesheet = new spritesheet_AnimatedSprite(this.mySpritesheet,true);
		this.spritesheet.showBehavior("stand");
		this.spritesheet.set_x(-15);
		this.spritesheet.set_y(0);
		this.addChild(this.spritesheet);
		var rand = Math.floor(Math.random() * 100) + 1;
		if(rand < 50) {
			var _g1 = this;
			_g1.set_scaleX(_g1.get_scaleX() * -1);
		}
	}
	,checkOut: function() {
		if(this.get_y() > Main.screenHeight + 300) this.removed();
	}
	,move: function(dt) {
		var _g = this;
		_g.set_y(_g.get_y() + scenes_Gameplay.scrollingSpeed * dt);
	}
	,OSUpdate: function(dt) {
		this.move(dt);
		return false;
	}
	,update: function(dt) {
		if(this.spritesheet == null) return;
		this.move(dt);
		this.checkOut();
		this.set_visible(!utils_Utils.amIOffScreen(this));
		if(!this.get_visible()) return;
		if(!this.dead) {
			this.hitPlayer();
			if(this.active) this.activeTimer(dt);
		}
		this.spritesheet.update(dt);
	}
	,hitPlayer: function() {
		if(this.colider.hitTestObject(scenes_Gameplay.player.foot_colider)) {
			if(!this.active) {
				this.active = true;
				this.spritesheet.showBehavior("hit");
			}
			if(this.spritesheet.currentBehavior.name == "explode") scenes_Gameplay.player.getDamage(objects_Ben.DMG_MINE,"explotion");
		}
	}
	,setDead: function() {
		this.dead = true;
	}
	,explode: function() {
		this.spritesheet.showBehavior("explode");
		var explotion = new gameplay_Explotion();
		explotion.spawn(this.get_x(),this.get_y() + 15);
		motion_Actuate.timer(0.5).onComplete($bind(this,this.setDead));
		var rand = Math.round(Math.random() * 3);
		switch(rand) {
		case 0:
			utils_SoundLib.playFX("boomA");
			break;
		case 1:
			utils_SoundLib.playFX("boomB");
			break;
		case 2:
			utils_SoundLib.playFX("boomC");
			break;
		default:
			utils_SoundLib.playFX("boomA");
		}
		var _g1 = 0;
		var _g = gameplay_Mine.arrayMines.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(gameplay_Mine.arrayMines[i] != this) {
				if(this.colider.hitTestObject(gameplay_Mine.arrayMines[i].colider)) {
					var dx = this.get_x() - gameplay_Mine.arrayMines[i].get_x();
					var dy = this.get_y() - gameplay_Mine.arrayMines[i].get_y();
					var h = Math.sqrt(dx * dx + dy * dy);
					if(h < this.colider.get_width()) {
						if(gameplay_Mine.arrayMines[i].spritesheet.currentBehavior.name != "explode") {
							if(scenes_Gameplay.scrollingSpeed == scenes_Gameplay.SCROLLING_SPRINT) {
								if(gameplay_Mine.arrayMines[i].timer < this.timerMax * 0.85) {
									gameplay_Mine.arrayMines[i].active = true;
									gameplay_Mine.arrayMines[i].bitEnabled = false;
									gameplay_Mine.arrayMines[i].spritesheet.showBehavior("hit");
									gameplay_Mine.arrayMines[i].timer = this.timerMax * 0.85;
								}
							} else if(gameplay_Mine.arrayMines[i].timer < this.timerMax * 0.8) {
								gameplay_Mine.arrayMines[i].active = true;
								gameplay_Mine.arrayMines[i].bitEnabled = false;
								gameplay_Mine.arrayMines[i].spritesheet.showBehavior("hit");
								gameplay_Mine.arrayMines[i].timer = this.timerMax * 0.8;
							}
						}
					}
				}
			}
		}
	}
	,setTimer: function(percent) {
		if(percent == null) percent = 0.1;
		this.timer = this.timerMax * percent;
	}
	,activeTimer: function(dt) {
		this.timer += dt;
		if(this.timer >= this.timerMax) {
			this.timer = 0;
			this.explode();
		}
		if(this.bitEnabled) {
			this.bipTime += dt;
			if(this.bipTime >= this.bipTimeMax) {
				this.bipTime = 0;
				utils_SoundLib.playFX("bip");
			}
		}
	}
	,removed: function() {
		HxOverrides.remove(gameplay_Mine.arrayMines,this);
		scenes_Gameplay.current.removeObject(this);
	}
	,__class__: gameplay_Mine
});
var gameplay_Omnitrix = function(myX,myY,myType) {
	this.timerMax = 2000;
	this.timer = 0;
	this.colider = new openfl_display_Sprite();
	this.speedY = 0;
	this.active = false;
	this.awake = false;
	this.type = "omnitrix";
	this.score = 15;
	openfl_display_Sprite.call(this);
	this.set_x(myX + 15);
	this.set_y(myY + 15);
	this.type = myType;
	this.setColider(40,40);
	this.setSprite();
	this.setSpritesheet();
	this.wakeup(this.get_x(),this.get_y());
};
$hxClasses["gameplay.Omnitrix"] = gameplay_Omnitrix;
gameplay_Omnitrix.__name__ = ["gameplay","Omnitrix"];
gameplay_Omnitrix.__interfaces__ = [objects_GameObject];
gameplay_Omnitrix.__super__ = openfl_display_Sprite;
gameplay_Omnitrix.prototype = $extend(openfl_display_Sprite.prototype,{
	setColider: function(myWidth,myHeight) {
		if(myHeight == null) myHeight = 20;
		if(myWidth == null) myWidth = 20;
		this.colider.get_graphics().beginFill(16777215);
		this.colider.get_graphics().drawRect(0,0,myWidth,myHeight);
		this.colider.get_graphics().endFill();
		this.colider.set_x(-this.colider.get_width() / 2);
		this.colider.set_y(0);
		this.colider.set_alpha(.0);
		this.addChild(this.colider);
	}
	,setSprite: function() {
		this.sprite = new openfl_display_Sprite();
		var bitmapData = openfl_Assets.getBitmapData("img/gameplay/collectables/omnitrix.png");
		var bitmap = new openfl_display_Bitmap(bitmapData);
		this.sprite.addChild(bitmap);
		this.addChild(this.sprite);
		bitmap.set_x(-30);
		bitmap.set_y(-10);
	}
	,setSpritesheet: function() {
		this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/collectables/omnitrix - holograma.png"),5,4,60,60);
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("stand",[0],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("heatblast",[0],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("heatblast in",[4,3,2,1,0],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("heatblast spin",[0,1,2,3,4,3,2,1],true,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("heatblast out",[0,1,2,3,4],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("insectoide",[5],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("insectoide in",[9,8,7,6,5],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("insectoide out",[5,6,7,8,9],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("overflow",[10],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("overflow in",[14,13,12,11,10],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("overflow out",[10,11,12,13,14],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("fade",[15,16,17,18,19],false,15,0,0));
		this.spritesheet = new spritesheet_AnimatedSprite(this.mySpritesheet,true);
		var _g = scenes_Gameplay.player.actualAlien;
		switch(_g) {
		case 1:
			this.spritesheet.showBehavior("insectoide");
			break;
		case 2:
			this.spritesheet.showBehavior("overflow");
			break;
		case 3:
			this.spritesheet.showBehavior("heatblast");
			break;
		case 4:
			this.spritesheet.showBehavior("stand");
			break;
		}
		this.spritesheet.set_x(-30);
		this.spritesheet.set_y(-50);
		this.addChild(this.spritesheet);
	}
	,wakeup: function(initX,initY) {
		this.set_x(initX);
		this.set_y(initY);
		this.awake = true;
		this.active = true;
	}
	,move: function(dt) {
		var _g = this;
		_g.set_y(_g.get_y() + scenes_Gameplay.scrollingSpeed * dt);
		this.checkOut();
	}
	,checkOut: function() {
		if(this.get_y() - this.colider.get_width() * 0.5 > Main.screenHeight) this.removed();
	}
	,update: function(dt) {
		if(this.spritesheet != null) this.spritesheet.update(dt);
		if(this.awake) {
			this.move(dt);
			this.activeTimer(dt);
			this.hitPlayer();
		}
	}
	,hitPlayer: function() {
		if(!this.active) return;
		if(this.colider.hitTestObject(scenes_Gameplay.player.foot_colider)) {
			utils_SoundLib.playFX("omnitrix");
			var _g = this.spritesheet.currentBehavior.name;
			switch(_g) {
			case "heatblast":case "heatblast in":
				this.spritesheet.showBehaviors(["heatblast out","fade"]);
				scenes_Gameplay.player.changeAlien(objects_Ben.A_HEAT);
				scenes_Gameplay.player.changeEnergy(this.score);
				this.active = false;
				break;
			case "heatblast out":
				this.spritesheet.showBehaviors(["fade"]);
				scenes_Gameplay.player.changeAlien(objects_Ben.A_HEAT);
				scenes_Gameplay.player.changeEnergy(this.score);
				this.active = false;
				break;
			case "insectoide":case "insectoide in":
				this.spritesheet.showBehaviors(["insectoide out","fade"]);
				scenes_Gameplay.player.changeAlien(objects_Ben.A_INSECT);
				scenes_Gameplay.player.changeEnergy(this.score);
				this.active = false;
				break;
			case "insectoide out":
				this.spritesheet.showBehaviors(["fade"]);
				scenes_Gameplay.player.changeAlien(objects_Ben.A_INSECT);
				scenes_Gameplay.player.changeEnergy(this.score);
				this.active = false;
				break;
			case "overflow":case "overflow in":
				this.spritesheet.showBehaviors(["overflow out","fade"]);
				scenes_Gameplay.player.changeAlien(objects_Ben.A_OVER);
				scenes_Gameplay.player.changeEnergy(this.score);
				this.active = false;
				break;
			case "overflow out":
				this.spritesheet.showBehaviors(["fade"]);
				scenes_Gameplay.player.changeAlien(objects_Ben.A_OVER);
				scenes_Gameplay.player.changeEnergy(this.score);
				this.active = false;
				break;
			}
		}
		if(!this.active) {
			this.parent.removeChild(this);
			scenes_Gameplay.current.particlesLayerDown.addChild(this);
		}
	}
	,activeTimer: function(dt) {
		this.timer += dt;
		if(this.timer >= this.timerMax) {
			this.timer -= this.timerMax;
			var _g = this.spritesheet.currentBehavior.name;
			switch(_g) {
			case "insectoide":
				var _g1 = scenes_Gameplay.player.actualAlien;
				switch(_g1) {
				case 1:
					this.spritesheet.showBehaviors(["insectoide out","overflow in","overflow"]);
					break;
				case 2:
					this.spritesheet.showBehaviors(["insectoide out","heatblast in","heatblast"]);
					break;
				case 3:
					this.spritesheet.showBehaviors(["insectoide out","overflow in","overflow"]);
					break;
				}
				break;
			case "overflow":
				var _g11 = scenes_Gameplay.player.actualAlien;
				switch(_g11) {
				case 1:
					this.spritesheet.showBehaviors(["overflow out","heatblast in","heatblast"]);
					break;
				case 2:
					this.spritesheet.showBehaviors(["overflow out","heatblast in","heatblast"]);
					break;
				case 3:
					this.spritesheet.showBehaviors(["overflow out","insectoide in","insectoide"]);
					break;
				}
				break;
			case "heatblast":
				var _g12 = scenes_Gameplay.player.actualAlien;
				switch(_g12) {
				case 1:
					this.spritesheet.showBehaviors(["heatblast out","overflow in","overflow"]);
					break;
				case 2:
					this.spritesheet.showBehaviors(["heatblast out","insectoide in","insectoide"]);
					break;
				case 3:
					this.spritesheet.showBehaviors(["heatblast out","insectoide in","insectoide"]);
					break;
				}
				break;
			case "stand":
				var _g13 = scenes_Gameplay.player.actualAlien;
				switch(_g13) {
				case 1:
					this.spritesheet.showBehaviors(["insectoide out","overflow in","overflow"]);
					break;
				case 2:
					this.spritesheet.showBehaviors(["insectoide out","heatblast in","heatblast"]);
					break;
				case 3:
					this.spritesheet.showBehaviors(["insectoide out","overflow in","overflow"]);
					break;
				}
				break;
			}
		}
	}
	,removed: function() {
		scenes_Gameplay.current.removeObject(this);
	}
	,__class__: gameplay_Omnitrix
});
var gameplay_SpeedMod = function(myX,myY,myType) {
	this.active = true;
	openfl_display_Sprite.call(this);
	switch(myType) {
	case "speed up":
		this.targetSpeed = scenes_Gameplay.SCROLLING_SPRINT;
		this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/watermarks/carrera (arranque).png"),1,3,640,60);
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("stand",[0],false,30,0,60));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle",[0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,2,2],true,30,0,60));
		this.spritesheet = new spritesheet_AnimatedSprite(this.mySpritesheet,true);
		this.spritesheet.showBehavior("iddle");
		this.addChild(this.spritesheet);
		break;
	case "speed down":
		this.targetSpeed = scenes_Gameplay.SCROLLING;
		this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/watermarks/carrera (llegada).png"),1,3,640,60);
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("stand",[0],false,30,0,60));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("iddle",[0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,2,2],true,30,0,60));
		this.spritesheet = new spritesheet_AnimatedSprite(this.mySpritesheet,true);
		this.spritesheet.showBehavior("iddle");
		this.addChild(this.spritesheet);
		break;
	case "speed stop":
		this.targetSpeed = 0;
		break;
	default:
		this.targetSpeed = scenes_Gameplay.SCROLLING;
	}
	this.set_x(0);
	this.set_y(myY);
};
$hxClasses["gameplay.SpeedMod"] = gameplay_SpeedMod;
gameplay_SpeedMod.__name__ = ["gameplay","SpeedMod"];
gameplay_SpeedMod.__interfaces__ = [objects_GameObject];
gameplay_SpeedMod.__super__ = openfl_display_Sprite;
gameplay_SpeedMod.prototype = $extend(openfl_display_Sprite.prototype,{
	update: function(dt) {
		var _g = this;
		_g.set_y(_g.get_y() + scenes_Gameplay.scrollingSpeed * dt);
		if(this.spritesheet != null) this.spritesheet.update(dt);
		if(this.active) this.checkIn(); else this.checkOut();
	}
	,checkIn: function() {
		if(this.get_y() > 0) {
			if(this.get_y() + this.get_height() > scenes_Gameplay.player.get_y()) {
				this.active = false;
				motion_Actuate.tween(scenes_Gameplay,3.0,{ scrollingSpeed : this.targetSpeed});
			}
		}
	}
	,checkOut: function() {
		if(this.get_y() > Main.screenHeight + 180) scenes_Gameplay.current.removeObject(this);
	}
	,__class__: gameplay_SpeedMod
});
var gameplay_Trap = function(myX,myY,myType) {
	this.colider = new openfl_display_Sprite();
	this.step = 1;
	this.active = false;
	this.timerMax = 1000;
	this.timer = 0;
	this.type = "a";
	openfl_display_Sprite.call(this);
	this.set_x(myX + 15);
	this.set_y(myY - 15);
	this.type = myType;
	this.setColider(60,60);
	this.setType();
};
$hxClasses["gameplay.Trap"] = gameplay_Trap;
gameplay_Trap.__name__ = ["gameplay","Trap"];
gameplay_Trap.__interfaces__ = [objects_GameObject];
gameplay_Trap.__super__ = openfl_display_Sprite;
gameplay_Trap.prototype = $extend(openfl_display_Sprite.prototype,{
	setColider: function(myWidth,myHeight) {
		if(myHeight == null) myHeight = 20;
		if(myWidth == null) myWidth = 20;
		this.colider.get_graphics().beginFill(16777215);
		this.colider.get_graphics().drawRect(0,0,myWidth,myHeight);
		this.colider.get_graphics().endFill();
		this.colider.set_x(-this.colider.get_width() / 2);
		this.colider.set_y(0);
		this.colider.set_alpha(utils_Utils.DEBUG_COLLIDERS?0.8:.0);
		this.addChild(this.colider);
	}
	,setType: function() {
		this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/traps/pinches1.png"),3,2,60,60);
		var _g = scenes_Gameplay.assetSet;
		switch(_g) {
		case 1:
			this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/traps/pinches1.png"),3,2,60,60);
			break;
		case 2:
			this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/traps/pinches2.png"),3,2,60,60);
			break;
		case 3:
			this.mySpritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/gameplay/traps/pinches3.png"),3,2,60,60);
			break;
		}
		var _g1 = this.type;
		switch(_g1) {
		case "spike a":
			this.step = 1;
			break;
		case "spike b":
			this.step = 2;
			break;
		case "spike c":
			this.step = 3;
			break;
		case "spike d":
			this.step = 4;
			break;
		}
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("out",[4],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("go hide",[4,3,2,1,0],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("hide",[0],false,30,0,0));
		this.mySpritesheet.addBehavior(new spritesheet_data_BehaviorData("go out",[0,1,2,3,4],false,30,0,0));
		this.spritesheet = new spritesheet_AnimatedSprite(this.mySpritesheet,true);
		this.spritesheet.showBehavior("out");
		this.spritesheet.set_x(this.colider.get_x());
		this.spritesheet.set_y(this.colider.get_y());
		this.addChild(this.spritesheet);
	}
	,move: function(dt) {
		var _g = this;
		_g.set_y(_g.get_y() + scenes_Gameplay.scrollingSpeed * dt);
	}
	,update: function(dt) {
		if(this.spritesheet == null) return; else {
			this.move(dt);
			this.activeTimer(dt);
			this.checkOut();
			this.spritesheet.update(dt);
			if(this.active) this.hitPlayer();
		}
	}
	,hitPlayer: function() {
		if(this.colider.hitTestObject(scenes_Gameplay.player.foot_colider)) scenes_Gameplay.player.getDamage(objects_Ben.DMG_SPIKE,"spike");
	}
	,activeTimer: function(dt) {
		this.timer += dt;
		if(this.timer >= this.timerMax) {
			this.timer -= this.timerMax;
			this.step++;
			if(this.step > 4) this.step = 1;
			if(this.step == 1) {
				this.spritesheet.showBehaviors(["go out","out"]);
				this.active = true;
			} else if(this.step == 3) {
				this.spritesheet.showBehaviors(["go hide","hide"]);
				this.active = false;
			}
		}
	}
	,checkOut: function() {
		if(this.get_y() > Main.screenHeight + 300) this.removed();
	}
	,removed: function() {
		scenes_Gameplay.current.removeObject(this);
	}
	,__class__: gameplay_Trap
});
var gameplay_Wall = function(myX,myY,myType) {
	this.sprite = new openfl_display_Sprite();
	openfl_display_Sprite.call(this);
	this.set_x(myX);
	this.set_y(myY + 15);
	this.type = myType;
	this.setSprite();
	this.setRoundColider(20);
};
$hxClasses["gameplay.Wall"] = gameplay_Wall;
gameplay_Wall.__name__ = ["gameplay","Wall"];
gameplay_Wall.__interfaces__ = [utils_FastRect,objects_GameObject];
gameplay_Wall.__super__ = openfl_display_Sprite;
gameplay_Wall.prototype = $extend(openfl_display_Sprite.prototype,{
	fastRect: function() {
		return this._fastRect;
	}
	,fastRectParent: function() {
		return this.parent;
	}
	,setRoundColider: function(myR) {
		if(myR == null) myR = 20;
		this.colider = utils_Utils.newCollider(myR,myR,0,20,true);
		this.addChild(this.colider);
		this.colider.set_x(5);
		this.colider.set_y(-10);
		var hw = myR / 2.0;
		this._fastRect = new openfl_geom_Rectangle();
		this._fastRect.x = this.get_x() + hw + 5;
		this._fastRect.y = this.get_y() + hw - 10;
		this._fastRect.width = hw;
		this._fastRect.height = hw;
	}
	,setSprite: function() {
		this.sprite = new openfl_display_Sprite();
		var rand = Math.floor(Math.random() * 3) + 1;
		var myImg = "img/gameplay/decorations/adornos 1 - piedras grandes 1.png";
		myImg = "img/gameplay/decorations/adornos " + scenes_Gameplay.assetSet + " - piedras grandes " + rand + ".png";
		var bitmapData = openfl_Assets.getBitmapData(myImg);
		var bitmap = new openfl_display_Bitmap(bitmapData);
		this.sprite.addChild(bitmap);
		this.addChild(this.sprite);
		bitmap.set_x(-15);
		bitmap.set_y(-40);
		this.set_y(this.get_y() + 40);
	}
	,update: function(dt) {
		this.move(dt);
		this.checkOut();
		this.set_visible(!utils_Utils.amIOffScreen(this));
		if(!this.get_visible()) return;
		this.hitPlayer();
		this.hittedByBullet();
	}
	,move: function(dt) {
		var dy = scenes_Gameplay.scrollingSpeed * dt;
		var _g = this;
		_g.set_y(_g.get_y() + dy);
		this._fastRect.y += dy;
	}
	,OSUpdate: function(dt) {
		this.move(dt);
		return false;
	}
	,hitPlayer: function() {
		var d = utils_Utils.circHitTest(scenes_Gameplay.player.foot_colider,this.colider);
		if(d == null) return;
		d.normalize((scenes_Gameplay.player.foot_colider.get_width() + this.colider.get_width()) / 40);
		var _g = scenes_Gameplay.player;
		_g.set_x(_g.get_x() + d.x);
		var _g1 = scenes_Gameplay.player;
		_g1.set_y(_g1.get_y() + d.y);
		return;
	}
	,hittedByBullet: function() {
		var _g = 0;
		var _g1 = scenes_Gameplay.player.bpool._pool;
		while(_g < _g1.length) {
			var bullet = _g1[_g];
			++_g;
			if(bullet.active && utils_Utils.fastCircTest(this,bullet)) bullet.kill();
		}
	}
	,checkOut: function() {
		if(this.get_y() > Main.screenHeight + 200) this.removed();
	}
	,removed: function() {
		scenes_Gameplay.current.removeObject(this);
	}
	,__class__: gameplay_Wall
});
var haxe_StackItem = $hxClasses["haxe.StackItem"] = { __ename__ : ["haxe","StackItem"], __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.toString = $estr;
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
var haxe_CallStack = function() { };
$hxClasses["haxe.CallStack"] = haxe_CallStack;
haxe_CallStack.__name__ = ["haxe","CallStack"];
haxe_CallStack.lastException = null;
haxe_CallStack.getStack = function(e) {
	if(e == null) return [];
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) site = haxe_CallStack.wrapCallSite(site);
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.wrapCallSite = null;
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s[1]) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s[2];
		b.b += "module ";
		if(m == null) b.b += "null"; else b.b += "" + m;
		break;
	case 2:
		var line = s[4];
		var file = s[3];
		var s1 = s[2];
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		if(file == null) b.b += "null"; else b.b += "" + file;
		b.b += " line ";
		if(line == null) b.b += "null"; else b.b += "" + line;
		if(s1 != null) b.b += ")";
		break;
	case 3:
		var meth = s[3];
		var cname = s[2];
		if(cname == null) b.b += "null"; else b.b += "" + cname;
		b.b += ".";
		if(meth == null) b.b += "null"; else b.b += "" + meth;
		break;
	case 4:
		var n = s[2];
		b.b += "local function #";
		if(n == null) b.b += "null"; else b.b += "" + n;
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) return []; else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") stack.shift();
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function"?haxe_StackItem.LocalFunction():meth == "Global code"?null:haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else m.push(haxe_StackItem.Module(StringTools.trim(line)));
		}
		return m;
	} else return s;
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = ["haxe","Resource"];
haxe_Resource.content = null;
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) return x.str;
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) return haxe_io_Bytes.ofString(x.str);
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var x = this.shash.get(s);
		if(x != null) {
			this.buf.b += "R";
			if(x == null) this.buf.b += "null"; else this.buf.b += "" + x;
			return;
		}
		this.shash.set(s,this.scount++);
		this.buf.b += "y";
		s = encodeURIComponent(s);
		if(s.length == null) this.buf.b += "null"; else this.buf.b += "" + s.length;
		this.buf.b += ":";
		if(s == null) this.buf.b += "null"; else this.buf.b += "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				if(i == null) this.buf.b += "null"; else this.buf.b += "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		{
			var _g = Type["typeof"](v);
			switch(_g[1]) {
			case 0:
				this.buf.b += "n";
				break;
			case 1:
				var v1 = v;
				if(v1 == 0) {
					this.buf.b += "z";
					return;
				}
				this.buf.b += "i";
				if(v1 == null) this.buf.b += "null"; else this.buf.b += "" + v1;
				break;
			case 2:
				var v2 = v;
				if(isNaN(v2)) this.buf.b += "k"; else if(!isFinite(v2)) if(v2 < 0) this.buf.b += "m"; else this.buf.b += "p"; else {
					this.buf.b += "d";
					if(v2 == null) this.buf.b += "null"; else this.buf.b += "" + v2;
				}
				break;
			case 3:
				if(v) this.buf.b += "t"; else this.buf.b += "f";
				break;
			case 6:
				var c = _g[2];
				if(c == String) {
					this.serializeString(v);
					return;
				}
				if(this.useCache && this.serializeRef(v)) return;
				switch(c) {
				case Array:
					var ucount = 0;
					this.buf.b += "a";
					var l = v.length;
					var _g1 = 0;
					while(_g1 < l) {
						var i = _g1++;
						if(v[i] == null) ucount++; else {
							if(ucount > 0) {
								if(ucount == 1) this.buf.b += "n"; else {
									this.buf.b += "u";
									if(ucount == null) this.buf.b += "null"; else this.buf.b += "" + ucount;
								}
								ucount = 0;
							}
							this.serialize(v[i]);
						}
					}
					if(ucount > 0) {
						if(ucount == 1) this.buf.b += "n"; else {
							this.buf.b += "u";
							if(ucount == null) this.buf.b += "null"; else this.buf.b += "" + ucount;
						}
					}
					this.buf.b += "h";
					break;
				case List:
					this.buf.b += "l";
					var v3 = v;
					var _g1_head = v3.h;
					var _g1_val = null;
					while(_g1_head != null) {
						var i1;
						_g1_val = _g1_head[0];
						_g1_head = _g1_head[1];
						i1 = _g1_val;
						this.serialize(i1);
					}
					this.buf.b += "h";
					break;
				case Date:
					var d = v;
					this.buf.b += "v";
					this.buf.add(d.getTime());
					break;
				case haxe_ds_StringMap:
					this.buf.b += "b";
					var v4 = v;
					var $it0 = v4.keys();
					while( $it0.hasNext() ) {
						var k = $it0.next();
						this.serializeString(k);
						this.serialize(__map_reserved[k] != null?v4.getReserved(k):v4.h[k]);
					}
					this.buf.b += "h";
					break;
				case haxe_ds_IntMap:
					this.buf.b += "q";
					var v5 = v;
					var $it1 = v5.keys();
					while( $it1.hasNext() ) {
						var k1 = $it1.next();
						this.buf.b += ":";
						if(k1 == null) this.buf.b += "null"; else this.buf.b += "" + k1;
						this.serialize(v5.h[k1]);
					}
					this.buf.b += "h";
					break;
				case haxe_ds_ObjectMap:
					this.buf.b += "M";
					var v6 = v;
					var $it2 = v6.keys();
					while( $it2.hasNext() ) {
						var k2 = $it2.next();
						var id = Reflect.field(k2,"__id__");
						Reflect.deleteField(k2,"__id__");
						this.serialize(k2);
						k2.__id__ = id;
						this.serialize(v6.h[k2.__id__]);
					}
					this.buf.b += "h";
					break;
				case haxe_io_Bytes:
					var v7 = v;
					var i2 = 0;
					var max = v7.length - 2;
					var charsBuf = new StringBuf();
					var b64 = haxe_Serializer.BASE64;
					while(i2 < max) {
						var b1 = v7.get(i2++);
						var b2 = v7.get(i2++);
						var b3 = v7.get(i2++);
						charsBuf.add(b64.charAt(b1 >> 2));
						charsBuf.add(b64.charAt((b1 << 4 | b2 >> 4) & 63));
						charsBuf.add(b64.charAt((b2 << 2 | b3 >> 6) & 63));
						charsBuf.add(b64.charAt(b3 & 63));
					}
					if(i2 == max) {
						var b11 = v7.get(i2++);
						var b21 = v7.get(i2++);
						charsBuf.add(b64.charAt(b11 >> 2));
						charsBuf.add(b64.charAt((b11 << 4 | b21 >> 4) & 63));
						charsBuf.add(b64.charAt(b21 << 2 & 63));
					} else if(i2 == max + 1) {
						var b12 = v7.get(i2++);
						charsBuf.add(b64.charAt(b12 >> 2));
						charsBuf.add(b64.charAt(b12 << 4 & 63));
					}
					var chars = charsBuf.b;
					this.buf.b += "s";
					if(chars.length == null) this.buf.b += "null"; else this.buf.b += "" + chars.length;
					this.buf.b += ":";
					if(chars == null) this.buf.b += "null"; else this.buf.b += "" + chars;
					break;
				default:
					if(this.useCache) this.cache.pop();
					if(v.hxSerialize != null) {
						this.buf.b += "C";
						this.serializeString(Type.getClassName(c));
						if(this.useCache) this.cache.push(v);
						v.hxSerialize(this);
						this.buf.b += "g";
					} else {
						this.buf.b += "c";
						this.serializeString(Type.getClassName(c));
						if(this.useCache) this.cache.push(v);
						this.serializeFields(v);
					}
				}
				break;
			case 4:
				if(js_Boot.__instanceof(v,Class)) {
					var className = Type.getClassName(v);
					this.buf.b += "A";
					this.serializeString(className);
				} else if(js_Boot.__instanceof(v,Enum)) {
					this.buf.b += "B";
					this.serializeString(Type.getEnumName(v));
				} else {
					if(this.useCache && this.serializeRef(v)) return;
					this.buf.b += "o";
					this.serializeFields(v);
				}
				break;
			case 7:
				var e = _g[2];
				if(this.useCache) {
					if(this.serializeRef(v)) return;
					this.cache.pop();
				}
				if(this.useEnumIndex) this.buf.b += "j"; else this.buf.b += "w";
				this.serializeString(Type.getEnumName(e));
				if(this.useEnumIndex) {
					this.buf.b += ":";
					this.buf.b += Std.string(v[1]);
				} else this.serializeString(v[0]);
				this.buf.b += ":";
				var l1 = v.length;
				this.buf.b += Std.string(l1 - 2);
				var _g11 = 2;
				while(_g11 < l1) {
					var i3 = _g11++;
					this.serialize(v[i3]);
				}
				if(this.useCache) this.cache.push(v);
				break;
			case 5:
				throw new js__$Boot_HaxeError("Cannot serialize function");
				break;
			default:
				throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
			}
		}
	}
	,__class__: haxe_Serializer
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.measure = function(f,pos) {
	var t0 = haxe_Timer.stamp();
	var r = f();
	haxe_Log.trace(haxe_Timer.stamp() - t0 + "s",pos);
	return r;
};
haxe_Timer.stamp = function() {
	return new Date().getTime() / 1000;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) return;
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = Type;
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.setResolver(r);
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.prototype = {
	setResolver: function(r) {
		if(r == null) this.resolver = { resolveClass : function(_) {
			return null;
		}, resolveEnum : function(_1) {
			return null;
		}}; else this.resolver = r;
	}
	,get: function(p) {
		return this.buf.charCodeAt(p);
	}
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) break;
			if(c == 45) {
				if(this.pos != fpos) break;
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) break;
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) k *= -1;
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c >= 43 && c < 58 || c == 101 || c == 69) this.pos++; else break;
		}
		return Std.parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) throw new js__$Boot_HaxeError("Invalid object");
			if(this.buf.charCodeAt(this.pos) == 103) break;
			var k = this.unserialize();
			if(!(typeof(k) == "string")) throw new js__$Boot_HaxeError("Invalid object key");
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.get(this.pos++) != 58) throw new js__$Boot_HaxeError("Invalid enum format");
		var nargs = this.readDigits();
		if(nargs == 0) return Type.createEnum(edecl,tag);
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		var _g = this.get(this.pos++);
		switch(_g) {
		case 110:
			return null;
		case 116:
			return true;
		case 102:
			return false;
		case 122:
			return 0;
		case 105:
			return this.readDigits();
		case 100:
			return this.readFloat();
		case 121:
			var len = this.readDigits();
			if(this.get(this.pos++) != 58 || this.length - this.pos < len) throw new js__$Boot_HaxeError("Invalid string length");
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 107:
			return NaN;
		case 109:
			return -Infinity;
		case 112:
			return Infinity;
		case 97:
			var buf = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else a.push(this.unserialize());
			}
			return a;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 114:
			var n1 = this.readDigits();
			if(n1 < 0 || n1 >= this.cache.length) throw new js__$Boot_HaxeError("Invalid reference");
			return this.cache[n1];
		case 82:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.scache.length) throw new js__$Boot_HaxeError("Invalid string reference");
			return this.scache[n2];
		case 120:
			throw new js__$Boot_HaxeError(this.unserialize());
			break;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) throw new js__$Boot_HaxeError("Class not found " + name);
			var o1 = Type.createEmptyInstance(cl);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 119:
			var name1 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name1);
			if(edecl == null) throw new js__$Boot_HaxeError("Enum not found " + name1);
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 106:
			var name2 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name2);
			if(edecl1 == null) throw new js__$Boot_HaxeError("Enum not found " + name2);
			this.pos++;
			var index = this.readDigits();
			var tag = Type.getEnumConstructs(edecl1)[index];
			if(tag == null) throw new js__$Boot_HaxeError("Unknown enum index " + name2 + "@" + index);
			var e1 = this.unserializeEnum(edecl1,tag);
			this.cache.push(e1);
			return e1;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf1 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				h.set(s1,this.unserialize());
			}
			this.pos++;
			return h;
		case 113:
			var h1 = new haxe_ds_IntMap();
			this.cache.push(h1);
			var buf3 = this.buf;
			var c1 = this.get(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				h1.set(i,this.unserialize());
				c1 = this.get(this.pos++);
			}
			if(c1 != 104) throw new js__$Boot_HaxeError("Invalid IntMap format");
			return h1;
		case 77:
			var h2 = new haxe_ds_ObjectMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s2 = this.unserialize();
				h2.set(s2,this.unserialize());
			}
			this.pos++;
			return h2;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				var s3 = HxOverrides.substr(this.buf,this.pos,19);
				d = HxOverrides.strDate(s3);
				this.pos += 19;
			} else {
				var t = this.readFloat();
				var d1 = new Date();
				d1.setTime(t);
				d = d1;
			}
			this.cache.push(d);
			return d;
		case 115:
			var len1 = this.readDigits();
			var buf5 = this.buf;
			if(this.get(this.pos++) != 58 || this.length - this.pos < len1) throw new js__$Boot_HaxeError("Invalid bytes length");
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len1 & 3;
			var size;
			size = (len1 >> 2) * 3 + (rest >= 2?rest - 1:0);
			var max = i1 + (len1 - rest);
			var bytes = haxe_io_Bytes.alloc(size);
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[StringTools.fastCodeAt(buf5,i1++)];
				var c2 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c11 << 2 | c2 >> 4);
				var c3 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c2 << 4 | c3 >> 2);
				var c4 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c3 << 6 | c4);
			}
			if(rest >= 2) {
				var c12 = codes[StringTools.fastCodeAt(buf5,i1++)];
				var c21 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c12 << 2 | c21 >> 4);
				if(rest == 3) {
					var c31 = codes[StringTools.fastCodeAt(buf5,i1++)];
					bytes.set(bpos++,c21 << 4 | c31 >> 2);
				}
			}
			this.pos += len1;
			this.cache.push(bytes);
			return bytes;
		case 67:
			var name3 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name3);
			if(cl1 == null) throw new js__$Boot_HaxeError("Class not found " + name3);
			var o2 = Type.createEmptyInstance(cl1);
			this.cache.push(o2);
			o2.hxUnserialize(this);
			if(this.get(this.pos++) != 103) throw new js__$Boot_HaxeError("Invalid custom data");
			return o2;
		case 65:
			var name4 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name4);
			if(cl2 == null) throw new js__$Boot_HaxeError("Class not found " + name4);
			return cl2;
		case 66:
			var name5 = this.unserialize();
			var e2 = this.resolver.resolveEnum(name5);
			if(e2 == null) throw new js__$Boot_HaxeError("Enum not found " + name5);
			return e2;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = StringTools.fastCodeAt(s,i++);
		if(55296 <= c && c <= 56319) c = c - 55232 << 10 | StringTools.fastCodeAt(s,i++) & 1023;
		if(c <= 127) a.push(c); else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) return hb;
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	get: function(pos) {
		return this.b[pos];
	}
	,set: function(pos,v) {
		this.b[pos] = v & 255;
	}
	,blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		if(srcpos == 0 && len == src.length) this.b.set(src.b,pos); else this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
	}
	,getDouble: function(pos) {
		if(this.data == null) this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		return this.data.getFloat64(pos,true);
	}
	,getFloat: function(pos) {
		if(this.data == null) this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		return this.data.getFloat32(pos,true);
	}
	,setDouble: function(pos,v) {
		if(this.data == null) this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		this.data.setFloat64(pos,v,true);
	}
	,setFloat: function(pos,v) {
		if(this.data == null) this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		this.data.setFloat32(pos,v,true);
	}
	,setUInt16: function(pos,v) {
		if(this.data == null) this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		this.data.setUint16(pos,v,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) break;
				s += fcc(c);
			} else if(c < 224) s += fcc((c & 63) << 6 | b[i++] & 127); else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) complement = true;
	if(complement) while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) nbits++;
	if(nbits > 8 || len != 1 << nbits) throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = ["haxe","crypto","BaseCode"];
haxe_crypto_BaseCode.prototype = {
	encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = haxe_io_Bytes.alloc(size + (b.length * 8 % nbits == 0?0:1));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.get(pin++);
			}
			curbits -= nbits;
			out.set(pout++,base.b[buf >> curbits & mask]);
		}
		if(curbits > 0) out.set(pout++,base.b[buf << nbits - curbits & mask]);
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			tbl[this.base.b[i1]] = i1;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) this.initTable();
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = haxe_io_Bytes.alloc(size);
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.get(pin++)];
				if(i == -1) throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				buf |= i;
			}
			curbits -= 8;
			out.set(pout++,buf >> curbits & 255);
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Md5 = function() {
};
$hxClasses["haxe.crypto.Md5"] = haxe_crypto_Md5;
haxe_crypto_Md5.__name__ = ["haxe","crypto","Md5"];
haxe_crypto_Md5.encode = function(s) {
	var m = new haxe_crypto_Md5();
	var h = m.doEncode(haxe_crypto_Md5.str2blks(s));
	return m.hex(h);
};
haxe_crypto_Md5.str2blks = function(str) {
	var nblk = (str.length + 8 >> 6) + 1;
	var blks = [];
	var blksSize = nblk * 16;
	var _g = 0;
	while(_g < blksSize) {
		var i1 = _g++;
		blks[i1] = 0;
	}
	var i = 0;
	while(i < str.length) {
		blks[i >> 2] |= HxOverrides.cca(str,i) << (str.length * 8 + i) % 4 * 8;
		i++;
	}
	blks[i >> 2] |= 128 << (str.length * 8 + i) % 4 * 8;
	var l = str.length * 8;
	var k = nblk * 16 - 2;
	blks[k] = l & 255;
	blks[k] |= (l >>> 8 & 255) << 8;
	blks[k] |= (l >>> 16 & 255) << 16;
	blks[k] |= (l >>> 24 & 255) << 24;
	return blks;
};
haxe_crypto_Md5.prototype = {
	bitOR: function(a,b) {
		var lsb = a & 1 | b & 1;
		var msb31 = a >>> 1 | b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitXOR: function(a,b) {
		var lsb = a & 1 ^ b & 1;
		var msb31 = a >>> 1 ^ b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitAND: function(a,b) {
		var lsb = a & 1 & (b & 1);
		var msb31 = a >>> 1 & b >>> 1;
		return msb31 << 1 | lsb;
	}
	,addme: function(x,y) {
		var lsw = (x & 65535) + (y & 65535);
		var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
		return msw << 16 | lsw & 65535;
	}
	,hex: function(a) {
		var str = "";
		var hex_chr = "0123456789abcdef";
		var _g = 0;
		while(_g < a.length) {
			var num = a[_g];
			++_g;
			var _g1 = 0;
			while(_g1 < 4) {
				var j = _g1++;
				str += hex_chr.charAt(num >> j * 8 + 4 & 15) + hex_chr.charAt(num >> j * 8 & 15);
			}
		}
		return str;
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,cmn: function(q,a,b,x,s,t) {
		return this.addme(this.rol(this.addme(this.addme(a,q),this.addme(x,t)),s),b);
	}
	,ff: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,c),this.bitAND(~b,d)),a,b,x,s,t);
	}
	,gg: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,d),this.bitAND(c,~d)),a,b,x,s,t);
	}
	,hh: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(this.bitXOR(b,c),d),a,b,x,s,t);
	}
	,ii: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(c,this.bitOR(b,~d)),a,b,x,s,t);
	}
	,doEncode: function(x) {
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var step;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			step = 0;
			a = this.ff(a,b,c,d,x[i],7,-680876936);
			d = this.ff(d,a,b,c,x[i + 1],12,-389564586);
			c = this.ff(c,d,a,b,x[i + 2],17,606105819);
			b = this.ff(b,c,d,a,x[i + 3],22,-1044525330);
			a = this.ff(a,b,c,d,x[i + 4],7,-176418897);
			d = this.ff(d,a,b,c,x[i + 5],12,1200080426);
			c = this.ff(c,d,a,b,x[i + 6],17,-1473231341);
			b = this.ff(b,c,d,a,x[i + 7],22,-45705983);
			a = this.ff(a,b,c,d,x[i + 8],7,1770035416);
			d = this.ff(d,a,b,c,x[i + 9],12,-1958414417);
			c = this.ff(c,d,a,b,x[i + 10],17,-42063);
			b = this.ff(b,c,d,a,x[i + 11],22,-1990404162);
			a = this.ff(a,b,c,d,x[i + 12],7,1804603682);
			d = this.ff(d,a,b,c,x[i + 13],12,-40341101);
			c = this.ff(c,d,a,b,x[i + 14],17,-1502002290);
			b = this.ff(b,c,d,a,x[i + 15],22,1236535329);
			a = this.gg(a,b,c,d,x[i + 1],5,-165796510);
			d = this.gg(d,a,b,c,x[i + 6],9,-1069501632);
			c = this.gg(c,d,a,b,x[i + 11],14,643717713);
			b = this.gg(b,c,d,a,x[i],20,-373897302);
			a = this.gg(a,b,c,d,x[i + 5],5,-701558691);
			d = this.gg(d,a,b,c,x[i + 10],9,38016083);
			c = this.gg(c,d,a,b,x[i + 15],14,-660478335);
			b = this.gg(b,c,d,a,x[i + 4],20,-405537848);
			a = this.gg(a,b,c,d,x[i + 9],5,568446438);
			d = this.gg(d,a,b,c,x[i + 14],9,-1019803690);
			c = this.gg(c,d,a,b,x[i + 3],14,-187363961);
			b = this.gg(b,c,d,a,x[i + 8],20,1163531501);
			a = this.gg(a,b,c,d,x[i + 13],5,-1444681467);
			d = this.gg(d,a,b,c,x[i + 2],9,-51403784);
			c = this.gg(c,d,a,b,x[i + 7],14,1735328473);
			b = this.gg(b,c,d,a,x[i + 12],20,-1926607734);
			a = this.hh(a,b,c,d,x[i + 5],4,-378558);
			d = this.hh(d,a,b,c,x[i + 8],11,-2022574463);
			c = this.hh(c,d,a,b,x[i + 11],16,1839030562);
			b = this.hh(b,c,d,a,x[i + 14],23,-35309556);
			a = this.hh(a,b,c,d,x[i + 1],4,-1530992060);
			d = this.hh(d,a,b,c,x[i + 4],11,1272893353);
			c = this.hh(c,d,a,b,x[i + 7],16,-155497632);
			b = this.hh(b,c,d,a,x[i + 10],23,-1094730640);
			a = this.hh(a,b,c,d,x[i + 13],4,681279174);
			d = this.hh(d,a,b,c,x[i],11,-358537222);
			c = this.hh(c,d,a,b,x[i + 3],16,-722521979);
			b = this.hh(b,c,d,a,x[i + 6],23,76029189);
			a = this.hh(a,b,c,d,x[i + 9],4,-640364487);
			d = this.hh(d,a,b,c,x[i + 12],11,-421815835);
			c = this.hh(c,d,a,b,x[i + 15],16,530742520);
			b = this.hh(b,c,d,a,x[i + 2],23,-995338651);
			a = this.ii(a,b,c,d,x[i],6,-198630844);
			d = this.ii(d,a,b,c,x[i + 7],10,1126891415);
			c = this.ii(c,d,a,b,x[i + 14],15,-1416354905);
			b = this.ii(b,c,d,a,x[i + 5],21,-57434055);
			a = this.ii(a,b,c,d,x[i + 12],6,1700485571);
			d = this.ii(d,a,b,c,x[i + 3],10,-1894986606);
			c = this.ii(c,d,a,b,x[i + 10],15,-1051523);
			b = this.ii(b,c,d,a,x[i + 1],21,-2054922799);
			a = this.ii(a,b,c,d,x[i + 8],6,1873313359);
			d = this.ii(d,a,b,c,x[i + 15],10,-30611744);
			c = this.ii(c,d,a,b,x[i + 6],15,-1560198380);
			b = this.ii(b,c,d,a,x[i + 13],21,1309151649);
			a = this.ii(a,b,c,d,x[i + 4],6,-145523070);
			d = this.ii(d,a,b,c,x[i + 11],10,-1120210379);
			c = this.ii(c,d,a,b,x[i + 2],15,718787259);
			b = this.ii(b,c,d,a,x[i + 9],21,-343485551);
			a = this.addme(a,olda);
			b = this.addme(b,oldb);
			c = this.addme(c,oldc);
			d = this.addme(d,oldd);
			i += 16;
		}
		return [a,b,c,d];
	}
	,__class__: haxe_crypto_Md5
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) return false;
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { };
	this.h.__keys__ = { };
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) return false;
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) a.push(this.h.__keys__[key]);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		return this.map.get(this.keys[this.index++]);
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) this.setReserved(key,value); else this.h[key] = value;
	}
	,get: function(key) {
		if(__map_reserved[key] != null) return this.getReserved(key);
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) return this.existsReserved(key);
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) this.rh = { };
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) return null; else return this.rh["$" + key];
	}
	,existsReserved: function(key) {
		if(this.rh == null) return false;
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) return false;
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) return false;
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		var _this = this.arrayKeys();
		return HxOverrides.iter(_this);
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) out.push(key);
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) out.push(key.substr(1));
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var haxe_ds__$Vector_Vector_$Impl_$ = {};
$hxClasses["haxe.ds._Vector.Vector_Impl_"] = haxe_ds__$Vector_Vector_$Impl_$;
haxe_ds__$Vector_Vector_$Impl_$.__name__ = ["haxe","ds","_Vector","Vector_Impl_"];
haxe_ds__$Vector_Vector_$Impl_$.blit = function(src,srcPos,dest,destPos,len) {
	var _g = 0;
	while(_g < len) {
		var i = _g++;
		dest[destPos + i] = src[srcPos + i];
	}
};
haxe_ds__$Vector_Vector_$Impl_$.toArray = function(this1) {
	var a = [];
	var len = this1.length;
	var _g = 0;
	while(_g < len) {
		var i = _g++;
		a[i] = this1[i];
	}
	return a;
};
var haxe_io_Eof = function() { };
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = ["haxe","io","Eof"];
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) return 0.0;
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) return 0;
	var af;
	if(f < 0) af = -f; else af = f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) exp = -127; else if(exp > 128) exp = 128;
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608) & 8388607;
	return (f < 0?-2147483648:0) | exp + 127 << 23 | sig;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) return 0.0;
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else {
		var av;
		if(v < 0) av = -v; else av = v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig;
		var v1 = (av / Math.pow(2,exp) - 1) * 4503599627370496.;
		sig = Math.round(v1);
		var sig_l = sig | 0;
		var sig_h = sig / 4294967296.0 | 0;
		i64.low = sig_l;
		i64.high = (v < 0?-2147483648:0) | exp + 1023 << 20 | sig_h;
	}
	return i64;
};
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else this.dir = null;
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = ["haxe","io","Path"];
haxe_io_Path.withoutExtension = function(path) {
	var s = new haxe_io_Path(path);
	s.ext = null;
	return s.toString();
};
haxe_io_Path.prototype = {
	toString: function() {
		return (this.dir == null?"":this.dir + (this.backslash?"\\":"/")) + this.file + (this.ext == null?"":"." + this.ext);
	}
	,__class__: haxe_io_Path
};
var haxe_xml__$Fast_NodeAccess = function(x) {
	this.__x = x;
};
$hxClasses["haxe.xml._Fast.NodeAccess"] = haxe_xml__$Fast_NodeAccess;
haxe_xml__$Fast_NodeAccess.__name__ = ["haxe","xml","_Fast","NodeAccess"];
haxe_xml__$Fast_NodeAccess.prototype = {
	resolve: function(name) {
		var x = this.__x.elementsNamed(name).next();
		if(x == null) {
			var xname;
			if(this.__x.nodeType == Xml.Document) xname = "Document"; else xname = this.__x.get_nodeName();
			throw new js__$Boot_HaxeError(xname + " is missing element " + name);
		}
		return new haxe_xml_Fast(x);
	}
	,__class__: haxe_xml__$Fast_NodeAccess
};
var haxe_xml__$Fast_AttribAccess = function(x) {
	this.__x = x;
};
$hxClasses["haxe.xml._Fast.AttribAccess"] = haxe_xml__$Fast_AttribAccess;
haxe_xml__$Fast_AttribAccess.__name__ = ["haxe","xml","_Fast","AttribAccess"];
haxe_xml__$Fast_AttribAccess.prototype = {
	resolve: function(name) {
		if(this.__x.nodeType == Xml.Document) throw new js__$Boot_HaxeError("Cannot access document attribute " + name);
		var v = this.__x.get(name);
		if(v == null) throw new js__$Boot_HaxeError(this.__x.get_nodeName() + " is missing attribute " + name);
		return v;
	}
	,__class__: haxe_xml__$Fast_AttribAccess
};
var haxe_xml__$Fast_HasAttribAccess = function(x) {
	this.__x = x;
};
$hxClasses["haxe.xml._Fast.HasAttribAccess"] = haxe_xml__$Fast_HasAttribAccess;
haxe_xml__$Fast_HasAttribAccess.__name__ = ["haxe","xml","_Fast","HasAttribAccess"];
haxe_xml__$Fast_HasAttribAccess.prototype = {
	resolve: function(name) {
		if(this.__x.nodeType == Xml.Document) throw new js__$Boot_HaxeError("Cannot access document attribute " + name);
		return this.__x.exists(name);
	}
	,__class__: haxe_xml__$Fast_HasAttribAccess
};
var haxe_xml__$Fast_HasNodeAccess = function(x) {
	this.__x = x;
};
$hxClasses["haxe.xml._Fast.HasNodeAccess"] = haxe_xml__$Fast_HasNodeAccess;
haxe_xml__$Fast_HasNodeAccess.__name__ = ["haxe","xml","_Fast","HasNodeAccess"];
haxe_xml__$Fast_HasNodeAccess.prototype = {
	__class__: haxe_xml__$Fast_HasNodeAccess
};
var haxe_xml__$Fast_NodeListAccess = function(x) {
	this.__x = x;
};
$hxClasses["haxe.xml._Fast.NodeListAccess"] = haxe_xml__$Fast_NodeListAccess;
haxe_xml__$Fast_NodeListAccess.__name__ = ["haxe","xml","_Fast","NodeListAccess"];
haxe_xml__$Fast_NodeListAccess.prototype = {
	__class__: haxe_xml__$Fast_NodeListAccess
};
var haxe_xml_Fast = function(x) {
	if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Invalid nodeType " + x.nodeType);
	this.x = x;
	this.node = new haxe_xml__$Fast_NodeAccess(x);
	this.nodes = new haxe_xml__$Fast_NodeListAccess(x);
	this.att = new haxe_xml__$Fast_AttribAccess(x);
	this.has = new haxe_xml__$Fast_HasAttribAccess(x);
	this.hasNode = new haxe_xml__$Fast_HasNodeAccess(x);
};
$hxClasses["haxe.xml.Fast"] = haxe_xml_Fast;
haxe_xml_Fast.__name__ = ["haxe","xml","Fast"];
haxe_xml_Fast.prototype = {
	get_name: function() {
		if(this.x.nodeType == Xml.Document) return "Document"; else return this.x.get_nodeName();
	}
	,get_innerData: function() {
		var it = this.x.iterator();
		if(!it.hasNext()) throw new js__$Boot_HaxeError(this.get_name() + " does not have data");
		var v = it.next();
		var n = it.next();
		if(n != null) {
			if(v.nodeType == Xml.PCData && n.nodeType == Xml.CData && StringTools.trim((function($this) {
				var $r;
				if(v.nodeType == Xml.Document || v.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + v.nodeType);
				$r = v.nodeValue;
				return $r;
			}(this))) == "") {
				var n2 = it.next();
				if(n2 == null || n2.nodeType == Xml.PCData && StringTools.trim((function($this) {
					var $r;
					if(n2.nodeType == Xml.Document || n2.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + n2.nodeType);
					$r = n2.nodeValue;
					return $r;
				}(this))) == "" && it.next() == null) {
					if(n.nodeType == Xml.Document || n.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + n.nodeType);
					return n.nodeValue;
				}
			}
			throw new js__$Boot_HaxeError(this.get_name() + " does not only have data");
		}
		if(v.nodeType != Xml.PCData && v.nodeType != Xml.CData) throw new js__$Boot_HaxeError(this.get_name() + " does not have data");
		if(v.nodeType == Xml.Document || v.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + v.nodeType);
		return v.nodeValue;
	}
	,get_elements: function() {
		var it = this.x.elements();
		return { hasNext : $bind(it,it.hasNext), next : function() {
			var x = it.next();
			if(x == null) return null;
			return new haxe_xml_Fast(x);
		}};
	}
	,__class__: haxe_xml_Fast
	,__properties__: {get_elements:"get_elements",get_innerData:"get_innerData",get_name:"get_name"}
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = ["haxe","xml","Parser"];
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) strict = false;
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) p = 0;
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(!(c != c)) {
		switch(state) {
		case 0:
			switch(c) {
			case 10:case 13:case 9:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			switch(c) {
			case 60:
				state = 0;
				next = 2;
				break;
			default:
				start = p;
				state = 13;
				continue;
			}
			break;
		case 13:
			if(c == 60) {
				buf.addSub(str,start,p - start);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				nsubs++;
				state = 0;
				next = 2;
			} else if(c == 38) {
				buf.addSub(str,start,p - start);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				nsubs++;
				p += 2;
				state = 1;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") throw new js__$Boot_HaxeError("Expected <![CDATA[");
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") throw new js__$Boot_HaxeError("Expected <!DOCTYPE");
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) throw new js__$Boot_HaxeError("Expected <!--"); else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 63:
				state = 14;
				start = p;
				break;
			case 47:
				if(parent == null) throw new js__$Boot_HaxeError("Expected node name");
				start = p + 1;
				state = 0;
				next = 10;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) throw new js__$Boot_HaxeError("Expected node name");
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				nsubs++;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				var tmp;
				if(start == p) throw new js__$Boot_HaxeError("Expected attribute name");
				tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) throw new js__$Boot_HaxeError("Duplicate attribute");
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			switch(c) {
			case 61:
				state = 0;
				next = 7;
				break;
			default:
				throw new js__$Boot_HaxeError("Expected =");
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw new js__$Boot_HaxeError("Expected \"");
			}
			break;
		case 8:
			switch(c) {
			case 38:
				buf.addSub(str,start,p - start);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 62:
				if(strict) throw new js__$Boot_HaxeError("Invalid unescaped " + String.fromCharCode(c) + " in attribute value"); else if(c == attrValQuote) {
					buf.addSub(str,start,p - start);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			case 60:
				if(strict) throw new js__$Boot_HaxeError("Invalid unescaped " + String.fromCharCode(c) + " in attribute value"); else if(c == attrValQuote) {
					buf.addSub(str,start,p - start);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					buf.addSub(str,start,p - start);
					var val2 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val2);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 11:
			switch(c) {
			case 62:
				state = 1;
				break;
			default:
				throw new js__$Boot_HaxeError("Expected >");
			}
			break;
		case 12:
			switch(c) {
			case 62:
				if(nsubs == 0) parent.addChild(Xml.createPCData(""));
				return p;
			default:
				throw new js__$Boot_HaxeError("Expected >");
			}
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) throw new js__$Boot_HaxeError("Expected node name");
				var v = HxOverrides.substr(str,start,p - start);
				if(v != (function($this) {
					var $r;
					if(parent.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
					$r = parent.nodeName;
					return $r;
				}(this))) throw new js__$Boot_HaxeError("Expected </" + (function($this) {
					var $r;
					if(parent.nodeType != Xml.Element) throw "Bad node type, expected Element but found " + parent.nodeType;
					$r = parent.nodeName;
					return $r;
				}(this)) + ">");
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				var xml1 = Xml.createComment(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml1);
				nsubs++;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) nbrackets++; else if(c == 93) nbrackets--; else if(c == 62 && nbrackets == 0) {
				var xml2 = Xml.createDocType(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml2);
				nsubs++;
				state = 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				p++;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				var xml3 = Xml.createProcessingInstruction(str1);
				parent.addChild(xml3);
				nsubs++;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1;
					if(s.charCodeAt(1) == 120) c1 = Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)); else c1 = Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCharCode(c1);
				} else if(!haxe_xml_Parser.escapes.exists(s)) {
					if(strict) throw new js__$Boot_HaxeError("Undefined entity: " + s);
					buf.b += Std.string("&" + s + ";");
				} else buf.add(haxe_xml_Parser.escapes.get(s));
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) throw new js__$Boot_HaxeError("Invalid character in entity: " + String.fromCharCode(c));
				buf.b += "&";
				buf.addSub(str,start,p - start);
				p--;
				start = p + 1;
				state = escapeNext;
			}
			break;
		}
		c = StringTools.fastCodeAt(str,++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(p != start || nsubs == 0) {
			buf.addSub(str,start,p - start);
			var xml4 = Xml.createPCData(buf.b);
			parent.addChild(xml4);
			nsubs++;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += "&";
		buf.addSub(str,start,p - start);
		var xml5 = Xml.createPCData(buf.b);
		parent.addChild(xml5);
		nsubs++;
		return p;
	}
	throw new js__$Boot_HaxeError("Unexpected end");
};
var hud_BossGauge = function() {
	this.myHeight = 20;
	this.myWidth = 20;
	this.max = 1;
	this.back = new openfl_display_Sprite();
	this.cover = new openfl_display_Sprite();
	this.mascara = new openfl_display_Sprite();
	this.flotante = new openfl_display_Sprite();
	this.gradient = new openfl_display_Sprite();
	openfl_display_Sprite.call(this);
	this.setGauge(12,230);
};
$hxClasses["hud.BossGauge"] = hud_BossGauge;
hud_BossGauge.__name__ = ["hud","BossGauge"];
hud_BossGauge.__super__ = openfl_display_Sprite;
hud_BossGauge.prototype = $extend(openfl_display_Sprite.prototype,{
	setGauge: function(w,h) {
		if(h == null) h = 20;
		if(w == null) w = 20;
		this.myWidth = w;
		this.myHeight = h;
		this.max = this.myHeight;
		this.gradient = new openfl_display_Sprite();
		var bitmapData = openfl_Assets.getBitmapData("img/gui/barra - verde.png");
		var bitmap = new openfl_display_Bitmap(bitmapData);
		bitmap.set_rotation(90);
		this.gradient.addChild(bitmap);
		bitmap.set_x(115.);
		bitmap.set_y(-6.);
		this.addChild(this.gradient);
		this.mascara.get_graphics().beginBitmapFill(bitmapData);
		this.mascara.get_graphics().drawRect(0,0,230,12);
		this.mascara.get_graphics().endFill();
		this.mascara.set_x(-115.);
		this.mascara.set_y(-6.);
		this.addChild(this.mascara);
		this.setMask();
	}
	,setMask: function() {
		this.flotante = new openfl_display_Sprite();
		var bitmapData = openfl_Assets.getBitmapData("img/gui/barra - negra.png");
		var bitmap = new openfl_display_Bitmap(bitmapData);
		bitmap.set_rotation(90);
		this.flotante.addChild(bitmap);
		bitmap.set_x(119.);
		bitmap.set_y(-8.);
		this.addChild(this.flotante);
		this.flotante.set_mask(this.mascara);
	}
	,setBack: function(img) {
		if(this.back != null && this.back.parent != null) this.back.parent.removeChild(this.back);
		this.back = new openfl_display_Sprite();
		var bitmapData = openfl_Assets.getBitmapData("img/bosses/barra energia - " + img + " - fondo.png");
		var bitmap = new openfl_display_Bitmap(bitmapData);
		this.back.addChild(bitmap);
		bitmap.set_x(-bitmap.get_width() / 2);
		bitmap.set_y(-bitmap.get_height() / 2);
		this.addChild(this.back);
		this.setChildIndex(this.back,0);
	}
	,setCover: function(img) {
		this.setBack(img);
		if(this.cover != null && this.contains(this.cover)) this.removeChild(this.cover);
		this.cover = new openfl_display_Sprite();
		var bitmapData = openfl_Assets.getBitmapData("img/bosses/barra energia - " + img + ".png");
		var bitmap = new openfl_display_Bitmap(bitmapData);
		this.cover.addChild(bitmap);
		bitmap.set_x(-bitmap.get_width() / 2);
		bitmap.set_y(-bitmap.get_height() / 2);
		this.addChild(this.cover);
	}
	,fixGauge: function(actual,top) {
		if(top == null) top = 100;
		var coef = actual / top;
		var aux = Math.round(coef * this.max);
		this.flotante.set_x(this.max * coef);
	}
	,__class__: hud_BossGauge
});
var hud_ButtonGraphic = function() {
	openfl_display_Sprite.call(this);
};
$hxClasses["hud.ButtonGraphic"] = hud_ButtonGraphic;
hud_ButtonGraphic.__name__ = ["hud","ButtonGraphic"];
hud_ButtonGraphic.__super__ = openfl_display_Sprite;
hud_ButtonGraphic.prototype = $extend(openfl_display_Sprite.prototype,{
	setButton: function(type) {
		var imgBorde_bitmapdata = openfl_Assets.getBitmapData("img/gui/boton - borde.png");
		this.imgBorde = new openfl_display_Bitmap(imgBorde_bitmapdata,0,true);
		this.imgBorde.set_x(-this.imgBorde.get_width() / 2);
		this.imgBorde.set_y(-this.imgBorde.get_height() / 2);
		this.addChild(this.imgBorde);
		switch(type) {
		case "pausa":
			var pause_bitmapdata = openfl_Assets.getBitmapData("img/gui/boton - pausa.png");
			this.imgBtn = new openfl_display_Bitmap(pause_bitmapdata,0,true);
			this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
			this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
			this.addChild(this.imgBtn);
			break;
		case "mute":
			var mute_bitmapdata = openfl_Assets.getBitmapData("img/gui/boton - sonido on.png");
			this.imgBtn = new openfl_display_Bitmap(mute_bitmapdata,0,true);
			this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
			this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
			this.addChild(this.imgBtn);
			var mute2_bitmapdata = openfl_Assets.getBitmapData("img/gui/boton - sonido off.png");
			this.imgToogle = new openfl_display_Bitmap(mute2_bitmapdata,0,true);
			this.imgToogle.set_x(-this.imgBtn.get_width() / 2);
			this.imgToogle.set_y(-this.imgBtn.get_height() / 2);
			this.addChild(this.imgToogle);
			this.imgToogle.set_visible(!utils_SoundLib.musicEnabled);
			break;
		case "restart":
			var restart_bitmapdata = openfl_Assets.getBitmapData("img/gui/boton - reiniciar.png");
			this.imgBtn = new openfl_display_Bitmap(restart_bitmapdata,0,true);
			this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
			this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
			this.addChild(this.imgBtn);
			break;
		case "reset":
			var restart_bitmapdata1 = openfl_Assets.getBitmapData("img/gui/boton reiniciar.png");
			this.imgBtn = new openfl_display_Bitmap(restart_bitmapdata1,0,true);
			this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
			this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
			this.addChild(this.imgBtn);
			break;
		case "home":
			var restart_bitmapdata2 = openfl_Assets.getBitmapData("img/gui/boton - home.png");
			this.imgBtn = new openfl_display_Bitmap(restart_bitmapdata2,0,true);
			this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
			this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
			this.addChild(this.imgBtn);
			break;
		case "credits":
			var selector_bitmapdata = openfl_Assets.getBitmapData("img/intro/boton - creditos.png");
			this.imgBtn = new openfl_display_Bitmap(selector_bitmapdata,0,true);
			this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
			this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
			this.addChild(this.imgBtn);
			break;
		case "play":
			var play_bitmapdata = openfl_Assets.getBitmapData("img/gui/boton - play.png");
			this.imgBtn = new openfl_display_Bitmap(play_bitmapdata,0,true);
			this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
			this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
			this.addChild(this.imgBtn);
			this.imgBorde.set_visible(false);
			break;
		case "selector":
			var selector_bitmapdata1 = openfl_Assets.getBitmapData("img/gui/boton - selector.png");
			this.imgBtn = new openfl_display_Bitmap(selector_bitmapdata1,0,true);
			this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
			this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
			this.addChild(this.imgBtn);
			this.imgBorde.set_visible(false);
			break;
		case "playHTP":
			var play_bitmapdata1 = openfl_Assets.getBitmapData("img/gui/boton play - como jugar.png");
			this.imgBtn = new openfl_display_Bitmap(play_bitmapdata1,0,true);
			this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
			this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
			this.addChild(this.imgBtn);
			this.imgBorde.set_visible(false);
			break;
		}
		if(Main.isMobile) {
			this.addEventListener("touchTap",$bind(this,this.click));
			this.addEventListener("touchBegin",$bind(this,this.down));
			this.addEventListener("touchEnd",$bind(this,this.out));
		} else {
			this.addEventListener("click",$bind(this,this.click));
			this.addEventListener("mouseDown",$bind(this,this.down));
			this.addEventListener("mouseOver",$bind(this,this.over));
			this.addEventListener("mouseOut",$bind(this,this.out));
		}
	}
	,click: function(e) {
		if(this.imgBtn != null && this.imgBtn.get_visible()) {
			this.imgBtn.set_scaleX(this.imgBtn.set_scaleY(1.0));
			this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
			this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
		}
		if(this.imgToogle != null && this.imgToogle.get_visible()) {
			this.imgToogle.set_scaleX(this.imgToogle.set_scaleY(1.0));
			this.imgToogle.set_x(-this.imgBtn.get_width() / 2);
			this.imgToogle.set_y(-this.imgBtn.get_height() / 2);
		}
		utils_SoundLib.playFX("click");
	}
	,down: function(e) {
		if(this.imgBtn != null && this.imgBtn.get_visible()) {
			this.imgBtn.set_scaleX(this.imgBtn.set_scaleY(0.9));
			this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
			this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
		}
		if(this.imgToogle != null && this.imgToogle.get_visible()) {
			this.imgToogle.set_scaleX(this.imgToogle.set_scaleY(0.9));
			this.imgToogle.set_x(-this.imgBtn.get_width() / 2);
			this.imgToogle.set_y(-this.imgBtn.get_height() / 2);
		}
	}
	,over: function(e) {
		if(this.imgBtn != null && this.imgBtn.get_visible()) {
			this.imgBtn.set_scaleX(this.imgBtn.set_scaleY(1.1));
			this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
			this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
		}
		if(this.imgToogle != null && this.imgToogle.get_visible()) {
			this.imgToogle.set_scaleX(this.imgToogle.set_scaleY(1.1));
			this.imgToogle.set_x(-this.imgBtn.get_width() / 2);
			this.imgToogle.set_y(-this.imgBtn.get_height() / 2);
		}
		utils_SoundLib.playFX("over");
	}
	,out: function(e) {
		if(this.imgBtn != null && this.imgBtn.get_visible()) {
			this.imgBtn.set_scaleX(this.imgBtn.set_scaleY(1.0));
			this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
			this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
		}
		if(this.imgToogle != null && this.imgToogle.get_visible()) {
			this.imgToogle.set_scaleX(this.imgToogle.set_scaleY(1.0));
			this.imgToogle.set_x(-this.imgBtn.get_width() / 2);
			this.imgToogle.set_y(-this.imgBtn.get_height() / 2);
		}
	}
	,__class__: hud_ButtonGraphic
});
var hud_ButtonLevel = function(level) {
	this.score = 0;
	this.levelNum = 1;
	openfl_display_Sprite.call(this);
	this.setButton(level);
	this.addElements();
	this.addEvents();
	this.imgOver.set_visible(false);
};
$hxClasses["hud.ButtonLevel"] = hud_ButtonLevel;
hud_ButtonLevel.__name__ = ["hud","ButtonLevel"];
hud_ButtonLevel.__super__ = openfl_display_Sprite;
hud_ButtonLevel.prototype = $extend(openfl_display_Sprite.prototype,{
	addEvents: function() {
		this.addEventListener("click",$bind(this,this.click));
		this.addEventListener("mouseDown",$bind(this,this.down));
		this.addEventListener("mouseOver",$bind(this,this.over));
		this.addEventListener("mouseOut",$bind(this,this.out));
	}
	,addElements: function() {
		this.addChild(this.imgBtn);
		this.addChild(this.imgOver);
		this.addChild(this.imgHiScore);
		this.addChild(this.textScore);
		this.addChild(this.imgLock);
		this.addChild(this.textLevel);
	}
	,setButton: function(level) {
		if(level == null) level = 0;
		var lvl = level + 1;
		var imgBtn_bitmapdata = openfl_Assets.getBitmapData("img/levelselect/pantalla " + lvl + " (si).png");
		this.imgBtn = new openfl_display_Bitmap(imgBtn_bitmapdata,0,true);
		this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
		this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
		var imgOver_bitmapdata = openfl_Assets.getBitmapData("img/levelselect/pantalla " + lvl + " (seleccionado).png");
		this.imgOver = new openfl_display_Bitmap(imgOver_bitmapdata,0,true);
		this.imgOver.set_x(-this.imgOver.get_width() / 2);
		this.imgOver.set_y(-this.imgOver.get_height() / 2);
		var imgLock_bitmapdata = openfl_Assets.getBitmapData("img/levelselect/pantalla " + lvl + " (no).png");
		this.imgLock = new openfl_display_Bitmap(imgLock_bitmapdata,0,true);
		this.imgLock.set_x(-this.imgLock.get_width() / 2);
		this.imgLock.set_y(-this.imgLock.get_height() / 2);
		var imgHiScore_bitmapdata = openfl_Assets.getBitmapData("img/levelselect/pantalla - puntaje.png");
		this.imgHiScore = new openfl_display_Bitmap(imgHiScore_bitmapdata,0,true);
		this.imgHiScore.set_x(-this.imgHiScore.get_width() / 2);
		this.imgHiScore.set_y(25);
		this.textScore = new ui_TextFieldBase("000");
		this.textScore.set_autoSize(3);
		this.textScore.setFormat(0,18,"Helvetica Rounded LT Black");
		this.textScore.set_x(this.imgHiScore.get_x() + 29);
		this.textScore.set_y(this.imgHiScore.get_y() + 5);
		this.textLevel = new ui_TextFieldBase("0");
		this.textLevel.setFormat(16777215,28,"Helvetica Rounded LT Black");
		this.textLevel.set_x(-54);
		this.textLevel.set_y(-62);
	}
	,setText: function(levelN) {
		this.levelNum = levelN;
		this.textLevel.set_text(this.levelNum + "");
	}
	,setScore: function(myScore) {
		if(myScore == null) myScore = 0;
		this.score = myScore;
		if(this.score != 0) {
			if(this.score < 100 && this.score > 9) this.textScore.set_text("0" + (this.score + "")); else if(this.score < 10) this.textScore.set_text("00" + (this.score + "")); else this.textScore.set_text(this.score + "");
		} else {
			this.imgHiScore.set_visible(false);
			this.textScore.set_visible(false);
			this.imgBtn.set_visible(true);
		}
	}
	,click: function(e) {
		if(this.imgLock.get_visible()) return;
		if(this.imgBtn != null && this.imgBtn.get_visible()) {
			this.imgBtn.set_scaleX(this.imgBtn.set_scaleY(1.0));
			this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
			this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
		}
		var _g = this.levelNum;
		switch(_g) {
		case 1:case 2:case 3:
			scenes_Gameplay.assetSet = 2;
			break;
		case 4:case 5:case 6:
			scenes_Gameplay.assetSet = 1;
			break;
		case 7:case 8:case 9:
			scenes_Gameplay.assetSet = 3;
			break;
		}
		utils_SoundLib.playFX("click");
		scenes_Manager.nextLevel = this.levelNum;
		scenes_Manager.go("gameplay");
	}
	,down: function(e) {
		if(this.imgLock.get_visible()) return;
		this.imgBtn.set_scaleX(this.imgBtn.set_scaleY(0.95));
		this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
		this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
		this.imgOver.set_scaleX(this.imgOver.set_scaleY(0.95));
		this.imgOver.set_x(-this.imgOver.get_width() / 2);
		this.imgOver.set_y(-this.imgOver.get_height() / 2);
	}
	,over: function(e) {
		if(this.imgLock.get_visible()) return;
		this.imgBtn.set_scaleX(this.imgBtn.set_scaleY(1.05));
		this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
		this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
		this.imgOver.set_scaleX(this.imgOver.set_scaleY(1.05));
		this.imgOver.set_x(-this.imgOver.get_width() / 2);
		this.imgOver.set_y(-this.imgOver.get_height() / 2);
		utils_SoundLib.playFX("over");
	}
	,out: function(e) {
		if(this.imgLock.get_visible()) return;
		this.imgBtn.set_scaleX(this.imgBtn.set_scaleY(1.0));
		this.imgBtn.set_x(-this.imgBtn.get_width() / 2);
		this.imgBtn.set_y(-this.imgBtn.get_height() / 2);
		this.imgOver.set_scaleX(this.imgOver.set_scaleY(1.0));
		this.imgOver.set_x(-this.imgOver.get_width() / 2);
		this.imgOver.set_y(-this.imgOver.get_height() / 2);
	}
	,__class__: hud_ButtonLevel
});
var hud_Faces = function() {
	openfl_display_Sprite.call(this);
	this.bitmapBen = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/gui/cara - ben.png"));
	this.bitmapBen.set_x(this.bitmapBen.set_y(this.bitmapBen.get_width() / 2));
	this.bitmapFuego = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/gui/cara - fuego.png"));
	this.bitmapFuego.set_x(this.bitmapFuego.set_y(this.bitmapFuego.get_width() / 2));
	this.bitmapOverflow = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/gui/cara - overflow.png"));
	this.bitmapOverflow.set_x(this.bitmapOverflow.set_y(this.bitmapOverflow.get_width() / 2));
	this.bitmapInsectoide = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/gui/cara -  insectoide.png"));
	this.bitmapInsectoide.set_x(this.bitmapInsectoide.set_y(this.bitmapInsectoide.get_width() / 2));
	this.currentBitmap = this.bitmapBen;
	this.addChild(this.currentBitmap);
};
$hxClasses["hud.Faces"] = hud_Faces;
hud_Faces.__name__ = ["hud","Faces"];
hud_Faces.__super__ = openfl_display_Sprite;
hud_Faces.prototype = $extend(openfl_display_Sprite.prototype,{
	swapFace: function(alien) {
		if(alien == null) alien = 4;
		this.removeChild(this.currentBitmap);
		switch(alien) {
		case 3:
			this.currentBitmap = this.bitmapFuego;
			this.addChild(this.currentBitmap);
			break;
		case 1:
			this.currentBitmap = this.bitmapInsectoide;
			this.addChild(this.currentBitmap);
			break;
		case 2:
			this.currentBitmap = this.bitmapOverflow;
			this.addChild(this.currentBitmap);
			break;
		default:
			this.currentBitmap = this.bitmapBen;
			this.addChild(this.currentBitmap);
		}
	}
	,__class__: hud_Faces
});
var hud_GUI = function() {
	openfl_display_Sprite.call(this);
	hud_GUI.energyGauge = new hud_Gauge();
	hud_GUI.energyGauge.setCover("barra - energia");
	hud_GUI.energyGauge.set_x(hud_GUI.energyGauge.get_width() / 2);
	hud_GUI.energyGauge.set_y(130);
	hud_GUI.faces = new hud_Faces();
	hud_GUI.faces.set_x(-40);
	hud_GUI.faces.set_y(25);
	hud_GUI.shootGauge = new hud_Gauge();
	hud_GUI.shootGauge.setCover("barra - tiro");
	hud_GUI.shootGauge.set_x(Main.screenWidth - hud_GUI.shootGauge.get_width() / 2);
	hud_GUI.shootGauge.set_y(130);
	hud_GUI.bossBar = new hud_BossGauge();
	hud_GUI.bossBar.setCover("jefe1");
	hud_GUI.bossBar.set_x(320);
	hud_GUI.bossBar.set_y(30);
	hud_GUI.bossBar.set_visible(false);
	hud_GUI.textScore = new ui_TextFieldBase("000");
	hud_GUI.textScore.set_autoSize(3);
	hud_GUI.textScore.setFormat(0,16,"Helvetica Rounded LT Black");
	hud_GUI.textScore.set_x(hud_GUI.shootGauge.get_x());
	hud_GUI.textScore.set_y(hud_GUI.shootGauge.get_y() - 46);
	hud_GUI.changeScore(0);
	hud_GUI.btnPause = new hud_ButtonGraphic();
	hud_GUI.btnPause.setButton("pausa");
	hud_GUI.btnPause.set_x(Main.screenWidth - 115);
	hud_GUI.btnPause.set_y(hud_GUI.btnPause.get_height() / 2 + 10);
	hud_GUI.btnPause.addEventListener("click",$bind(this,this.clickPause));
	hud_GUI.btnRestart = new hud_ButtonGraphic();
	hud_GUI.btnRestart.setButton("restart");
	hud_GUI.btnRestart.set_x(Main.screenWidth - 75);
	hud_GUI.btnRestart.set_y(hud_GUI.btnRestart.get_height() / 2 + 10);
	hud_GUI.btnRestart.addEventListener("click",$bind(this,this.clickRestart));
	hud_GUI.btnMute = new hud_ButtonGraphic();
	hud_GUI.btnMute.setButton("mute");
	hud_GUI.btnMute.set_x(Main.screenWidth - 35);
	hud_GUI.btnMute.set_y(hud_GUI.btnMute.get_height() / 2 + 10);
	hud_GUI.btnMute.addEventListener("click",$bind(this,this.clickMute));
	hud_GUI.fade = new openfl_display_Sprite();
	hud_GUI.fade.get_graphics().beginFill(0);
	hud_GUI.fade.get_graphics().drawRect(0,0,Main.screenWidth,Main.screenHeight);
	hud_GUI.fade.get_graphics().endFill();
	hud_GUI.fade.set_alpha(0);
	hud_GUI.fade.mouseEnabled = false;
	hud_GUI.missionBoard = new hud_MissionBoard();
	hud_GUI.gameover = new hud_GameOver();
	hud_GUI.levelcomplete = new hud_LevelComplete();
	hud_GUI.pauseBoard = new hud_PauseBoard();
	hud_GUI.howtoplayBoard = new hud_HowToPlay();
	this.addElementToStage();
};
$hxClasses["hud.GUI"] = hud_GUI;
hud_GUI.__name__ = ["hud","GUI"];
hud_GUI.energyGauge = null;
hud_GUI.shootGauge = null;
hud_GUI.bossBar = null;
hud_GUI.textScore = null;
hud_GUI.btnPause = null;
hud_GUI.btnMute = null;
hud_GUI.btnRestart = null;
hud_GUI.fade = null;
hud_GUI.gameover = null;
hud_GUI.levelcomplete = null;
hud_GUI.pauseBoard = null;
hud_GUI.missionBoard = null;
hud_GUI.howtoplayBoard = null;
hud_GUI.faces = null;
hud_GUI.showButtons = function() {
	hud_GUI.btnPause.set_visible(true);
	hud_GUI.btnRestart.set_visible(true);
	hud_GUI.btnMute.set_visible(true);
};
hud_GUI.hideButtons = function() {
	hud_GUI.btnPause.set_visible(false);
	hud_GUI.btnRestart.set_visible(false);
	hud_GUI.btnMute.set_visible(false);
};
hud_GUI.changeScore = function(value) {
	if(value == null) value = 1;
	hud_GUI.score += value;
	if(hud_GUI.score > 999) hud_GUI.score = 999;
	hud_GUI.textScore.set_text(hud_GUI.setZeros(hud_GUI.score));
	hud_GUI.textScore.set_x(hud_GUI.shootGauge.get_x() - hud_GUI.textScore.get_width() / 2 + 12);
};
hud_GUI.showHTP = function() {
	hud_GUI.howtoplayBoard.getIn();
};
hud_GUI.gamePause = function() {
	if(scenes_Gameplay.paused) {
		hud_GUI.fadeIn();
		hud_GUI.pauseBoard.getIn();
	}
	if(!scenes_Gameplay.paused) {
		hud_GUI.fadeOut();
		hud_GUI.pauseBoard.getOut();
	}
	scenes_Gameplay.current.setPhase(scenes_Gameplay.paused?scenes_Gameplay.GP_PAUSED:scenes_Gameplay.current.game_phase_prev);
};
hud_GUI.levelEnd = function() {
	hud_GUI.fadeIn();
	hud_GUI.hideButtons();
	hud_GUI.levelcomplete.getIn();
	utils_DataManager.levelComplete();
};
hud_GUI.gameOver = function() {
	hud_GUI.fadeIn();
	hud_GUI.hideButtons();
	hud_GUI.gameover.getIn();
};
hud_GUI.fadeIn = function() {
	motion_Actuate.tween(hud_GUI.fade,1.0,{ alpha : 0.5});
};
hud_GUI.fadeOut = function() {
	motion_Actuate.tween(hud_GUI.fade,1.0,{ alpha : 0.0});
};
hud_GUI.showMisionName = function() {
	hud_GUI.missionBoard.tf.set_text(utils_Localization.getText("LEVEL0") + " " + (hud_GUI.level + ""));
	hud_GUI.missionBoard.getIn();
	motion_Actuate.timer(2.0).onComplete(hud_GUI.hideMisionName);
};
hud_GUI.hideMisionName = function() {
	hud_GUI.missionBoard.getOut();
};
hud_GUI.setZeros = function(myNum) {
	if(myNum == null) myNum = 0;
	var cadena = "000";
	if(myNum < 10) cadena = "00" + (myNum + ""); else if(myNum < 100) cadena = "0" + (myNum + ""); else if(myNum < 1000) cadena = myNum + "";
	return cadena;
};
hud_GUI.__super__ = openfl_display_Sprite;
hud_GUI.prototype = $extend(openfl_display_Sprite.prototype,{
	addElementToStage: function() {
		this.addChild(hud_GUI.energyGauge);
		this.addChild(hud_GUI.faces);
		this.addChild(hud_GUI.shootGauge);
		this.addChild(hud_GUI.bossBar);
		this.addChild(hud_GUI.textScore);
		this.addChild(hud_GUI.missionBoard);
		this.addChild(hud_GUI.fade);
		this.addChild(hud_GUI.btnPause);
		this.addChild(hud_GUI.btnRestart);
		this.addChild(hud_GUI.btnMute);
		this.addChild(hud_GUI.pauseBoard);
		this.addChild(hud_GUI.gameover);
		this.addChild(hud_GUI.levelcomplete);
		this.addChild(hud_GUI.howtoplayBoard);
	}
	,clickPause: function(e) {
		scenes_Gameplay.paused = !scenes_Gameplay.paused;
		hud_GUI.gamePause();
	}
	,clickRestart: function(e) {
		scenes_Manager.go("gameplay");
	}
	,clickMute: function(e) {
		utils_SoundLib.musicEnabled = !utils_SoundLib.musicEnabled;
		hud_GUI.btnMute.imgToogle.set_visible(!utils_SoundLib.musicEnabled);
		utils_SoundLib.muteMusic();
	}
	,update: function(dt) {
	}
	,__class__: hud_GUI
});
var hud_GameOver = function() {
	this.active = false;
	openfl_display_Sprite.call(this);
	this.background = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/gui/cartel - perder.png"));
	this.addChild(this.background);
	this.play = new hud_ButtonGraphic();
	this.play.setButton("reset");
	this.play.set_x(Main.screenWidth / 2);
	this.play.set_y(this.background.get_y() + this.background.get_height() / 2);
	this.addChild(this.play);
	this.selector = new hud_ButtonGraphic();
	this.selector.setButton("selector");
	this.selector.set_x(Main.screenWidth / 2 + 180);
	this.selector.set_y(this.background.get_y() + this.background.get_height() / 2);
	this.addChild(this.selector);
	this.set_visible(false);
	var tf;
	tf = new ui_TextFieldBase(utils_Localization.getText("GAMEOVER"));
	tf.setFormat(0,21);
	tf.set_multiline(true);
	tf.set_x(Main.screenWidth / 2 - 180);
	tf.set_y(this.background.get_y() + this.background.get_height() / 2 - tf.get_height() / 2);
	this.addChild(tf);
};
$hxClasses["hud.GameOver"] = hud_GameOver;
hud_GameOver.__name__ = ["hud","GameOver"];
hud_GameOver.__super__ = openfl_display_Sprite;
hud_GameOver.prototype = $extend(openfl_display_Sprite.prototype,{
	getIn: function() {
		utils_KeyboardMap.active = false;
		this.addEventListener("enterFrame",$bind(this,this.keyControl));
		this.play.addEventListener("click",$bind(this,this.retry));
		this.selector.addEventListener("click",$bind(this,this.exit));
		this.set_visible(true);
		this.set_alpha(0);
		this.set_y(-Main.screenHeight);
		motion_Actuate.tween(this,1.0,{ alpha : 1.0});
		motion_Actuate.tween(this,1.0,{ y : this.get_height() / 4}).onComplete($bind(this,this.ready));
		utils_SoundLib.playFX("loose");
		motion_Actuate.timer(4.0).onComplete(utils_SoundLib.playGameMusic);
		joypad_Joypad.enabledX = false;
	}
	,getOut: function() {
		utils_KeyboardMap.active = false;
		this.removeEventListener("enterFrame",$bind(this,this.keyControl));
		this.play.removeEventListener("click",$bind(this,this.retry));
		this.selector.removeEventListener("click",$bind(this,this.exit));
		motion_Actuate.tween(this,1.0,{ alpha : .0});
		motion_Actuate.tween(this,1.0,{ y : Main.screenHeight + this.get_height() / 4}).onComplete($bind(this,this.ready));
		joypad_Joypad.enabledX = true;
	}
	,ready: function() {
		utils_KeyboardMap.active = true;
	}
	,exit: function(e) {
		this.getOut();
		scenes_Gameplay.current.removeAll();
		scenes_Manager.go("levelselect");
	}
	,retry: function(e) {
		this.getOut();
		scenes_Gameplay.current.removeAll();
		scenes_Manager.go("gameplay");
	}
	,keyControl: function(e) {
		if(utils_KeyboardMap.active) {
			if(utils_KeyboardMap.isPressed[88] || utils_KeyboardMap.isPressed[13] || utils_KeyboardMap.isPressed[32]) this.retry(); else if(utils_KeyboardMap.isPressed[27]) this.exit();
		}
	}
	,__class__: hud_GameOver
});
var hud_Gauge = function() {
	this.myHeight = 20;
	this.myWidth = 20;
	this.max = 1;
	this.back = new openfl_display_Sprite();
	this.cover = new openfl_display_Sprite();
	this.mascara = new openfl_display_Sprite();
	this.flotante = new openfl_display_Sprite();
	this.gradient = new openfl_display_Sprite();
	openfl_display_Sprite.call(this);
	this.setGauge(12,230);
};
$hxClasses["hud.Gauge"] = hud_Gauge;
hud_Gauge.__name__ = ["hud","Gauge"];
hud_Gauge.__super__ = openfl_display_Sprite;
hud_Gauge.prototype = $extend(openfl_display_Sprite.prototype,{
	setGauge: function(w,h) {
		if(h == null) h = 20;
		if(w == null) w = 20;
		this.myWidth = w;
		this.myHeight = h;
		this.max = this.myHeight;
		var mat = new openfl_geom_Matrix();
		var colors = [];
		colors.push(65280);
		colors.push(17408);
		mat.createGradientBox(this.myWidth,this.myHeight,1.57075);
		this.gradient = new openfl_display_Sprite();
		var bitmapData = openfl_Assets.getBitmapData("img/gui/barra - verde.png");
		var bitmap = new openfl_display_Bitmap(bitmapData);
		this.gradient.addChild(bitmap);
		bitmap.set_x(-bitmap.get_width() / 2);
		bitmap.set_y(0);
		this.addChild(this.gradient);
		this.mascara.get_graphics().beginFill(65280);
		this.mascara.get_graphics().drawRect(0,0,this.gradient.get_width(),this.gradient.get_height() + 16);
		this.mascara.get_graphics().endFill();
		this.mascara.set_x(-this.mascara.get_width() / 2);
		this.mascara.set_y(0);
		this.addChild(this.mascara);
		this.setMask();
	}
	,setBack: function(img) {
		if(this.back != null && this.back.parent != null) this.back.parent.removeChild(this.back);
		this.back = new openfl_display_Sprite();
		var bitmapData = openfl_Assets.getBitmapData("img/gui/" + img + " - fondo.png");
		var bitmap = new openfl_display_Bitmap(bitmapData);
		this.back.addChild(bitmap);
		bitmap.set_x(-bitmap.get_width() / 2);
		bitmap.set_y(-65);
		this.addChild(this.back);
		this.setChildIndex(this.back,0);
	}
	,setMask: function() {
		this.flotante = new openfl_display_Sprite();
		var bitmapData = openfl_Assets.getBitmapData("img/gui/barra - negra.png");
		var bitmap = new openfl_display_Bitmap(bitmapData);
		this.flotante.addChild(bitmap);
		bitmap.set_x(-bitmap.get_width() / 2);
		bitmap.set_y(-10);
		this.addChild(this.flotante);
		this.flotante.set_mask(this.mascara);
	}
	,setCover: function(img) {
		this.setBack(img);
		this.cover = new openfl_display_Sprite();
		var bitmapData = openfl_Assets.getBitmapData("img/gui/" + img + ".png");
		var bitmap = new openfl_display_Bitmap(bitmapData);
		this.cover.addChild(bitmap);
		bitmap.set_x(-bitmap.get_width() / 2);
		bitmap.set_y(-65);
		this.addChild(this.cover);
	}
	,fixGauge: function(actual,top) {
		if(top == null) top = 100;
		var coef = actual / top;
		var aux = Math.round(coef * this.max);
		this.flotante.set_y(-(this.max * coef));
	}
	,__class__: hud_Gauge
});
var hud_HowToPlay = function() {
	this.active = false;
	openfl_display_Sprite.call(this);
	var bg_bitmapdata = openfl_Assets.getBitmapData("img/gui/cartel - como jugar.png");
	this.bg = new openfl_display_Bitmap(bg_bitmapdata,0,true);
	this.bg.set_x(0);
	this.bg.set_y(Main.screenHeight / 2 - this.bg.get_height() / 2);
	this.btnResume = new hud_ButtonGraphic();
	this.btnResume.setButton("playHTP");
	this.btnResume.set_x(Main.screenWidth / 2);
	this.btnResume.set_y(this.bg.get_y() + this.bg.get_height() - 50);
	this.btnResume.addEventListener("click",$bind(this,this.clickResume));
	this.tf_arrows = new ui_TextFieldBase(utils_Localization.getText("HTP_ARROW"));
	this.tf_arrows.setFormat(16777215,20);
	this.tf_arrows.set_x(Main.screenWidth / 2 - this.tf_arrows.get_textWidth() / 2 - 85);
	this.tf_arrows.set_y(this.bg.get_y() + 180);
	this.tf_shoot = new ui_TextFieldBase(utils_Localization.getText("HTP_SHOOT"));
	this.tf_shoot.setFormat(16777215,20);
	this.tf_shoot.set_x(Main.screenWidth / 2 - this.tf_shoot.get_textWidth() / 2 + 83);
	this.tf_shoot.set_y(this.bg.get_y() + 180);
	this.addElements();
};
$hxClasses["hud.HowToPlay"] = hud_HowToPlay;
hud_HowToPlay.__name__ = ["hud","HowToPlay"];
hud_HowToPlay.__super__ = openfl_display_Sprite;
hud_HowToPlay.prototype = $extend(openfl_display_Sprite.prototype,{
	addElements: function() {
		this.addChild(this.bg);
		this.addChild(this.tf_arrows);
		this.addChild(this.tf_shoot);
		this.addChild(this.btnResume);
		this.set_visible(false);
		this.set_x(0);
		this.set_y(-Main.screenHeight / 2 - this.bg.get_height() / 2);
	}
	,getIn: function() {
		this.active = false;
		this.addEventListener("enterFrame",$bind(this,this.keyControl));
		scenes_Gameplay.paused = !scenes_Gameplay.paused;
		this.set_visible(true);
		this.set_y(-Main.screenHeight / 2 - this.bg.get_height() / 2);
		motion_Actuate.tween(this,1.0,{ y : 0}).onComplete($bind(this,this.ready));
		hud_GUI.fadeIn();
		joypad_Joypad.enabledX = false;
	}
	,ready: function() {
		this.active = true;
	}
	,getOut: function() {
		this.active = false;
		this.removeEventListener("enterFrame",$bind(this,this.keyControl));
		hud_GUI.fadeOut();
		motion_Actuate.timer(1.5).onComplete(hud_GUI.showMisionName);
		motion_Actuate.tween(this,1.0,{ y : Main.screenHeight + this.bg.get_height() / 2}).onComplete($bind(this,this.ready));
		joypad_Joypad.enabledX = true;
	}
	,clickResume: function(e) {
		this.getOut();
		scenes_Gameplay.paused = !scenes_Gameplay.paused;
	}
	,keyControl: function(e) {
		if(utils_KeyboardMap.active) {
			if(utils_KeyboardMap.isPressed[88] || utils_KeyboardMap.isPressed[13] || utils_KeyboardMap.isPressed[32]) this.clickResume();
		}
	}
	,__class__: hud_HowToPlay
});
var hud_LevelComplete = function() {
	this.active = false;
	openfl_display_Sprite.call(this);
	this.background = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/gui/cartel - ganar.png"));
	this.addChild(this.background);
	this.backgroundBoss = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/gui/cartel - ganar fin.png"));
	this.addChild(this.backgroundBoss);
	this.play = new hud_ButtonGraphic();
	this.play.setButton("play");
	this.play.set_x(Main.screenWidth / 2);
	this.play.set_y(this.background.get_y() + this.background.get_height() / 2);
	this.addChild(this.play);
	this.selector = new hud_ButtonGraphic();
	this.selector.setButton("selector");
	this.selector.set_x(Main.screenWidth / 2 + 180);
	this.selector.set_y(this.background.get_y() + this.background.get_height() / 2);
	this.addChild(this.selector);
	this.set_visible(false);
	var tf;
	tf = new ui_TextFieldBase(utils_Localization.getText("CONGRATS"));
	tf.setFormat(0);
	tf.set_multiline(true);
	tf.set_x(Main.screenWidth / 2 - 190);
	tf.set_y(this.background.get_y() + this.background.get_height() / 2 - tf.get_height() / 2);
	this.addChild(tf);
	var tf_score;
	tf_score = new ui_TextFieldBase(utils_Localization.getText("BESTSCORE"));
	tf_score.setFormat(16777215,12);
	tf_score.set_x(Main.screenWidth / 2 - tf_score.get_width() / 2);
	tf_score.set_y(this.background.get_y() + this.background.get_height() / 2 - tf_score.get_height() / 2 + 100);
	this.addChild(tf_score);
	this.tf_numscore = new ui_TextFieldBase("000");
	this.tf_numscore.setFormat(16777215,24);
	this.tf_numscore.set_x(Main.screenWidth / 2 - this.tf_numscore.get_width() / 2);
	this.tf_numscore.set_y(this.background.get_y() + this.background.get_height() / 2 - this.tf_numscore.get_height() / 2 + 120);
	this.addChild(this.tf_numscore);
};
$hxClasses["hud.LevelComplete"] = hud_LevelComplete;
hud_LevelComplete.__name__ = ["hud","LevelComplete"];
hud_LevelComplete.__super__ = openfl_display_Sprite;
hud_LevelComplete.prototype = $extend(openfl_display_Sprite.prototype,{
	getIn: function() {
		if(hud_GUI.level == 3 || hud_GUI.level == 6 || hud_GUI.level == 9) {
			this.background.set_visible(false);
			this.backgroundBoss.set_visible(true);
			this.selector.set_visible(false);
		} else {
			this.background.set_visible(true);
			this.backgroundBoss.set_visible(false);
			utils_SoundLib.fadeMusic("level end");
		}
		utils_SoundLib.playFX("win");
		utils_KeyboardMap.active = false;
		this.addEventListener("enterFrame",$bind(this,this.keyControl));
		this.play.addEventListener("click",$bind(this,this.nextLevel));
		this.selector.addEventListener("click",$bind(this,this.resume));
		this.set_visible(true);
		this.set_alpha(0);
		this.set_y(-Main.screenHeight);
		var dataScore = utils_DataManager.askHiScore(hud_GUI.level);
		if(hud_GUI.score > dataScore) this.tf_numscore.set_text(hud_GUI.setZeros(hud_GUI.score)); else this.tf_numscore.set_text(hud_GUI.setZeros(dataScore));
		this.tf_numscore.set_x(Main.screenWidth / 2 - this.tf_numscore.get_width() / 2);
		motion_Actuate.tween(this,1.0,{ alpha : 1.0});
		motion_Actuate.tween(this,1.0,{ y : 15 + this.get_height() / 4});
		motion_Actuate.timer(1.0).onComplete($bind(this,this.ready));
		joypad_Joypad.enabledX = false;
	}
	,ready: function() {
		utils_KeyboardMap.active = true;
		motion_Actuate.timer(2.0).onComplete(utils_SoundLib.playMenuMusic);
	}
	,readyOut: function() {
		utils_KeyboardMap.active = true;
	}
	,getOut: function() {
		utils_KeyboardMap.active = false;
		this.removeEventListener("enterFrame",$bind(this,this.keyControl));
		this.play.removeEventListener("click",$bind(this,this.nextLevel));
		this.selector.removeEventListener("click",$bind(this,this.resume));
		motion_Actuate.tween(this,1.0,{ alpha : .0});
		motion_Actuate.tween(this,1.0,{ y : Main.screenHeight + this.get_height() / 4}).onComplete($bind(this,this.readyOut));
		joypad_Joypad.enabledX = true;
	}
	,resume: function(e) {
		this.getOut();
		scenes_Gameplay.current.removeAll();
		scenes_Manager.go("levelselect");
	}
	,nextLevel: function(e) {
		this.getOut();
		scenes_Gameplay.current.removeAll();
		if(hud_GUI.level == 3 || hud_GUI.level == 6) scenes_Manager.go("levelselect"); else if(hud_GUI.level == 9) scenes_Manager.go("end"); else {
			scenes_Manager.nextLevel++;
			scenes_Manager.go("gameplay");
		}
	}
	,keyControl: function(e) {
		if(utils_KeyboardMap.active) {
			if(utils_KeyboardMap.isPressed[88] || utils_KeyboardMap.isPressed[13] || utils_KeyboardMap.isPressed[32]) this.nextLevel(); else if(utils_KeyboardMap.isPressed[27]) this.resume();
		}
	}
	,__class__: hud_LevelComplete
});
var hud_MissionBoard = function() {
	openfl_display_Sprite.call(this);
	var bg_bitmapdata = openfl_Assets.getBitmapData("img/gui/cartel - n pantalla.png");
	this.bg = new openfl_display_Bitmap(bg_bitmapdata,0,true);
	this.bg.set_x(0);
	this.bg.set_y(0);
	this.tf = new ui_TextFieldBase(utils_Localization.getText("LEVEL0"));
	this.tf.setFormat(16777215,22);
	this.tf.set_x(this.bg.get_x() + this.bg.get_width() / 2);
	this.tf.set_y(this.bg.get_y() + this.bg.get_height() / 2 - this.tf.get_height() / 2);
	this.addElements();
};
$hxClasses["hud.MissionBoard"] = hud_MissionBoard;
hud_MissionBoard.__name__ = ["hud","MissionBoard"];
hud_MissionBoard.__super__ = openfl_display_Sprite;
hud_MissionBoard.prototype = $extend(openfl_display_Sprite.prototype,{
	addElements: function() {
		this.addChild(this.bg);
		this.addChild(this.tf);
		this.set_visible(false);
		this.set_x(0);
		this.set_y(-Main.screenHeight / 2 - this.bg.get_height() / 2);
	}
	,getIn: function() {
		this.set_visible(true);
		this.tf.set_text(utils_Localization.getText("LEVEL0") + " " + (hud_GUI.level + ""));
		this.tf.set_x(this.bg.get_x() + this.bg.get_width() / 2 - this.tf.get_width() / 2);
		this.set_y(-Main.screenHeight / 2 - this.bg.get_height() / 2);
		motion_Actuate.tween(this,1.0,{ y : Main.screenHeight / 2 - this.bg.get_height() / 2});
	}
	,getOut: function() {
		motion_Actuate.tween(this,1.0,{ y : Main.screenHeight * 1.5 - this.bg.get_height() / 2});
	}
	,__class__: hud_MissionBoard
});
var hud_PauseBoard = function() {
	openfl_display_Sprite.call(this);
	var bg_bitmapdata = openfl_Assets.getBitmapData("img/gui/barra - pausa.png");
	this.bg = new openfl_display_Bitmap(bg_bitmapdata,0,true);
	this.bg.set_x(0);
	this.bg.set_y(Main.screenHeight / 2 - this.bg.get_height() / 2);
	this.btnResume = new hud_ButtonGraphic();
	this.btnResume.setButton("play");
	this.btnResume.set_x(Main.screenWidth / 2);
	this.btnResume.set_y(this.bg.get_y() + this.btnResume.get_height() / 2);
	this.btnResume.addEventListener("click",$bind(this,this.clickResume));
	this.btnExit = new hud_ButtonGraphic();
	this.btnExit.setButton("selector");
	this.btnExit.set_x(Main.screenWidth / 2 + 100);
	this.btnExit.set_y(this.bg.get_y() + this.btnResume.get_height() / 2);
	this.btnExit.addEventListener("click",$bind(this,this.clickExit));
	this.tf = new ui_TextFieldBase(utils_Localization.getText("PAUSE"));
	this.tf.setFormat(0,20);
	this.tf.set_x(this.bg.get_x() + 150);
	this.tf.set_y(this.bg.get_y() + 45);
	this.addElements();
};
$hxClasses["hud.PauseBoard"] = hud_PauseBoard;
hud_PauseBoard.__name__ = ["hud","PauseBoard"];
hud_PauseBoard.__super__ = openfl_display_Sprite;
hud_PauseBoard.prototype = $extend(openfl_display_Sprite.prototype,{
	addElements: function() {
		this.addChild(this.bg);
		this.addChild(this.tf);
		this.addChild(this.btnExit);
		this.addChild(this.btnResume);
		this.set_visible(false);
		this.set_x(0);
		this.set_y(-Main.screenHeight / 2 - this.bg.get_height() / 2);
	}
	,getIn: function() {
		this.set_visible(true);
		this.set_y(-Main.screenHeight / 2 - this.bg.get_height() / 2);
		motion_Actuate.tween(this,1.0,{ y : 0});
	}
	,getOut: function() {
		motion_Actuate.tween(this,1.0,{ y : Main.screenHeight + this.bg.get_height() / 2});
	}
	,clickResume: function(e) {
		this.getOut();
		scenes_Gameplay.paused = !scenes_Gameplay.paused;
		hud_GUI.gamePause();
	}
	,clickExit: function(e) {
		this.getOut();
		scenes_Gameplay.current.removeAll();
		scenes_Manager.go("levelselect");
	}
	,__class__: hud_PauseBoard
});
var joypad_Joypad = function() {
	this.C = 125;
	this.B = 150;
	this.A = 100;
	openfl_display_Sprite.call(this);
	this.createJoypad();
};
$hxClasses["joypad.Joypad"] = joypad_Joypad;
joypad_Joypad.__name__ = ["joypad","Joypad"];
joypad_Joypad.__super__ = openfl_display_Sprite;
joypad_Joypad.prototype = $extend(openfl_display_Sprite.prototype,{
	createJoypad: function() {
		this.contenedorArrows_bitmapdata = openfl_Assets.getBitmapData("img/Joypad/flecha (mando) contenedor.png");
		this.contenedorArrows = new openfl_display_Bitmap(this.contenedorArrows_bitmapdata,0,true);
		this.contenedorActions_bitmapdata = openfl_Assets.getBitmapData("img/Joypad/boton (mando) contenedor.png");
		this.contenedorActions = new openfl_display_Bitmap(this.contenedorActions_bitmapdata,0,true);
		this.contenedorArrows.set_x(40);
		this.contenedorArrows.set_y(Main.screenHeight - this.contenedorArrows.get_height() - 15);
		this.contenedorActions.set_x(Main.screenWidth - this.contenedorActions.get_width() - 30);
		this.contenedorActions.set_y(Main.screenHeight - this.contenedorActions.get_height() - 10);
		this.arrowsArea = new openfl_display_Sprite();
		this.arrowsArea.get_graphics().beginFill(16777215);
		this.arrowsArea.get_graphics().drawRect(0,0,250,250);
		this.arrowsArea.get_graphics().endFill();
		this.arrowsArea.set_x(this.contenedorArrows.get_x() - 80);
		this.arrowsArea.set_y(this.contenedorArrows.get_y() - 80);
		this.addChild(this.contenedorArrows);
		this.addChild(this.contenedorActions);
		this.addChild(this.arrowsArea);
		var spritesheet1 = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/Joypad/flecha (mando).png"),3,3,126,126);
		spritesheet1.addBehavior(new spritesheet_data_BehaviorData("iddle",[0,1,2,3,4,5,6,7,8],true,24,0,0));
		spritesheet1.addBehavior(new spritesheet_data_BehaviorData("none",[0],true,24,0,0));
		spritesheet1.addBehavior(new spritesheet_data_BehaviorData("right",[1],true,24,0,0));
		spritesheet1.addBehavior(new spritesheet_data_BehaviorData("left",[2],true,24,0,0));
		spritesheet1.addBehavior(new spritesheet_data_BehaviorData("up",[3],true,24,0,0));
		spritesheet1.addBehavior(new spritesheet_data_BehaviorData("down",[4],true,24,0,0));
		spritesheet1.addBehavior(new spritesheet_data_BehaviorData("up-right",[5],true,24,0,0));
		spritesheet1.addBehavior(new spritesheet_data_BehaviorData("up-left",[6],true,24,0,0));
		spritesheet1.addBehavior(new spritesheet_data_BehaviorData("down-right",[7],true,24,0,0));
		spritesheet1.addBehavior(new spritesheet_data_BehaviorData("down-left",[8],true,24,0,0));
		this.btn_arrow = new spritesheet_AnimatedSprite(spritesheet1,true);
		this.btn_arrow.set_x(this.contenedorArrows.get_x());
		this.btn_arrow.set_y(this.contenedorArrows.get_y());
		this.btn_arrow.showBehavior("none");
		this.addChild(this.btn_arrow);
		this.btn_arrow.mouseEnabled = false;
		this.btn_shoot = new openfl_display_Sprite();
		var bitmapData = openfl_Assets.getBitmapData("img/Joypad/boton (mando) disparo1.png");
		var bitmap = new openfl_display_Bitmap(bitmapData);
		bitmap.smoothing = true;
		this.btn_shoot.addChild(bitmap);
		bitmap.set_x(-bitmap.get_width() / 2);
		bitmap.set_y(-bitmap.get_height() / 2);
		this.btn_shoot.set_x(this.contenedorActions.get_x() + this.btn_shoot.get_width() / 2);
		this.btn_shoot.set_y(this.contenedorActions.get_y() + this.btn_shoot.get_height() / 2);
		this.addChild(this.btn_shoot);
		if(Main.isMobile) {
			this.arrowsArea.addEventListener("touchEnd",$bind(this,this.arrowOut));
			this.arrowsArea.addEventListener("touchMove",$bind(this,this.arrowOver));
			this.btn_shoot.addEventListener("touchBegin",$bind(this,this.shootOver));
			this.btn_shoot.addEventListener("touchEnd",$bind(this,this.shootOut));
		}
		this.lastTime = openfl_Lib.getTimer();
		this.addEventListener("enterFrame",$bind(this,this.onEnterFrame));
		this.set_alpha(0.75);
		this.arrowsArea.set_alpha(0);
	}
	,shootOut: function(ME) {
		utils_KeyboardMap.joypadUp(88);
		this.btn_shoot.set_scaleX(this.btn_shoot.set_scaleY(1.0));
	}
	,shootOver: function(ME) {
		if(joypad_Joypad.enabledX) utils_KeyboardMap.joypadDown(88);
		this.btn_shoot.set_scaleX(this.btn_shoot.set_scaleY(0.9));
	}
	,arrowOver: function(ME) {
		if(ME.localY >= this.A && ME.localY <= this.B) {
			if(ME.localX < this.C) {
				this.btn_arrow.showBehavior("left");
				this.resetArrows();
				utils_KeyboardMap.joypadDown(37);
			} else if(ME.localX >= this.C) {
				this.btn_arrow.showBehavior("right");
				this.resetArrows();
				utils_KeyboardMap.joypadDown(39);
			} else {
				this.btn_arrow.showBehavior("none");
				this.resetArrows();
			}
		} else if(ME.localX >= this.A && ME.localX <= this.B) {
			if(ME.localY < this.C) {
				this.btn_arrow.showBehavior("up");
				this.resetArrows();
				utils_KeyboardMap.joypadDown(38);
			} else if(ME.localY >= this.C) {
				this.btn_arrow.showBehavior("down");
				this.resetArrows();
				utils_KeyboardMap.joypadDown(40);
			} else {
				this.btn_arrow.showBehavior("none");
				this.resetArrows();
			}
		} else if(ME.localY < this.A && ME.localX < this.A) {
			this.btn_arrow.showBehavior("up-left");
			this.resetArrows();
			utils_KeyboardMap.joypadDown(38);
			utils_KeyboardMap.joypadDown(37);
		} else if(ME.localY < this.A && ME.localX > this.B) {
			this.btn_arrow.showBehavior("up-right");
			this.resetArrows();
			utils_KeyboardMap.joypadDown(38);
			utils_KeyboardMap.joypadDown(39);
		} else if(ME.localY > this.B && ME.localX < this.A) {
			this.btn_arrow.showBehavior("down-left");
			this.resetArrows();
			utils_KeyboardMap.joypadDown(40);
			utils_KeyboardMap.joypadDown(37);
		} else if(ME.localY > this.B && ME.localX > this.B) {
			this.btn_arrow.showBehavior("down-right");
			this.resetArrows();
			utils_KeyboardMap.joypadDown(40);
			utils_KeyboardMap.joypadDown(39);
		} else {
			this.btn_arrow.showBehavior("none");
			this.resetArrows();
		}
	}
	,resetArrows: function() {
		utils_KeyboardMap.joypadUp(37);
		utils_KeyboardMap.joypadUp(39);
		utils_KeyboardMap.joypadUp(38);
		utils_KeyboardMap.joypadUp(40);
	}
	,arrowOut: function(ME) {
		this.btn_arrow.showBehavior("none");
		utils_KeyboardMap.joypadUp(37);
		utils_KeyboardMap.joypadUp(39);
		utils_KeyboardMap.joypadUp(38);
		utils_KeyboardMap.joypadUp(40);
	}
	,onEnterFrame: function(e) {
		var delta = openfl_Lib.getTimer() - this.lastTime;
		this.btn_arrow.update(delta);
		this.lastTime = openfl_Lib.getTimer();
	}
	,showJoystick: function() {
		this.set_visible(true);
	}
	,hideJoystick: function() {
		this.set_visible(false);
	}
	,remove: function() {
		this.removeChild(this.btn_arrow);
		this.removeChild(this.btn_shoot);
		this.removeChild(this.contenedorArrows);
		this.removeChild(this.contenedorActions);
		if(Main.isMobile) {
			this.arrowsArea.removeEventListener("touchEnd",$bind(this,this.arrowOut));
			this.arrowsArea.removeEventListener("touchMove",$bind(this,this.arrowOver));
			this.btn_shoot.addEventListener("touchBegin",$bind(this,this.shootOver));
			this.btn_shoot.addEventListener("touchEnd",$bind(this,this.shootOut));
		}
		this.removeChild(this.arrowsArea);
	}
	,__class__: joypad_Joypad
});
var joypad_JoypadButton = function(callback,graph) {
	this.clickScale = 0.9;
	this.overScale = 1.1;
	this.normalScale = 1.0;
	this.interactionStyle = "scale";
	openfl_display_Sprite.call(this);
	this.callback = callback;
	if(graph == null) this.bitmap = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/interface/boton play.png")); else this.bitmap = new openfl_display_Bitmap(openfl_Assets.getBitmapData(graph));
	this.bitmap.smoothing = true;
	this.bitmap.set_x(-(this.bitmap.get_width() / 2));
	this.bitmap.set_y(-(this.bitmap.get_height() / 2));
	this.addChild(this.bitmap);
	if(callback != null) this.addEventListener("added",$bind(this,this.added));
	this.setScaleValues(1.0,1.15,0.85);
};
$hxClasses["joypad.JoypadButton"] = joypad_JoypadButton;
joypad_JoypadButton.__name__ = ["joypad","JoypadButton"];
joypad_JoypadButton.__super__ = openfl_display_Sprite;
joypad_JoypadButton.prototype = $extend(openfl_display_Sprite.prototype,{
	added: function(e) {
		this.removeEventListener("added",$bind(this,this.added));
		if(Main.isMobile) {
			this.addEventListener("touchTap",$bind(this,this.click));
			this.addEventListener("touchBegin",$bind(this,this.down));
			this.addEventListener("touchEnd",$bind(this,this.out));
		} else {
			this.addEventListener("mouseOut",$bind(this,this.out));
			this.addEventListener("mouseOver",$bind(this,this.over));
			this.addEventListener("mouseDown",$bind(this,this.down));
			this.addEventListener("click",$bind(this,this.click));
		}
	}
	,removed: function(e) {
		if(e.target.contains(this)) {
			this.parent.removeEventListener("removed",$bind(this,this.removed));
			this.removeEventListener("mouseOut",$bind(this,this.out));
			this.removeEventListener("mouseOver",$bind(this,this.over));
			this.removeEventListener("mouseDown",$bind(this,this.down));
			this.removeEventListener("touchBegin",$bind(this,this.click));
		}
	}
	,callbackOnOver: function() {
		this.removeEventListener("mouseOver",$bind(this,this.over));
		this.addEventListener("mouseOver",$bind(this,this.click));
	}
	,setScaleValues: function(normal,over,click) {
		this.normalScale = normal;
		this.overScale = over;
		this.clickScale = click;
	}
	,click: function(e) {
		this.callback();
		if(this.interactionStyle == "scale") this.set_scaleX(this.set_scaleY(this.normalScale));
	}
	,out: function(e) {
		if(this.interactionStyle == "scale") this.set_scaleX(this.set_scaleY(this.normalScale));
	}
	,over: function(e) {
		utils_SoundLib.playFX("over");
		if(this.interactionStyle == "scale") this.set_scaleX(this.set_scaleY(this.overScale));
	}
	,down: function(e) {
		if(this.interactionStyle == "scale") this.set_scaleX(this.set_scaleY(this.clickScale));
	}
	,__class__: joypad_JoypadButton
});
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) Error.captureStackTrace(this,js__$Boot_HaxeError);
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg;
	if(i != null) msg = i.fileName + ":" + i.lineNumber + ": "; else msg = "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	if(typeof(document) != "undefined" && (d = document.getElementById("haxe:trace")) != null) d.innerHTML += js_Boot.__unhtml(msg) + "<br/>"; else if(typeof console != "undefined" && console.log != null) console.log(msg);
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) return Array; else {
		var cl = o.__class__;
		if(cl != null) return cl;
		var name = js_Boot.__nativeClassName(o);
		if(name != null) return js_Boot.__resolveNativeClass(name);
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) return "null";
	if(s.length >= 5) return "<...>";
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) t = "object";
	switch(t) {
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) return o[0];
				var str2 = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i1 = _g1++;
					if(i1 != 2) str2 += "," + js_Boot.__string_rec(o[i1],s); else str2 += js_Boot.__string_rec(o[i1],s);
				}
				return str2 + ")";
			}
			var l = o.length;
			var i;
			var str1 = "[";
			s += "\t";
			var _g2 = 0;
			while(_g2 < l) {
				var i2 = _g2++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") return s2;
		}
		var k = null;
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) str += ", \n";
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "function":
		return "<function>";
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) return false;
	if(cc == cl) return true;
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) return true;
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) return false;
	switch(cl) {
	case Int:
		return (o|0) === o;
	case Float:
		return typeof(o) == "number";
	case Bool:
		return typeof(o) == "boolean";
	case String:
		return typeof(o) == "string";
	case Array:
		return (o instanceof Array) && o.__enum__ == null;
	case Dynamic:
		return true;
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) return true;
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) return true;
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) return true;
			}
		} else return false;
		if(cl == Class && o.__name__ != null) return true;
		if(cl == Enum && o.__ename__ != null) return true;
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) return o; else throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") return null;
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		return s;
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return null;
	}
};
js_Browser.alert = function(v) {
	window.alert(js_Boot.__string_rec(v,""));
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g = 0;
		while(_g < len) {
			var i = _g++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null?null:end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	if(byteOffset == null) this.offset = 0; else this.offset = byteOffset;
	if(byteLength == null) this.length = buffer.byteLength - this.offset; else this.length = byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
};
$hxClasses["js.html.compat.DataView"] = js_html_compat_DataView;
js_html_compat_DataView.__name__ = ["js","html","compat","DataView"];
js_html_compat_DataView.prototype = {
	getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) return v - 256; else return v;
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) return v - 65536; else return v;
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8; else return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) return a | b << 8 | c << 16 | d << 24; else return d | c << 8 | b << 16 | a << 24;
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) return v + 4294967296.; else return v;
	}
	,getFloat32: function(byteOffset,littleEndian) {
		return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset,littleEndian));
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		return haxe_io_FPHelper.i64ToDouble(littleEndian?a:b,littleEndian?b:a);
	}
	,setInt8: function(byteOffset,value) {
		if(value < 0) this.buf.a[byteOffset + this.offset] = value + 128 & 255; else this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0?value + 65536:value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,haxe_io_FPHelper.floatToI32(value),littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.doubleToI64(value);
		if(littleEndian) {
			this.setUint32(byteOffset,i64.low);
			this.setUint32(byteOffset,i64.high);
		} else {
			this.setUint32(byteOffset,i64.high);
			this.setUint32(byteOffset,i64.low);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g = 0;
		while(_g < arg1) {
			var i = _g++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) offset = 0;
		if(length == null) length = buffer.byteLength - offset;
		if(offset == 0) arr = buffer.a; else arr = buffer.a.slice(offset,offset + length);
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	var t = this;
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > t.byteLength) throw new js__$Boot_HaxeError("set() outside of range");
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			t[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > t.byteLength) throw new js__$Boot_HaxeError("set() outside of range");
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			t[i1 + offset] = a1[i1];
		}
	} else throw new js__$Boot_HaxeError("TODO");
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var t = this;
	var a = js_html_compat_Uint8Array._new(t.slice(start,end));
	a.byteOffset = start;
	return a;
};
var lime_AssetCache = function() {
	this.enabled = true;
	this.audio = new haxe_ds_StringMap();
	this.font = new haxe_ds_StringMap();
	this.image = new haxe_ds_StringMap();
	this.version = Std["int"](Math.random() * 1000000);
};
$hxClasses["lime.AssetCache"] = lime_AssetCache;
lime_AssetCache.__name__ = ["lime","AssetCache"];
lime_AssetCache.prototype = {
	clear: function(prefix) {
		if(prefix == null) {
			this.audio = new haxe_ds_StringMap();
			this.font = new haxe_ds_StringMap();
			this.image = new haxe_ds_StringMap();
		} else {
			var keys = this.audio.keys();
			while( keys.hasNext() ) {
				var key = keys.next();
				if(StringTools.startsWith(key,prefix)) this.audio.remove(key);
			}
			var keys1 = this.font.keys();
			while( keys1.hasNext() ) {
				var key1 = keys1.next();
				if(StringTools.startsWith(key1,prefix)) this.font.remove(key1);
			}
			var keys2 = this.image.keys();
			while( keys2.hasNext() ) {
				var key2 = keys2.next();
				if(StringTools.startsWith(key2,prefix)) this.image.remove(key2);
			}
		}
	}
	,__class__: lime_AssetCache
};
var lime_app_Event_$Void_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Void_Void"] = lime_app_Event_$Void_$Void;
lime_app_Event_$Void_$Void.__name__ = ["lime","app","Event_Void_Void"];
lime_app_Event_$Void_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function() {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i]();
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Void_$Void
};
var lime_Assets = function() { };
$hxClasses["lime.Assets"] = lime_Assets;
lime_Assets.__name__ = ["lime","Assets"];
lime_Assets.exists = function(id,type) {
	lime_Assets.initialize();
	if(type == null) type = "BINARY";
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) return library.exists(symbolName,type);
	return false;
};
lime_Assets.getAudioBuffer = function(id,useCache) {
	if(useCache == null) useCache = true;
	lime_Assets.initialize();
	if(useCache && lime_Assets.cache.enabled && lime_Assets.cache.audio.exists(id)) {
		var audio = lime_Assets.cache.audio.get(id);
		if(lime_Assets.isValidAudio(audio)) return audio;
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"SOUND")) {
			if(library.isLocal(symbolName,"SOUND")) {
				var audio1 = library.getAudioBuffer(symbolName);
				if(useCache && lime_Assets.cache.enabled) lime_Assets.cache.audio.set(id,audio1);
				return audio1;
			} else haxe_Log.trace("[Assets] Audio asset \"" + id + "\" exists, but only asynchronously",{ fileName : "Assets.hx", lineNumber : 122, className : "lime.Assets", methodName : "getAudioBuffer"});
		} else haxe_Log.trace("[Assets] There is no audio asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 128, className : "lime.Assets", methodName : "getAudioBuffer"});
	} else haxe_Log.trace("[Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 134, className : "lime.Assets", methodName : "getAudioBuffer"});
	return null;
};
lime_Assets.getBytes = function(id) {
	lime_Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"BINARY")) {
			if(library.isLocal(symbolName,"BINARY")) return library.getBytes(symbolName); else haxe_Log.trace("[Assets] String or Bytes asset \"" + id + "\" exists, but only asynchronously",{ fileName : "Assets.hx", lineNumber : 171, className : "lime.Assets", methodName : "getBytes"});
		} else haxe_Log.trace("[Assets] There is no String or Bytes asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 177, className : "lime.Assets", methodName : "getBytes"});
	} else haxe_Log.trace("[Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 183, className : "lime.Assets", methodName : "getBytes"});
	return null;
};
lime_Assets.getFont = function(id,useCache) {
	if(useCache == null) useCache = true;
	lime_Assets.initialize();
	if(useCache && lime_Assets.cache.enabled && lime_Assets.cache.font.exists(id)) return lime_Assets.cache.font.get(id);
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"FONT")) {
			if(library.isLocal(symbolName,"FONT")) {
				var font = library.getFont(symbolName);
				if(useCache && lime_Assets.cache.enabled) lime_Assets.cache.font.set(id,font);
				return font;
			} else haxe_Log.trace("[Assets] Font asset \"" + id + "\" exists, but only asynchronously",{ fileName : "Assets.hx", lineNumber : 234, className : "lime.Assets", methodName : "getFont"});
		} else haxe_Log.trace("[Assets] There is no Font asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 240, className : "lime.Assets", methodName : "getFont"});
	} else haxe_Log.trace("[Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 246, className : "lime.Assets", methodName : "getFont"});
	return null;
};
lime_Assets.getImage = function(id,useCache) {
	if(useCache == null) useCache = true;
	lime_Assets.initialize();
	if(useCache && lime_Assets.cache.enabled && lime_Assets.cache.image.exists(id)) {
		var image = lime_Assets.cache.image.get(id);
		if(lime_Assets.isValidImage(image)) return image;
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"IMAGE")) {
			if(library.isLocal(symbolName,"IMAGE")) {
				var image1 = library.getImage(symbolName);
				if(useCache && lime_Assets.cache.enabled) lime_Assets.cache.image.set(id,image1);
				return image1;
			} else haxe_Log.trace("[Assets] Image asset \"" + id + "\" exists, but only asynchronously",{ fileName : "Assets.hx", lineNumber : 304, className : "lime.Assets", methodName : "getImage"});
		} else haxe_Log.trace("[Assets] There is no Image asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 310, className : "lime.Assets", methodName : "getImage"});
	} else haxe_Log.trace("[Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 316, className : "lime.Assets", methodName : "getImage"});
	return null;
};
lime_Assets.getLibrary = function(name) {
	if(name == null || name == "") name = "default";
	return lime_Assets.libraries.get(name);
};
lime_Assets.getPath = function(id) {
	lime_Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,null)) return library.getPath(symbolName); else haxe_Log.trace("[Assets] There is no asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 364, className : "lime.Assets", methodName : "getPath"});
	} else haxe_Log.trace("[Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 370, className : "lime.Assets", methodName : "getPath"});
	return null;
};
lime_Assets.getText = function(id) {
	lime_Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"TEXT")) {
			if(library.isLocal(symbolName,"TEXT")) return library.getText(symbolName); else haxe_Log.trace("[Assets] String asset \"" + id + "\" exists, but only asynchronously",{ fileName : "Assets.hx", lineNumber : 407, className : "lime.Assets", methodName : "getText"});
		} else haxe_Log.trace("[Assets] There is no String asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 413, className : "lime.Assets", methodName : "getText"});
	} else haxe_Log.trace("[Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 419, className : "lime.Assets", methodName : "getText"});
	return null;
};
lime_Assets.initialize = function() {
	if(!lime_Assets.initialized) {
		lime_Assets.registerLibrary("default",new DefaultAssetLibrary());
		lime_Assets.initialized = true;
	}
};
lime_Assets.isLocal = function(id,type,useCache) {
	if(useCache == null) useCache = true;
	lime_Assets.initialize();
	if(useCache && lime_Assets.cache.enabled) {
		if(type == "IMAGE" || type == null) {
			if(lime_Assets.cache.image.exists(id)) return true;
		}
		if(type == "FONT" || type == null) {
			if(lime_Assets.cache.font.exists(id)) return true;
		}
		if(type == "SOUND" || type == "MUSIC" || type == null) {
			if(lime_Assets.cache.audio.exists(id)) return true;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) return library.isLocal(symbolName,type);
	return false;
};
lime_Assets.isValidAudio = function(buffer) {
	return buffer != null;
};
lime_Assets.isValidImage = function(buffer) {
	return true;
};
lime_Assets.list = function(type) {
	lime_Assets.initialize();
	var items = [];
	var $it0 = lime_Assets.libraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var libraryItems = library.list(type);
		if(libraryItems != null) items = items.concat(libraryItems);
	}
	return items;
};
lime_Assets.loadAudioBuffer = function(id,useCache) {
	if(useCache == null) useCache = true;
	lime_Assets.initialize();
	var promise = new lime_app_Promise();
	if(useCache && lime_Assets.cache.enabled && lime_Assets.cache.audio.exists(id)) {
		var audio = lime_Assets.cache.audio.get(id);
		if(lime_Assets.isValidAudio(audio)) {
			promise.complete(audio);
			return promise.future;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"SOUND")) {
			var future = library.loadAudioBuffer(symbolName);
			if(useCache && lime_Assets.cache.enabled) future.onComplete(function(audio1) {
				lime_Assets.cache.audio.set(id,audio1);
			});
			promise.completeWith(future);
		} else promise.error("[Assets] There is no audio asset with an ID of \"" + id + "\"");
	} else promise.error("[Assets] There is no asset library named \"" + libraryName + "\"");
	return promise.future;
};
lime_Assets.loadBytes = function(id) {
	lime_Assets.initialize();
	var promise = new lime_app_Promise();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"BINARY")) promise.completeWith(library.loadBytes(symbolName)); else promise.error("[Assets] There is no String or Bytes asset with an ID of \"" + id + "\"");
	} else promise.error("[Assets] There is no asset library named \"" + libraryName + "\"");
	return promise.future;
};
lime_Assets.loadFont = function(id) {
	lime_Assets.initialize();
	var promise = new lime_app_Promise();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"FONT")) promise.completeWith(library.loadFont(symbolName)); else promise.error("[Assets] There is no Font asset with an ID of \"" + id + "\"");
	} else promise.error("[Assets] There is no asset library named \"" + libraryName + "\"");
	return promise.future;
};
lime_Assets.loadImage = function(id,useCache) {
	if(useCache == null) useCache = true;
	lime_Assets.initialize();
	var promise = new lime_app_Promise();
	if(useCache && lime_Assets.cache.enabled && lime_Assets.cache.image.exists(id)) {
		var image = lime_Assets.cache.image.get(id);
		if(lime_Assets.isValidImage(image)) {
			promise.complete(image);
			return promise.future;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"IMAGE")) {
			var future = library.loadImage(symbolName);
			if(useCache && lime_Assets.cache.enabled) future.onComplete(function(image1) {
				lime_Assets.cache.image.set(id,image1);
			});
			promise.completeWith(future);
		} else promise.error("[Assets] There is no Image asset with an ID of \"" + id + "\"");
	} else promise.error("[Assets] There is no asset library named \"" + libraryName + "\"");
	return promise.future;
};
lime_Assets.loadLibrary = function(name) {
	lime_Assets.initialize();
	var promise = new lime_app_Promise();
	var data = lime_Assets.getText("libraries/" + name + ".json");
	if(data != null && data != "") {
		var info = JSON.parse(data);
		var library = Type.createInstance(Type.resolveClass(info.type),info.args);
		lime_Assets.libraries.set(name,library);
		library.onChange.add(($_=lime_Assets.onChange,$bind($_,$_.dispatch)));
		promise.completeWith(library.load());
	} else promise.error("[Assets] There is no asset library named \"" + name + "\"");
	return promise.future;
};
lime_Assets.loadText = function(id) {
	lime_Assets.initialize();
	var promise = new lime_app_Promise();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"TEXT")) promise.completeWith(library.loadText(symbolName)); else promise.error("[Assets] There is no String asset with an ID of \"" + id + "\"");
	} else promise.error("[Assets] There is no asset library named \"" + libraryName + "\"");
	return promise.future;
};
lime_Assets.registerLibrary = function(name,library) {
	if(lime_Assets.libraries.exists(name)) {
		if(lime_Assets.libraries.get(name) == library) return; else lime_Assets.unloadLibrary(name);
	}
	if(library != null) library.onChange.add(lime_Assets.library_onChange);
	lime_Assets.libraries.set(name,library);
};
lime_Assets.unloadLibrary = function(name) {
	lime_Assets.initialize();
	var library = lime_Assets.libraries.get(name);
	if(library != null) {
		lime_Assets.cache.clear(name + ":");
		library.onChange.remove(lime_Assets.library_onChange);
		library.unload();
	}
	lime_Assets.libraries.remove(name);
};
lime_Assets.library_onChange = function() {
	lime_Assets.cache.clear();
	lime_Assets.onChange.dispatch();
};
var lime__$backend_html5_HTML5Application = function(parent) {
	this.gameDeviceCache = new haxe_ds_IntMap();
	this.parent = parent;
	this.currentUpdate = 0;
	this.lastUpdate = 0;
	this.nextUpdate = 0;
	this.framePeriod = -1;
	lime_audio_AudioManager.init();
};
$hxClasses["lime._backend.html5.HTML5Application"] = lime__$backend_html5_HTML5Application;
lime__$backend_html5_HTML5Application.__name__ = ["lime","_backend","html5","HTML5Application"];
lime__$backend_html5_HTML5Application.prototype = {
	convertKeyCode: function(keyCode) {
		if(keyCode >= 65 && keyCode <= 90) return keyCode + 32;
		switch(keyCode) {
		case 16:
			return 1073742049;
		case 17:
			return 1073742048;
		case 18:
			return 1073742050;
		case 20:
			return 1073741881;
		case 144:
			return 1073741907;
		case 37:
			return 1073741904;
		case 38:
			return 1073741906;
		case 39:
			return 1073741903;
		case 40:
			return 1073741905;
		case 45:
			return 1073741897;
		case 46:
			return 127;
		case 36:
			return 1073741898;
		case 35:
			return 1073741901;
		case 33:
			return 1073741899;
		case 34:
			return 1073741902;
		case 112:
			return 1073741882;
		case 113:
			return 1073741883;
		case 114:
			return 1073741884;
		case 115:
			return 1073741885;
		case 116:
			return 1073741886;
		case 117:
			return 1073741887;
		case 118:
			return 1073741888;
		case 119:
			return 1073741889;
		case 120:
			return 1073741890;
		case 121:
			return 1073741891;
		case 122:
			return 1073741892;
		case 123:
			return 1073741893;
		case 124:
			return 1073741928;
		case 125:
			return 1073741929;
		case 126:
			return 1073741930;
		case 186:
			return 59;
		case 187:
			return 61;
		case 188:
			return 44;
		case 189:
			return 45;
		case 190:
			return 46;
		case 191:
			return 47;
		case 192:
			return 96;
		case 219:
			return 91;
		case 220:
			return 92;
		case 221:
			return 93;
		case 222:
			return 39;
		}
		return keyCode;
	}
	,create: function(config) {
	}
	,exec: function() {
		window.addEventListener("keydown",$bind(this,this.handleKeyEvent),false);
		window.addEventListener("keyup",$bind(this,this.handleKeyEvent),false);
		window.addEventListener("focus",$bind(this,this.handleWindowEvent),false);
		window.addEventListener("blur",$bind(this,this.handleWindowEvent),false);
		window.addEventListener("resize",$bind(this,this.handleWindowEvent),false);
		window.addEventListener("beforeunload",$bind(this,this.handleWindowEvent),false);
		
			if (!CanvasRenderingContext2D.prototype.isPointInStroke) {
				CanvasRenderingContext2D.prototype.isPointInStroke = function (path, x, y) {
					return false;
				};
			}
			
			var lastTime = 0;
			var vendors = ['ms', 'moz', 'webkit', 'o'];
			for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
				window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];
				window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];
			}
			
			if (!window.requestAnimationFrame)
				window.requestAnimationFrame = function(callback, element) {
					var currTime = new Date().getTime();
					var timeToCall = Math.max(0, 16 - (currTime - lastTime));
					var id = window.setTimeout(function() { callback(currTime + timeToCall); }, 
					  timeToCall);
					lastTime = currTime + timeToCall;
					return id;
				};
			
			if (!window.cancelAnimationFrame)
				window.cancelAnimationFrame = function(id) {
					clearTimeout(id);
				};
			
			window.requestAnimFrame = window.requestAnimationFrame;
		;
		this.lastUpdate = new Date().getTime();
		this.handleApplicationEvent();
		return 0;
	}
	,exit: function() {
	}
	,getFrameRate: function() {
		if(this.framePeriod < 0) return 60; else if(this.framePeriod == 1000) return 0; else return 1000 / this.framePeriod;
	}
	,handleApplicationEvent: function(__) {
		this.updateGameDevices();
		this.currentUpdate = new Date().getTime();
		if(this.currentUpdate >= this.nextUpdate) {
			this.deltaTime = this.currentUpdate - this.lastUpdate;
			this.parent.onUpdate.dispatch(this.deltaTime | 0);
			if(this.parent.renderers[0] != null) {
				this.parent.renderers[0].onRender.dispatch();
				this.parent.renderers[0].flip();
			}
			if(this.framePeriod < 0) {
				this.nextUpdate = this.currentUpdate;
				this.nextUpdate = this.currentUpdate;
			} else this.nextUpdate = this.currentUpdate + this.framePeriod;
			this.lastUpdate = this.currentUpdate;
		}
		window.requestAnimationFrame($bind(this,this.handleApplicationEvent));
	}
	,handleKeyEvent: function(event) {
		if(this.parent.windows[0] != null) {
			var keyCode = this.convertKeyCode(event.keyCode != null?event.keyCode:event.which);
			var modifier;
			modifier = (event.shiftKey?3:0) | (event.ctrlKey?192:0) | (event.altKey?768:0) | (event.metaKey?3072:0);
			if(event.type == "keydown") {
				this.parent.windows[0].onKeyDown.dispatch(keyCode,modifier);
				if(this.parent.windows[0].onKeyDown.canceled) event.preventDefault();
			} else {
				this.parent.windows[0].onKeyUp.dispatch(keyCode,modifier);
				if(this.parent.windows[0].onKeyUp.canceled) event.preventDefault();
			}
		}
	}
	,handleWindowEvent: function(event) {
		if(this.parent.windows[0] != null) {
			var _g = event.type;
			switch(_g) {
			case "focus":
				this.parent.windows[0].onFocusIn.dispatch();
				this.parent.windows[0].onActivate.dispatch();
				break;
			case "blur":
				this.parent.windows[0].onFocusOut.dispatch();
				this.parent.windows[0].onDeactivate.dispatch();
				break;
			case "resize":
				var cacheWidth = this.parent.windows[0].__width;
				var cacheHeight = this.parent.windows[0].__height;
				this.parent.windows[0].backend.handleResize();
				if(this.parent.windows[0].__width != cacheWidth || this.parent.windows[0].__height != cacheHeight) this.parent.windows[0].onResize.dispatch(this.parent.windows[0].__width,this.parent.windows[0].__height);
				break;
			case "beforeunload":
				this.parent.windows[0].onClose.dispatch();
				break;
			}
		}
	}
	,setFrameRate: function(value) {
		if(value >= 60) this.framePeriod = -1; else if(value > 0) this.framePeriod = 1000 / value; else this.framePeriod = 1000;
		return value;
	}
	,updateGameDevices: function() {
		var devices = lime_ui_Joystick.__getDeviceData();
		if(devices == null) return;
		var id;
		var gamepad;
		var joystick;
		var data;
		var cache;
		var _g1 = 0;
		var _g = devices.length;
		while(_g1 < _g) {
			var i = _g1++;
			id = i;
			data = devices[id];
			if(data == null) continue;
			if(!this.gameDeviceCache.h.hasOwnProperty(id)) {
				cache = new lime__$backend_html5_GameDeviceData();
				cache.id = id;
				cache.connected = data.connected;
				var _g3 = 0;
				var _g2 = data.buttons.length;
				while(_g3 < _g2) {
					var i1 = _g3++;
					cache.buttons.push(data.buttons[i1].value);
				}
				var _g31 = 0;
				var _g21 = data.axes.length;
				while(_g31 < _g21) {
					var i2 = _g31++;
					cache.axes.push(data.axes[i2]);
				}
				if(data.mapping == "standard") cache.isGamepad = true;
				this.gameDeviceCache.h[id] = cache;
				if(data.connected) {
					lime_ui_Joystick.__connect(id);
					if(cache.isGamepad) lime_ui_Gamepad.__connect(id);
				}
			}
			cache = this.gameDeviceCache.h[id];
			joystick = lime_ui_Joystick.devices.h[id];
			gamepad = lime_ui_Gamepad.devices.h[id];
			if(data.connected) {
				var button;
				var value;
				var _g32 = 0;
				var _g22 = data.buttons.length;
				while(_g32 < _g22) {
					var i3 = _g32++;
					value = data.buttons[i3].value;
					if(value != cache.buttons[i3]) {
						if(i3 == 6) {
							joystick.onAxisMove.dispatch(data.axes.length,value);
							if(gamepad != null) gamepad.onAxisMove.dispatch(4,value);
						} else if(i3 == 7) {
							joystick.onAxisMove.dispatch(data.axes.length + 1,value);
							if(gamepad != null) gamepad.onAxisMove.dispatch(5,value);
						} else {
							if(value > 0) joystick.onButtonDown.dispatch(i3); else joystick.onButtonUp.dispatch(i3);
							if(gamepad != null) {
								switch(i3) {
								case 0:
									button = 0;
									break;
								case 1:
									button = 1;
									break;
								case 2:
									button = 2;
									break;
								case 3:
									button = 3;
									break;
								case 4:
									button = 9;
									break;
								case 5:
									button = 10;
									break;
								case 8:
									button = 4;
									break;
								case 9:
									button = 6;
									break;
								case 10:
									button = 7;
									break;
								case 11:
									button = 8;
									break;
								case 12:
									button = 11;
									break;
								case 13:
									button = 12;
									break;
								case 14:
									button = 13;
									break;
								case 15:
									button = 14;
									break;
								case 16:
									button = 5;
									break;
								default:
									continue;
								}
								if(value > 0) gamepad.onButtonDown.dispatch(button); else gamepad.onButtonUp.dispatch(button);
							}
						}
						cache.buttons[i3] = value;
					}
				}
				var _g33 = 0;
				var _g23 = data.axes.length;
				while(_g33 < _g23) {
					var i4 = _g33++;
					if(data.axes[i4] != cache.axes[i4]) {
						joystick.onAxisMove.dispatch(i4,data.axes[i4]);
						if(gamepad != null) gamepad.onAxisMove.dispatch(i4,data.axes[i4]);
						cache.axes[i4] = data.axes[i4];
					}
				}
			} else if(cache.connected) {
				cache.connected = false;
				lime_ui_Joystick.__disconnect(id);
				lime_ui_Gamepad.__disconnect(id);
			}
		}
	}
	,__class__: lime__$backend_html5_HTML5Application
};
var lime__$backend_html5_GameDeviceData = function() {
	this.connected = true;
	this.buttons = [];
	this.axes = [];
};
$hxClasses["lime._backend.html5.GameDeviceData"] = lime__$backend_html5_GameDeviceData;
lime__$backend_html5_GameDeviceData.__name__ = ["lime","_backend","html5","GameDeviceData"];
lime__$backend_html5_GameDeviceData.prototype = {
	__class__: lime__$backend_html5_GameDeviceData
};
var lime__$backend_html5_HTML5Mouse = function() { };
$hxClasses["lime._backend.html5.HTML5Mouse"] = lime__$backend_html5_HTML5Mouse;
lime__$backend_html5_HTML5Mouse.__name__ = ["lime","_backend","html5","HTML5Mouse"];
lime__$backend_html5_HTML5Mouse.__cursor = null;
lime__$backend_html5_HTML5Mouse.__hidden = null;
lime__$backend_html5_HTML5Mouse.hide = function() {
	if(!lime__$backend_html5_HTML5Mouse.__hidden) {
		lime__$backend_html5_HTML5Mouse.__hidden = true;
		var _g = 0;
		var _g1 = lime_app_Application.current.windows;
		while(_g < _g1.length) {
			var $window = _g1[_g];
			++_g;
			$window.backend.element.style.cursor = "none";
		}
	}
};
lime__$backend_html5_HTML5Mouse.show = function() {
	if(lime__$backend_html5_HTML5Mouse.__hidden) {
		lime__$backend_html5_HTML5Mouse.__hidden = false;
		var cacheValue = lime__$backend_html5_HTML5Mouse.__cursor;
		lime__$backend_html5_HTML5Mouse.__cursor = null;
		lime__$backend_html5_HTML5Mouse.set_cursor(cacheValue);
	}
};
lime__$backend_html5_HTML5Mouse.warp = function(x,y,window) {
};
lime__$backend_html5_HTML5Mouse.get_cursor = function() {
	if(lime__$backend_html5_HTML5Mouse.__cursor == null) return lime_ui_MouseCursor.DEFAULT;
	return lime__$backend_html5_HTML5Mouse.__cursor;
};
lime__$backend_html5_HTML5Mouse.set_cursor = function(value) {
	if(lime__$backend_html5_HTML5Mouse.__cursor != value) {
		if(!lime__$backend_html5_HTML5Mouse.__hidden) {
			var _g = 0;
			var _g1 = lime_app_Application.current.windows;
			while(_g < _g1.length) {
				var $window = _g1[_g];
				++_g;
				switch(value[1]) {
				case 0:
					$window.backend.element.style.cursor = "default";
					break;
				case 1:
					$window.backend.element.style.cursor = "crosshair";
					break;
				case 3:
					$window.backend.element.style.cursor = "move";
					break;
				case 4:
					$window.backend.element.style.cursor = "pointer";
					break;
				case 5:
					$window.backend.element.style.cursor = "nesw-resize";
					break;
				case 6:
					$window.backend.element.style.cursor = "ns-resize";
					break;
				case 7:
					$window.backend.element.style.cursor = "nwse-resize";
					break;
				case 8:
					$window.backend.element.style.cursor = "ew-resize";
					break;
				case 9:
					$window.backend.element.style.cursor = "text";
					break;
				case 10:
					$window.backend.element.style.cursor = "wait";
					break;
				case 11:
					$window.backend.element.style.cursor = "wait";
					break;
				default:
					$window.backend.element.style.cursor = "auto";
				}
			}
		}
		lime__$backend_html5_HTML5Mouse.__cursor = value;
	}
	return lime__$backend_html5_HTML5Mouse.__cursor;
};
lime__$backend_html5_HTML5Mouse.get_lock = function() {
	return false;
};
lime__$backend_html5_HTML5Mouse.set_lock = function(value) {
	return value;
};
var lime__$backend_html5_HTML5Renderer = function(parent) {
	this.parent = parent;
};
$hxClasses["lime._backend.html5.HTML5Renderer"] = lime__$backend_html5_HTML5Renderer;
lime__$backend_html5_HTML5Renderer.__name__ = ["lime","_backend","html5","HTML5Renderer"];
lime__$backend_html5_HTML5Renderer.prototype = {
	create: function() {
		this.createContext();
		{
			var _g = this.parent.context;
			switch(_g[1]) {
			case 0:
				this.parent.window.backend.canvas.addEventListener("webglcontextlost",$bind(this,this.handleEvent),false);
				this.parent.window.backend.canvas.addEventListener("webglcontextrestored",$bind(this,this.handleEvent),false);
				break;
			default:
			}
		}
	}
	,createContext: function() {
		if(this.parent.window.backend.div != null) {
			this.parent.context = lime_graphics_RenderContext.DOM(this.parent.window.backend.div);
			this.parent.type = lime_graphics_RendererType.DOM;
		} else if(this.parent.window.backend.canvas != null) {
			var webgl = null;
			if(webgl == null) {
				this.parent.context = lime_graphics_RenderContext.CANVAS(this.parent.window.backend.canvas.getContext("2d"));
				this.parent.type = lime_graphics_RendererType.CANVAS;
			} else {
				lime_graphics_opengl_GL.context = webgl;
				this.parent.context = lime_graphics_RenderContext.OPENGL(lime_graphics_opengl_GL.context);
				this.parent.type = lime_graphics_RendererType.OPENGL;
			}
		}
	}
	,flip: function() {
	}
	,handleEvent: function(event) {
		var _g = event.type;
		switch(_g) {
		case "webglcontextlost":
			event.preventDefault();
			this.parent.context = null;
			this.parent.onContextLost.dispatch();
			break;
		case "webglcontextrestored":
			this.createContext();
			this.parent.onContextRestored.dispatch(this.parent.context);
			break;
		default:
		}
	}
	,readPixels: function(rect) {
		if(this.parent.window.backend.canvas != null) {
			if(rect == null) rect = new lime_math_Rectangle(0,0,this.parent.window.backend.canvas.width,this.parent.window.backend.canvas.height); else rect.__contract(0,0,this.parent.window.backend.canvas.width,this.parent.window.backend.canvas.height);
			if(rect.width > 0 && rect.height > 0) {
				var canvas = window.document.createElement("canvas");
				canvas.width = rect.width | 0;
				canvas.height = rect.height | 0;
				var context = canvas.getContext("2d");
				context.drawImage(this.parent.window.backend.canvas,-rect.x,-rect.y);
				return lime_graphics_Image.fromCanvas(canvas);
			}
		}
		return null;
	}
	,render: function() {
	}
	,__class__: lime__$backend_html5_HTML5Renderer
};
var lime__$backend_html5_HTML5Window = function(parent) {
	this.unusedTouchesPool = new List();
	this.currentTouches = new haxe_ds_IntMap();
	this.parent = parent;
	if(parent.config != null && Object.prototype.hasOwnProperty.call(parent.config,"element")) this.element = parent.config.element;
};
$hxClasses["lime._backend.html5.HTML5Window"] = lime__$backend_html5_HTML5Window;
lime__$backend_html5_HTML5Window.__name__ = ["lime","_backend","html5","HTML5Window"];
lime__$backend_html5_HTML5Window.textInput = null;
lime__$backend_html5_HTML5Window.prototype = {
	alert: function(message,title) {
		if(message != null) js_Browser.alert(message);
	}
	,close: function() {
		this.parent.application.removeWindow(this.parent);
	}
	,create: function(application) {
		this.setWidth = this.parent.__width;
		this.setHeight = this.parent.__height;
		this.parent.id = lime__$backend_html5_HTML5Window.windowID++;
		if(js_Boot.__instanceof(this.element,HTMLCanvasElement)) this.canvas = this.element; else this.canvas = window.document.createElement("canvas");
		if(this.canvas != null) {
			var style = this.canvas.style;
			style.setProperty("-webkit-transform","translateZ(0)",null);
			style.setProperty("transform","translateZ(0)",null);
		} else if(this.div != null) {
			var style1 = this.div.style;
			style1.setProperty("-webkit-transform","translate3D(0,0,0)",null);
			style1.setProperty("transform","translate3D(0,0,0)",null);
			style1.position = "relative";
			style1.overflow = "hidden";
			style1.setProperty("-webkit-user-select","none",null);
			style1.setProperty("-moz-user-select","none",null);
			style1.setProperty("-ms-user-select","none",null);
			style1.setProperty("-o-user-select","none",null);
		}
		if(this.parent.__width == 0 && this.parent.__height == 0) {
			if(this.element != null) {
				this.parent.set_width(this.element.clientWidth);
				this.parent.set_height(this.element.clientHeight);
			} else {
				this.parent.set_width(window.innerWidth);
				this.parent.set_height(window.innerHeight);
			}
			this.parent.set_fullscreen(true);
		}
		if(this.canvas != null) {
			this.canvas.width = this.parent.__width;
			this.canvas.height = this.parent.__height;
		} else {
			this.div.style.width = this.parent.__width + "px";
			this.div.style.height = this.parent.__height + "px";
		}
		this.handleResize();
		if(this.element != null) {
			if(this.canvas != null) {
				if(this.element != this.canvas) this.element.appendChild(this.canvas);
			} else this.element.appendChild(this.div);
			var events = ["mousedown","mouseenter","mouseleave","mousemove","mouseup","wheel"];
			var _g = 0;
			while(_g < events.length) {
				var event = events[_g];
				++_g;
				this.element.addEventListener(event,$bind(this,this.handleMouseEvent),true);
			}
			window.document.addEventListener("dragstart",function(e) {
				if(e.target.nodeName.toLowerCase() == "img") {
					e.preventDefault();
					return false;
				}
				return true;
			},false);
			this.element.addEventListener("touchstart",$bind(this,this.handleTouchEvent),true);
			this.element.addEventListener("touchmove",$bind(this,this.handleTouchEvent),true);
			this.element.addEventListener("touchend",$bind(this,this.handleTouchEvent),true);
			this.element.addEventListener("gamepadconnected",$bind(this,this.handleGamepadEvent),true);
			this.element.addEventListener("gamepaddisconnected",$bind(this,this.handleGamepadEvent),true);
		}
	}
	,focus: function() {
	}
	,getDisplay: function() {
		return lime_system_System.getDisplay(0);
	}
	,getEnableTextEvents: function() {
		return this.enableTextEvents;
	}
	,handleFocusEvent: function(event) {
		if(this.enableTextEvents) haxe_Timer.delay(function() {
			lime__$backend_html5_HTML5Window.textInput.focus();
		},20);
	}
	,handleGamepadEvent: function(event) {
		var _g = event.type;
		switch(_g) {
		case "gamepadconnected":
			lime_ui_Joystick.__connect(event.gamepad.index);
			if(event.gamepad.mapping == "standard") lime_ui_Gamepad.__connect(event.gamepad.index);
			break;
		case "gamepaddisconnected":
			lime_ui_Joystick.__disconnect(event.gamepad.index);
			lime_ui_Gamepad.__disconnect(event.gamepad.index);
			break;
		default:
		}
	}
	,handleInputEvent: function(event) {
		if(lime__$backend_html5_HTML5Window.textInput.value != "") {
			this.parent.onTextInput.dispatch(lime__$backend_html5_HTML5Window.textInput.value);
			lime__$backend_html5_HTML5Window.textInput.value = "";
		}
	}
	,handleMouseEvent: function(event) {
		var x = 0.0;
		var y = 0.0;
		if(event.type != "wheel") {
			if(this.element != null) {
				if(this.canvas != null) {
					var rect = this.canvas.getBoundingClientRect();
					x = (event.clientX - rect.left) * (this.parent.__width / rect.width);
					y = (event.clientY - rect.top) * (this.parent.__height / rect.height);
				} else if(this.div != null) {
					var rect1 = this.div.getBoundingClientRect();
					x = event.clientX - rect1.left;
					y = event.clientY - rect1.top;
				} else {
					var rect2 = this.element.getBoundingClientRect();
					x = (event.clientX - rect2.left) * (this.parent.__width / rect2.width);
					y = (event.clientY - rect2.top) * (this.parent.__height / rect2.height);
				}
			} else {
				x = event.clientX;
				y = event.clientY;
			}
			var _g = event.type;
			switch(_g) {
			case "mousedown":
				this.parent.onMouseDown.dispatch(x,y,event.button);
				break;
			case "mouseenter":
				this.parent.onEnter.dispatch();
				break;
			case "mouseleave":
				this.parent.onLeave.dispatch();
				break;
			case "mouseup":
				this.parent.onMouseUp.dispatch(x,y,event.button);
				break;
			case "mousemove":
				this.parent.onMouseMove.dispatch(x,y);
				break;
			default:
			}
		} else this.parent.onMouseWheel.dispatch(event.deltaX,-event.deltaY);
	}
	,handleResize: function() {
		var stretch = this.parent.__fullscreen || this.setWidth == 0 && this.setHeight == 0;
		if(this.element != null && (this.div == null || this.div != null && stretch)) {
			if(stretch) {
				if(this.parent.__width != this.element.clientWidth || this.parent.__height != this.element.clientHeight) {
					this.parent.set_width(this.element.clientWidth);
					this.parent.set_height(this.element.clientHeight);
					if(this.canvas != null) {
						if(this.element != this.canvas) {
							this.canvas.width = this.element.clientWidth;
							this.canvas.height = this.element.clientHeight;
						}
					} else {
						this.div.style.width = this.element.clientWidth + "px";
						this.div.style.height = this.element.clientHeight + "px";
					}
				}
			} else {
				var scaleX = this.element.clientWidth / this.setWidth;
				var scaleY = this.element.clientHeight / this.setHeight;
				var currentRatio = scaleX / scaleY;
				var targetRatio = Math.min(scaleX,scaleY);
				if(this.canvas != null) {
					if(this.element != this.canvas) {
						this.canvas.style.width = this.setWidth * targetRatio + "px";
						this.canvas.style.height = this.setHeight * targetRatio + "px";
						this.canvas.style.marginLeft = (this.element.clientWidth - this.setWidth * targetRatio) / 2 + "px";
						this.canvas.style.marginTop = (this.element.clientHeight - this.setHeight * targetRatio) / 2 + "px";
					}
				} else {
					this.div.style.width = this.setWidth * targetRatio + "px";
					this.div.style.height = this.setHeight * targetRatio + "px";
					this.div.style.marginLeft = (this.element.clientWidth - this.setWidth * targetRatio) / 2 + "px";
					this.div.style.marginTop = (this.element.clientHeight - this.setHeight * targetRatio) / 2 + "px";
				}
			}
		}
	}
	,handleTouchEvent: function(event) {
		event.preventDefault();
		var rect = null;
		if(this.element != null) {
			if(this.canvas != null) rect = this.canvas.getBoundingClientRect(); else if(this.div != null) rect = this.div.getBoundingClientRect(); else rect = this.element.getBoundingClientRect();
		}
		var windowWidth = this.setWidth;
		var windowHeight = this.setHeight;
		if(windowWidth == 0 || windowHeight == 0) {
			if(rect != null) {
				windowWidth = rect.width;
				windowHeight = rect.height;
			} else {
				windowWidth = 1;
				windowHeight = 1;
			}
		}
		var _g = 0;
		var _g1 = event.changedTouches;
		while(_g < _g1.length) {
			var data = _g1[_g];
			++_g;
			var x = 0.0;
			var y = 0.0;
			if(rect != null) {
				x = (data.clientX - rect.left) * (windowWidth / rect.width);
				y = (data.clientY - rect.top) * (windowHeight / rect.height);
			} else {
				x = data.clientX;
				y = data.clientY;
			}
			var _g2 = event.type;
			switch(_g2) {
			case "touchstart":
				var touch = this.unusedTouchesPool.pop();
				if(touch == null) touch = new lime_ui_Touch(x / windowWidth,y / windowHeight,data.identifier,0,0,data.force,this.parent.id); else {
					touch.x = x / windowWidth;
					touch.y = y / windowHeight;
					touch.id = data.identifier;
					touch.dx = 0;
					touch.dy = 0;
					touch.pressure = data.force;
					touch.device = this.parent.id;
				}
				this.currentTouches.h[data.identifier] = touch;
				lime_ui_Touch.onStart.dispatch(touch);
				if(this.primaryTouch == null) this.primaryTouch = touch;
				if(touch == this.primaryTouch) this.parent.onMouseDown.dispatch(x,y,0);
				break;
			case "touchend":
				var touch1 = this.currentTouches.h[data.identifier];
				if(touch1 != null) {
					var cacheX = touch1.x;
					var cacheY = touch1.y;
					touch1.x = x / windowWidth;
					touch1.y = y / windowHeight;
					touch1.dx = touch1.x - cacheX;
					touch1.dy = touch1.y - cacheY;
					touch1.pressure = data.force;
					lime_ui_Touch.onEnd.dispatch(touch1);
					this.currentTouches.remove(data.identifier);
					this.unusedTouchesPool.add(touch1);
					if(touch1 == this.primaryTouch) {
						this.parent.onMouseUp.dispatch(x,y,0);
						this.primaryTouch = null;
					}
				}
				break;
			case "touchmove":
				var touch2 = this.currentTouches.h[data.identifier];
				if(touch2 != null) {
					var cacheX1 = touch2.x;
					var cacheY1 = touch2.y;
					touch2.x = x / windowWidth;
					touch2.y = y / windowHeight;
					touch2.dx = touch2.x - cacheX1;
					touch2.dy = touch2.y - cacheY1;
					touch2.pressure = data.force;
					lime_ui_Touch.onMove.dispatch(touch2);
					if(touch2 == this.primaryTouch) this.parent.onMouseMove.dispatch(x,y);
				}
				break;
			default:
			}
		}
	}
	,move: function(x,y) {
	}
	,resize: function(width,height) {
	}
	,setBorderless: function(value) {
		return value;
	}
	,setEnableTextEvents: function(value) {
		if(value) {
			if(lime__$backend_html5_HTML5Window.textInput == null) {
				lime__$backend_html5_HTML5Window.textInput = window.document.createElement("input");
				lime__$backend_html5_HTML5Window.textInput.type = "text";
				lime__$backend_html5_HTML5Window.textInput.style.position = "absolute";
				lime__$backend_html5_HTML5Window.textInput.style.opacity = "0";
				lime__$backend_html5_HTML5Window.textInput.style.color = "transparent";
				lime__$backend_html5_HTML5Window.textInput.value = "";
				lime__$backend_html5_HTML5Window.textInput.autocapitalize = "off";
				lime__$backend_html5_HTML5Window.textInput.autocorrect = "off";
				lime__$backend_html5_HTML5Window.textInput.autocomplete = "off";
				lime__$backend_html5_HTML5Window.textInput.style.left = "0px";
				lime__$backend_html5_HTML5Window.textInput.style.top = "50%";
				if(new EReg("(iPad|iPhone|iPod).*OS 8_","gi").match(window.navigator.userAgent)) {
					lime__$backend_html5_HTML5Window.textInput.style.fontSize = "0px";
					lime__$backend_html5_HTML5Window.textInput.style.width = "0px";
					lime__$backend_html5_HTML5Window.textInput.style.height = "0px";
				} else {
					lime__$backend_html5_HTML5Window.textInput.style.width = "1px";
					lime__$backend_html5_HTML5Window.textInput.style.height = "1px";
				}
				lime__$backend_html5_HTML5Window.textInput.style.pointerEvents = "none";
				lime__$backend_html5_HTML5Window.textInput.style.zIndex = "-10000000";
				window.document.body.appendChild(lime__$backend_html5_HTML5Window.textInput);
			}
			if(!this.enableTextEvents) {
				lime__$backend_html5_HTML5Window.textInput.addEventListener("input",$bind(this,this.handleInputEvent),true);
				lime__$backend_html5_HTML5Window.textInput.addEventListener("blur",$bind(this,this.handleFocusEvent),true);
			}
			lime__$backend_html5_HTML5Window.textInput.focus();
		} else if(lime__$backend_html5_HTML5Window.textInput != null) {
			lime__$backend_html5_HTML5Window.textInput.removeEventListener("input",$bind(this,this.handleInputEvent),true);
			lime__$backend_html5_HTML5Window.textInput.removeEventListener("blur",$bind(this,this.handleFocusEvent),true);
			lime__$backend_html5_HTML5Window.textInput.blur();
		}
		return this.enableTextEvents = value;
	}
	,setFullscreen: function(value) {
		return false;
	}
	,setIcon: function(image) {
	}
	,setMaximized: function(value) {
		return false;
	}
	,setMinimized: function(value) {
		return false;
	}
	,setResizable: function(value) {
		return value;
	}
	,setTitle: function(value) {
		return value;
	}
	,__class__: lime__$backend_html5_HTML5Window
};
var lime_app_IModule = function() { };
$hxClasses["lime.app.IModule"] = lime_app_IModule;
lime_app_IModule.__name__ = ["lime","app","IModule"];
lime_app_IModule.prototype = {
	__class__: lime_app_IModule
};
var lime_app_Module = function() {
	this.onExit = new lime_app_Event_$Int_$Void();
};
$hxClasses["lime.app.Module"] = lime_app_Module;
lime_app_Module.__name__ = ["lime","app","Module"];
lime_app_Module.__interfaces__ = [lime_app_IModule];
lime_app_Module.prototype = {
	onGamepadAxisMove: function(gamepad,axis,value) {
	}
	,onGamepadButtonDown: function(gamepad,button) {
	}
	,onGamepadButtonUp: function(gamepad,button) {
	}
	,onGamepadConnect: function(gamepad) {
		haxe_Log.trace("onGamepadConnect (module)",{ fileName : "Module.hx", lineNumber : 64, className : "lime.app.Module", methodName : "onGamepadConnect"});
	}
	,onGamepadDisconnect: function(gamepad) {
	}
	,onJoystickAxisMove: function(joystick,axis,value) {
	}
	,onJoystickButtonDown: function(joystick,button) {
	}
	,onJoystickButtonUp: function(joystick,button) {
	}
	,onJoystickConnect: function(joystick) {
	}
	,onJoystickDisconnect: function(joystick) {
	}
	,onJoystickHatMove: function(joystick,hat,position) {
	}
	,onJoystickTrackballMove: function(joystick,trackball,value) {
	}
	,onKeyDown: function(window,keyCode,modifier) {
	}
	,onKeyUp: function(window,keyCode,modifier) {
	}
	,onModuleExit: function(code) {
	}
	,onMouseDown: function(window,x,y,button) {
	}
	,onMouseMove: function(window,x,y) {
	}
	,onMouseMoveRelative: function(window,x,y) {
	}
	,onMouseUp: function(window,x,y,button) {
	}
	,onMouseWheel: function(window,deltaX,deltaY) {
	}
	,onPreloadComplete: function() {
	}
	,onPreloadProgress: function(loaded,total) {
	}
	,onRenderContextLost: function(renderer) {
	}
	,onRenderContextRestored: function(renderer,context) {
	}
	,onTextEdit: function(window,text,start,length) {
	}
	,onTextInput: function(window,text) {
	}
	,onTouchEnd: function(touch) {
	}
	,onTouchMove: function(touch) {
	}
	,onTouchStart: function(touch) {
	}
	,onWindowActivate: function(window) {
	}
	,onWindowClose: function(window) {
	}
	,onWindowCreate: function(window) {
	}
	,onWindowDeactivate: function(window) {
	}
	,onWindowDropFile: function(window,file) {
	}
	,onWindowEnter: function(window) {
	}
	,onWindowFocusIn: function(window) {
	}
	,onWindowFocusOut: function(window) {
	}
	,onWindowFullscreen: function(window) {
	}
	,onWindowLeave: function(window) {
	}
	,onWindowMove: function(window,x,y) {
	}
	,onWindowMinimize: function(window) {
	}
	,onWindowResize: function(window,width,height) {
	}
	,onWindowRestore: function(window) {
	}
	,render: function(renderer) {
	}
	,update: function(deltaTime) {
	}
	,__class__: lime_app_Module
};
var lime_app_Application = function() {
	this.onUpdate = new lime_app_Event_$Int_$Void();
	lime_app_Module.call(this);
	if(lime_app_Application.current == null) lime_app_Application.current = this;
	this.modules = [];
	this.renderers = [];
	this.windows = [];
	this.windowByID = new haxe_ds_IntMap();
	this.backend = new lime__$backend_html5_HTML5Application(this);
	this.onExit.add($bind(this,this.onModuleExit));
	this.onUpdate.add($bind(this,this.update));
	lime_ui_Gamepad.onConnect.add($bind(this,this.__onGamepadConnect));
	lime_ui_Joystick.onConnect.add($bind(this,this.__onJoystickConnect));
	lime_ui_Touch.onStart.add($bind(this,this.onTouchStart));
	lime_ui_Touch.onMove.add($bind(this,this.onTouchMove));
	lime_ui_Touch.onEnd.add($bind(this,this.onTouchEnd));
};
$hxClasses["lime.app.Application"] = lime_app_Application;
lime_app_Application.__name__ = ["lime","app","Application"];
lime_app_Application.current = null;
lime_app_Application.__super__ = lime_app_Module;
lime_app_Application.prototype = $extend(lime_app_Module.prototype,{
	addModule: function(module) {
		this.modules.push(module);
		if(this.windows.length > 0) {
			var _g = 0;
			var _g1 = this.windows;
			while(_g < _g1.length) {
				var $window = _g1[_g];
				++_g;
				module.onWindowCreate($window);
			}
			if(this.preloader == null || this.preloader.complete) module.onPreloadComplete();
		}
	}
	,addRenderer: function(renderer) {
		renderer.onRender.add((function(f,a1) {
			return function() {
				f(a1);
			};
		})($bind(this,this.render),renderer));
		renderer.onContextLost.add((function(f1,a11) {
			return function() {
				f1(a11);
			};
		})($bind(this,this.onRenderContextLost),renderer));
		renderer.onContextRestored.add((function(f2,a12) {
			return function(a2) {
				f2(a12,a2);
			};
		})($bind(this,this.onRenderContextRestored),renderer));
		this.renderers.push(renderer);
	}
	,create: function(config) {
		this.config = config;
		this.backend.create(config);
		if(config != null) {
			if(Object.prototype.hasOwnProperty.call(config,"fps")) this.backend.setFrameRate(config.fps);
			if(Object.prototype.hasOwnProperty.call(config,"windows")) {
				var _g = 0;
				var _g1 = config.windows;
				while(_g < _g1.length) {
					var windowConfig = _g1[_g];
					++_g;
					var $window = new lime_ui_Window(windowConfig);
					this.createWindow($window);
					break;
				}
			}
			if(this.preloader == null || this.preloader.complete) this.onPreloadComplete();
		}
	}
	,createWindow: function(window) {
		window.onActivate.add((function(f,a1) {
			return function() {
				f(a1);
			};
		})($bind(this,this.onWindowActivate),window));
		window.onClose.add((function(f1,a11) {
			return function() {
				f1(a11);
			};
		})($bind(this,this.onWindowClose),window));
		window.onCreate.add((function(f2,a12) {
			return function() {
				f2(a12);
			};
		})($bind(this,this.onWindowCreate),window));
		window.onDeactivate.add((function(f3,a13) {
			return function() {
				f3(a13);
			};
		})($bind(this,this.onWindowDeactivate),window));
		window.onDropFile.add((function(f4,a14) {
			return function(a2) {
				f4(a14,a2);
			};
		})($bind(this,this.onWindowDropFile),window));
		window.onEnter.add((function(f5,a15) {
			return function() {
				f5(a15);
			};
		})($bind(this,this.onWindowEnter),window));
		window.onFocusIn.add((function(f6,a16) {
			return function() {
				f6(a16);
			};
		})($bind(this,this.onWindowFocusIn),window));
		window.onFocusOut.add((function(f7,a17) {
			return function() {
				f7(a17);
			};
		})($bind(this,this.onWindowFocusOut),window));
		window.onFullscreen.add((function(f8,a18) {
			return function() {
				f8(a18);
			};
		})($bind(this,this.onWindowFullscreen),window));
		window.onKeyDown.add((function(f9,a19) {
			return function(a21,a3) {
				f9(a19,a21,a3);
			};
		})($bind(this,this.onKeyDown),window));
		window.onKeyUp.add((function(f10,a110) {
			return function(a22,a31) {
				f10(a110,a22,a31);
			};
		})($bind(this,this.onKeyUp),window));
		window.onLeave.add((function(f11,a111) {
			return function() {
				f11(a111);
			};
		})($bind(this,this.onWindowLeave),window));
		window.onMinimize.add((function(f12,a112) {
			return function() {
				f12(a112);
			};
		})($bind(this,this.onWindowMinimize),window));
		window.onMouseDown.add((function(f13,a113) {
			return function(x,y,a23) {
				f13(a113,x,y,a23);
			};
		})($bind(this,this.onMouseDown),window));
		window.onMouseMove.add((function(f14,a114) {
			return function(x1,y1) {
				f14(a114,x1,y1);
			};
		})($bind(this,this.onMouseMove),window));
		window.onMouseMoveRelative.add((function(f15,a115) {
			return function(x2,y2) {
				f15(a115,x2,y2);
			};
		})($bind(this,this.onMouseMoveRelative),window));
		window.onMouseUp.add((function(f16,a116) {
			return function(x3,y3,a24) {
				f16(a116,x3,y3,a24);
			};
		})($bind(this,this.onMouseUp),window));
		window.onMouseWheel.add((function(f17,a117) {
			return function(a25,a32) {
				f17(a117,a25,a32);
			};
		})($bind(this,this.onMouseWheel),window));
		window.onMove.add((function(f18,a118) {
			return function(x4,y4) {
				f18(a118,x4,y4);
			};
		})($bind(this,this.onWindowMove),window));
		window.onResize.add((function(f19,a119) {
			return function(a26,a33) {
				f19(a119,a26,a33);
			};
		})($bind(this,this.onWindowResize),window));
		window.onRestore.add((function(f20,a120) {
			return function() {
				f20(a120);
			};
		})($bind(this,this.onWindowRestore),window));
		window.onTextEdit.add((function(f21,a121) {
			return function(a27,a34,a4) {
				f21(a121,a27,a34,a4);
			};
		})($bind(this,this.onTextEdit),window));
		window.onTextInput.add((function(f22,a122) {
			return function(a28) {
				f22(a122,a28);
			};
		})($bind(this,this.onTextInput),window));
		if(window.renderer == null) {
			var renderer = new lime_graphics_Renderer(window);
			this.addRenderer(renderer);
		}
		window.create(this);
		this.windows.push(window);
		this.windowByID.h[window.id] = window;
		window.onCreate.dispatch();
	}
	,exec: function() {
		lime_app_Application.current = this;
		return this.backend.exec();
	}
	,onGamepadAxisMove: function(gamepad,axis,value) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onGamepadAxisMove(gamepad,axis,value);
		}
	}
	,onGamepadButtonDown: function(gamepad,button) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onGamepadButtonDown(gamepad,button);
		}
	}
	,onGamepadButtonUp: function(gamepad,button) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onGamepadButtonUp(gamepad,button);
		}
	}
	,onGamepadConnect: function(gamepad) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onGamepadConnect(gamepad);
		}
	}
	,onGamepadDisconnect: function(gamepad) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onGamepadDisconnect(gamepad);
		}
	}
	,onJoystickAxisMove: function(joystick,axis,value) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onJoystickAxisMove(joystick,axis,value);
		}
	}
	,onJoystickButtonDown: function(joystick,button) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onJoystickButtonDown(joystick,button);
		}
	}
	,onJoystickButtonUp: function(joystick,button) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onJoystickButtonUp(joystick,button);
		}
	}
	,onJoystickConnect: function(joystick) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onJoystickConnect(joystick);
		}
	}
	,onJoystickDisconnect: function(joystick) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onJoystickDisconnect(joystick);
		}
	}
	,onJoystickHatMove: function(joystick,hat,position) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onJoystickHatMove(joystick,hat,position);
		}
	}
	,onJoystickTrackballMove: function(joystick,trackball,value) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onJoystickTrackballMove(joystick,trackball,value);
		}
	}
	,onKeyDown: function(window,keyCode,modifier) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onKeyDown(window,keyCode,modifier);
		}
	}
	,onKeyUp: function(window,keyCode,modifier) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onKeyUp(window,keyCode,modifier);
		}
	}
	,onModuleExit: function(code) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onModuleExit(code);
		}
		this.backend.exit();
	}
	,onMouseDown: function(window,x,y,button) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onMouseDown(window,x,y,button);
		}
	}
	,onMouseMove: function(window,x,y) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onMouseMove(window,x,y);
		}
	}
	,onMouseMoveRelative: function(window,x,y) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onMouseMoveRelative(window,x,y);
		}
	}
	,onMouseUp: function(window,x,y,button) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onMouseUp(window,x,y,button);
		}
	}
	,onMouseWheel: function(window,deltaX,deltaY) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onMouseWheel(window,deltaX,deltaY);
		}
	}
	,onPreloadComplete: function() {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onPreloadComplete();
		}
	}
	,onPreloadProgress: function(loaded,total) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onPreloadProgress(loaded,total);
		}
	}
	,onRenderContextLost: function(renderer) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onRenderContextLost(renderer);
		}
	}
	,onRenderContextRestored: function(renderer,context) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onRenderContextRestored(renderer,context);
		}
	}
	,onTextEdit: function(window,text,start,length) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onTextEdit(window,text,start,length);
		}
	}
	,onTextInput: function(window,text) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onTextInput(window,text);
		}
	}
	,onTouchEnd: function(touch) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onTouchEnd(touch);
		}
	}
	,onTouchMove: function(touch) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onTouchMove(touch);
		}
	}
	,onTouchStart: function(touch) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onTouchStart(touch);
		}
	}
	,onWindowActivate: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowActivate(window);
		}
	}
	,onWindowClose: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowClose(window);
		}
		this.removeWindow(window);
	}
	,onWindowCreate: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowCreate(window);
		}
	}
	,onWindowDeactivate: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowDeactivate(window);
		}
	}
	,onWindowDropFile: function(window,file) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowDropFile(window,file);
		}
	}
	,onWindowEnter: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowEnter(window);
		}
	}
	,onWindowFocusIn: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowFocusIn(window);
		}
	}
	,onWindowFocusOut: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowFocusOut(window);
		}
	}
	,onWindowFullscreen: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowFullscreen(window);
		}
	}
	,onWindowLeave: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowLeave(window);
		}
	}
	,onWindowMinimize: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowMinimize(window);
		}
	}
	,onWindowMove: function(window,x,y) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowMove(window,x,y);
		}
	}
	,onWindowResize: function(window,width,height) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowResize(window,width,height);
		}
	}
	,onWindowRestore: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowRestore(window);
		}
	}
	,removeModule: function(module) {
		if(module != null) {
			module.onModuleExit(0);
			HxOverrides.remove(this.modules,module);
		}
	}
	,removeRenderer: function(renderer) {
		if(renderer != null && HxOverrides.indexOf(this.renderers,renderer,0) > -1) HxOverrides.remove(this.renderers,renderer);
	}
	,removeWindow: function(window) {
		if(window != null && this.windowByID.h.hasOwnProperty(window.id)) {
			HxOverrides.remove(this.windows,window);
			this.windowByID.remove(window.id);
			window.close();
			if(this.windows[0] == window) this.window = null;
		}
	}
	,render: function(renderer) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.render(renderer);
		}
	}
	,setPreloader: function(preloader) {
		if(this.preloader != null) {
			this.preloader.onProgress.remove($bind(this,this.onPreloadProgress));
			this.preloader.onComplete.remove($bind(this,this.onPreloadComplete));
		}
		this.preloader = preloader;
		if(preloader.complete) this.onPreloadComplete(); else {
			preloader.onProgress.add($bind(this,this.onPreloadProgress));
			preloader.onComplete.add($bind(this,this.onPreloadComplete));
		}
	}
	,update: function(deltaTime) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.update(deltaTime);
		}
	}
	,__onGamepadConnect: function(gamepad) {
		this.onGamepadConnect(gamepad);
		gamepad.onAxisMove.add((function(f,a1) {
			return function(a2,a3) {
				f(a1,a2,a3);
			};
		})($bind(this,this.onGamepadAxisMove),gamepad));
		gamepad.onButtonDown.add((function(f1,a11) {
			return function(a21) {
				f1(a11,a21);
			};
		})($bind(this,this.onGamepadButtonDown),gamepad));
		gamepad.onButtonUp.add((function(f2,a12) {
			return function(a22) {
				f2(a12,a22);
			};
		})($bind(this,this.onGamepadButtonUp),gamepad));
		gamepad.onDisconnect.add((function(f3,a13) {
			return function() {
				f3(a13);
			};
		})($bind(this,this.onGamepadDisconnect),gamepad));
	}
	,__onJoystickConnect: function(joystick) {
		this.onJoystickConnect(joystick);
		joystick.onAxisMove.add((function(f,a1) {
			return function(a2,a3) {
				f(a1,a2,a3);
			};
		})($bind(this,this.onJoystickAxisMove),joystick));
		joystick.onButtonDown.add((function(f1,a11) {
			return function(a21) {
				f1(a11,a21);
			};
		})($bind(this,this.onJoystickButtonDown),joystick));
		joystick.onButtonUp.add((function(f2,a12) {
			return function(a22) {
				f2(a12,a22);
			};
		})($bind(this,this.onJoystickButtonUp),joystick));
		joystick.onDisconnect.add((function(f3,a13) {
			return function() {
				f3(a13);
			};
		})($bind(this,this.onJoystickDisconnect),joystick));
		joystick.onHatMove.add((function(f4,a14) {
			return function(a23,a31) {
				f4(a14,a23,a31);
			};
		})($bind(this,this.onJoystickHatMove),joystick));
		joystick.onTrackballMove.add((function(f5,a15) {
			return function(a24,a32) {
				f5(a15,a24,a32);
			};
		})($bind(this,this.onJoystickTrackballMove),joystick));
	}
	,get_frameRate: function() {
		return this.backend.getFrameRate();
	}
	,set_frameRate: function(value) {
		return this.backend.setFrameRate(value);
	}
	,get_renderer: function() {
		return this.renderers[0];
	}
	,get_window: function() {
		return this.windows[0];
	}
	,__class__: lime_app_Application
	,__properties__: {get_window:"get_window",get_renderer:"get_renderer",set_frameRate:"set_frameRate",get_frameRate:"get_frameRate"}
});
var lime_app_Event = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event"] = lime_app_Event;
lime_app_Event.__name__ = ["lime","app","Event"];
lime_app_Event.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,__class__: lime_app_Event
};
var lime_app_Event_$Dynamic_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Dynamic_Void"] = lime_app_Event_$Dynamic_$Void;
lime_app_Event_$Dynamic_$Void.__name__ = ["lime","app","Event_Dynamic_Void"];
lime_app_Event_$Dynamic_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Dynamic_$Void
};
var lime_app_Event_$Float_$Float_$Int_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Float_Float_Int_Void"] = lime_app_Event_$Float_$Float_$Int_$Void;
lime_app_Event_$Float_$Float_$Int_$Void.__name__ = ["lime","app","Event_Float_Float_Int_Void"];
lime_app_Event_$Float_$Float_$Int_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1,a2) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1,a2);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Float_$Float_$Int_$Void
};
var lime_app_Event_$Float_$Float_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Float_Float_Void"] = lime_app_Event_$Float_$Float_$Void;
lime_app_Event_$Float_$Float_$Void.__name__ = ["lime","app","Event_Float_Float_Void"];
lime_app_Event_$Float_$Float_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Float_$Float_$Void
};
var lime_app_Event_$Int_$Float_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Int_Float_Void"] = lime_app_Event_$Int_$Float_$Void;
lime_app_Event_$Int_$Float_$Void.__name__ = ["lime","app","Event_Int_Float_Void"];
lime_app_Event_$Int_$Float_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Int_$Float_$Void
};
var lime_app_Event_$Int_$Int_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Int_Int_Void"] = lime_app_Event_$Int_$Int_$Void;
lime_app_Event_$Int_$Int_$Void.__name__ = ["lime","app","Event_Int_Int_Void"];
lime_app_Event_$Int_$Int_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Int_$Int_$Void
};
var lime_app_Event_$Int_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Int_Void"] = lime_app_Event_$Int_$Void;
lime_app_Event_$Int_$Void.__name__ = ["lime","app","Event_Int_Void"];
lime_app_Event_$Int_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Int_$Void
};
var lime_app_Event_$Int_$lime_$ui_$JoystickHatPosition_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Int_lime_ui_JoystickHatPosition_Void"] = lime_app_Event_$Int_$lime_$ui_$JoystickHatPosition_$Void;
lime_app_Event_$Int_$lime_$ui_$JoystickHatPosition_$Void.__name__ = ["lime","app","Event_Int_lime_ui_JoystickHatPosition_Void"];
lime_app_Event_$Int_$lime_$ui_$JoystickHatPosition_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Int_$lime_$ui_$JoystickHatPosition_$Void
};
var lime_app_Event_$String_$Int_$Int_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_String_Int_Int_Void"] = lime_app_Event_$String_$Int_$Int_$Void;
lime_app_Event_$String_$Int_$Int_$Void.__name__ = ["lime","app","Event_String_Int_Int_Void"];
lime_app_Event_$String_$Int_$Int_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1,a2) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1,a2);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$String_$Int_$Int_$Void
};
var lime_app_Event_$String_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_String_Void"] = lime_app_Event_$String_$Void;
lime_app_Event_$String_$Void.__name__ = ["lime","app","Event_String_Void"];
lime_app_Event_$String_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$String_$Void
};
var lime_app_Event_$lime_$graphics_$RenderContext_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_lime_graphics_RenderContext_Void"] = lime_app_Event_$lime_$graphics_$RenderContext_$Void;
lime_app_Event_$lime_$graphics_$RenderContext_$Void.__name__ = ["lime","app","Event_lime_graphics_RenderContext_Void"];
lime_app_Event_$lime_$graphics_$RenderContext_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$lime_$graphics_$RenderContext_$Void
};
var lime_app_Event_$lime_$ui_$GamepadAxis_$Float_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_lime_ui_GamepadAxis_Float_Void"] = lime_app_Event_$lime_$ui_$GamepadAxis_$Float_$Void;
lime_app_Event_$lime_$ui_$GamepadAxis_$Float_$Void.__name__ = ["lime","app","Event_lime_ui_GamepadAxis_Float_Void"];
lime_app_Event_$lime_$ui_$GamepadAxis_$Float_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$lime_$ui_$GamepadAxis_$Float_$Void
};
var lime_app_Event_$lime_$ui_$GamepadButton_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_lime_ui_GamepadButton_Void"] = lime_app_Event_$lime_$ui_$GamepadButton_$Void;
lime_app_Event_$lime_$ui_$GamepadButton_$Void.__name__ = ["lime","app","Event_lime_ui_GamepadButton_Void"];
lime_app_Event_$lime_$ui_$GamepadButton_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$lime_$ui_$GamepadButton_$Void
};
var lime_app_Event_$lime_$ui_$Gamepad_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_lime_ui_Gamepad_Void"] = lime_app_Event_$lime_$ui_$Gamepad_$Void;
lime_app_Event_$lime_$ui_$Gamepad_$Void.__name__ = ["lime","app","Event_lime_ui_Gamepad_Void"];
lime_app_Event_$lime_$ui_$Gamepad_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$lime_$ui_$Gamepad_$Void
};
var lime_app_Event_$lime_$ui_$Joystick_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_lime_ui_Joystick_Void"] = lime_app_Event_$lime_$ui_$Joystick_$Void;
lime_app_Event_$lime_$ui_$Joystick_$Void.__name__ = ["lime","app","Event_lime_ui_Joystick_Void"];
lime_app_Event_$lime_$ui_$Joystick_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$lime_$ui_$Joystick_$Void
};
var lime_app_Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"] = lime_app_Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void;
lime_app_Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void.__name__ = ["lime","app","Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"];
lime_app_Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void
};
var lime_app_Event_$lime_$ui_$Touch_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_lime_ui_Touch_Void"] = lime_app_Event_$lime_$ui_$Touch_$Void;
lime_app_Event_$lime_$ui_$Touch_$Void.__name__ = ["lime","app","Event_lime_ui_Touch_Void"];
lime_app_Event_$lime_$ui_$Touch_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$lime_$ui_$Touch_$Void
};
var lime_app_Future = function(work) {
	if(work != null) {
		if(lime_app_Future.__threadPool == null) {
			lime_app_Future.__threadPool = new lime_system_ThreadPool();
			lime_app_Future.__threadPool.doWork.add(lime_app_Future.threadPool_doWork);
			lime_app_Future.__threadPool.onComplete.add(lime_app_Future.threadPool_onComplete);
			lime_app_Future.__threadPool.onError.add(lime_app_Future.threadPool_onError);
		}
		var promise = new lime_app_Promise();
		promise.future = this;
		lime_app_Future.__threadPool.queue({ promise : promise, work : work});
	}
};
$hxClasses["lime.app.Future"] = lime_app_Future;
lime_app_Future.__name__ = ["lime","app","Future"];
lime_app_Future.__threadPool = null;
lime_app_Future.threadPool_doWork = function(state) {
	try {
		var result = state.work();
		lime_app_Future.__threadPool.sendComplete({ promise : state.promise, result : result});
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		lime_app_Future.__threadPool.sendError({ promise : state.promise, error : e});
	}
};
lime_app_Future.threadPool_onComplete = function(state) {
	state.promise.complete(state.result);
};
lime_app_Future.threadPool_onError = function(state) {
	state.promise.error(state.error);
};
lime_app_Future.prototype = {
	onComplete: function(listener) {
		if(listener != null) {
			if(this.__completed) listener(this.value); else if(!this.__errored) {
				if(this.__completeListeners == null) this.__completeListeners = [];
				this.__completeListeners.push(listener);
			}
		}
		return this;
	}
	,onError: function(listener) {
		if(listener != null) {
			if(this.__errored) listener(this.__errorMessage); else if(!this.__completed) {
				if(this.__errorListeners == null) this.__errorListeners = [];
				this.__errorListeners.push(listener);
			}
		}
		return this;
	}
	,onProgress: function(listener) {
		if(listener != null) {
			if(this.__progressListeners == null) this.__progressListeners = [];
			this.__progressListeners.push(listener);
		}
		return this;
	}
	,then: function(next) {
		if(this.__completed) return next(this.value); else if(this.__errored) {
			var future = new lime_app_Future();
			future.onError(this.__errorMessage);
			return future;
		} else {
			var promise = new lime_app_Promise();
			this.onError($bind(promise,promise.error));
			this.onProgress($bind(promise,promise.progress));
			this.onComplete(function(val) {
				var future1 = next(val);
				future1.onError($bind(promise,promise.error));
				future1.onComplete($bind(promise,promise.complete));
			});
			return promise.future;
		}
	}
	,get_isCompleted: function() {
		return this.__completed || this.__errored;
	}
	,__class__: lime_app_Future
	,__properties__: {get_isCompleted:"get_isCompleted"}
};
var lime_app_Preloader = function() {
	this.total = 0;
	this.loaded = 0;
	this.onProgress = new lime_app_Event_$Int_$Int_$Void();
	this.onComplete = new lime_app_Event_$Void_$Void();
	this.onProgress.add($bind(this,this.update));
};
$hxClasses["lime.app.Preloader"] = lime_app_Preloader;
lime_app_Preloader.__name__ = ["lime","app","Preloader"];
lime_app_Preloader.prototype = {
	create: function(config) {
	}
	,load: function(urls,types) {
		var url = null;
		var cacheVersion = lime_Assets.cache.version;
		var _g1 = 0;
		var _g = urls.length;
		while(_g1 < _g) {
			var i = _g1++;
			url = urls[i];
			var _g2 = types[i];
			switch(_g2) {
			case "IMAGE":
				if(!lime_app_Preloader.images.exists(url)) {
					var image = new Image();
					lime_app_Preloader.images.set(url,image);
					image.onload = $bind(this,this.image_onLoad);
					image.src = url + "?" + cacheVersion;
					this.total++;
				}
				break;
			case "BINARY":
				if(!lime_app_Preloader.loaders.exists(url)) {
					var loader = new lime_net_HTTPRequest();
					lime_app_Preloader.loaders.set(url,loader);
					this.total++;
				}
				break;
			case "TEXT":
				if(!lime_app_Preloader.loaders.exists(url)) {
					var loader1 = new lime_net_HTTPRequest();
					lime_app_Preloader.loaders.set(url,loader1);
					this.total++;
				}
				break;
			case "FONT":
				this.total++;
				this.loadFont(url);
				break;
			default:
			}
		}
		var $it0 = lime_app_Preloader.loaders.keys();
		while( $it0.hasNext() ) {
			var url1 = $it0.next();
			var loader2 = lime_app_Preloader.loaders.get(url1);
			var future = loader2.load(url1 + "?" + cacheVersion);
			future.onComplete($bind(this,this.loader_onComplete));
		}
		if(this.total == 0) this.start();
	}
	,loadFont: function(font) {
		var _g = this;
		if(window.document.fonts && ($_=window.document.fonts,$bind($_,$_.load))) window.document.fonts.load("1em '" + font + "'").then(function(_) {
			_g.loaded++;
			_g.onProgress.dispatch(_g.loaded,_g.total);
			if(_g.loaded == _g.total) _g.start();
		}); else {
			var node = window.document.createElement("span");
			node.innerHTML = "giItT1WQy@!-/#";
			var style = node.style;
			style.position = "absolute";
			style.left = "-10000px";
			style.top = "-10000px";
			style.fontSize = "300px";
			style.fontFamily = "sans-serif";
			style.fontVariant = "normal";
			style.fontStyle = "normal";
			style.fontWeight = "normal";
			style.letterSpacing = "0";
			window.document.body.appendChild(node);
			var width = node.offsetWidth;
			style.fontFamily = "'" + font + "', sans-serif";
			var interval = null;
			var found = false;
			var checkFont = function() {
				if(node.offsetWidth != width) {
					if(!found) {
						found = true;
						return false;
					}
					_g.loaded++;
					if(interval != null) window.clearInterval(interval);
					node.parentNode.removeChild(node);
					node = null;
					_g.onProgress.dispatch(_g.loaded,_g.total);
					if(_g.loaded == _g.total) _g.start();
					return true;
				}
				return false;
			};
			if(!checkFont()) interval = window.setInterval(checkFont,50);
		}
	}
	,start: function() {
		this.complete = true;
		this.onComplete.dispatch();
	}
	,update: function(loaded,total) {
	}
	,image_onLoad: function(_) {
		this.loaded++;
		this.onProgress.dispatch(this.loaded,this.total);
		if(this.loaded == this.total) this.start();
	}
	,loader_onComplete: function(_) {
		this.loaded++;
		this.onProgress.dispatch(this.loaded,this.total);
		if(this.loaded == this.total) this.start();
	}
	,__class__: lime_app_Preloader
};
var lime_app_Promise = function() {
	this.future = new lime_app_Future();
};
$hxClasses["lime.app.Promise"] = lime_app_Promise;
lime_app_Promise.__name__ = ["lime","app","Promise"];
lime_app_Promise.prototype = {
	complete: function(data) {
		if(!this.future.__errored) {
			this.future.__completed = true;
			this.future.value = data;
			if(this.future.__completeListeners != null) {
				var _g = 0;
				var _g1 = this.future.__completeListeners;
				while(_g < _g1.length) {
					var listener = _g1[_g];
					++_g;
					listener(data);
				}
				this.future.__completeListeners = null;
			}
		}
		return this;
	}
	,completeWith: function(future) {
		future.onComplete($bind(this,this.complete));
		future.onError($bind(this,this.error));
		future.onProgress($bind(this,this.progress));
		return this;
	}
	,error: function(msg) {
		if(!this.future.__completed) {
			this.future.__errored = true;
			this.future.__errorMessage = msg;
			if(this.future.__errorListeners != null) {
				var _g = 0;
				var _g1 = this.future.__errorListeners;
				while(_g < _g1.length) {
					var listener = _g1[_g];
					++_g;
					listener(msg);
				}
				this.future.__errorListeners = null;
			}
		}
		return this;
	}
	,progress: function(progress) {
		if(!this.future.__errored && !this.future.__completed) {
			if(this.future.__progressListeners != null) {
				var _g = 0;
				var _g1 = this.future.__progressListeners;
				while(_g < _g1.length) {
					var listener = _g1[_g];
					++_g;
					listener(progress);
				}
			}
		}
		return this;
	}
	,get_isCompleted: function() {
		return this.future.get_isCompleted();
	}
	,__class__: lime_app_Promise
	,__properties__: {get_isCompleted:"get_isCompleted"}
};
var lime_audio_ALAudioContext = function() {
	this.EXPONENT_DISTANCE_CLAMPED = 53254;
	this.EXPONENT_DISTANCE = 53253;
	this.LINEAR_DISTANCE_CLAMPED = 53252;
	this.LINEAR_DISTANCE = 53251;
	this.INVERSE_DISTANCE_CLAMPED = 53250;
	this.INVERSE_DISTANCE = 53249;
	this.DISTANCE_MODEL = 53248;
	this.DOPPLER_VELOCITY = 49153;
	this.SPEED_OF_SOUND = 49155;
	this.DOPPLER_FACTOR = 49152;
	this.EXTENSIONS = 45060;
	this.RENDERER = 45059;
	this.VERSION = 45058;
	this.VENDOR = 45057;
	this.OUT_OF_MEMORY = 40965;
	this.INVALID_OPERATION = 40964;
	this.INVALID_VALUE = 40963;
	this.INVALID_ENUM = 40962;
	this.INVALID_NAME = 40961;
	this.NO_ERROR = 0;
	this.SIZE = 8196;
	this.CHANNELS = 8195;
	this.BITS = 8194;
	this.FREQUENCY = 8193;
	this.FORMAT_STEREO16 = 4355;
	this.FORMAT_STEREO8 = 4354;
	this.FORMAT_MONO16 = 4353;
	this.FORMAT_MONO8 = 4352;
	this.UNDETERMINED = 4144;
	this.STREAMING = 4137;
	this.STATIC = 4136;
	this.SOURCE_TYPE = 4135;
	this.BYTE_OFFSET = 4134;
	this.SAMPLE_OFFSET = 4133;
	this.SEC_OFFSET = 4132;
	this.MAX_DISTANCE = 4131;
	this.CONE_OUTER_GAIN = 4130;
	this.ROLLOFF_FACTOR = 4129;
	this.REFERENCE_DISTANCE = 4128;
	this.BUFFERS_PROCESSED = 4118;
	this.BUFFERS_QUEUED = 4117;
	this.STOPPED = 4116;
	this.PAUSED = 4115;
	this.PLAYING = 4114;
	this.INITIAL = 4113;
	this.SOURCE_STATE = 4112;
	this.ORIENTATION = 4111;
	this.MAX_GAIN = 4110;
	this.MIN_GAIN = 4109;
	this.GAIN = 4106;
	this.BUFFER = 4105;
	this.LOOPING = 4103;
	this.VELOCITY = 4102;
	this.DIRECTION = 4101;
	this.POSITION = 4100;
	this.PITCH = 4099;
	this.CONE_OUTER_ANGLE = 4098;
	this.CONE_INNER_ANGLE = 4097;
	this.SOURCE_RELATIVE = 514;
	this.TRUE = 1;
	this.FALSE = 0;
	this.NONE = 0;
};
$hxClasses["lime.audio.ALAudioContext"] = lime_audio_ALAudioContext;
lime_audio_ALAudioContext.__name__ = ["lime","audio","ALAudioContext"];
lime_audio_ALAudioContext.prototype = {
	bufferData: function(buffer,format,data,size,freq) {
		lime_audio_openal_AL.bufferData(buffer,format,data,size,freq);
	}
	,buffer3f: function(buffer,param,value1,value2,value3) {
		lime_audio_openal_AL.buffer3f(buffer,param,value1,value2,value3);
	}
	,buffer3i: function(buffer,param,value1,value2,value3) {
		lime_audio_openal_AL.buffer3i(buffer,param,value1,value2,value3);
	}
	,bufferf: function(buffer,param,value) {
		lime_audio_openal_AL.bufferf(buffer,param,value);
	}
	,bufferfv: function(buffer,param,values) {
		lime_audio_openal_AL.bufferfv(buffer,param,values);
	}
	,bufferi: function(buffer,param,value) {
		lime_audio_openal_AL.bufferi(buffer,param,value);
	}
	,bufferiv: function(buffer,param,values) {
		lime_audio_openal_AL.bufferiv(buffer,param,values);
	}
	,deleteBuffer: function(buffer) {
		lime_audio_openal_AL.deleteBuffer(buffer);
	}
	,deleteBuffers: function(buffers) {
		lime_audio_openal_AL.deleteBuffers(buffers);
	}
	,deleteSource: function(source) {
		lime_audio_openal_AL.deleteSource(source);
	}
	,deleteSources: function(sources) {
		lime_audio_openal_AL.deleteSources(sources);
	}
	,disable: function(capability) {
		lime_audio_openal_AL.disable(capability);
	}
	,distanceModel: function(distanceModel) {
		lime_audio_openal_AL.distanceModel(distanceModel);
	}
	,dopplerFactor: function(value) {
		lime_audio_openal_AL.dopplerFactor(value);
	}
	,dopplerVelocity: function(value) {
		lime_audio_openal_AL.dopplerVelocity(value);
	}
	,enable: function(capability) {
		lime_audio_openal_AL.enable(capability);
	}
	,genSource: function() {
		return lime_audio_openal_AL.genSource();
	}
	,genSources: function(n) {
		return lime_audio_openal_AL.genSources(n);
	}
	,genBuffer: function() {
		return lime_audio_openal_AL.genBuffer();
	}
	,genBuffers: function(n) {
		return lime_audio_openal_AL.genBuffers(n);
	}
	,getBoolean: function(param) {
		return lime_audio_openal_AL.getBoolean(param);
	}
	,getBooleanv: function(param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getBooleanv(param,count);
	}
	,getBuffer3f: function(buffer,param) {
		return lime_audio_openal_AL.getBuffer3f(buffer,param);
	}
	,getBuffer3i: function(buffer,param) {
		return lime_audio_openal_AL.getBuffer3i(buffer,param);
	}
	,getBufferf: function(buffer,param) {
		return lime_audio_openal_AL.getBufferf(buffer,param);
	}
	,getBufferfv: function(buffer,param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getBufferfv(buffer,param,count);
	}
	,getBufferi: function(buffer,param) {
		return lime_audio_openal_AL.getBufferi(buffer,param);
	}
	,getBufferiv: function(buffer,param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getBufferiv(buffer,param,count);
	}
	,getDouble: function(param) {
		return lime_audio_openal_AL.getDouble(param);
	}
	,getDoublev: function(param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getDoublev(param,count);
	}
	,getEnumValue: function(ename) {
		return lime_audio_openal_AL.getEnumValue(ename);
	}
	,getError: function() {
		return lime_audio_openal_AL.getError();
	}
	,getErrorString: function() {
		return lime_audio_openal_AL.getErrorString();
	}
	,getFloat: function(param) {
		return lime_audio_openal_AL.getFloat(param);
	}
	,getFloatv: function(param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getFloatv(param,count);
	}
	,getInteger: function(param) {
		return lime_audio_openal_AL.getInteger(param);
	}
	,getIntegerv: function(param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getIntegerv(param,count);
	}
	,getListener3f: function(param) {
		return lime_audio_openal_AL.getListener3f(param);
	}
	,getListener3i: function(param) {
		return lime_audio_openal_AL.getListener3i(param);
	}
	,getListenerf: function(param) {
		return lime_audio_openal_AL.getListenerf(param);
	}
	,getListenerfv: function(param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getListenerfv(param,count);
	}
	,getListeneri: function(param) {
		return lime_audio_openal_AL.getListeneri(param);
	}
	,getListeneriv: function(param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getListeneriv(param,count);
	}
	,getProcAddress: function(fname) {
		return lime_audio_openal_AL.getProcAddress(fname);
	}
	,getSource3f: function(source,param) {
		return lime_audio_openal_AL.getSource3f(source,param);
	}
	,getSourcef: function(source,param) {
		return lime_audio_openal_AL.getSourcef(source,param);
	}
	,getSource3i: function(source,param) {
		return lime_audio_openal_AL.getSource3i(source,param);
	}
	,getSourcefv: function(source,param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getSourcefv(source,param);
	}
	,getSourcei: function(source,param) {
		return lime_audio_openal_AL.getSourcei(source,param);
	}
	,getSourceiv: function(source,param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getSourceiv(source,param,count);
	}
	,getString: function(param) {
		return lime_audio_openal_AL.getString(param);
	}
	,isBuffer: function(buffer) {
		return lime_audio_openal_AL.isBuffer(buffer);
	}
	,isEnabled: function(capability) {
		return lime_audio_openal_AL.isEnabled(capability);
	}
	,isExtensionPresent: function(extname) {
		return lime_audio_openal_AL.isExtensionPresent(extname);
	}
	,isSource: function(source) {
		return lime_audio_openal_AL.isSource(source);
	}
	,listener3f: function(param,value1,value2,value3) {
		lime_audio_openal_AL.listener3f(param,value1,value2,value3);
	}
	,listener3i: function(param,value1,value2,value3) {
		lime_audio_openal_AL.listener3i(param,value1,value2,value3);
	}
	,listenerf: function(param,value) {
		lime_audio_openal_AL.listenerf(param,value);
	}
	,listenerfv: function(param,values) {
		lime_audio_openal_AL.listenerfv(param,values);
	}
	,listeneri: function(param,value) {
		lime_audio_openal_AL.listeneri(param,value);
	}
	,listeneriv: function(param,values) {
		lime_audio_openal_AL.listeneriv(param,values);
	}
	,source3f: function(source,param,value1,value2,value3) {
		lime_audio_openal_AL.source3f(source,param,value1,value2,value3);
	}
	,source3i: function(source,param,value1,value2,value3) {
		lime_audio_openal_AL.source3i(source,param,value1,value2,value3);
	}
	,sourcef: function(source,param,value) {
		lime_audio_openal_AL.sourcef(source,param,value);
	}
	,sourcefv: function(source,param,values) {
		lime_audio_openal_AL.sourcefv(source,param,values);
	}
	,sourcei: function(source,param,value) {
		lime_audio_openal_AL.sourcei(source,param,value);
	}
	,sourceiv: function(source,param,values) {
		lime_audio_openal_AL.sourceiv(source,param,values);
	}
	,sourcePlay: function(source) {
		lime_audio_openal_AL.sourcePlay(source);
	}
	,sourcePlayv: function(sources) {
		lime_audio_openal_AL.sourcePlayv(sources);
	}
	,sourceStop: function(source) {
		lime_audio_openal_AL.sourceStop(source);
	}
	,sourceStopv: function(sources) {
		lime_audio_openal_AL.sourceStopv(sources);
	}
	,sourceRewind: function(source) {
		lime_audio_openal_AL.sourceRewind(source);
	}
	,sourceRewindv: function(sources) {
		lime_audio_openal_AL.sourceRewindv(sources);
	}
	,sourcePause: function(source) {
		lime_audio_openal_AL.sourcePause(source);
	}
	,sourcePausev: function(sources) {
		lime_audio_openal_AL.sourcePausev(sources);
	}
	,sourceQueueBuffer: function(source,buffer) {
		lime_audio_openal_AL.sourceQueueBuffer(source,buffer);
	}
	,sourceQueueBuffers: function(source,nb,buffers) {
		lime_audio_openal_AL.sourceQueueBuffers(source,nb,buffers);
	}
	,sourceUnqueueBuffer: function(source) {
		return lime_audio_openal_AL.sourceUnqueueBuffer(source);
	}
	,sourceUnqueueBuffers: function(source,nb) {
		return lime_audio_openal_AL.sourceUnqueueBuffers(source,nb);
	}
	,speedOfSound: function(value) {
		lime_audio_openal_AL.speedOfSound(value);
	}
	,__class__: lime_audio_ALAudioContext
};
var lime_audio_ALCAudioContext = function() {
	this.ALL_DEVICES_SPECIFIER = 4115;
	this.DEFAULT_ALL_DEVICES_SPECIFIER = 4114;
	this.ENUMERATE_ALL_EXT = 1;
	this.EXTENSIONS = 4102;
	this.DEVICE_SPECIFIER = 4101;
	this.DEFAULT_DEVICE_SPECIFIER = 4100;
	this.ALL_ATTRIBUTES = 4099;
	this.ATTRIBUTES_SIZE = 4098;
	this.OUT_OF_MEMORY = 40965;
	this.INVALID_VALUE = 40964;
	this.INVALID_ENUM = 40963;
	this.INVALID_CONTEXT = 40962;
	this.INVALID_DEVICE = 40961;
	this.NO_ERROR = 0;
	this.STEREO_SOURCES = 4113;
	this.MONO_SOURCES = 4112;
	this.SYNC = 4105;
	this.REFRESH = 4104;
	this.FREQUENCY = 4103;
	this.TRUE = 1;
	this.FALSE = 0;
};
$hxClasses["lime.audio.ALCAudioContext"] = lime_audio_ALCAudioContext;
lime_audio_ALCAudioContext.__name__ = ["lime","audio","ALCAudioContext"];
lime_audio_ALCAudioContext.prototype = {
	closeDevice: function(device) {
		return lime_audio_openal_ALC.closeDevice(device);
	}
	,createContext: function(device,attrlist) {
		return lime_audio_openal_ALC.createContext(device,attrlist);
	}
	,destroyContext: function(context) {
		lime_audio_openal_ALC.destroyContext(context);
	}
	,getContextsDevice: function(context) {
		return lime_audio_openal_ALC.getContextsDevice(context);
	}
	,getCurrentContext: function() {
		return lime_audio_openal_ALC.getCurrentContext();
	}
	,getError: function(device) {
		return lime_audio_openal_ALC.getError(device);
	}
	,getErrorString: function(device) {
		return lime_audio_openal_ALC.getErrorString(device);
	}
	,getIntegerv: function(device,param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_ALC.getIntegerv(device,param,count);
	}
	,getString: function(device,param) {
		return lime_audio_openal_ALC.getString(device,param);
	}
	,makeContextCurrent: function(context) {
		return lime_audio_openal_ALC.makeContextCurrent(context);
	}
	,openDevice: function(deviceName) {
		return lime_audio_openal_ALC.openDevice(deviceName);
	}
	,processContext: function(context) {
		lime_audio_openal_ALC.processContext(context);
	}
	,suspendContext: function(context) {
		lime_audio_openal_ALC.suspendContext(context);
	}
	,__class__: lime_audio_ALCAudioContext
};
var lime_audio_AudioBuffer = function() {
	this.id = 0;
};
$hxClasses["lime.audio.AudioBuffer"] = lime_audio_AudioBuffer;
lime_audio_AudioBuffer.__name__ = ["lime","audio","AudioBuffer"];
lime_audio_AudioBuffer.fromBytes = function(bytes) {
	return null;
};
lime_audio_AudioBuffer.fromFile = function(path) {
	return null;
};
lime_audio_AudioBuffer.fromURL = function(url,handler) {
	if(url != null && url.indexOf("http://") == -1 && url.indexOf("https://") == -1) handler(lime_audio_AudioBuffer.fromFile(url)); else {
	}
};
lime_audio_AudioBuffer.prototype = {
	dispose: function() {
	}
	,__class__: lime_audio_AudioBuffer
};
var lime_audio_AudioContext = $hxClasses["lime.audio.AudioContext"] = { __ename__ : ["lime","audio","AudioContext"], __constructs__ : ["OPENAL","HTML5","WEB","FLASH","CUSTOM"] };
lime_audio_AudioContext.OPENAL = function(alc,al) { var $x = ["OPENAL",0,alc,al]; $x.__enum__ = lime_audio_AudioContext; $x.toString = $estr; return $x; };
lime_audio_AudioContext.HTML5 = function(context) { var $x = ["HTML5",1,context]; $x.__enum__ = lime_audio_AudioContext; $x.toString = $estr; return $x; };
lime_audio_AudioContext.WEB = function(context) { var $x = ["WEB",2,context]; $x.__enum__ = lime_audio_AudioContext; $x.toString = $estr; return $x; };
lime_audio_AudioContext.FLASH = function(context) { var $x = ["FLASH",3,context]; $x.__enum__ = lime_audio_AudioContext; $x.toString = $estr; return $x; };
lime_audio_AudioContext.CUSTOM = function(data) { var $x = ["CUSTOM",4,data]; $x.__enum__ = lime_audio_AudioContext; $x.toString = $estr; return $x; };
var lime_audio_AudioManager = function() { };
$hxClasses["lime.audio.AudioManager"] = lime_audio_AudioManager;
lime_audio_AudioManager.__name__ = ["lime","audio","AudioManager"];
lime_audio_AudioManager.context = null;
lime_audio_AudioManager.init = function(context) {
	if(lime_audio_AudioManager.context == null) {
		if(context == null) try {
			window.AudioContext = window.AudioContext || window.webkitAudioContext;;
			lime_audio_AudioManager.context = lime_audio_AudioContext.WEB(new AudioContext ());
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			lime_audio_AudioManager.context = lime_audio_AudioContext.HTML5(new lime_audio_HTML5AudioContext());
		} else lime_audio_AudioManager.context = context;
	}
};
lime_audio_AudioManager.resume = function() {
	if(lime_audio_AudioManager.context != null) {
		var _g = lime_audio_AudioManager.context;
		switch(_g[1]) {
		case 0:
			var al = _g[3];
			var alc = _g[2];
			alc.processContext(alc.getCurrentContext());
			break;
		default:
		}
	}
};
lime_audio_AudioManager.shutdown = function() {
	if(lime_audio_AudioManager.context != null) {
		var _g = lime_audio_AudioManager.context;
		switch(_g[1]) {
		case 0:
			var al = _g[3];
			var alc = _g[2];
			var currentContext = alc.getCurrentContext();
			if(currentContext != null) {
				var device = alc.getContextsDevice(currentContext);
				alc.makeContextCurrent(null);
				alc.destroyContext(currentContext);
				alc.closeDevice(device);
			}
			break;
		default:
		}
	}
};
lime_audio_AudioManager.suspend = function() {
	if(lime_audio_AudioManager.context != null) {
		var _g = lime_audio_AudioManager.context;
		switch(_g[1]) {
		case 0:
			var al = _g[3];
			var alc = _g[2];
			alc.suspendContext(alc.getCurrentContext());
			break;
		default:
		}
	}
};
var lime_audio_AudioSource = function(buffer,offset,length,loops) {
	if(loops == null) loops = 0;
	if(offset == null) offset = 0;
	this.onComplete = new lime_app_Event_$Void_$Void();
	this.buffer = buffer;
	this.offset = offset;
	if(length != null && length != 0) this.set_length(length);
	this.set_loops(loops);
	this.id = 0;
	if(buffer != null) this.init();
};
$hxClasses["lime.audio.AudioSource"] = lime_audio_AudioSource;
lime_audio_AudioSource.__name__ = ["lime","audio","AudioSource"];
lime_audio_AudioSource.prototype = {
	dispose: function() {
		{
			var _g = lime_audio_AudioManager.context;
			switch(_g[1]) {
			case 0:
				var al = _g[3];
				var alc = _g[2];
				if(this.id != 0) al.deleteSource(this.id);
				break;
			default:
			}
		}
	}
	,init: function() {
		{
			var _g = lime_audio_AudioManager.context;
			switch(_g[1]) {
			case 0:
				var al = _g[3];
				var alc = _g[2];
				if(this.buffer.id == 0) {
					this.buffer.id = al.genBuffer();
					var format = 0;
					if(this.buffer.channels == 1) {
						if(this.buffer.bitsPerSample == 8) format = al.FORMAT_MONO8; else if(this.buffer.bitsPerSample == 16) format = al.FORMAT_MONO16;
					} else if(this.buffer.channels == 2) {
						if(this.buffer.bitsPerSample == 8) format = al.FORMAT_STEREO8; else if(this.buffer.bitsPerSample == 16) format = al.FORMAT_STEREO16;
					}
					al.bufferData(this.buffer.id,format,this.buffer.data,this.buffer.data.length,this.buffer.sampleRate);
				}
				this.id = al.genSource();
				al.sourcei(this.id,al.BUFFER,this.buffer.id);
				break;
			default:
			}
		}
	}
	,play: function() {
	}
	,pause: function() {
	}
	,stop: function() {
	}
	,timer_onRun: function() {
	}
	,get_currentTime: function() {
		return 0;
	}
	,set_currentTime: function(value) {
		return this.pauseTime = value;
	}
	,get_gain: function() {
		return 1;
	}
	,set_gain: function(value) {
		return 1;
	}
	,get_length: function() {
		if(this.__length != null) return this.__length;
		return 0;
	}
	,set_length: function(value) {
		return this.__length = value;
	}
	,get_loops: function() {
		return this.__loops;
	}
	,set_loops: function(loops) {
		return this.__loops = loops;
	}
	,__class__: lime_audio_AudioSource
	,__properties__: {set_loops:"set_loops",get_loops:"get_loops",set_length:"set_length",get_length:"get_length",set_gain:"set_gain",get_gain:"get_gain",set_currentTime:"set_currentTime",get_currentTime:"get_currentTime"}
};
var lime_audio_FlashAudioContext = function() {
};
$hxClasses["lime.audio.FlashAudioContext"] = lime_audio_FlashAudioContext;
lime_audio_FlashAudioContext.__name__ = ["lime","audio","FlashAudioContext"];
lime_audio_FlashAudioContext.prototype = {
	createBuffer: function(stream,context) {
		return null;
	}
	,getBytesLoaded: function(buffer) {
		return 0;
	}
	,getBytesTotal: function(buffer) {
		return 0;
	}
	,getID3: function(buffer) {
		return null;
	}
	,getIsBuffering: function(buffer) {
		return false;
	}
	,getIsURLInaccessible: function(buffer) {
		return false;
	}
	,getLength: function(buffer) {
		return 0;
	}
	,getURL: function(buffer) {
		return null;
	}
	,close: function(buffer) {
	}
	,extract: function(buffer,target,length,startPosition) {
		if(startPosition == null) startPosition = -1;
		return 0;
	}
	,load: function(buffer,stream,context) {
	}
	,loadCompressedDataFromByteArray: function(buffer,bytes,bytesLength) {
	}
	,loadPCMFromByteArray: function(buffer,bytes,samples,format,stereo,sampleRate) {
		if(sampleRate == null) sampleRate = 44100;
		if(stereo == null) stereo = true;
	}
	,play: function(buffer,startTime,loops,sndTransform) {
		if(loops == null) loops = 0;
		if(startTime == null) startTime = 0;
		return null;
	}
	,__class__: lime_audio_FlashAudioContext
};
var lime_audio_HTML5AudioContext = function() {
	this.NETWORK_NO_SOURCE = 3;
	this.NETWORK_LOADING = 2;
	this.NETWORK_IDLE = 1;
	this.NETWORK_EMPTY = 0;
	this.HAVE_NOTHING = 0;
	this.HAVE_METADATA = 1;
	this.HAVE_FUTURE_DATA = 3;
	this.HAVE_ENOUGH_DATA = 4;
	this.HAVE_CURRENT_DATA = 2;
};
$hxClasses["lime.audio.HTML5AudioContext"] = lime_audio_HTML5AudioContext;
lime_audio_HTML5AudioContext.__name__ = ["lime","audio","HTML5AudioContext"];
lime_audio_HTML5AudioContext.prototype = {
	canPlayType: function(buffer,type) {
		if(buffer.src != null) return buffer.src.canPlayType(type);
		return null;
	}
	,createBuffer: function(urlString) {
		var buffer = new lime_audio_AudioBuffer();
		buffer.src = new Audio();
		buffer.src.src = urlString;
		return buffer;
	}
	,getAutoplay: function(buffer) {
		if(buffer.src != null) return buffer.src.autoplay;
		return false;
	}
	,getBuffered: function(buffer) {
		if(buffer.src != null) return buffer.src.buffered;
		return null;
	}
	,getCurrentSrc: function(buffer) {
		if(buffer.src != null) return buffer.src.currentSrc;
		return null;
	}
	,getCurrentTime: function(buffer) {
		if(buffer.src != null) return buffer.src.currentTime;
		return 0;
	}
	,getDefaultPlaybackRate: function(buffer) {
		if(buffer.src != null) return buffer.src.defaultPlaybackRate;
		return 1;
	}
	,getDuration: function(buffer) {
		if(buffer.src != null) return buffer.src.duration;
		return 0;
	}
	,getEnded: function(buffer) {
		if(buffer.src != null) return buffer.src.ended;
		return false;
	}
	,getError: function(buffer) {
		if(buffer.src != null) return buffer.src.error;
		return null;
	}
	,getLoop: function(buffer) {
		if(buffer.src != null) return buffer.src.loop;
		return false;
	}
	,getMuted: function(buffer) {
		if(buffer.src != null) return buffer.src.muted;
		return false;
	}
	,getNetworkState: function(buffer) {
		if(buffer.src != null) return buffer.src.networkState;
		return 0;
	}
	,getPaused: function(buffer) {
		if(buffer.src != null) return buffer.src.paused;
		return false;
	}
	,getPlaybackRate: function(buffer) {
		if(buffer.src != null) return buffer.src.playbackRate;
		return 1;
	}
	,getPlayed: function(buffer) {
		if(buffer.src != null) return buffer.src.played;
		return null;
	}
	,getPreload: function(buffer) {
		if(buffer.src != null) return buffer.src.preload;
		return null;
	}
	,getReadyState: function(buffer) {
		if(buffer.src != null) return buffer.src.readyState;
		return 0;
	}
	,getSeekable: function(buffer) {
		if(buffer.src != null) return buffer.src.seekable;
		return null;
	}
	,getSeeking: function(buffer) {
		if(buffer.src != null) return buffer.src.seeking;
		return false;
	}
	,getSrc: function(buffer) {
		if(buffer.src != null) return buffer.src.src;
		return null;
	}
	,getStartTime: function(buffer) {
		if(buffer.src != null) return buffer.src.playbackRate;
		return 0;
	}
	,getVolume: function(buffer) {
		if(buffer.src != null) return buffer.src.volume;
		return 1;
	}
	,load: function(buffer) {
		if(buffer.src != null) return buffer.src.load();
	}
	,pause: function(buffer) {
		if(buffer.src != null) return buffer.src.pause();
	}
	,play: function(buffer) {
		if(buffer.src != null) return buffer.src.play();
	}
	,setAutoplay: function(buffer,value) {
		if(buffer.src != null) buffer.src.autoplay = value;
	}
	,setCurrentTime: function(buffer,value) {
		if(buffer.src != null) buffer.src.currentTime = value;
	}
	,setDefaultPlaybackRate: function(buffer,value) {
		if(buffer.src != null) buffer.src.defaultPlaybackRate = value;
	}
	,setLoop: function(buffer,value) {
		if(buffer.src != null) buffer.src.loop = value;
	}
	,setMuted: function(buffer,value) {
		if(buffer.src != null) buffer.src.muted = value;
	}
	,setPlaybackRate: function(buffer,value) {
		if(buffer.src != null) buffer.src.playbackRate = value;
	}
	,setPreload: function(buffer,value) {
		if(buffer.src != null) buffer.src.preload = value;
	}
	,setSrc: function(buffer,value) {
		if(buffer.src != null) buffer.src.src = value;
	}
	,setVolume: function(buffer,value) {
		if(buffer.src != null) buffer.src.volume = value;
	}
	,__class__: lime_audio_HTML5AudioContext
};
var lime_audio_openal_AL = function() { };
$hxClasses["lime.audio.openal.AL"] = lime_audio_openal_AL;
lime_audio_openal_AL.__name__ = ["lime","audio","openal","AL"];
lime_audio_openal_AL.bufferData = function(buffer,format,data,size,freq) {
};
lime_audio_openal_AL.buffer3f = function(buffer,param,value1,value2,value3) {
};
lime_audio_openal_AL.buffer3i = function(buffer,param,value1,value2,value3) {
};
lime_audio_openal_AL.bufferf = function(buffer,param,value) {
};
lime_audio_openal_AL.bufferfv = function(buffer,param,values) {
};
lime_audio_openal_AL.bufferi = function(buffer,param,value) {
};
lime_audio_openal_AL.bufferiv = function(buffer,param,values) {
};
lime_audio_openal_AL.deleteBuffer = function(buffer) {
};
lime_audio_openal_AL.deleteBuffers = function(buffers) {
};
lime_audio_openal_AL.deleteSource = function(source) {
};
lime_audio_openal_AL.deleteSources = function(sources) {
};
lime_audio_openal_AL.disable = function(capability) {
};
lime_audio_openal_AL.distanceModel = function(distanceModel) {
};
lime_audio_openal_AL.dopplerFactor = function(value) {
};
lime_audio_openal_AL.dopplerVelocity = function(value) {
};
lime_audio_openal_AL.enable = function(capability) {
};
lime_audio_openal_AL.genSource = function() {
	return 0;
};
lime_audio_openal_AL.genSources = function(n) {
	return null;
};
lime_audio_openal_AL.genBuffer = function() {
	return 0;
};
lime_audio_openal_AL.genBuffers = function(n) {
	return null;
};
lime_audio_openal_AL.getBoolean = function(param) {
	return false;
};
lime_audio_openal_AL.getBooleanv = function(param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getBuffer3f = function(buffer,param) {
	return null;
};
lime_audio_openal_AL.getBuffer3i = function(buffer,param) {
	return null;
};
lime_audio_openal_AL.getBufferf = function(buffer,param) {
	return 0;
};
lime_audio_openal_AL.getBufferfv = function(buffer,param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getBufferi = function(buffer,param) {
	return 0;
};
lime_audio_openal_AL.getBufferiv = function(buffer,param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getDouble = function(param) {
	return 0;
};
lime_audio_openal_AL.getDoublev = function(param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getEnumValue = function(ename) {
	return 0;
};
lime_audio_openal_AL.getError = function() {
	return 0;
};
lime_audio_openal_AL.getErrorString = function() {
	var _g = lime_audio_openal_AL.getError();
	switch(_g) {
	case 40961:
		return "INVALID_NAME: Invalid parameter name";
	case 40962:
		return "INVALID_ENUM: Invalid enum value";
	case 40963:
		return "INVALID_VALUE: Invalid parameter value";
	case 40964:
		return "INVALID_OPERATION: Illegal operation or call";
	case 40965:
		return "OUT_OF_MEMORY: OpenAL has run out of memory";
	default:
		return "";
	}
};
lime_audio_openal_AL.getFloat = function(param) {
	return 0;
};
lime_audio_openal_AL.getFloatv = function(param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getInteger = function(param) {
	return 0;
};
lime_audio_openal_AL.getIntegerv = function(param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getListener3f = function(param) {
	return null;
};
lime_audio_openal_AL.getListener3i = function(param) {
	return null;
};
lime_audio_openal_AL.getListenerf = function(param) {
	return 0;
};
lime_audio_openal_AL.getListenerfv = function(param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getListeneri = function(param) {
	return 0;
};
lime_audio_openal_AL.getListeneriv = function(param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getProcAddress = function(fname) {
	return null;
};
lime_audio_openal_AL.getSource3f = function(source,param) {
	return null;
};
lime_audio_openal_AL.getSourcef = function(source,param) {
	return 0;
};
lime_audio_openal_AL.getSource3i = function(source,param) {
	return null;
};
lime_audio_openal_AL.getSourcefv = function(source,param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getSourcei = function(source,param) {
	return 0;
};
lime_audio_openal_AL.getSourceiv = function(source,param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getString = function(param) {
	return null;
};
lime_audio_openal_AL.isBuffer = function(buffer) {
	return false;
};
lime_audio_openal_AL.isEnabled = function(capability) {
	return false;
};
lime_audio_openal_AL.isExtensionPresent = function(extname) {
	return false;
};
lime_audio_openal_AL.isSource = function(source) {
	return false;
};
lime_audio_openal_AL.listener3f = function(param,value1,value2,value3) {
};
lime_audio_openal_AL.listener3i = function(param,value1,value2,value3) {
};
lime_audio_openal_AL.listenerf = function(param,value) {
};
lime_audio_openal_AL.listenerfv = function(param,values) {
};
lime_audio_openal_AL.listeneri = function(param,value) {
};
lime_audio_openal_AL.listeneriv = function(param,values) {
};
lime_audio_openal_AL.source3f = function(source,param,value1,value2,value3) {
};
lime_audio_openal_AL.source3i = function(source,param,value1,value2,value3) {
};
lime_audio_openal_AL.sourcef = function(source,param,value) {
};
lime_audio_openal_AL.sourcefv = function(source,param,values) {
};
lime_audio_openal_AL.sourcei = function(source,param,value) {
};
lime_audio_openal_AL.sourceiv = function(source,param,values) {
};
lime_audio_openal_AL.sourcePlay = function(source) {
};
lime_audio_openal_AL.sourcePlayv = function(sources) {
};
lime_audio_openal_AL.sourceStop = function(source) {
};
lime_audio_openal_AL.sourceStopv = function(sources) {
};
lime_audio_openal_AL.sourceRewind = function(source) {
};
lime_audio_openal_AL.sourceRewindv = function(sources) {
};
lime_audio_openal_AL.sourcePause = function(source) {
};
lime_audio_openal_AL.sourcePausev = function(sources) {
};
lime_audio_openal_AL.sourceQueueBuffer = function(source,buffer) {
};
lime_audio_openal_AL.sourceQueueBuffers = function(source,nb,buffers) {
};
lime_audio_openal_AL.sourceUnqueueBuffer = function(source) {
	return 0;
};
lime_audio_openal_AL.sourceUnqueueBuffers = function(source,nb) {
	return null;
};
lime_audio_openal_AL.speedOfSound = function(value) {
};
var lime_audio_openal_ALC = function() { };
$hxClasses["lime.audio.openal.ALC"] = lime_audio_openal_ALC;
lime_audio_openal_ALC.__name__ = ["lime","audio","openal","ALC"];
lime_audio_openal_ALC.closeDevice = function(device) {
	return false;
};
lime_audio_openal_ALC.createContext = function(device,attrlist) {
	return null;
};
lime_audio_openal_ALC.destroyContext = function(context) {
};
lime_audio_openal_ALC.getContextsDevice = function(context) {
	return null;
};
lime_audio_openal_ALC.getCurrentContext = function() {
	return null;
};
lime_audio_openal_ALC.getError = function(device) {
	return 0;
};
lime_audio_openal_ALC.getErrorString = function(device) {
	var _g = lime_audio_openal_ALC.getError(device);
	switch(_g) {
	case 40961:
		return "INVALID_DEVICE: Invalid device (or no device?)";
	case 40962:
		return "INVALID_CONTEXT: Invalid context (or no context?)";
	case 40963:
		return "INVALID_ENUM: Invalid enum value";
	case 40964:
		return "INVALID_VALUE: Invalid param value";
	case 40965:
		return "OUT_OF_MEMORY: OpenAL has run out of memory";
	default:
		return "";
	}
};
lime_audio_openal_ALC.getIntegerv = function(device,param,size) {
	return null;
};
lime_audio_openal_ALC.getString = function(device,param) {
	return null;
};
lime_audio_openal_ALC.makeContextCurrent = function(context) {
	return false;
};
lime_audio_openal_ALC.openDevice = function(deviceName) {
	return null;
};
lime_audio_openal_ALC.processContext = function(context) {
};
lime_audio_openal_ALC.suspendContext = function(context) {
};
var lime_audio_openal__$ALContext_ALContext_$Impl_$ = {};
$hxClasses["lime.audio.openal._ALContext.ALContext_Impl_"] = lime_audio_openal__$ALContext_ALContext_$Impl_$;
lime_audio_openal__$ALContext_ALContext_$Impl_$.__name__ = ["lime","audio","openal","_ALContext","ALContext_Impl_"];
lime_audio_openal__$ALContext_ALContext_$Impl_$._new = function(handle) {
	return handle;
};
var lime_audio_openal__$ALDevice_ALDevice_$Impl_$ = {};
$hxClasses["lime.audio.openal._ALDevice.ALDevice_Impl_"] = lime_audio_openal__$ALDevice_ALDevice_$Impl_$;
lime_audio_openal__$ALDevice_ALDevice_$Impl_$.__name__ = ["lime","audio","openal","_ALDevice","ALDevice_Impl_"];
lime_audio_openal__$ALDevice_ALDevice_$Impl_$._new = function(handle) {
	return handle;
};
var lime_graphics_ConsoleRenderContext = function() {
};
$hxClasses["lime.graphics.ConsoleRenderContext"] = lime_graphics_ConsoleRenderContext;
lime_graphics_ConsoleRenderContext.__name__ = ["lime","graphics","ConsoleRenderContext"];
lime_graphics_ConsoleRenderContext.prototype = {
	createIndexBuffer: function(indices,count) {
		return new lime_graphics_console_IndexBuffer();
	}
	,createVertexBuffer: function(decl,count) {
		return new lime_graphics_console_VertexBuffer();
	}
	,lookupShader: function(name) {
		return new lime_graphics_console_Shader();
	}
	,clear: function(r,g,b,a,depth,stencil) {
		if(stencil == null) stencil = 0;
		if(depth == null) depth = 1.0;
	}
	,bindShader: function(shader) {
	}
	,setViewport: function(x,y,width,height,nearPlane,farPlane) {
		if(farPlane == null) farPlane = 1.0;
		if(nearPlane == null) nearPlane = 0.0;
	}
	,setVertexShaderConstantF: function(startRegister,vec4,vec4count) {
	}
	,setVertexSource: function(vb) {
	}
	,setIndexSource: function(ib) {
	}
	,draw: function(primitive,startVertex,primitiveCount) {
	}
	,drawIndexed: function(primitive,vertexCount,startIndex,primitiveCount) {
	}
	,get_width: function() {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,__class__: lime_graphics_ConsoleRenderContext
	,__properties__: {get_height:"get_height",get_width:"get_width"}
};
var lime_graphics_FlashRenderContext = function() {
};
$hxClasses["lime.graphics.FlashRenderContext"] = lime_graphics_FlashRenderContext;
lime_graphics_FlashRenderContext.__name__ = ["lime","graphics","FlashRenderContext"];
lime_graphics_FlashRenderContext.prototype = {
	addChild: function(child) {
		return null;
	}
	,addChildAt: function(child,index) {
		return null;
	}
	,addEventListener: function(type,listener,useCapture,priority,useWeakReference) {
		if(useWeakReference == null) useWeakReference = false;
		if(priority == null) priority = 0;
		if(useCapture == null) useCapture = false;
	}
	,areInaccessibleObjectsUnderPoint: function(point) {
		return false;
	}
	,contains: function(child) {
		return false;
	}
	,dispatchEvent: function(event) {
		return false;
	}
	,getBounds: function(targetCoordinateSpace) {
		return null;
	}
	,getChildAt: function(index) {
		return null;
	}
	,getChildByName: function(name) {
		return null;
	}
	,getChildIndex: function(child) {
		return 0;
	}
	,getObjectsUnderPoint: function(point) {
		return null;
	}
	,getRect: function(targetCoordinateSpace) {
		return null;
	}
	,globalToLocal: function(point) {
		return null;
	}
	,globalToLocal3D: function(point) {
		return null;
	}
	,hasEventListener: function(type) {
		return false;
	}
	,hitTestObject: function(obj) {
		return false;
	}
	,hitTestPoint: function(x,y,shapeFlag) {
		if(shapeFlag == null) shapeFlag = false;
		return false;
	}
	,local3DToGlobal: function(point3d) {
		return null;
	}
	,localToGlobal: function(point) {
		return null;
	}
	,removeChild: function(child) {
		return null;
	}
	,removeChildAt: function(index) {
		return null;
	}
	,removeChildren: function(beginIndex,endIndex) {
		if(endIndex == null) endIndex = 2147483647;
		if(beginIndex == null) beginIndex = 0;
	}
	,removeEventListener: function(type,listener,useCapture) {
		if(useCapture == null) useCapture = false;
	}
	,requestSoftKeyboard: function() {
		return false;
	}
	,setChildIndex: function(child,index) {
	}
	,startDrag: function(lockCenter,bounds) {
		if(lockCenter == null) lockCenter = false;
	}
	,startTouchDrag: function(touchPointID,lockCenter,bounds) {
		if(lockCenter == null) lockCenter = false;
	}
	,stopAllMovieClips: function() {
	}
	,stopDrag: function() {
	}
	,stopTouchDrag: function(touchPointID) {
	}
	,swapChildren: function(child1,child2) {
	}
	,swapChildrenAt: function(index1,index2) {
	}
	,toString: function() {
		return null;
	}
	,willTrigger: function(type) {
		return false;
	}
	,__class__: lime_graphics_FlashRenderContext
};
var lime_graphics_Image = function(buffer,offsetX,offsetY,width,height,color,type) {
	if(height == null) height = -1;
	if(width == null) width = -1;
	if(offsetY == null) offsetY = 0;
	if(offsetX == null) offsetX = 0;
	this.offsetX = offsetX;
	this.offsetY = offsetY;
	this.width = width;
	this.height = height;
	if(type == null) {
		if(lime_app_Application.current != null && lime_app_Application.current.renderers[0] != null) {
			var _g = lime_app_Application.current.renderers[0].context;
			switch(_g[1]) {
			case 2:case 1:
				this.type = lime_graphics_ImageType.CANVAS;
				break;
			case 3:
				this.type = lime_graphics_ImageType.FLASH;
				break;
			default:
				this.type = lime_graphics_ImageType.DATA;
			}
		} else this.type = lime_graphics_ImageType.DATA;
	} else this.type = type;
	if(buffer == null) {
		if(width > 0 && height > 0) {
			var _g1 = this.type;
			switch(_g1[1]) {
			case 0:
				this.buffer = new lime_graphics_ImageBuffer(null,width,height);
				lime_graphics_utils_ImageCanvasUtil.createCanvas(this,width,height);
				if(color != null) this.fillRect(new lime_math_Rectangle(0,0,width,height),color);
				break;
			case 1:
				this.buffer = new lime_graphics_ImageBuffer((function($this) {
					var $r;
					var elements = width * height * 4;
					var this1;
					if(elements != null) this1 = new Uint8Array(elements); else this1 = null;
					$r = this1;
					return $r;
				}(this)),width,height);
				if(color != null) this.fillRect(new lime_math_Rectangle(0,0,width,height),color);
				break;
			case 2:
				break;
			default:
			}
		}
	} else this.__fromImageBuffer(buffer);
};
$hxClasses["lime.graphics.Image"] = lime_graphics_Image;
lime_graphics_Image.__name__ = ["lime","graphics","Image"];
lime_graphics_Image.__base64Encoder = null;
lime_graphics_Image.fromBase64 = function(base64,type,onload) {
	if(base64 == null) return null;
	var image = new lime_graphics_Image();
	image.__fromBase64(base64,type,onload);
	return image;
};
lime_graphics_Image.fromBitmapData = function(bitmapData) {
	if(bitmapData == null) return null;
	return bitmapData.image;
};
lime_graphics_Image.fromBytes = function(bytes,onload) {
	if(bytes == null) return null;
	var image = new lime_graphics_Image();
	image.__fromBytes(bytes,onload);
	return image;
};
lime_graphics_Image.fromCanvas = function(canvas) {
	if(canvas == null) return null;
	var buffer = new lime_graphics_ImageBuffer(null,canvas.width,canvas.height);
	buffer.set_src(canvas);
	return new lime_graphics_Image(buffer);
};
lime_graphics_Image.fromFile = function(path,onload,onerror) {
	var image = new lime_graphics_Image();
	image.__fromFile(path,onload,onerror);
	return image;
};
lime_graphics_Image.fromImageElement = function(image) {
	if(image == null) return null;
	var buffer = new lime_graphics_ImageBuffer(null,image.width,image.height);
	buffer.set_src(image);
	return new lime_graphics_Image(buffer);
};
lime_graphics_Image.__base64Encode = function(bytes) {
	var extension;
	var _g = bytes.length % 3;
	switch(_g) {
	case 1:
		extension = "==";
		break;
	case 2:
		extension = "=";
		break;
	default:
		extension = "";
	}
	if(lime_graphics_Image.__base64Encoder == null) lime_graphics_Image.__base64Encoder = new haxe_crypto_BaseCode(haxe_io_Bytes.ofString(lime_graphics_Image.__base64Chars));
	return lime_graphics_Image.__base64Encoder.encodeBytes(bytes).toString() + extension;
};
lime_graphics_Image.__isJPG = function(bytes) {
	return bytes.b[0] == 255 && bytes.b[1] == 216;
};
lime_graphics_Image.__isPNG = function(bytes) {
	return bytes.b[0] == 137 && bytes.b[1] == 80 && bytes.b[2] == 78 && bytes.b[3] == 71 && bytes.b[4] == 13 && bytes.b[5] == 10 && bytes.b[6] == 26 && bytes.b[7] == 10;
};
lime_graphics_Image.__isGIF = function(bytes) {
	if(bytes.b[0] == 71 && bytes.b[1] == 73 && bytes.b[2] == 70 && bytes.b[3] == 56) {
		var b = bytes.b[4];
		return (b == 55 || b == 57) && bytes.b[5] == 97;
	}
	return false;
};
lime_graphics_Image.prototype = {
	clone: function() {
		if(this.buffer != null) {
			if(this.type == lime_graphics_ImageType.CANVAS && this.buffer.__srcImage == null) {
				lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this);
				lime_graphics_utils_ImageCanvasUtil.sync(this,true);
			}
			var image = new lime_graphics_Image(this.buffer.clone(),this.offsetX,this.offsetY,this.width,this.height,null,this.type);
			image.dirty = this.dirty;
			return image;
		} else return new lime_graphics_Image(null,this.offsetX,this.offsetY,this.width,this.height,null,this.type);
	}
	,colorTransform: function(rect,colorMatrix) {
		rect = this.__clipRect(rect);
		if(this.buffer == null || rect == null) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.colorTransform(this,rect,colorMatrix);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageDataUtil.colorTransform(this,rect,colorMatrix);
			break;
		case 2:
			rect.offset(this.offsetX,this.offsetY);
			this.buffer.__srcBitmapData.colorTransform(rect.__toFlashRectangle(),lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__toFlashColorTransform(colorMatrix));
			break;
		default:
		}
	}
	,copyChannel: function(sourceImage,sourceRect,destPoint,sourceChannel,destChannel) {
		sourceRect = this.__clipRect(sourceRect);
		if(this.buffer == null || sourceRect == null) return;
		if(destChannel == lime_graphics_ImageChannel.ALPHA && !this.get_transparent()) return;
		if(sourceRect.width <= 0 || sourceRect.height <= 0) return;
		if(sourceRect.x + sourceRect.width > sourceImage.width) sourceRect.width = sourceImage.width - sourceRect.x;
		if(sourceRect.y + sourceRect.height > sourceImage.height) sourceRect.height = sourceImage.height - sourceRect.y;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.copyChannel(this,sourceImage,sourceRect,destPoint,sourceChannel,destChannel);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageDataUtil.copyChannel(this,sourceImage,sourceRect,destPoint,sourceChannel,destChannel);
			break;
		case 2:
			var srcChannel;
			switch(sourceChannel[1]) {
			case 0:
				srcChannel = 1;
				break;
			case 1:
				srcChannel = 2;
				break;
			case 2:
				srcChannel = 4;
				break;
			case 3:
				srcChannel = 8;
				break;
			}
			var dstChannel;
			switch(destChannel[1]) {
			case 0:
				dstChannel = 1;
				break;
			case 1:
				dstChannel = 2;
				break;
			case 2:
				dstChannel = 4;
				break;
			case 3:
				dstChannel = 8;
				break;
			}
			sourceRect.offset(sourceImage.offsetX,sourceImage.offsetY);
			destPoint.offset(this.offsetX,this.offsetY);
			this.buffer.__srcBitmapData.copyChannel(sourceImage.buffer.get_src(),sourceRect.__toFlashRectangle(),destPoint.__toFlashPoint(),srcChannel,dstChannel);
			break;
		default:
		}
	}
	,copyPixels: function(sourceImage,sourceRect,destPoint,alphaImage,alphaPoint,mergeAlpha) {
		if(mergeAlpha == null) mergeAlpha = false;
		if(this.buffer == null || sourceImage == null) return;
		if(sourceRect.width <= 0 || sourceRect.height <= 0) return;
		if(this.width <= 0 || this.height <= 0) return;
		if(sourceRect.x + sourceRect.width > sourceImage.width) sourceRect.width = sourceImage.width - sourceRect.x;
		if(sourceRect.y + sourceRect.height > sourceImage.height) sourceRect.height = sourceImage.height - sourceRect.y;
		if(sourceRect.x < 0) {
			sourceRect.width += sourceRect.x;
			sourceRect.x = 0;
		}
		if(sourceRect.y < 0) {
			sourceRect.height += sourceRect.y;
			sourceRect.y = 0;
		}
		if(destPoint.x + sourceRect.width > this.width) sourceRect.width = this.width - destPoint.x;
		if(destPoint.y + sourceRect.height > this.height) sourceRect.height = this.height - destPoint.y;
		if(destPoint.x < 0) {
			sourceRect.width += destPoint.x;
			sourceRect.x = -destPoint.x;
			destPoint.x = 0;
		}
		if(destPoint.y < 0) {
			sourceRect.height += destPoint.y;
			sourceRect.y = -destPoint.y;
			destPoint.y = 0;
		}
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this);
			lime_graphics_utils_ImageCanvasUtil.copyPixels(this,sourceImage,sourceRect,destPoint,alphaImage,alphaPoint,mergeAlpha);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageCanvasUtil.convertToData(sourceImage);
			lime_graphics_utils_ImageDataUtil.copyPixels(this,sourceImage,sourceRect,destPoint,alphaImage,alphaPoint,mergeAlpha);
			break;
		case 2:
			sourceRect.offset(sourceImage.offsetX,sourceImage.offsetY);
			destPoint.offset(this.offsetX,this.offsetY);
			if(alphaImage != null && alphaPoint != null) alphaPoint.offset(alphaImage.offsetX,alphaImage.offsetY);
			this.buffer.__srcBitmapData.copyPixels(sourceImage.buffer.__srcBitmapData,sourceRect.__toFlashRectangle(),destPoint.__toFlashPoint(),alphaImage != null?alphaImage.buffer.get_src():null,alphaPoint != null?alphaPoint.__toFlashPoint():null,mergeAlpha);
			break;
		default:
		}
	}
	,encode: function(format,quality) {
		if(quality == null) quality = 90;
		if(format == null) format = "png";
		switch(format) {
		case "png":
			return lime_graphics_format_PNG.encode(this);
		case "jpg":case "jpeg":
			return lime_graphics_format_JPEG.encode(this,quality);
		case "bmp":
			return lime_graphics_format_BMP.encode(this);
		default:
		}
		return null;
	}
	,fillRect: function(rect,color,format) {
		rect = this.__clipRect(rect);
		if(this.buffer == null || rect == null) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.fillRect(this,rect,color,format);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			if(this.buffer.data.length == 0) return;
			lime_graphics_utils_ImageDataUtil.fillRect(this,rect,color,format);
			break;
		case 2:
			rect.offset(this.offsetX,this.offsetY);
			var argb;
			if(format != null) switch(format) {
			case 1:
				argb = color;
				break;
			case 2:
				{
					var bgra = color;
					var argb1 = 0;
					argb1 = (bgra & 255 & 255) << 24 | (bgra >> 8 & 255 & 255) << 16 | (bgra >> 16 & 255 & 255) << 8 | bgra >> 24 & 255 & 255;
					argb = argb1;
				}
				break;
			default:
				{
					var rgba = color;
					var argb2 = 0;
					argb2 = (rgba & 255 & 255) << 24 | (rgba >> 24 & 255 & 255) << 16 | (rgba >> 16 & 255 & 255) << 8 | rgba >> 8 & 255 & 255;
					argb = argb2;
				}
			} else {
				var rgba1 = color;
				var argb3 = 0;
				argb3 = (rgba1 & 255 & 255) << 24 | (rgba1 >> 24 & 255 & 255) << 16 | (rgba1 >> 16 & 255 & 255) << 8 | rgba1 >> 8 & 255 & 255;
				argb = argb3;
			}
			this.buffer.__srcBitmapData.fillRect(rect.__toFlashRectangle(),argb);
			break;
		default:
		}
	}
	,floodFill: function(x,y,color,format) {
		if(this.buffer == null) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.floodFill(this,x,y,color,format);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageDataUtil.floodFill(this,x,y,color,format);
			break;
		case 2:
			var argb;
			if(format != null) switch(format) {
			case 1:
				argb = color;
				break;
			case 2:
				{
					var bgra = color;
					var argb1 = 0;
					argb1 = (bgra & 255 & 255) << 24 | (bgra >> 8 & 255 & 255) << 16 | (bgra >> 16 & 255 & 255) << 8 | bgra >> 24 & 255 & 255;
					argb = argb1;
				}
				break;
			default:
				{
					var rgba = color;
					var argb2 = 0;
					argb2 = (rgba & 255 & 255) << 24 | (rgba >> 24 & 255 & 255) << 16 | (rgba >> 16 & 255 & 255) << 8 | rgba >> 8 & 255 & 255;
					argb = argb2;
				}
			} else {
				var rgba1 = color;
				var argb3 = 0;
				argb3 = (rgba1 & 255 & 255) << 24 | (rgba1 >> 24 & 255 & 255) << 16 | (rgba1 >> 16 & 255 & 255) << 8 | rgba1 >> 8 & 255 & 255;
				argb = argb3;
			}
			this.buffer.__srcBitmapData.floodFill(x + this.offsetX,y + this.offsetY,argb);
			break;
		default:
		}
	}
	,getColorBoundsRect: function(mask,color,findColor,format) {
		if(findColor == null) findColor = true;
		if(this.buffer == null) return null;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			return lime_graphics_utils_ImageDataUtil.getColorBoundsRect(this,mask,color,findColor,format);
		case 1:
			return lime_graphics_utils_ImageDataUtil.getColorBoundsRect(this,mask,color,findColor,format);
		case 2:
			var rect = this.buffer.__srcBitmapData.getColorBoundsRect(mask,color,findColor);
			return new lime_math_Rectangle(rect.x,rect.y,rect.width,rect.height);
		default:
			return null;
		}
	}
	,getPixel: function(x,y,format) {
		if(this.buffer == null || x < 0 || y < 0 || x >= this.width || y >= this.height) return 0;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			return lime_graphics_utils_ImageCanvasUtil.getPixel(this,x,y,format);
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			return lime_graphics_utils_ImageDataUtil.getPixel(this,x,y,format);
		case 2:
			var color = this.buffer.__srcBitmapData.getPixel(x + this.offsetX,y + this.offsetY);
			if(format != null) switch(format) {
			case 1:
				return color;
			case 2:
				var bgra;
				{
					var bgra1 = 0;
					bgra1 = (color & 255 & 255) << 24 | (color >> 8 & 255 & 255) << 16 | (color >> 16 & 255 & 255) << 8 | color >> 24 & 255 & 255;
					bgra = bgra1;
				}
				return bgra;
			default:
				var rgba;
				{
					var rgba1 = 0;
					rgba1 = (color >> 16 & 255 & 255) << 24 | (color >> 8 & 255 & 255) << 16 | (color & 255 & 255) << 8 | color >> 24 & 255 & 255;
					rgba = rgba1;
				}
				return rgba;
			} else {
				var rgba2;
				{
					var rgba3 = 0;
					rgba3 = (color >> 16 & 255 & 255) << 24 | (color >> 8 & 255 & 255) << 16 | (color & 255 & 255) << 8 | color >> 24 & 255 & 255;
					rgba2 = rgba3;
				}
				return rgba2;
			}
			break;
		default:
			return 0;
		}
	}
	,getPixel32: function(x,y,format) {
		if(this.buffer == null || x < 0 || y < 0 || x >= this.width || y >= this.height) return 0;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			return lime_graphics_utils_ImageCanvasUtil.getPixel32(this,x,y,format);
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			return lime_graphics_utils_ImageDataUtil.getPixel32(this,x,y,format);
		case 2:
			var color = this.buffer.__srcBitmapData.getPixel32(x + this.offsetX,y + this.offsetY);
			if(format != null) switch(format) {
			case 1:
				return color;
			case 2:
				var bgra;
				{
					var bgra1 = 0;
					bgra1 = (color & 255 & 255) << 24 | (color >> 8 & 255 & 255) << 16 | (color >> 16 & 255 & 255) << 8 | color >> 24 & 255 & 255;
					bgra = bgra1;
				}
				return bgra;
			default:
				var rgba;
				{
					var rgba1 = 0;
					rgba1 = (color >> 16 & 255 & 255) << 24 | (color >> 8 & 255 & 255) << 16 | (color & 255 & 255) << 8 | color >> 24 & 255 & 255;
					rgba = rgba1;
				}
				return rgba;
			} else {
				var rgba2;
				{
					var rgba3 = 0;
					rgba3 = (color >> 16 & 255 & 255) << 24 | (color >> 8 & 255 & 255) << 16 | (color & 255 & 255) << 8 | color >> 24 & 255 & 255;
					rgba2 = rgba3;
				}
				return rgba2;
			}
			break;
		default:
			return 0;
		}
	}
	,getPixels: function(rect,format) {
		if(this.buffer == null) return null;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			return lime_graphics_utils_ImageCanvasUtil.getPixels(this,rect,format);
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			return lime_graphics_utils_ImageDataUtil.getPixels(this,rect,format);
		case 2:
			return null;
		default:
			return null;
		}
	}
	,merge: function(sourceImage,sourceRect,destPoint,redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier) {
		if(this.buffer == null || sourceImage == null) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this);
			lime_graphics_utils_ImageCanvasUtil.merge(this,sourceImage,sourceRect,destPoint,redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageCanvasUtil.convertToData(sourceImage);
			lime_graphics_utils_ImageDataUtil.merge(this,sourceImage,sourceRect,destPoint,redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier);
			break;
		case 2:
			sourceRect.offset(this.offsetX,this.offsetY);
			this.buffer.__srcBitmapData.merge(sourceImage.buffer.__srcBitmapData,sourceRect.__toFlashRectangle(),destPoint.__toFlashPoint(),redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier);
			break;
		default:
			return null;
		}
	}
	,resize: function(newWidth,newHeight) {
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.resize(this,newWidth,newHeight);
			break;
		case 1:
			lime_graphics_utils_ImageDataUtil.resize(this,newWidth,newHeight);
			break;
		case 2:
			break;
		default:
		}
		this.buffer.width = newWidth;
		this.buffer.height = newHeight;
		this.offsetX = 0;
		this.offsetY = 0;
		this.width = newWidth;
		this.height = newHeight;
	}
	,scroll: function(x,y) {
		if(this.buffer == null) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.scroll(this,x,y);
			break;
		case 1:
			this.copyPixels(this,this.get_rect(),new lime_math_Vector2(x,y));
			break;
		case 2:
			this.buffer.__srcBitmapData.scroll(x + this.offsetX,y + this.offsetX);
			break;
		default:
		}
	}
	,setPixel: function(x,y,color,format) {
		if(this.buffer == null || x < 0 || y < 0 || x >= this.width || y >= this.height) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.setPixel(this,x,y,color,format);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageDataUtil.setPixel(this,x,y,color,format);
			break;
		case 2:
			var argb;
			if(format != null) switch(format) {
			case 1:
				argb = color;
				break;
			case 2:
				{
					var bgra = color;
					var argb1 = 0;
					argb1 = (bgra & 255 & 255) << 24 | (bgra >> 8 & 255 & 255) << 16 | (bgra >> 16 & 255 & 255) << 8 | bgra >> 24 & 255 & 255;
					argb = argb1;
				}
				break;
			default:
				{
					var rgba = color;
					var argb2 = 0;
					argb2 = (rgba & 255 & 255) << 24 | (rgba >> 24 & 255 & 255) << 16 | (rgba >> 16 & 255 & 255) << 8 | rgba >> 8 & 255 & 255;
					argb = argb2;
				}
			} else {
				var rgba1 = color;
				var argb3 = 0;
				argb3 = (rgba1 & 255 & 255) << 24 | (rgba1 >> 24 & 255 & 255) << 16 | (rgba1 >> 16 & 255 & 255) << 8 | rgba1 >> 8 & 255 & 255;
				argb = argb3;
			}
			this.buffer.__srcBitmapData.setPixel(x + this.offsetX,y + this.offsetX,argb);
			break;
		default:
		}
	}
	,setPixel32: function(x,y,color,format) {
		if(this.buffer == null || x < 0 || y < 0 || x >= this.width || y >= this.height) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.setPixel32(this,x,y,color,format);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageDataUtil.setPixel32(this,x,y,color,format);
			break;
		case 2:
			var argb;
			if(format != null) switch(format) {
			case 1:
				argb = color;
				break;
			case 2:
				{
					var bgra = color;
					var argb1 = 0;
					argb1 = (bgra & 255 & 255) << 24 | (bgra >> 8 & 255 & 255) << 16 | (bgra >> 16 & 255 & 255) << 8 | bgra >> 24 & 255 & 255;
					argb = argb1;
				}
				break;
			default:
				{
					var rgba = color;
					var argb2 = 0;
					argb2 = (rgba & 255 & 255) << 24 | (rgba >> 24 & 255 & 255) << 16 | (rgba >> 16 & 255 & 255) << 8 | rgba >> 8 & 255 & 255;
					argb = argb2;
				}
			} else {
				var rgba1 = color;
				var argb3 = 0;
				argb3 = (rgba1 & 255 & 255) << 24 | (rgba1 >> 24 & 255 & 255) << 16 | (rgba1 >> 16 & 255 & 255) << 8 | rgba1 >> 8 & 255 & 255;
				argb = argb3;
			}
			this.buffer.__srcBitmapData.setPixel32(x + this.offsetX,y + this.offsetY,argb);
			break;
		default:
		}
	}
	,setPixels: function(rect,bytes,format) {
		rect = this.__clipRect(rect);
		if(this.buffer == null || rect == null) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.setPixels(this,rect,bytes,format);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageDataUtil.setPixels(this,rect,bytes,format);
			break;
		case 2:
			break;
		default:
		}
	}
	,threshold: function(sourceImage,sourceRect,destPoint,operation,threshold,color,mask,copySource,format) {
		if(copySource == null) copySource = false;
		if(mask == null) mask = -1;
		if(color == null) color = 0;
		if(this.buffer == null || sourceImage == null || sourceRect == null) return 0;
		var _g = this.type;
		switch(_g[1]) {
		case 0:case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			return lime_graphics_utils_ImageDataUtil.threshold(this,sourceImage,sourceRect,destPoint,operation,threshold,color,mask,copySource,format);
		case 2:
			var _color;
			if(format != null) switch(format) {
			case 1:
				_color = color;
				break;
			case 2:
				{
					var bgra = color;
					var argb = 0;
					argb = (bgra & 255 & 255) << 24 | (bgra >> 8 & 255 & 255) << 16 | (bgra >> 16 & 255 & 255) << 8 | bgra >> 24 & 255 & 255;
					_color = argb;
				}
				break;
			default:
				{
					var rgba = color;
					var argb1 = 0;
					argb1 = (rgba & 255 & 255) << 24 | (rgba >> 24 & 255 & 255) << 16 | (rgba >> 16 & 255 & 255) << 8 | rgba >> 8 & 255 & 255;
					_color = argb1;
				}
			} else {
				var rgba1 = color;
				var argb2 = 0;
				argb2 = (rgba1 & 255 & 255) << 24 | (rgba1 >> 24 & 255 & 255) << 16 | (rgba1 >> 16 & 255 & 255) << 8 | rgba1 >> 8 & 255 & 255;
				_color = argb2;
			}
			var _mask;
			if(format != null) switch(format) {
			case 1:
				_mask = mask;
				break;
			case 2:
				{
					var bgra1 = mask;
					var argb3 = 0;
					argb3 = (bgra1 & 255 & 255) << 24 | (bgra1 >> 8 & 255 & 255) << 16 | (bgra1 >> 16 & 255 & 255) << 8 | bgra1 >> 24 & 255 & 255;
					_mask = argb3;
				}
				break;
			default:
				{
					var rgba2 = mask;
					var argb4 = 0;
					argb4 = (rgba2 & 255 & 255) << 24 | (rgba2 >> 24 & 255 & 255) << 16 | (rgba2 >> 16 & 255 & 255) << 8 | rgba2 >> 8 & 255 & 255;
					_mask = argb4;
				}
			} else {
				var rgba3 = mask;
				var argb5 = 0;
				argb5 = (rgba3 & 255 & 255) << 24 | (rgba3 >> 24 & 255 & 255) << 16 | (rgba3 >> 16 & 255 & 255) << 8 | rgba3 >> 8 & 255 & 255;
				_mask = argb5;
			}
			sourceRect.offset(sourceImage.offsetX,sourceImage.offsetY);
			destPoint.offset(this.offsetX,this.offsetY);
			return this.buffer.__srcBitmapData.threshold(sourceImage.buffer.get_src(),sourceRect.__toFlashRectangle(),destPoint.__toFlashPoint(),operation,threshold,_color,_mask,copySource);
		default:
		}
		return 0;
	}
	,__clipRect: function(r) {
		if(r == null) return null;
		if(r.x < 0) {
			r.width -= -r.x;
			r.x = 0;
			if(r.x + r.width <= 0) return null;
		}
		if(r.y < 0) {
			r.height -= -r.y;
			r.y = 0;
			if(r.y + r.height <= 0) return null;
		}
		if(r.x + r.width >= this.width) {
			r.width -= r.x + r.width - this.width;
			if(r.width <= 0) return null;
		}
		if(r.y + r.height >= this.height) {
			r.height -= r.y + r.height - this.height;
			if(r.height <= 0) return null;
		}
		return r;
	}
	,__fromBase64: function(base64,type,onload) {
		var _g = this;
		var image = new Image();
		image.crossOrigin = "Anonymous";
		var image_onLoaded = function(event) {
			_g.buffer = new lime_graphics_ImageBuffer(null,image.width,image.height);
			_g.buffer.__srcImage = image;
			_g.offsetX = 0;
			_g.offsetY = 0;
			_g.width = _g.buffer.width;
			_g.height = _g.buffer.height;
			if(onload != null) onload(_g);
		};
		image.addEventListener("load",image_onLoaded,false);
		image.src = "data:" + type + ";base64," + base64;
	}
	,__fromBytes: function(bytes,onload) {
		var type = "";
		if(lime_graphics_Image.__isPNG(bytes)) type = "image/png"; else if(lime_graphics_Image.__isJPG(bytes)) type = "image/jpeg"; else if(lime_graphics_Image.__isGIF(bytes)) type = "image/gif"; else throw new js__$Boot_HaxeError("Image tried to read PNG/JPG Bytes, but found an invalid header.");
		this.__fromBase64(lime_graphics_Image.__base64Encode(bytes),type,onload);
	}
	,__fromFile: function(path,onload,onerror) {
		var _g = this;
		var image = new Image();
		image.crossOrigin = "Anonymous";
		image.onload = function(_) {
			_g.buffer = new lime_graphics_ImageBuffer(null,image.width,image.height);
			_g.buffer.__srcImage = image;
			_g.width = image.width;
			_g.height = image.height;
			if(onload != null) onload(_g);
		};
		image.onerror = function(_1) {
			if(onerror != null) onerror();
		};
		image.src = path;
		if(image.complete) {
		}
	}
	,__fromImageBuffer: function(buffer) {
		this.buffer = buffer;
		if(buffer != null) {
			if(this.width == -1) this.width = buffer.width;
			if(this.height == -1) this.height = buffer.height;
		}
	}
	,get_data: function() {
		if(this.buffer.data == null && this.buffer.width > 0 && this.buffer.height > 0) {
			lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this);
			lime_graphics_utils_ImageCanvasUtil.sync(this,false);
			lime_graphics_utils_ImageCanvasUtil.createImageData(this);
		}
		return this.buffer.data;
	}
	,set_data: function(value) {
		return this.buffer.data = value;
	}
	,get_format: function() {
		return this.buffer.format;
	}
	,set_format: function(value) {
		if(this.buffer.format != value) {
			var _g = this.type;
			switch(_g[1]) {
			case 1:
				lime_graphics_utils_ImageDataUtil.setFormat(this,value);
				break;
			default:
			}
		}
		return this.buffer.format = value;
	}
	,get_powerOfTwo: function() {
		return this.buffer.width != 0 && (this.buffer.width & ~this.buffer.width + 1) == this.buffer.width && (this.buffer.height != 0 && (this.buffer.height & ~this.buffer.height + 1) == this.buffer.height);
	}
	,set_powerOfTwo: function(value) {
		if(value != this.get_powerOfTwo()) {
			var newWidth = 1;
			var newHeight = 1;
			while(newWidth < this.buffer.width) newWidth <<= 1;
			while(newHeight < this.buffer.height) newHeight <<= 1;
			var _g = this.type;
			switch(_g[1]) {
			case 0:
				break;
			case 1:
				lime_graphics_utils_ImageDataUtil.resizeBuffer(this,newWidth,newHeight);
				break;
			case 2:
				break;
			default:
			}
		}
		return value;
	}
	,get_premultiplied: function() {
		return this.buffer.premultiplied;
	}
	,set_premultiplied: function(value) {
		if(value && !this.buffer.premultiplied) {
			var _g = this.type;
			switch(_g[1]) {
			case 1:
				lime_graphics_utils_ImageCanvasUtil.convertToData(this);
				lime_graphics_utils_ImageDataUtil.multiplyAlpha(this);
				break;
			default:
			}
		} else if(!value && this.buffer.premultiplied) {
			var _g1 = this.type;
			switch(_g1[1]) {
			case 1:
				lime_graphics_utils_ImageCanvasUtil.convertToData(this);
				lime_graphics_utils_ImageDataUtil.unmultiplyAlpha(this);
				break;
			default:
			}
		}
		return value;
	}
	,get_rect: function() {
		return new lime_math_Rectangle(0,0,this.width,this.height);
	}
	,get_src: function() {
		if(this.buffer.__srcCanvas == null) lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this);
		return this.buffer.get_src();
	}
	,set_src: function(value) {
		return this.buffer.set_src(value);
	}
	,get_transparent: function() {
		if(this.buffer == null) return false;
		return this.buffer.transparent;
	}
	,set_transparent: function(value) {
		if(this.buffer == null) return false;
		return this.buffer.transparent = value;
	}
	,__class__: lime_graphics_Image
	,__properties__: {set_transparent:"set_transparent",get_transparent:"get_transparent",set_src:"set_src",get_src:"get_src",get_rect:"get_rect",set_premultiplied:"set_premultiplied",get_premultiplied:"get_premultiplied",set_powerOfTwo:"set_powerOfTwo",get_powerOfTwo:"get_powerOfTwo",set_format:"set_format",get_format:"get_format",set_data:"set_data",get_data:"get_data"}
};
var lime_graphics_ImageBuffer = function(data,width,height,bitsPerPixel,format) {
	if(bitsPerPixel == null) bitsPerPixel = 32;
	if(height == null) height = 0;
	if(width == null) width = 0;
	this.data = data;
	this.width = width;
	this.height = height;
	this.bitsPerPixel = bitsPerPixel;
	if(format == null) this.format = 0; else this.format = format;
	this.transparent = true;
};
$hxClasses["lime.graphics.ImageBuffer"] = lime_graphics_ImageBuffer;
lime_graphics_ImageBuffer.__name__ = ["lime","graphics","ImageBuffer"];
lime_graphics_ImageBuffer.prototype = {
	clone: function() {
		var buffer = new lime_graphics_ImageBuffer(this.data,this.width,this.height,this.bitsPerPixel);
		if(this.data != null) {
			var elements = this.data.byteLength;
			var this1;
			if(elements != null) this1 = new Uint8Array(elements); else this1 = null;
			buffer.data = this1;
			var copy;
			var view = this.data;
			var this2;
			if(view != null) this2 = new Uint8Array(view); else this2 = null;
			copy = this2;
			buffer.data.set(copy);
		} else if(this.__srcImageData != null) {
			buffer.__srcCanvas = window.document.createElement("canvas");
			buffer.__srcContext = buffer.__srcCanvas.getContext("2d");
			buffer.__srcCanvas.width = this.__srcImageData.width;
			buffer.__srcCanvas.height = this.__srcImageData.height;
			buffer.__srcImageData = buffer.__srcContext.createImageData(this.__srcImageData.width,this.__srcImageData.height);
			var copy1 = new Uint8ClampedArray(this.__srcImageData.data);
			buffer.__srcImageData.data.set(copy1);
		} else if(this.__srcCanvas != null) {
			buffer.__srcCanvas = window.document.createElement("canvas");
			buffer.__srcContext = buffer.__srcCanvas.getContext("2d");
			buffer.__srcCanvas.width = this.__srcCanvas.width;
			buffer.__srcCanvas.height = this.__srcCanvas.height;
			buffer.__srcContext.drawImage(this.__srcCanvas,0,0);
		} else buffer.__srcImage = this.__srcImage;
		buffer.bitsPerPixel = this.bitsPerPixel;
		buffer.format = this.format;
		buffer.premultiplied = this.premultiplied;
		buffer.transparent = this.transparent;
		return buffer;
	}
	,get_src: function() {
		if(this.__srcImage != null) return this.__srcImage;
		return this.__srcCanvas;
	}
	,set_src: function(value) {
		if(js_Boot.__instanceof(value,Image)) this.__srcImage = value; else if(js_Boot.__instanceof(value,HTMLCanvasElement)) {
			this.__srcCanvas = value;
			this.__srcContext = this.__srcCanvas.getContext("2d");
		}
		return value;
	}
	,get_stride: function() {
		return this.width * 4;
	}
	,__class__: lime_graphics_ImageBuffer
	,__properties__: {get_stride:"get_stride",set_src:"set_src",get_src:"get_src"}
};
var lime_graphics_ImageChannel = $hxClasses["lime.graphics.ImageChannel"] = { __ename__ : ["lime","graphics","ImageChannel"], __constructs__ : ["RED","GREEN","BLUE","ALPHA"] };
lime_graphics_ImageChannel.RED = ["RED",0];
lime_graphics_ImageChannel.RED.toString = $estr;
lime_graphics_ImageChannel.RED.__enum__ = lime_graphics_ImageChannel;
lime_graphics_ImageChannel.GREEN = ["GREEN",1];
lime_graphics_ImageChannel.GREEN.toString = $estr;
lime_graphics_ImageChannel.GREEN.__enum__ = lime_graphics_ImageChannel;
lime_graphics_ImageChannel.BLUE = ["BLUE",2];
lime_graphics_ImageChannel.BLUE.toString = $estr;
lime_graphics_ImageChannel.BLUE.__enum__ = lime_graphics_ImageChannel;
lime_graphics_ImageChannel.ALPHA = ["ALPHA",3];
lime_graphics_ImageChannel.ALPHA.toString = $estr;
lime_graphics_ImageChannel.ALPHA.__enum__ = lime_graphics_ImageChannel;
var lime_graphics_ImageType = $hxClasses["lime.graphics.ImageType"] = { __ename__ : ["lime","graphics","ImageType"], __constructs__ : ["CANVAS","DATA","FLASH","CUSTOM"] };
lime_graphics_ImageType.CANVAS = ["CANVAS",0];
lime_graphics_ImageType.CANVAS.toString = $estr;
lime_graphics_ImageType.CANVAS.__enum__ = lime_graphics_ImageType;
lime_graphics_ImageType.DATA = ["DATA",1];
lime_graphics_ImageType.DATA.toString = $estr;
lime_graphics_ImageType.DATA.__enum__ = lime_graphics_ImageType;
lime_graphics_ImageType.FLASH = ["FLASH",2];
lime_graphics_ImageType.FLASH.toString = $estr;
lime_graphics_ImageType.FLASH.__enum__ = lime_graphics_ImageType;
lime_graphics_ImageType.CUSTOM = ["CUSTOM",3];
lime_graphics_ImageType.CUSTOM.toString = $estr;
lime_graphics_ImageType.CUSTOM.__enum__ = lime_graphics_ImageType;
var lime_graphics_RenderContext = $hxClasses["lime.graphics.RenderContext"] = { __ename__ : ["lime","graphics","RenderContext"], __constructs__ : ["OPENGL","CANVAS","DOM","FLASH","CAIRO","CONSOLE","CUSTOM","NONE"] };
lime_graphics_RenderContext.OPENGL = function(gl) { var $x = ["OPENGL",0,gl]; $x.__enum__ = lime_graphics_RenderContext; $x.toString = $estr; return $x; };
lime_graphics_RenderContext.CANVAS = function(context) { var $x = ["CANVAS",1,context]; $x.__enum__ = lime_graphics_RenderContext; $x.toString = $estr; return $x; };
lime_graphics_RenderContext.DOM = function(element) { var $x = ["DOM",2,element]; $x.__enum__ = lime_graphics_RenderContext; $x.toString = $estr; return $x; };
lime_graphics_RenderContext.FLASH = function(stage) { var $x = ["FLASH",3,stage]; $x.__enum__ = lime_graphics_RenderContext; $x.toString = $estr; return $x; };
lime_graphics_RenderContext.CAIRO = function(cairo) { var $x = ["CAIRO",4,cairo]; $x.__enum__ = lime_graphics_RenderContext; $x.toString = $estr; return $x; };
lime_graphics_RenderContext.CONSOLE = function(context) { var $x = ["CONSOLE",5,context]; $x.__enum__ = lime_graphics_RenderContext; $x.toString = $estr; return $x; };
lime_graphics_RenderContext.CUSTOM = function(data) { var $x = ["CUSTOM",6,data]; $x.__enum__ = lime_graphics_RenderContext; $x.toString = $estr; return $x; };
lime_graphics_RenderContext.NONE = ["NONE",7];
lime_graphics_RenderContext.NONE.toString = $estr;
lime_graphics_RenderContext.NONE.__enum__ = lime_graphics_RenderContext;
var lime_graphics_Renderer = function(window) {
	this.onRender = new lime_app_Event_$Void_$Void();
	this.onContextRestored = new lime_app_Event_$lime_$graphics_$RenderContext_$Void();
	this.onContextLost = new lime_app_Event_$Void_$Void();
	this.window = window;
	this.backend = new lime__$backend_html5_HTML5Renderer(this);
	this.window.renderer = this;
};
$hxClasses["lime.graphics.Renderer"] = lime_graphics_Renderer;
lime_graphics_Renderer.__name__ = ["lime","graphics","Renderer"];
lime_graphics_Renderer.prototype = {
	create: function() {
		this.backend.create();
	}
	,flip: function() {
		this.backend.flip();
	}
	,readPixels: function(rect) {
		return this.backend.readPixels(rect);
	}
	,render: function() {
		this.backend.render();
	}
	,__class__: lime_graphics_Renderer
};
var lime_graphics_RendererType = $hxClasses["lime.graphics.RendererType"] = { __ename__ : ["lime","graphics","RendererType"], __constructs__ : ["OPENGL","CANVAS","DOM","FLASH","CAIRO","CONSOLE","CUSTOM"] };
lime_graphics_RendererType.OPENGL = ["OPENGL",0];
lime_graphics_RendererType.OPENGL.toString = $estr;
lime_graphics_RendererType.OPENGL.__enum__ = lime_graphics_RendererType;
lime_graphics_RendererType.CANVAS = ["CANVAS",1];
lime_graphics_RendererType.CANVAS.toString = $estr;
lime_graphics_RendererType.CANVAS.__enum__ = lime_graphics_RendererType;
lime_graphics_RendererType.DOM = ["DOM",2];
lime_graphics_RendererType.DOM.toString = $estr;
lime_graphics_RendererType.DOM.__enum__ = lime_graphics_RendererType;
lime_graphics_RendererType.FLASH = ["FLASH",3];
lime_graphics_RendererType.FLASH.toString = $estr;
lime_graphics_RendererType.FLASH.__enum__ = lime_graphics_RendererType;
lime_graphics_RendererType.CAIRO = ["CAIRO",4];
lime_graphics_RendererType.CAIRO.toString = $estr;
lime_graphics_RendererType.CAIRO.__enum__ = lime_graphics_RendererType;
lime_graphics_RendererType.CONSOLE = ["CONSOLE",5];
lime_graphics_RendererType.CONSOLE.toString = $estr;
lime_graphics_RendererType.CONSOLE.__enum__ = lime_graphics_RendererType;
lime_graphics_RendererType.CUSTOM = ["CUSTOM",6];
lime_graphics_RendererType.CUSTOM.toString = $estr;
lime_graphics_RendererType.CUSTOM.__enum__ = lime_graphics_RendererType;
var lime_graphics_cairo_Cairo = function(surface) {
	if(surface != null) {
	}
};
$hxClasses["lime.graphics.cairo.Cairo"] = lime_graphics_cairo_Cairo;
lime_graphics_cairo_Cairo.__name__ = ["lime","graphics","cairo","Cairo"];
lime_graphics_cairo_Cairo.__properties__ = {get_versionString:"get_versionString",get_version:"get_version"}
lime_graphics_cairo_Cairo.version = null;
lime_graphics_cairo_Cairo.versionString = null;
lime_graphics_cairo_Cairo.get_version = function() {
	return 0;
};
lime_graphics_cairo_Cairo.get_versionString = function() {
	return "";
};
lime_graphics_cairo_Cairo.prototype = {
	arc: function(xc,yc,radius,angle1,angle2) {
	}
	,arcNegative: function(xc,yc,radius,angle1,angle2) {
	}
	,clip: function() {
	}
	,clipExtents: function(x1,y1,x2,y2) {
	}
	,clipPreserve: function() {
	}
	,closePath: function() {
	}
	,copyPage: function() {
	}
	,curveTo: function(x1,y1,x2,y2,x3,y3) {
	}
	,fill: function() {
	}
	,fillExtents: function(x1,y1,x2,y2) {
	}
	,fillPreserve: function() {
	}
	,identityMatrix: function() {
	}
	,inClip: function(x,y) {
		return false;
	}
	,inFill: function(x,y) {
		return false;
	}
	,inStroke: function(x,y) {
		return false;
	}
	,lineTo: function(x,y) {
	}
	,moveTo: function(x,y) {
	}
	,mask: function(pattern) {
	}
	,maskSurface: function(surface,x,y) {
	}
	,newPath: function() {
	}
	,paint: function() {
	}
	,paintWithAlpha: function(alpha) {
	}
	,popGroup: function() {
		return null;
	}
	,popGroupToSource: function() {
	}
	,pushGroup: function() {
	}
	,pushGroupWithContent: function(content) {
	}
	,recreate: function(surface) {
	}
	,rectangle: function(x,y,width,height) {
	}
	,relCurveTo: function(dx1,dy1,dx2,dy2,dx3,dy3) {
	}
	,relLineTo: function(dx,dy) {
	}
	,relMoveTo: function(dx,dy) {
	}
	,resetClip: function() {
	}
	,restore: function() {
	}
	,save: function() {
	}
	,setFontSize: function(size) {
	}
	,setSourceRGB: function(r,g,b) {
	}
	,setSourceRGBA: function(r,g,b,a) {
	}
	,setSourceSurface: function(surface,x,y) {
	}
	,showPage: function() {
	}
	,showText: function(utf8) {
	}
	,status: function() {
		return 0;
	}
	,stroke: function() {
	}
	,strokeExtents: function(x1,y1,x2,y2) {
	}
	,strokePreserve: function() {
	}
	,transform: function(matrix) {
	}
	,rotate: function(amount) {
	}
	,scale: function(x,y) {
	}
	,translate: function(x,y) {
	}
	,get_antialias: function() {
		return 0;
	}
	,set_antialias: function(value) {
		return value;
	}
	,get_currentPoint: function() {
		return null;
	}
	,get_dash: function() {
		return [];
	}
	,set_dash: function(value) {
		return value;
	}
	,get_dashCount: function() {
		return 0;
	}
	,get_fillRule: function() {
		return 0;
	}
	,set_fillRule: function(value) {
		return value;
	}
	,get_fontFace: function() {
		return 0;
	}
	,set_fontFace: function(value) {
		return value;
	}
	,get_fontOptions: function() {
		return null;
	}
	,set_fontOptions: function(value) {
		return value;
	}
	,get_groupTarget: function() {
		return 0;
	}
	,get_hasCurrentPoint: function() {
		return false;
	}
	,get_lineCap: function() {
		return 0;
	}
	,set_lineCap: function(value) {
		return value;
	}
	,get_lineJoin: function() {
		return 0;
	}
	,set_lineJoin: function(value) {
		return value;
	}
	,get_lineWidth: function() {
		return 0;
	}
	,set_lineWidth: function(value) {
		return value;
	}
	,get_matrix: function() {
		return null;
	}
	,set_matrix: function(value) {
		return value;
	}
	,get_miterLimit: function() {
		return 0;
	}
	,set_miterLimit: function(value) {
		return value;
	}
	,get_operator: function() {
		return 0;
	}
	,set_operator: function(value) {
		return value;
	}
	,get_source: function() {
		return 0;
	}
	,set_source: function(value) {
		return value;
	}
	,get_target: function() {
		return 0;
	}
	,get_tolerance: function() {
		return 0;
	}
	,set_tolerance: function(value) {
		return value;
	}
	,__class__: lime_graphics_cairo_Cairo
	,__properties__: {set_tolerance:"set_tolerance",get_tolerance:"get_tolerance",get_target:"get_target",set_source:"set_source",get_source:"get_source",set_operator:"set_operator",get_operator:"get_operator",set_miterLimit:"set_miterLimit",get_miterLimit:"get_miterLimit",set_matrix:"set_matrix",get_matrix:"get_matrix",set_lineWidth:"set_lineWidth",get_lineWidth:"get_lineWidth",set_lineJoin:"set_lineJoin",get_lineJoin:"get_lineJoin",set_lineCap:"set_lineCap",get_lineCap:"get_lineCap",get_hasCurrentPoint:"get_hasCurrentPoint",get_groupTarget:"get_groupTarget",set_fontOptions:"set_fontOptions",get_fontOptions:"get_fontOptions",set_fontFace:"set_fontFace",get_fontFace:"get_fontFace",set_fillRule:"set_fillRule",get_fillRule:"get_fillRule",get_dashCount:"get_dashCount",set_dash:"set_dash",get_dash:"get_dash",get_currentPoint:"get_currentPoint",set_antialias:"set_antialias",get_antialias:"get_antialias"}
};
var lime_graphics_cairo__$CairoFTFontFace_CairoFTFontFace_$Impl_$ = {};
$hxClasses["lime.graphics.cairo._CairoFTFontFace.CairoFTFontFace_Impl_"] = lime_graphics_cairo__$CairoFTFontFace_CairoFTFontFace_$Impl_$;
lime_graphics_cairo__$CairoFTFontFace_CairoFTFontFace_$Impl_$.__name__ = ["lime","graphics","cairo","_CairoFTFontFace","CairoFTFontFace_Impl_"];
lime_graphics_cairo__$CairoFTFontFace_CairoFTFontFace_$Impl_$._new = function() {
	return 0;
};
lime_graphics_cairo__$CairoFTFontFace_CairoFTFontFace_$Impl_$.create = function(face,loadFlags) {
	return 0;
};
var lime_graphics_cairo__$CairoFontFace_CairoFontFace_$Impl_$ = {};
$hxClasses["lime.graphics.cairo._CairoFontFace.CairoFontFace_Impl_"] = lime_graphics_cairo__$CairoFontFace_CairoFontFace_$Impl_$;
lime_graphics_cairo__$CairoFontFace_CairoFontFace_$Impl_$.__name__ = ["lime","graphics","cairo","_CairoFontFace","CairoFontFace_Impl_"];
lime_graphics_cairo__$CairoFontFace_CairoFontFace_$Impl_$._new = function() {
	return null;
};
lime_graphics_cairo__$CairoFontFace_CairoFontFace_$Impl_$.status = function(this1) {
	return 0;
};
var lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$ = {};
$hxClasses["lime.graphics.cairo._CairoFontOptions.CairoFontOptions_Impl_"] = lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$;
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.__name__ = ["lime","graphics","cairo","_CairoFontOptions","CairoFontOptions_Impl_"];
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.__properties__ = {set_subpixelOrder:"set_subpixelOrder",get_subpixelOrder:"get_subpixelOrder",set_hintStyle:"set_hintStyle",get_hintStyle:"get_hintStyle",set_hintMetrics:"set_hintMetrics",get_hintMetrics:"get_hintMetrics",set_antialias:"set_antialias",get_antialias:"get_antialias"}
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$._new = function() {
	return null;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.get_antialias = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.set_antialias = function(this1,value) {
	return value;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.get_hintMetrics = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.set_hintMetrics = function(this1,value) {
	return value;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.get_hintStyle = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.set_hintStyle = function(this1,value) {
	return value;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.get_subpixelOrder = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.set_subpixelOrder = function(this1,value) {
	return value;
};
var lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$ = {};
$hxClasses["lime.graphics.cairo._CairoImageSurface.CairoImageSurface_Impl_"] = lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$;
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.__name__ = ["lime","graphics","cairo","_CairoImageSurface","CairoImageSurface_Impl_"];
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.__properties__ = {get_width:"get_width",get_stride:"get_stride",get_height:"get_height",get_format:"get_format",get_data:"get_data"}
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$._new = function(format,width,height) {
	return 0;
};
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.create = function(data,format,width,height,stride) {
	return 0;
};
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.fromImage = function(image) {
	return null;
};
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.get_data = function(this1) {
	return null;
};
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.get_format = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.get_height = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.get_stride = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.get_width = function(this1) {
	return 0;
};
var lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$ = {};
$hxClasses["lime.graphics.cairo._CairoPattern.CairoPattern_Impl_"] = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$;
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.__name__ = ["lime","graphics","cairo","_CairoPattern","CairoPattern_Impl_"];
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.__properties__ = {set_matrix:"set_matrix",get_matrix:"get_matrix",set_filter:"set_filter",get_filter:"get_filter",set_extend:"set_extend",get_extend:"get_extend",get_colorStopCount:"get_colorStopCount"}
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$._new = function(handle) {
	return handle;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.addColorStopRGB = function(this1,offset,r,g,b) {
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.addColorStopRGBA = function(this1,offset,r,g,b,a) {
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createForSurface = function(surface) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createLinear = function(x0,y0,x1,y1) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createRadial = function(cx0,cy0,radius0,cx1,cy1,radius1) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createRGB = function(r,g,b) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createRGBA = function(r,g,b,a) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.get_colorStopCount = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.get_extend = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_extend = function(this1,value) {
	return value;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.get_filter = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_filter = function(this1,value) {
	return value;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.get_matrix = function(this1) {
	return null;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_matrix = function(this1,value) {
	return value;
};
var lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$ = {};
$hxClasses["lime.graphics.cairo._CairoSurface.CairoSurface_Impl_"] = lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$;
lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$.__name__ = ["lime","graphics","cairo","_CairoSurface","CairoSurface_Impl_"];
lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$.flush = function(this1) {
};
var lime_graphics_console_IndexBuffer = function() {
};
$hxClasses["lime.graphics.console.IndexBuffer"] = lime_graphics_console_IndexBuffer;
lime_graphics_console_IndexBuffer.__name__ = ["lime","graphics","console","IndexBuffer"];
lime_graphics_console_IndexBuffer.prototype = {
	__class__: lime_graphics_console_IndexBuffer
};
var lime_graphics_console_Primitive = $hxClasses["lime.graphics.console.Primitive"] = { __ename__ : ["lime","graphics","console","Primitive"], __constructs__ : ["Point","Line","LineStrip","Triangle","TriangleStrip"] };
lime_graphics_console_Primitive.Point = ["Point",0];
lime_graphics_console_Primitive.Point.toString = $estr;
lime_graphics_console_Primitive.Point.__enum__ = lime_graphics_console_Primitive;
lime_graphics_console_Primitive.Line = ["Line",1];
lime_graphics_console_Primitive.Line.toString = $estr;
lime_graphics_console_Primitive.Line.__enum__ = lime_graphics_console_Primitive;
lime_graphics_console_Primitive.LineStrip = ["LineStrip",2];
lime_graphics_console_Primitive.LineStrip.toString = $estr;
lime_graphics_console_Primitive.LineStrip.__enum__ = lime_graphics_console_Primitive;
lime_graphics_console_Primitive.Triangle = ["Triangle",3];
lime_graphics_console_Primitive.Triangle.toString = $estr;
lime_graphics_console_Primitive.Triangle.__enum__ = lime_graphics_console_Primitive;
lime_graphics_console_Primitive.TriangleStrip = ["TriangleStrip",4];
lime_graphics_console_Primitive.TriangleStrip.toString = $estr;
lime_graphics_console_Primitive.TriangleStrip.__enum__ = lime_graphics_console_Primitive;
var lime_graphics_console_Shader = function() {
};
$hxClasses["lime.graphics.console.Shader"] = lime_graphics_console_Shader;
lime_graphics_console_Shader.__name__ = ["lime","graphics","console","Shader"];
lime_graphics_console_Shader.prototype = {
	__class__: lime_graphics_console_Shader
};
var lime_graphics_console_VertexBuffer = function() {
};
$hxClasses["lime.graphics.console.VertexBuffer"] = lime_graphics_console_VertexBuffer;
lime_graphics_console_VertexBuffer.__name__ = ["lime","graphics","console","VertexBuffer"];
lime_graphics_console_VertexBuffer.prototype = {
	lock: function() {
		return new lime_graphics_console_VertexOutput();
	}
	,unlock: function() {
	}
	,__class__: lime_graphics_console_VertexBuffer
};
var lime_graphics_console_VertexOutput = function() {
};
$hxClasses["lime.graphics.console.VertexOutput"] = lime_graphics_console_VertexOutput;
lime_graphics_console_VertexOutput.__name__ = ["lime","graphics","console","VertexOutput"];
lime_graphics_console_VertexOutput.prototype = {
	vec2: function(x,y) {
	}
	,vec3: function(x,y,z) {
	}
	,color: function(r,g,b,a) {
	}
	,__class__: lime_graphics_console_VertexOutput
};
var lime_graphics_format_BMP = function() { };
$hxClasses["lime.graphics.format.BMP"] = lime_graphics_format_BMP;
lime_graphics_format_BMP.__name__ = ["lime","graphics","format","BMP"];
lime_graphics_format_BMP.encode = function(image,type) {
	if(image.get_premultiplied() || image.get_format() != 0) {
		image = image.clone();
		image.set_premultiplied(false);
		image.set_format(0);
	}
	if(type == null) type = lime_graphics_format_BMPType.RGB;
	var fileHeaderLength = 14;
	var infoHeaderLength = 40;
	var pixelValuesLength = image.width * image.height * 4;
	if(type != null) switch(type[1]) {
	case 1:
		infoHeaderLength = 108;
		break;
	case 2:
		fileHeaderLength = 0;
		pixelValuesLength += image.width * image.height;
		break;
	case 0:
		pixelValuesLength = image.width * 3 + image.width * 3 % 4 + image.height * 3 + image.height * 3;
		break;
	default:
	} else {
	}
	var data = haxe_io_Bytes.alloc(fileHeaderLength + infoHeaderLength + pixelValuesLength);
	var position = 0;
	if(fileHeaderLength > 0) {
		data.set(position++,66);
		data.set(position++,77);
		data.setInt32(position,data.length);
		position += 4;
		data.setUInt16(position,0);
		position += 2;
		data.setUInt16(position,0);
		position += 2;
		data.setInt32(position,fileHeaderLength + infoHeaderLength);
		position += 4;
	}
	data.setInt32(position,infoHeaderLength);
	position += 4;
	data.setInt32(position,image.width);
	position += 4;
	data.setInt32(position,type == lime_graphics_format_BMPType.ICO?image.height * 2:image.height);
	position += 4;
	data.setUInt16(position,1);
	position += 2;
	data.setUInt16(position,type == lime_graphics_format_BMPType.RGB?24:32);
	position += 2;
	data.setInt32(position,type == lime_graphics_format_BMPType.BITFIELD?3:0);
	position += 4;
	data.setInt32(position,pixelValuesLength);
	position += 4;
	data.setInt32(position,11824);
	position += 4;
	data.setInt32(position,11824);
	position += 4;
	data.setInt32(position,0);
	position += 4;
	data.setInt32(position,0);
	position += 4;
	if(type == lime_graphics_format_BMPType.BITFIELD) {
		data.setInt32(position,16711680);
		position += 4;
		data.setInt32(position,65280);
		position += 4;
		data.setInt32(position,255);
		position += 4;
		data.setInt32(position,-16777216);
		position += 4;
		data.set(position++,32);
		data.set(position++,110);
		data.set(position++,105);
		data.set(position++,87);
		var _g = 0;
		while(_g < 48) {
			var i = _g++;
			data.set(position++,0);
		}
	}
	var pixels = image.getPixels(new lime_math_Rectangle(0,0,image.width,image.height),1);
	var readPosition = 0;
	var a;
	var r;
	var g;
	var b;
	if(type != null) switch(type[1]) {
	case 1:
		var _g1 = 0;
		var _g2 = image.height;
		while(_g1 < _g2) {
			var y = _g1++;
			readPosition = (image.height - 1 - y) * 4 * image.width;
			var _g3 = 0;
			var _g21 = image.width;
			while(_g3 < _g21) {
				var x = _g3++;
				a = pixels.get(readPosition++);
				r = pixels.get(readPosition++);
				g = pixels.get(readPosition++);
				b = pixels.get(readPosition++);
				data.set(position++,b);
				data.set(position++,g);
				data.set(position++,r);
				data.set(position++,a);
			}
		}
		break;
	case 2:
		var andMask = haxe_io_Bytes.alloc(image.width * image.height);
		var maskPosition = 0;
		var _g11 = 0;
		var _g4 = image.height;
		while(_g11 < _g4) {
			var y1 = _g11++;
			readPosition = (image.height - 1 - y1) * 4 * image.width;
			var _g31 = 0;
			var _g22 = image.width;
			while(_g31 < _g22) {
				var x1 = _g31++;
				a = pixels.get(readPosition++);
				r = pixels.get(readPosition++);
				g = pixels.get(readPosition++);
				b = pixels.get(readPosition++);
				data.set(position++,b);
				data.set(position++,g);
				data.set(position++,r);
				data.set(position++,a);
				andMask.set(maskPosition++,0);
			}
		}
		data.blit(position,andMask,0,image.width * image.height);
		break;
	case 0:
		var _g12 = 0;
		var _g5 = image.height;
		while(_g12 < _g5) {
			var y2 = _g12++;
			readPosition = (image.height - 1 - y2) * 4 * image.width;
			var _g32 = 0;
			var _g23 = image.width;
			while(_g32 < _g23) {
				var x2 = _g32++;
				a = pixels.get(readPosition++);
				r = pixels.get(readPosition++);
				g = pixels.get(readPosition++);
				b = pixels.get(readPosition++);
				data.set(position++,b);
				data.set(position++,g);
				data.set(position++,r);
			}
			var _g33 = 0;
			var _g24 = image.width * 3 % 4;
			while(_g33 < _g24) {
				var i1 = _g33++;
				data.set(position++,0);
			}
		}
		break;
	default:
	} else {
	}
	return data;
};
var lime_graphics_format_BMPType = $hxClasses["lime.graphics.format.BMPType"] = { __ename__ : ["lime","graphics","format","BMPType"], __constructs__ : ["RGB","BITFIELD","ICO"] };
lime_graphics_format_BMPType.RGB = ["RGB",0];
lime_graphics_format_BMPType.RGB.toString = $estr;
lime_graphics_format_BMPType.RGB.__enum__ = lime_graphics_format_BMPType;
lime_graphics_format_BMPType.BITFIELD = ["BITFIELD",1];
lime_graphics_format_BMPType.BITFIELD.toString = $estr;
lime_graphics_format_BMPType.BITFIELD.__enum__ = lime_graphics_format_BMPType;
lime_graphics_format_BMPType.ICO = ["ICO",2];
lime_graphics_format_BMPType.ICO.toString = $estr;
lime_graphics_format_BMPType.ICO.__enum__ = lime_graphics_format_BMPType;
var lime_graphics_format_JPEG = function() { };
$hxClasses["lime.graphics.format.JPEG"] = lime_graphics_format_JPEG;
lime_graphics_format_JPEG.__name__ = ["lime","graphics","format","JPEG"];
lime_graphics_format_JPEG.decodeBytes = function(bytes,decodeData) {
	if(decodeData == null) decodeData = true;
	return null;
};
lime_graphics_format_JPEG.decodeFile = function(path,decodeData) {
	if(decodeData == null) decodeData = true;
	return null;
};
lime_graphics_format_JPEG.encode = function(image,quality) {
	if(image.get_premultiplied() || image.get_format() != 0) {
		image = image.clone();
		image.set_premultiplied(false);
		image.set_format(0);
	}
	lime_graphics_utils_ImageCanvasUtil.sync(image,false);
	if(image.buffer.__srcCanvas != null) {
		var data = image.buffer.__srcCanvas.toDataURL("image/jpeg",quality / 100);
		var buffer = window.atob(data.split(";base64,")[1]);
		var bytes = haxe_io_Bytes.alloc(buffer.length);
		var _g1 = 0;
		var _g = buffer.length;
		while(_g1 < _g) {
			var i = _g1++;
			bytes.set(i,HxOverrides.cca(buffer,i));
		}
		return bytes;
	}
	return null;
};
var lime_graphics_format_PNG = function() { };
$hxClasses["lime.graphics.format.PNG"] = lime_graphics_format_PNG;
lime_graphics_format_PNG.__name__ = ["lime","graphics","format","PNG"];
lime_graphics_format_PNG.decodeBytes = function(bytes,decodeData) {
	if(decodeData == null) decodeData = true;
	return null;
};
lime_graphics_format_PNG.decodeFile = function(path,decodeData) {
	if(decodeData == null) decodeData = true;
	return null;
};
lime_graphics_format_PNG.encode = function(image) {
	if(image.get_premultiplied() || image.get_format() != 0) {
		image = image.clone();
		image.set_premultiplied(false);
		image.set_format(0);
	}
	return null;
};
var lime_graphics_opengl_GL = function() { };
$hxClasses["lime.graphics.opengl.GL"] = lime_graphics_opengl_GL;
lime_graphics_opengl_GL.__name__ = ["lime","graphics","opengl","GL"];
lime_graphics_opengl_GL.__properties__ = {get_version:"get_version"}
lime_graphics_opengl_GL.version = null;
lime_graphics_opengl_GL.context = null;
lime_graphics_opengl_GL.activeTexture = function(texture) {
	lime_graphics_opengl_GL.context.activeTexture(texture);
};
lime_graphics_opengl_GL.attachShader = function(program,shader) {
	lime_graphics_opengl_GL.context.attachShader(program,shader);
};
lime_graphics_opengl_GL.bindAttribLocation = function(program,index,name) {
	lime_graphics_opengl_GL.context.bindAttribLocation(program,index,name);
};
lime_graphics_opengl_GL.bindBuffer = function(target,buffer) {
	lime_graphics_opengl_GL.context.bindBuffer(target,buffer);
};
lime_graphics_opengl_GL.bindFramebuffer = function(target,framebuffer) {
	lime_graphics_opengl_GL.context.bindFramebuffer(target,framebuffer);
};
lime_graphics_opengl_GL.bindRenderbuffer = function(target,renderbuffer) {
	lime_graphics_opengl_GL.context.bindRenderbuffer(target,renderbuffer);
};
lime_graphics_opengl_GL.bindTexture = function(target,texture) {
	lime_graphics_opengl_GL.context.bindTexture(target,texture);
};
lime_graphics_opengl_GL.blendColor = function(red,green,blue,alpha) {
	lime_graphics_opengl_GL.context.blendColor(red,green,blue,alpha);
};
lime_graphics_opengl_GL.blendEquation = function(mode) {
	lime_graphics_opengl_GL.context.blendEquation(mode);
};
lime_graphics_opengl_GL.blendEquationSeparate = function(modeRGB,modeAlpha) {
	lime_graphics_opengl_GL.context.blendEquationSeparate(modeRGB,modeAlpha);
};
lime_graphics_opengl_GL.blendFunc = function(sfactor,dfactor) {
	lime_graphics_opengl_GL.context.blendFunc(sfactor,dfactor);
};
lime_graphics_opengl_GL.blendFuncSeparate = function(srcRGB,dstRGB,srcAlpha,dstAlpha) {
	lime_graphics_opengl_GL.context.blendFuncSeparate(srcRGB,dstRGB,srcAlpha,dstAlpha);
};
lime_graphics_opengl_GL.bufferData = function(target,data,usage) {
	lime_graphics_opengl_GL.context.bufferData(target,data,usage);
};
lime_graphics_opengl_GL.bufferSubData = function(target,offset,data) {
	lime_graphics_opengl_GL.context.bufferSubData(target,offset,data);
};
lime_graphics_opengl_GL.checkFramebufferStatus = function(target) {
	return lime_graphics_opengl_GL.context.checkFramebufferStatus(target);
};
lime_graphics_opengl_GL.clear = function(mask) {
	lime_graphics_opengl_GL.context.clear(mask);
};
lime_graphics_opengl_GL.clearColor = function(red,green,blue,alpha) {
	lime_graphics_opengl_GL.context.clearColor(red,green,blue,alpha);
};
lime_graphics_opengl_GL.clearDepth = function(depth) {
	lime_graphics_opengl_GL.context.clearDepth(depth);
};
lime_graphics_opengl_GL.clearStencil = function(s) {
	lime_graphics_opengl_GL.context.clearStencil(s);
};
lime_graphics_opengl_GL.colorMask = function(red,green,blue,alpha) {
	lime_graphics_opengl_GL.context.colorMask(red,green,blue,alpha);
};
lime_graphics_opengl_GL.compileShader = function(shader) {
	lime_graphics_opengl_GL.context.compileShader(shader);
};
lime_graphics_opengl_GL.compressedTexImage2D = function(target,level,internalformat,width,height,border,data) {
	lime_graphics_opengl_GL.context.compressedTexImage2D(target,level,internalformat,width,height,border,data);
};
lime_graphics_opengl_GL.compressedTexSubImage2D = function(target,level,xoffset,yoffset,width,height,format,data) {
	lime_graphics_opengl_GL.context.compressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,data);
};
lime_graphics_opengl_GL.copyTexImage2D = function(target,level,internalformat,x,y,width,height,border) {
	lime_graphics_opengl_GL.context.copyTexImage2D(target,level,internalformat,x,y,width,height,border);
};
lime_graphics_opengl_GL.copyTexSubImage2D = function(target,level,xoffset,yoffset,x,y,width,height) {
	lime_graphics_opengl_GL.context.copyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height);
};
lime_graphics_opengl_GL.createBuffer = function() {
	return lime_graphics_opengl_GL.context.createBuffer();
};
lime_graphics_opengl_GL.createFramebuffer = function() {
	return lime_graphics_opengl_GL.context.createFramebuffer();
};
lime_graphics_opengl_GL.createProgram = function() {
	return lime_graphics_opengl_GL.context.createProgram();
};
lime_graphics_opengl_GL.createRenderbuffer = function() {
	return lime_graphics_opengl_GL.context.createRenderbuffer();
};
lime_graphics_opengl_GL.createShader = function(type) {
	return lime_graphics_opengl_GL.context.createShader(type);
};
lime_graphics_opengl_GL.createTexture = function() {
	return lime_graphics_opengl_GL.context.createTexture();
};
lime_graphics_opengl_GL.cullFace = function(mode) {
	lime_graphics_opengl_GL.context.cullFace(mode);
};
lime_graphics_opengl_GL.deleteBuffer = function(buffer) {
	lime_graphics_opengl_GL.context.deleteBuffer(buffer);
};
lime_graphics_opengl_GL.deleteFramebuffer = function(framebuffer) {
	lime_graphics_opengl_GL.context.deleteFramebuffer(framebuffer);
};
lime_graphics_opengl_GL.deleteProgram = function(program) {
	lime_graphics_opengl_GL.context.deleteProgram(program);
};
lime_graphics_opengl_GL.deleteRenderbuffer = function(renderbuffer) {
	lime_graphics_opengl_GL.context.deleteRenderbuffer(renderbuffer);
};
lime_graphics_opengl_GL.deleteShader = function(shader) {
	lime_graphics_opengl_GL.context.deleteShader(shader);
};
lime_graphics_opengl_GL.deleteTexture = function(texture) {
	lime_graphics_opengl_GL.context.deleteTexture(texture);
};
lime_graphics_opengl_GL.depthFunc = function(func) {
	lime_graphics_opengl_GL.context.depthFunc(func);
};
lime_graphics_opengl_GL.depthMask = function(flag) {
	lime_graphics_opengl_GL.context.depthMask(flag);
};
lime_graphics_opengl_GL.depthRange = function(zNear,zFar) {
	lime_graphics_opengl_GL.context.depthRange(zNear,zFar);
};
lime_graphics_opengl_GL.detachShader = function(program,shader) {
	lime_graphics_opengl_GL.context.detachShader(program,shader);
};
lime_graphics_opengl_GL.disable = function(cap) {
	lime_graphics_opengl_GL.context.disable(cap);
};
lime_graphics_opengl_GL.disableVertexAttribArray = function(index) {
	lime_graphics_opengl_GL.context.disableVertexAttribArray(index);
};
lime_graphics_opengl_GL.drawArrays = function(mode,first,count) {
	lime_graphics_opengl_GL.context.drawArrays(mode,first,count);
};
lime_graphics_opengl_GL.drawElements = function(mode,count,type,offset) {
	lime_graphics_opengl_GL.context.drawElements(mode,count,type,offset);
};
lime_graphics_opengl_GL.enable = function(cap) {
	lime_graphics_opengl_GL.context.enable(cap);
};
lime_graphics_opengl_GL.enableVertexAttribArray = function(index) {
	lime_graphics_opengl_GL.context.enableVertexAttribArray(index);
};
lime_graphics_opengl_GL.finish = function() {
	lime_graphics_opengl_GL.context.finish();
};
lime_graphics_opengl_GL.flush = function() {
	lime_graphics_opengl_GL.context.flush();
};
lime_graphics_opengl_GL.framebufferRenderbuffer = function(target,attachment,renderbuffertarget,renderbuffer) {
	lime_graphics_opengl_GL.context.framebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer);
};
lime_graphics_opengl_GL.framebufferTexture2D = function(target,attachment,textarget,texture,level) {
	lime_graphics_opengl_GL.context.framebufferTexture2D(target,attachment,textarget,texture,level);
};
lime_graphics_opengl_GL.frontFace = function(mode) {
	lime_graphics_opengl_GL.context.frontFace(mode);
};
lime_graphics_opengl_GL.generateMipmap = function(target) {
	lime_graphics_opengl_GL.context.generateMipmap(target);
};
lime_graphics_opengl_GL.getActiveAttrib = function(program,index) {
	return lime_graphics_opengl_GL.context.getActiveAttrib(program,index);
};
lime_graphics_opengl_GL.getActiveUniform = function(program,index) {
	return lime_graphics_opengl_GL.context.getActiveUniform(program,index);
};
lime_graphics_opengl_GL.getAttachedShaders = function(program) {
	return lime_graphics_opengl_GL.context.getAttachedShaders(program);
};
lime_graphics_opengl_GL.getAttribLocation = function(program,name) {
	return lime_graphics_opengl_GL.context.getAttribLocation(program,name);
};
lime_graphics_opengl_GL.getBufferParameter = function(target,pname) {
	return lime_graphics_opengl_GL.context.getBufferParameter(target,pname);
};
lime_graphics_opengl_GL.getContextAttributes = function() {
	return lime_graphics_opengl_GL.context.getContextAttributes();
};
lime_graphics_opengl_GL.getError = function() {
	return lime_graphics_opengl_GL.context.getError();
};
lime_graphics_opengl_GL.getExtension = function(name) {
	return lime_graphics_opengl_GL.context.getExtension(name);
};
lime_graphics_opengl_GL.getFramebufferAttachmentParameter = function(target,attachment,pname) {
	return lime_graphics_opengl_GL.context.getFramebufferAttachmentParameter(target,attachment,pname);
};
lime_graphics_opengl_GL.getParameter = function(pname) {
	return lime_graphics_opengl_GL.context.getParameter(pname);
};
lime_graphics_opengl_GL.getProgramInfoLog = function(program) {
	return lime_graphics_opengl_GL.context.getProgramInfoLog(program);
};
lime_graphics_opengl_GL.getProgramParameter = function(program,pname) {
	return lime_graphics_opengl_GL.context.getProgramParameter(program,pname);
};
lime_graphics_opengl_GL.getRenderbufferParameter = function(target,pname) {
	return lime_graphics_opengl_GL.context.getRenderbufferParameter(target,pname);
};
lime_graphics_opengl_GL.getShaderInfoLog = function(shader) {
	return lime_graphics_opengl_GL.context.getShaderInfoLog(shader);
};
lime_graphics_opengl_GL.getShaderParameter = function(shader,pname) {
	return lime_graphics_opengl_GL.context.getShaderParameter(shader,pname);
};
lime_graphics_opengl_GL.getShaderPrecisionFormat = function(shadertype,precisiontype) {
	return lime_graphics_opengl_GL.context.getShaderPrecisionFormat(shadertype,precisiontype);
};
lime_graphics_opengl_GL.getShaderSource = function(shader) {
	return lime_graphics_opengl_GL.context.getShaderSource(shader);
};
lime_graphics_opengl_GL.getSupportedExtensions = function() {
	return lime_graphics_opengl_GL.context.getSupportedExtensions();
};
lime_graphics_opengl_GL.getTexParameter = function(target,pname) {
	return lime_graphics_opengl_GL.context.getTexParameter(target,pname);
};
lime_graphics_opengl_GL.getUniform = function(program,location) {
	return lime_graphics_opengl_GL.context.getUniform(program,location);
};
lime_graphics_opengl_GL.getUniformLocation = function(program,name) {
	return lime_graphics_opengl_GL.context.getUniformLocation(program,name);
};
lime_graphics_opengl_GL.getVertexAttrib = function(index,pname) {
	return lime_graphics_opengl_GL.context.getVertexAttrib(index,pname);
};
lime_graphics_opengl_GL.getVertexAttribOffset = function(index,pname) {
	return lime_graphics_opengl_GL.context.getVertexAttribOffset(index,pname);
};
lime_graphics_opengl_GL.hint = function(target,mode) {
	lime_graphics_opengl_GL.context.hint(target,mode);
};
lime_graphics_opengl_GL.isBuffer = function(buffer) {
	return lime_graphics_opengl_GL.context.isBuffer(buffer);
};
lime_graphics_opengl_GL.isContextLost = function() {
	return lime_graphics_opengl_GL.context.isContextLost();
};
lime_graphics_opengl_GL.isEnabled = function(cap) {
	return lime_graphics_opengl_GL.context.isEnabled(cap);
};
lime_graphics_opengl_GL.isFramebuffer = function(framebuffer) {
	return lime_graphics_opengl_GL.context.isFramebuffer(framebuffer);
};
lime_graphics_opengl_GL.isProgram = function(program) {
	return lime_graphics_opengl_GL.context.isProgram(program);
};
lime_graphics_opengl_GL.isRenderbuffer = function(renderbuffer) {
	return lime_graphics_opengl_GL.context.isRenderbuffer(renderbuffer);
};
lime_graphics_opengl_GL.isShader = function(shader) {
	return lime_graphics_opengl_GL.context.isShader(shader);
};
lime_graphics_opengl_GL.isTexture = function(texture) {
	return lime_graphics_opengl_GL.context.isTexture(texture);
};
lime_graphics_opengl_GL.lineWidth = function(width) {
	lime_graphics_opengl_GL.context.lineWidth(width);
};
lime_graphics_opengl_GL.linkProgram = function(program) {
	lime_graphics_opengl_GL.context.linkProgram(program);
};
lime_graphics_opengl_GL.pixelStorei = function(pname,param) {
	lime_graphics_opengl_GL.context.pixelStorei(pname,param);
};
lime_graphics_opengl_GL.polygonOffset = function(factor,units) {
	lime_graphics_opengl_GL.context.polygonOffset(factor,units);
};
lime_graphics_opengl_GL.readPixels = function(x,y,width,height,format,type,pixels) {
	lime_graphics_opengl_GL.context.readPixels(x,y,width,height,format,type,pixels);
};
lime_graphics_opengl_GL.renderbufferStorage = function(target,internalformat,width,height) {
	lime_graphics_opengl_GL.context.renderbufferStorage(target,internalformat,width,height);
};
lime_graphics_opengl_GL.sampleCoverage = function(value,invert) {
	lime_graphics_opengl_GL.context.sampleCoverage(value,invert);
};
lime_graphics_opengl_GL.scissor = function(x,y,width,height) {
	lime_graphics_opengl_GL.context.scissor(x,y,width,height);
};
lime_graphics_opengl_GL.shaderSource = function(shader,source) {
	lime_graphics_opengl_GL.context.shaderSource(shader,source);
};
lime_graphics_opengl_GL.stencilFunc = function(func,ref,mask) {
	lime_graphics_opengl_GL.context.stencilFunc(func,ref,mask);
};
lime_graphics_opengl_GL.stencilFuncSeparate = function(face,func,ref,mask) {
	lime_graphics_opengl_GL.context.stencilFuncSeparate(face,func,ref,mask);
};
lime_graphics_opengl_GL.stencilMask = function(mask) {
	lime_graphics_opengl_GL.context.stencilMask(mask);
};
lime_graphics_opengl_GL.stencilMaskSeparate = function(face,mask) {
	lime_graphics_opengl_GL.context.stencilMaskSeparate(face,mask);
};
lime_graphics_opengl_GL.stencilOp = function(fail,zfail,zpass) {
	lime_graphics_opengl_GL.context.stencilOp(fail,zfail,zpass);
};
lime_graphics_opengl_GL.stencilOpSeparate = function(face,fail,zfail,zpass) {
	lime_graphics_opengl_GL.context.stencilOpSeparate(face,fail,zfail,zpass);
};
lime_graphics_opengl_GL.texImage2D = function(target,level,internalformat,width,height,border,format,type,pixels) {
	lime_graphics_opengl_GL.context.texImage2D(target,level,internalformat,width,height,border,format,type,pixels);
};
lime_graphics_opengl_GL.texParameterf = function(target,pname,param) {
	lime_graphics_opengl_GL.context.texParameterf(target,pname,param);
};
lime_graphics_opengl_GL.texParameteri = function(target,pname,param) {
	lime_graphics_opengl_GL.context.texParameteri(target,pname,param);
};
lime_graphics_opengl_GL.texSubImage2D = function(target,level,xoffset,yoffset,width,height,format,type,pixels) {
	lime_graphics_opengl_GL.context.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels);
};
lime_graphics_opengl_GL.uniform1f = function(location,x) {
	lime_graphics_opengl_GL.context.uniform1f(location,x);
};
lime_graphics_opengl_GL.uniform1fv = function(location,x) {
	lime_graphics_opengl_GL.context.uniform1fv(location,x);
};
lime_graphics_opengl_GL.uniform1i = function(location,x) {
	lime_graphics_opengl_GL.context.uniform1i(location,x);
};
lime_graphics_opengl_GL.uniform1iv = function(location,v) {
	lime_graphics_opengl_GL.context.uniform1iv(location,v);
};
lime_graphics_opengl_GL.uniform2f = function(location,x,y) {
	lime_graphics_opengl_GL.context.uniform2f(location,x,y);
};
lime_graphics_opengl_GL.uniform2fv = function(location,v) {
	lime_graphics_opengl_GL.context.uniform2fv(location,v);
};
lime_graphics_opengl_GL.uniform2i = function(location,x,y) {
	lime_graphics_opengl_GL.context.uniform2i(location,x,y);
};
lime_graphics_opengl_GL.uniform2iv = function(location,v) {
	lime_graphics_opengl_GL.context.uniform2iv(location,v);
};
lime_graphics_opengl_GL.uniform3f = function(location,x,y,z) {
	lime_graphics_opengl_GL.context.uniform3f(location,x,y,z);
};
lime_graphics_opengl_GL.uniform3fv = function(location,v) {
	lime_graphics_opengl_GL.context.uniform3fv(location,v);
};
lime_graphics_opengl_GL.uniform3i = function(location,x,y,z) {
	lime_graphics_opengl_GL.context.uniform3i(location,x,y,z);
};
lime_graphics_opengl_GL.uniform3iv = function(location,v) {
	lime_graphics_opengl_GL.context.uniform3iv(location,v);
};
lime_graphics_opengl_GL.uniform4f = function(location,x,y,z,w) {
	lime_graphics_opengl_GL.context.uniform4f(location,x,y,z,w);
};
lime_graphics_opengl_GL.uniform4fv = function(location,v) {
	lime_graphics_opengl_GL.context.uniform4fv(location,v);
};
lime_graphics_opengl_GL.uniform4i = function(location,x,y,z,w) {
	lime_graphics_opengl_GL.context.uniform4i(location,x,y,z,w);
};
lime_graphics_opengl_GL.uniform4iv = function(location,v) {
	lime_graphics_opengl_GL.context.uniform4iv(location,v);
};
lime_graphics_opengl_GL.uniformMatrix2fv = function(location,transpose,v) {
	lime_graphics_opengl_GL.context.uniformMatrix2fv(location,transpose,v);
};
lime_graphics_opengl_GL.uniformMatrix3fv = function(location,transpose,v) {
	lime_graphics_opengl_GL.context.uniformMatrix3fv(location,transpose,v);
};
lime_graphics_opengl_GL.uniformMatrix4fv = function(location,transpose,v) {
	lime_graphics_opengl_GL.context.uniformMatrix4fv(location,transpose,v);
};
lime_graphics_opengl_GL.useProgram = function(program) {
	lime_graphics_opengl_GL.context.useProgram(program);
};
lime_graphics_opengl_GL.validateProgram = function(program) {
	lime_graphics_opengl_GL.context.validateProgram(program);
};
lime_graphics_opengl_GL.vertexAttrib1f = function(indx,x) {
	lime_graphics_opengl_GL.context.vertexAttrib1f(indx,x);
};
lime_graphics_opengl_GL.vertexAttrib1fv = function(indx,values) {
	lime_graphics_opengl_GL.context.vertexAttrib1fv(indx,values);
};
lime_graphics_opengl_GL.vertexAttrib2f = function(indx,x,y) {
	lime_graphics_opengl_GL.context.vertexAttrib2f(indx,x,y);
};
lime_graphics_opengl_GL.vertexAttrib2fv = function(indx,values) {
	lime_graphics_opengl_GL.context.vertexAttrib2fv(indx,values);
};
lime_graphics_opengl_GL.vertexAttrib3f = function(indx,x,y,z) {
	lime_graphics_opengl_GL.context.vertexAttrib3f(indx,x,y,z);
};
lime_graphics_opengl_GL.vertexAttrib3fv = function(indx,values) {
	lime_graphics_opengl_GL.context.vertexAttrib3fv(indx,values);
};
lime_graphics_opengl_GL.vertexAttrib4f = function(indx,x,y,z,w) {
	lime_graphics_opengl_GL.context.vertexAttrib4f(indx,x,y,z,w);
};
lime_graphics_opengl_GL.vertexAttrib4fv = function(indx,values) {
	lime_graphics_opengl_GL.context.vertexAttrib4fv(indx,values);
};
lime_graphics_opengl_GL.vertexAttribPointer = function(indx,size,type,normalized,stride,offset) {
	lime_graphics_opengl_GL.context.vertexAttribPointer(indx,size,type,normalized,stride,offset);
};
lime_graphics_opengl_GL.viewport = function(x,y,width,height) {
	lime_graphics_opengl_GL.context.viewport(x,y,width,height);
};
lime_graphics_opengl_GL.get_version = function() {
	return 2;
};
var lime_graphics_utils_ImageCanvasUtil = function() { };
$hxClasses["lime.graphics.utils.ImageCanvasUtil"] = lime_graphics_utils_ImageCanvasUtil;
lime_graphics_utils_ImageCanvasUtil.__name__ = ["lime","graphics","utils","ImageCanvasUtil"];
lime_graphics_utils_ImageCanvasUtil.colorTransform = function(image,rect,colorMatrix) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	lime_graphics_utils_ImageDataUtil.colorTransform(image,rect,colorMatrix);
};
lime_graphics_utils_ImageCanvasUtil.convertToCanvas = function(image) {
	var buffer = image.buffer;
	if(buffer.__srcImage != null) {
		if(buffer.__srcCanvas == null) {
			lime_graphics_utils_ImageCanvasUtil.createCanvas(image,buffer.__srcImage.width,buffer.__srcImage.height);
			buffer.__srcContext.drawImage(buffer.__srcImage,0,0);
		}
		buffer.__srcImage = null;
	} else if(buffer.data != null && buffer.__srcCanvas == null) {
		lime_graphics_utils_ImageCanvasUtil.createCanvas(image,buffer.width,buffer.height);
		lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	} else if(buffer.data == null && buffer.__srcImageData != null) buffer.data = buffer.__srcImageData.data;
};
lime_graphics_utils_ImageCanvasUtil.convertToData = function(image) {
	if(image.buffer.data == null) {
		lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
		lime_graphics_utils_ImageCanvasUtil.sync(image,false);
		lime_graphics_utils_ImageCanvasUtil.createImageData(image);
		image.buffer.__srcCanvas = null;
		image.buffer.__srcContext = null;
	}
};
lime_graphics_utils_ImageCanvasUtil.copyChannel = function(image,sourceImage,sourceRect,destPoint,sourceChannel,destChannel) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(sourceImage);
	lime_graphics_utils_ImageCanvasUtil.createImageData(sourceImage);
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	lime_graphics_utils_ImageDataUtil.copyChannel(image,sourceImage,sourceRect,destPoint,sourceChannel,destChannel);
};
lime_graphics_utils_ImageCanvasUtil.copyPixels = function(image,sourceImage,sourceRect,destPoint,alphaImage,alphaPoint,mergeAlpha) {
	if(mergeAlpha == null) mergeAlpha = false;
	if(destPoint == null || destPoint.x >= image.width || destPoint.y >= image.height || sourceRect == null || sourceRect.width < 1 || sourceRect.height < 1) return;
	if(alphaImage != null && alphaImage.get_transparent()) {
		if(alphaPoint == null) alphaPoint = new lime_math_Vector2();
		var tempData = image.clone();
		tempData.copyChannel(alphaImage,new lime_math_Rectangle(alphaPoint.x,alphaPoint.y,sourceRect.width,sourceRect.height),new lime_math_Vector2(sourceRect.x,sourceRect.y),lime_graphics_ImageChannel.ALPHA,lime_graphics_ImageChannel.ALPHA);
		sourceImage = tempData;
	}
	lime_graphics_utils_ImageCanvasUtil.sync(image,true);
	if(!mergeAlpha) {
		if(image.get_transparent() && sourceImage.get_transparent()) image.buffer.__srcContext.clearRect(destPoint.x + image.offsetX,destPoint.y + image.offsetY,sourceRect.width + image.offsetX,sourceRect.height + image.offsetY);
	}
	lime_graphics_utils_ImageCanvasUtil.sync(sourceImage,false);
	if(sourceImage.buffer.get_src() != null) image.buffer.__srcContext.drawImage(sourceImage.buffer.get_src(),sourceRect.x + sourceImage.offsetX | 0,sourceRect.y + sourceImage.offsetY | 0,sourceRect.width | 0,sourceRect.height | 0,destPoint.x + image.offsetX | 0,destPoint.y + image.offsetY | 0,sourceRect.width | 0,sourceRect.height | 0);
};
lime_graphics_utils_ImageCanvasUtil.createCanvas = function(image,width,height) {
	var buffer = image.buffer;
	if(buffer.__srcCanvas == null) {
		buffer.__srcCanvas = window.document.createElement("canvas");
		buffer.__srcCanvas.width = width;
		buffer.__srcCanvas.height = height;
		if(!image.get_transparent()) {
			if(!image.get_transparent()) buffer.__srcCanvas.setAttribute("moz-opaque","true");
			buffer.__srcContext = buffer.__srcCanvas.getContext ("2d", { alpha: false });
		} else buffer.__srcContext = buffer.__srcCanvas.getContext("2d");
		buffer.__srcContext.mozImageSmoothingEnabled = false;
		buffer.__srcContext.msImageSmoothingEnabled = false;
		buffer.__srcContext.imageSmoothingEnabled = false;
	}
};
lime_graphics_utils_ImageCanvasUtil.createImageData = function(image) {
	var buffer = image.buffer;
	if(buffer.__srcImageData == null) {
		if(buffer.data == null) buffer.__srcImageData = buffer.__srcContext.getImageData(0,0,buffer.width,buffer.height); else {
			buffer.__srcImageData = buffer.__srcContext.createImageData(buffer.width,buffer.height);
			buffer.__srcImageData.data.set(buffer.data);
		}
		var elements = buffer.__srcImageData.data.buffer;
		var this1;
		if(elements != null) this1 = new Uint8Array(elements); else this1 = null;
		buffer.data = this1;
	}
};
lime_graphics_utils_ImageCanvasUtil.fillRect = function(image,rect,color,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.sync(image,true);
	if(rect.x == 0 && rect.y == 0 && rect.width == image.width && rect.height == image.height) {
		if(image.get_transparent() && (color & 255) == 0) {
			image.buffer.__srcCanvas.width = image.buffer.width;
			return;
		}
	}
	var r;
	var g;
	var b;
	var a;
	if(format == 1) {
		r = color >> 16 & 255;
		g = color >> 8 & 255;
		b = color & 255;
		if(image.get_transparent()) a = color >> 24 & 255; else a = 255;
	} else {
		r = color >> 24 & 255;
		g = color >> 16 & 255;
		b = color >> 8 & 255;
		if(image.get_transparent()) a = color & 255; else a = 255;
	}
	image.buffer.__srcContext.fillStyle = "rgba(" + r + ", " + g + ", " + b + ", " + a / 255 + ")";
	image.buffer.__srcContext.fillRect(rect.x + image.offsetX,rect.y + image.offsetY,rect.width + image.offsetX,rect.height + image.offsetY);
};
lime_graphics_utils_ImageCanvasUtil.floodFill = function(image,x,y,color,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	lime_graphics_utils_ImageDataUtil.floodFill(image,x,y,color,format);
};
lime_graphics_utils_ImageCanvasUtil.getPixel = function(image,x,y,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	return lime_graphics_utils_ImageDataUtil.getPixel(image,x,y,format);
};
lime_graphics_utils_ImageCanvasUtil.getPixel32 = function(image,x,y,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	return lime_graphics_utils_ImageDataUtil.getPixel32(image,x,y,format);
};
lime_graphics_utils_ImageCanvasUtil.getPixels = function(image,rect,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	return lime_graphics_utils_ImageDataUtil.getPixels(image,rect,format);
};
lime_graphics_utils_ImageCanvasUtil.merge = function(image,sourceImage,sourceRect,destPoint,redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(sourceImage);
	lime_graphics_utils_ImageCanvasUtil.createImageData(sourceImage);
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	lime_graphics_utils_ImageDataUtil.merge(image,sourceImage,sourceRect,destPoint,redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier);
};
lime_graphics_utils_ImageCanvasUtil.resize = function(image,newWidth,newHeight) {
	var buffer = image.buffer;
	if(buffer.__srcCanvas == null) {
		lime_graphics_utils_ImageCanvasUtil.createCanvas(image,newWidth,newHeight);
		buffer.__srcContext.drawImage(buffer.get_src(),0,0,newWidth,newHeight);
	} else {
		lime_graphics_utils_ImageCanvasUtil.sync(image,true);
		var sourceCanvas = buffer.__srcCanvas;
		buffer.__srcCanvas = null;
		lime_graphics_utils_ImageCanvasUtil.createCanvas(image,newWidth,newHeight);
		buffer.__srcContext.drawImage(sourceCanvas,0,0,newWidth,newHeight);
	}
};
lime_graphics_utils_ImageCanvasUtil.scroll = function(image,x,y) {
	if(x % image.width == 0 && y % image.height == 0) return;
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.sync(image,true);
	image.buffer.__srcContext.clearRect(x,y,image.width,image.height);
	image.buffer.__srcContext.drawImage(image.buffer.__srcCanvas,x,y);
};
lime_graphics_utils_ImageCanvasUtil.setPixel = function(image,x,y,color,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	lime_graphics_utils_ImageDataUtil.setPixel(image,x,y,color,format);
};
lime_graphics_utils_ImageCanvasUtil.setPixel32 = function(image,x,y,color,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	lime_graphics_utils_ImageDataUtil.setPixel32(image,x,y,color,format);
};
lime_graphics_utils_ImageCanvasUtil.setPixels = function(image,rect,bytes,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	lime_graphics_utils_ImageDataUtil.setPixels(image,rect,bytes,format);
};
lime_graphics_utils_ImageCanvasUtil.sync = function(image,clear) {
	if(image.dirty && image.buffer.__srcImageData != null && image.type != lime_graphics_ImageType.DATA) {
		image.buffer.__srcContext.putImageData(image.buffer.__srcImageData,0,0);
		image.buffer.data = null;
		image.dirty = false;
	}
	if(clear) {
		image.buffer.__srcImageData = null;
		image.buffer.data = null;
	}
};
var lime_graphics_utils_ImageDataUtil = function() { };
$hxClasses["lime.graphics.utils.ImageDataUtil"] = lime_graphics_utils_ImageDataUtil;
lime_graphics_utils_ImageDataUtil.__name__ = ["lime","graphics","utils","ImageDataUtil"];
lime_graphics_utils_ImageDataUtil.colorTransform = function(image,rect,colorMatrix) {
	var data = image.buffer.data;
	if(data == null) return;
	var format = image.buffer.format;
	var premultiplied = image.buffer.premultiplied;
	var dataView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,rect);
	var alphaTable = lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getAlphaTable(colorMatrix);
	var redTable = lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getRedTable(colorMatrix);
	var greenTable = lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getGreenTable(colorMatrix);
	var blueTable = lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getBlueTable(colorMatrix);
	var row;
	var offset;
	var pixel;
	var _g1 = 0;
	var _g = dataView.height;
	while(_g1 < _g) {
		var y = _g1++;
		row = dataView.offset + dataView.stride * y;
		var _g3 = 0;
		var _g2 = dataView.width;
		while(_g3 < _g2) {
			var x = _g3++;
			offset = row + x * 4;
			switch(format) {
			case 2:
				pixel = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
				break;
			case 0:
				pixel = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
				break;
			case 1:
				pixel = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
				break;
			}
			if(premultiplied) {
				if((pixel & 255) != 0 && (pixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (pixel & 255);
					var r;
					var idx = Math.round((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
					var g;
					var idx1 = Math.round((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
					var b;
					var idx2 = Math.round((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
					pixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | pixel & 255 & 255;
				}
			}
			pixel = (redTable[pixel >> 24 & 255] & 255) << 24 | (greenTable[pixel >> 16 & 255] & 255) << 16 | (blueTable[pixel >> 8 & 255] & 255) << 8 | alphaTable[pixel & 255] & 255;
			if(premultiplied) {
				if((pixel & 255) == 0) {
					if(pixel != 0) pixel = 0;
				} else if((pixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[pixel & 255];
					pixel = ((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | pixel & 255 & 255;
				}
			}
			switch(format) {
			case 2:
				data[offset] = pixel >> 8 & 255;
				data[offset + 1] = pixel >> 16 & 255;
				data[offset + 2] = pixel >> 24 & 255;
				data[offset + 3] = pixel & 255;
				break;
			case 0:
				data[offset] = pixel >> 24 & 255;
				data[offset + 1] = pixel >> 16 & 255;
				data[offset + 2] = pixel >> 8 & 255;
				data[offset + 3] = pixel & 255;
				break;
			case 1:
				data[offset] = pixel & 255;
				data[offset + 1] = pixel >> 24 & 255;
				data[offset + 2] = pixel >> 16 & 255;
				data[offset + 3] = pixel >> 8 & 255;
				break;
			}
		}
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.copyChannel = function(image,sourceImage,sourceRect,destPoint,sourceChannel,destChannel) {
	var destIdx;
	switch(destChannel[1]) {
	case 0:
		destIdx = 0;
		break;
	case 1:
		destIdx = 1;
		break;
	case 2:
		destIdx = 2;
		break;
	case 3:
		destIdx = 3;
		break;
	}
	var srcIdx;
	switch(sourceChannel[1]) {
	case 0:
		srcIdx = 0;
		break;
	case 1:
		srcIdx = 1;
		break;
	case 2:
		srcIdx = 2;
		break;
	case 3:
		srcIdx = 3;
		break;
	}
	var srcData = sourceImage.buffer.data;
	var destData = image.buffer.data;
	if(srcData == null || destData == null) return;
	var srcView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(sourceImage,sourceRect);
	var destView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,new lime_math_Rectangle(destPoint.x,destPoint.y,srcView.width,srcView.height));
	var srcFormat = sourceImage.buffer.format;
	var destFormat = image.buffer.format;
	var srcPremultiplied = sourceImage.buffer.premultiplied;
	var destPremultiplied = image.buffer.premultiplied;
	var srcPosition;
	var destPosition;
	var srcPixel;
	var destPixel;
	var value = 0;
	var _g1 = 0;
	var _g = destView.height;
	while(_g1 < _g) {
		var y = _g1++;
		srcPosition = srcView.offset + srcView.stride * y;
		destPosition = destView.offset + destView.stride * y;
		var _g3 = 0;
		var _g2 = destView.width;
		while(_g3 < _g2) {
			var x = _g3++;
			switch(srcFormat) {
			case 2:
				srcPixel = (srcData[srcPosition + 2] & 255) << 24 | (srcData[srcPosition + 1] & 255) << 16 | (srcData[srcPosition] & 255) << 8 | srcData[srcPosition + 3] & 255;
				break;
			case 0:
				srcPixel = (srcData[srcPosition] & 255) << 24 | (srcData[srcPosition + 1] & 255) << 16 | (srcData[srcPosition + 2] & 255) << 8 | srcData[srcPosition + 3] & 255;
				break;
			case 1:
				srcPixel = (srcData[srcPosition + 1] & 255) << 24 | (srcData[srcPosition + 2] & 255) << 16 | (srcData[srcPosition + 3] & 255) << 8 | srcData[srcPosition] & 255;
				break;
			}
			if(srcPremultiplied) {
				if((srcPixel & 255) != 0 && (srcPixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (srcPixel & 255);
					var r;
					var idx = Math.round((srcPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
					var g;
					var idx1 = Math.round((srcPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
					var b;
					var idx2 = Math.round((srcPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
					srcPixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | srcPixel & 255 & 255;
				}
			}
			switch(destFormat) {
			case 2:
				destPixel = (destData[destPosition + 2] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition] & 255) << 8 | destData[destPosition + 3] & 255;
				break;
			case 0:
				destPixel = (destData[destPosition] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition + 2] & 255) << 8 | destData[destPosition + 3] & 255;
				break;
			case 1:
				destPixel = (destData[destPosition + 1] & 255) << 24 | (destData[destPosition + 2] & 255) << 16 | (destData[destPosition + 3] & 255) << 8 | destData[destPosition] & 255;
				break;
			}
			if(destPremultiplied) {
				if((destPixel & 255) != 0 && (destPixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (destPixel & 255);
					var r1;
					var idx3 = Math.round((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx3];
					var g1;
					var idx4 = Math.round((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx4];
					var b1;
					var idx5 = Math.round((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx5];
					destPixel = (r1 & 255) << 24 | (g1 & 255) << 16 | (b1 & 255) << 8 | destPixel & 255 & 255;
				}
			}
			switch(srcIdx) {
			case 0:
				value = srcPixel >> 24 & 255;
				break;
			case 1:
				value = srcPixel >> 16 & 255;
				break;
			case 2:
				value = srcPixel >> 8 & 255;
				break;
			case 3:
				value = srcPixel & 255;
				break;
			}
			switch(destIdx) {
			case 0:
				destPixel = (value & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
				value;
				break;
			case 1:
				destPixel = (destPixel >> 24 & 255 & 255) << 24 | (value & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
				value;
				break;
			case 2:
				destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (value & 255) << 8 | destPixel & 255 & 255;
				value;
				break;
			case 3:
				destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | value & 255;
				value;
				break;
			}
			if(destPremultiplied) {
				if((destPixel & 255) == 0) {
					if(destPixel != 0) destPixel = 0;
				} else if((destPixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[destPixel & 255];
					destPixel = ((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | destPixel & 255 & 255;
				}
			}
			switch(destFormat) {
			case 2:
				destData[destPosition] = destPixel >> 8 & 255;
				destData[destPosition + 1] = destPixel >> 16 & 255;
				destData[destPosition + 2] = destPixel >> 24 & 255;
				destData[destPosition + 3] = destPixel & 255;
				break;
			case 0:
				destData[destPosition] = destPixel >> 24 & 255;
				destData[destPosition + 1] = destPixel >> 16 & 255;
				destData[destPosition + 2] = destPixel >> 8 & 255;
				destData[destPosition + 3] = destPixel & 255;
				break;
			case 1:
				destData[destPosition] = destPixel & 255;
				destData[destPosition + 1] = destPixel >> 24 & 255;
				destData[destPosition + 2] = destPixel >> 16 & 255;
				destData[destPosition + 3] = destPixel >> 8 & 255;
				break;
			}
			srcPosition += 4;
			destPosition += 4;
		}
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.copyPixels = function(image,sourceImage,sourceRect,destPoint,alphaImage,alphaPoint,mergeAlpha) {
	if(mergeAlpha == null) mergeAlpha = false;
	var sourceData = sourceImage.buffer.data;
	var destData = image.buffer.data;
	if(sourceData == null || destData == null) return;
	var sourceView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(sourceImage,sourceRect);
	var destView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,new lime_math_Rectangle(destPoint.x,destPoint.y,sourceView.width,sourceView.height));
	var sourceFormat = sourceImage.buffer.format;
	var destFormat = image.buffer.format;
	var sourcePremultiplied = sourceImage.buffer.premultiplied;
	var destPremultiplied = image.buffer.premultiplied;
	var sourcePosition;
	var destPosition;
	var sourcePixel;
	if(!mergeAlpha || !sourceImage.get_transparent()) {
		var _g1 = 0;
		var _g = destView.height;
		while(_g1 < _g) {
			var y = _g1++;
			sourcePosition = sourceView.offset + sourceView.stride * y;
			destPosition = destView.offset + destView.stride * y;
			var _g3 = 0;
			var _g2 = destView.width;
			while(_g3 < _g2) {
				var x = _g3++;
				switch(sourceFormat) {
				case 2:
					sourcePixel = (sourceData[sourcePosition + 2] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
					break;
				case 0:
					sourcePixel = (sourceData[sourcePosition] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition + 2] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
					break;
				case 1:
					sourcePixel = (sourceData[sourcePosition + 1] & 255) << 24 | (sourceData[sourcePosition + 2] & 255) << 16 | (sourceData[sourcePosition + 3] & 255) << 8 | sourceData[sourcePosition] & 255;
					break;
				}
				if(sourcePremultiplied) {
					if((sourcePixel & 255) != 0 && (sourcePixel & 255) != 255) {
						lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (sourcePixel & 255);
						var r;
						var idx = Math.round((sourcePixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
						r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
						var g;
						var idx1 = Math.round((sourcePixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
						g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
						var b;
						var idx2 = Math.round((sourcePixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
						b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
						sourcePixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | sourcePixel & 255 & 255;
					}
				}
				if(destPremultiplied) {
					if((sourcePixel & 255) == 0) {
						if(sourcePixel != 0) sourcePixel = 0;
					} else if((sourcePixel & 255) != 255) {
						lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[sourcePixel & 255];
						sourcePixel = ((sourcePixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((sourcePixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((sourcePixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | sourcePixel & 255 & 255;
					}
				}
				switch(destFormat) {
				case 2:
					destData[destPosition] = sourcePixel >> 8 & 255;
					destData[destPosition + 1] = sourcePixel >> 16 & 255;
					destData[destPosition + 2] = sourcePixel >> 24 & 255;
					destData[destPosition + 3] = sourcePixel & 255;
					break;
				case 0:
					destData[destPosition] = sourcePixel >> 24 & 255;
					destData[destPosition + 1] = sourcePixel >> 16 & 255;
					destData[destPosition + 2] = sourcePixel >> 8 & 255;
					destData[destPosition + 3] = sourcePixel & 255;
					break;
				case 1:
					destData[destPosition] = sourcePixel & 255;
					destData[destPosition + 1] = sourcePixel >> 24 & 255;
					destData[destPosition + 2] = sourcePixel >> 16 & 255;
					destData[destPosition + 3] = sourcePixel >> 8 & 255;
					break;
				}
				sourcePosition += 4;
				destPosition += 4;
			}
		}
	} else {
		var sourceAlpha;
		var destAlpha;
		var oneMinusSourceAlpha;
		var blendAlpha;
		var destPixel;
		if(alphaImage == null) {
			var _g11 = 0;
			var _g4 = destView.height;
			while(_g11 < _g4) {
				var y1 = _g11++;
				sourcePosition = sourceView.offset + sourceView.stride * y1;
				destPosition = destView.offset + destView.stride * y1;
				var _g31 = 0;
				var _g21 = destView.width;
				while(_g31 < _g21) {
					var x1 = _g31++;
					switch(sourceFormat) {
					case 2:
						sourcePixel = (sourceData[sourcePosition + 2] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
						break;
					case 0:
						sourcePixel = (sourceData[sourcePosition] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition + 2] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
						break;
					case 1:
						sourcePixel = (sourceData[sourcePosition + 1] & 255) << 24 | (sourceData[sourcePosition + 2] & 255) << 16 | (sourceData[sourcePosition + 3] & 255) << 8 | sourceData[sourcePosition] & 255;
						break;
					}
					if(sourcePremultiplied) {
						if((sourcePixel & 255) != 0 && (sourcePixel & 255) != 255) {
							lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (sourcePixel & 255);
							var r1;
							var idx3 = Math.round((sourcePixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							r1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx3];
							var g1;
							var idx4 = Math.round((sourcePixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							g1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx4];
							var b1;
							var idx5 = Math.round((sourcePixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							b1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx5];
							sourcePixel = (r1 & 255) << 24 | (g1 & 255) << 16 | (b1 & 255) << 8 | sourcePixel & 255 & 255;
						}
					}
					switch(destFormat) {
					case 2:
						destPixel = (destData[destPosition + 2] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition] & 255) << 8 | destData[destPosition + 3] & 255;
						break;
					case 0:
						destPixel = (destData[destPosition] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition + 2] & 255) << 8 | destData[destPosition + 3] & 255;
						break;
					case 1:
						destPixel = (destData[destPosition + 1] & 255) << 24 | (destData[destPosition + 2] & 255) << 16 | (destData[destPosition + 3] & 255) << 8 | destData[destPosition] & 255;
						break;
					}
					if(destPremultiplied) {
						if((destPixel & 255) != 0 && (destPixel & 255) != 255) {
							lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (destPixel & 255);
							var r2;
							var idx6 = Math.round((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							r2 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx6];
							var g2;
							var idx7 = Math.round((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							g2 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx7];
							var b2;
							var idx8 = Math.round((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							b2 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx8];
							destPixel = (r2 & 255) << 24 | (g2 & 255) << 16 | (b2 & 255) << 8 | destPixel & 255 & 255;
						}
					}
					sourceAlpha = (sourcePixel & 255) / 255.0;
					destAlpha = (destPixel & 255) / 255.0;
					oneMinusSourceAlpha = 1 - sourceAlpha;
					blendAlpha = sourceAlpha + destAlpha * oneMinusSourceAlpha;
					if(blendAlpha == 0) destPixel = 0; else {
						var value;
						var idx9 = Math.round(((sourcePixel >> 24 & 255) * sourceAlpha + (destPixel >> 24 & 255) * destAlpha * oneMinusSourceAlpha) / blendAlpha);
						value = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx9];
						destPixel = (value & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
						value;
						var value1;
						var idx10 = Math.round(((sourcePixel >> 16 & 255) * sourceAlpha + (destPixel >> 16 & 255) * destAlpha * oneMinusSourceAlpha) / blendAlpha);
						value1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx10];
						destPixel = (destPixel >> 24 & 255 & 255) << 24 | (value1 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
						value1;
						var value2;
						var idx11 = Math.round(((sourcePixel >> 8 & 255) * sourceAlpha + (destPixel >> 8 & 255) * destAlpha * oneMinusSourceAlpha) / blendAlpha);
						value2 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx11];
						destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (value2 & 255) << 8 | destPixel & 255 & 255;
						value2;
						var value3;
						var idx12 = Math.round(blendAlpha * 255.0);
						value3 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx12];
						destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | value3 & 255;
						value3;
					}
					if(destPremultiplied) {
						if((destPixel & 255) == 0) {
							if(destPixel != 0) destPixel = 0;
						} else if((destPixel & 255) != 255) {
							lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[destPixel & 255];
							destPixel = ((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | destPixel & 255 & 255;
						}
					}
					switch(destFormat) {
					case 2:
						destData[destPosition] = destPixel >> 8 & 255;
						destData[destPosition + 1] = destPixel >> 16 & 255;
						destData[destPosition + 2] = destPixel >> 24 & 255;
						destData[destPosition + 3] = destPixel & 255;
						break;
					case 0:
						destData[destPosition] = destPixel >> 24 & 255;
						destData[destPosition + 1] = destPixel >> 16 & 255;
						destData[destPosition + 2] = destPixel >> 8 & 255;
						destData[destPosition + 3] = destPixel & 255;
						break;
					case 1:
						destData[destPosition] = destPixel & 255;
						destData[destPosition + 1] = destPixel >> 24 & 255;
						destData[destPosition + 2] = destPixel >> 16 & 255;
						destData[destPosition + 3] = destPixel >> 8 & 255;
						break;
					}
					sourcePosition += 4;
					destPosition += 4;
				}
			}
		} else {
			if(alphaPoint == null) alphaPoint = new lime_math_Vector2();
			var alphaData = alphaImage.buffer.data;
			var alphaFormat = alphaImage.buffer.format;
			var alphaPremultiplied = alphaImage.buffer.premultiplied;
			var alphaView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(alphaImage,new lime_math_Rectangle(alphaPoint.x,alphaPoint.y,destView.width,destView.height));
			var alphaPosition;
			var alphaPixel;
			var _g12 = 0;
			var _g5 = alphaView.height;
			while(_g12 < _g5) {
				var y2 = _g12++;
				sourcePosition = sourceView.offset + sourceView.stride * y2;
				destPosition = destView.offset + destView.stride * y2;
				alphaPosition = alphaView.offset + alphaView.stride * y2;
				var _g32 = 0;
				var _g22 = alphaView.width;
				while(_g32 < _g22) {
					var x2 = _g32++;
					switch(sourceFormat) {
					case 2:
						sourcePixel = (sourceData[sourcePosition + 2] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
						break;
					case 0:
						sourcePixel = (sourceData[sourcePosition] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition + 2] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
						break;
					case 1:
						sourcePixel = (sourceData[sourcePosition + 1] & 255) << 24 | (sourceData[sourcePosition + 2] & 255) << 16 | (sourceData[sourcePosition + 3] & 255) << 8 | sourceData[sourcePosition] & 255;
						break;
					}
					if(sourcePremultiplied) {
						if((sourcePixel & 255) != 0 && (sourcePixel & 255) != 255) {
							lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (sourcePixel & 255);
							var r3;
							var idx13 = Math.round((sourcePixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							r3 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx13];
							var g3;
							var idx14 = Math.round((sourcePixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							g3 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx14];
							var b3;
							var idx15 = Math.round((sourcePixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							b3 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx15];
							sourcePixel = (r3 & 255) << 24 | (g3 & 255) << 16 | (b3 & 255) << 8 | sourcePixel & 255 & 255;
						}
					}
					switch(destFormat) {
					case 2:
						destPixel = (destData[destPosition + 2] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition] & 255) << 8 | destData[destPosition + 3] & 255;
						break;
					case 0:
						destPixel = (destData[destPosition] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition + 2] & 255) << 8 | destData[destPosition + 3] & 255;
						break;
					case 1:
						destPixel = (destData[destPosition + 1] & 255) << 24 | (destData[destPosition + 2] & 255) << 16 | (destData[destPosition + 3] & 255) << 8 | destData[destPosition] & 255;
						break;
					}
					if(destPremultiplied) {
						if((destPixel & 255) != 0 && (destPixel & 255) != 255) {
							lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (destPixel & 255);
							var r4;
							var idx16 = Math.round((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							r4 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx16];
							var g4;
							var idx17 = Math.round((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							g4 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx17];
							var b4;
							var idx18 = Math.round((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							b4 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx18];
							destPixel = (r4 & 255) << 24 | (g4 & 255) << 16 | (b4 & 255) << 8 | destPixel & 255 & 255;
						}
					}
					switch(alphaFormat) {
					case 2:
						alphaPixel = (alphaData[alphaPosition + 2] & 255) << 24 | (alphaData[alphaPosition + 1] & 255) << 16 | (alphaData[alphaPosition] & 255) << 8 | alphaData[alphaPosition + 3] & 255;
						break;
					case 0:
						alphaPixel = (alphaData[alphaPosition] & 255) << 24 | (alphaData[alphaPosition + 1] & 255) << 16 | (alphaData[alphaPosition + 2] & 255) << 8 | alphaData[alphaPosition + 3] & 255;
						break;
					case 1:
						alphaPixel = (alphaData[alphaPosition + 1] & 255) << 24 | (alphaData[alphaPosition + 2] & 255) << 16 | (alphaData[alphaPosition + 3] & 255) << 8 | alphaData[alphaPosition] & 255;
						break;
					}
					if(alphaPremultiplied) {
						if((alphaPixel & 255) != 0 && (alphaPixel & 255) != 255) {
							lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (alphaPixel & 255);
							var r5;
							var idx19 = Math.round((alphaPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							r5 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx19];
							var g5;
							var idx20 = Math.round((alphaPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							g5 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx20];
							var b5;
							var idx21 = Math.round((alphaPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							b5 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx21];
							alphaPixel = (r5 & 255) << 24 | (g5 & 255) << 16 | (b5 & 255) << 8 | alphaPixel & 255 & 255;
						}
					}
					sourceAlpha = (alphaPixel & 255) / 255;
					destAlpha = (destPixel & 255) / 255;
					oneMinusSourceAlpha = 1 - sourceAlpha;
					blendAlpha = sourceAlpha + destAlpha * oneMinusSourceAlpha;
					if(blendAlpha == 0) destPixel = 0; else {
						var value4;
						var idx22 = Math.round(((sourcePixel >> 24 & 255) * sourceAlpha + (destPixel >> 24 & 255) * destAlpha * oneMinusSourceAlpha) / blendAlpha);
						value4 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx22];
						destPixel = (value4 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
						value4;
						var value5;
						var idx23 = Math.round(((sourcePixel >> 16 & 255) * sourceAlpha + (destPixel >> 16 & 255) * destAlpha * oneMinusSourceAlpha) / blendAlpha);
						value5 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx23];
						destPixel = (destPixel >> 24 & 255 & 255) << 24 | (value5 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
						value5;
						var value6;
						var idx24 = Math.round(((sourcePixel >> 8 & 255) * sourceAlpha + (destPixel >> 8 & 255) * destAlpha * oneMinusSourceAlpha) / blendAlpha);
						value6 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx24];
						destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (value6 & 255) << 8 | destPixel & 255 & 255;
						value6;
						var value7;
						var idx25 = Math.round(blendAlpha * 255.0);
						value7 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx25];
						destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | value7 & 255;
						value7;
					}
					if(destPremultiplied) {
						if((destPixel & 255) == 0) {
							if(destPixel != 0) destPixel = 0;
						} else if((destPixel & 255) != 255) {
							lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[destPixel & 255];
							destPixel = ((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | destPixel & 255 & 255;
						}
					}
					switch(destFormat) {
					case 2:
						destData[destPosition] = destPixel >> 8 & 255;
						destData[destPosition + 1] = destPixel >> 16 & 255;
						destData[destPosition + 2] = destPixel >> 24 & 255;
						destData[destPosition + 3] = destPixel & 255;
						break;
					case 0:
						destData[destPosition] = destPixel >> 24 & 255;
						destData[destPosition + 1] = destPixel >> 16 & 255;
						destData[destPosition + 2] = destPixel >> 8 & 255;
						destData[destPosition + 3] = destPixel & 255;
						break;
					case 1:
						destData[destPosition] = destPixel & 255;
						destData[destPosition + 1] = destPixel >> 24 & 255;
						destData[destPosition + 2] = destPixel >> 16 & 255;
						destData[destPosition + 3] = destPixel >> 8 & 255;
						break;
					}
					sourcePosition += 4;
					destPosition += 4;
				}
			}
		}
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.fillRect = function(image,rect,color,format) {
	var fillColor;
	switch(format) {
	case 1:
		{
			var argb = color;
			var rgba = 0;
			rgba = (argb >> 16 & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb & 255 & 255) << 8 | argb >> 24 & 255 & 255;
			fillColor = rgba;
		}
		break;
	case 2:
		{
			var bgra = color;
			var rgba1 = 0;
			rgba1 = (bgra >> 8 & 255 & 255) << 24 | (bgra >> 16 & 255 & 255) << 16 | (bgra >> 24 & 255 & 255) << 8 | bgra & 255 & 255;
			fillColor = rgba1;
		}
		break;
	default:
		fillColor = color;
	}
	if(!image.get_transparent()) {
		fillColor = (fillColor >> 24 & 255 & 255) << 24 | (fillColor >> 16 & 255 & 255) << 16 | (fillColor >> 8 & 255 & 255) << 8 | 255;
		255;
	}
	var data = image.buffer.data;
	if(data == null) return;
	var format1 = image.buffer.format;
	var premultiplied = image.buffer.premultiplied;
	var dataView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,rect);
	var row;
	var _g1 = 0;
	var _g = dataView.height;
	while(_g1 < _g) {
		var y = _g1++;
		row = dataView.offset + dataView.stride * y;
		var _g3 = 0;
		var _g2 = dataView.width;
		while(_g3 < _g2) {
			var x = _g3++;
			var offset = row + x * 4;
			if(premultiplied) {
				if((fillColor & 255) == 0) {
					if(fillColor != 0) fillColor = 0;
				} else if((fillColor & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[fillColor & 255];
					fillColor = ((fillColor >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((fillColor >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((fillColor >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | fillColor & 255 & 255;
				}
			}
			switch(format1) {
			case 2:
				data[offset] = fillColor >> 8 & 255;
				data[offset + 1] = fillColor >> 16 & 255;
				data[offset + 2] = fillColor >> 24 & 255;
				data[offset + 3] = fillColor & 255;
				break;
			case 0:
				data[offset] = fillColor >> 24 & 255;
				data[offset + 1] = fillColor >> 16 & 255;
				data[offset + 2] = fillColor >> 8 & 255;
				data[offset + 3] = fillColor & 255;
				break;
			case 1:
				data[offset] = fillColor & 255;
				data[offset + 1] = fillColor >> 24 & 255;
				data[offset + 2] = fillColor >> 16 & 255;
				data[offset + 3] = fillColor >> 8 & 255;
				break;
			}
		}
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.floodFill = function(image,x,y,color,format) {
	var data = image.buffer.data;
	if(data == null) return;
	if(format == 1) color = (color & 16777215) << 8 | color >> 24 & 255;
	var format1 = image.buffer.format;
	var premultiplied = image.buffer.premultiplied;
	var fillColor = color;
	var hitColor;
	var offset = (y + image.offsetY) * (image.buffer.width * 4) + (x + image.offsetX) * 4;
	switch(format1) {
	case 2:
		hitColor = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 0:
		hitColor = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 1:
		hitColor = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
		break;
	}
	if(premultiplied) {
		if((hitColor & 255) != 0 && (hitColor & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (hitColor & 255);
			var r;
			var idx = Math.round((hitColor >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.round((hitColor >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var b;
			var idx2 = Math.round((hitColor >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			hitColor = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | hitColor & 255 & 255;
		}
	}
	if(!image.get_transparent()) {
		fillColor = (fillColor >> 24 & 255 & 255) << 24 | (fillColor >> 16 & 255 & 255) << 16 | (fillColor >> 8 & 255 & 255) << 8 | 255;
		255;
		hitColor = (hitColor >> 24 & 255 & 255) << 24 | (hitColor >> 16 & 255 & 255) << 16 | (hitColor >> 8 & 255 & 255) << 8 | 255;
		255;
	}
	if(fillColor == hitColor) return;
	var dx = [0,-1,1,0];
	var dy = [-1,0,0,1];
	var minX = -image.offsetX;
	var minY = -image.offsetY;
	var maxX = minX + image.width;
	var maxY = minY + image.height;
	var queue = [];
	queue.push(x);
	queue.push(y);
	var curPointX;
	var curPointY;
	var nextPointX;
	var nextPointY;
	var nextPointOffset;
	var readColor;
	while(queue.length > 0) {
		curPointY = queue.pop();
		curPointX = queue.pop();
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			nextPointX = curPointX + dx[i];
			nextPointY = curPointY + dy[i];
			if(nextPointX < minX || nextPointY < minY || nextPointX >= maxX || nextPointY >= maxY) continue;
			nextPointOffset = (nextPointY * image.width + nextPointX) * 4;
			switch(format1) {
			case 2:
				readColor = (data[nextPointOffset + 2] & 255) << 24 | (data[nextPointOffset + 1] & 255) << 16 | (data[nextPointOffset] & 255) << 8 | data[nextPointOffset + 3] & 255;
				break;
			case 0:
				readColor = (data[nextPointOffset] & 255) << 24 | (data[nextPointOffset + 1] & 255) << 16 | (data[nextPointOffset + 2] & 255) << 8 | data[nextPointOffset + 3] & 255;
				break;
			case 1:
				readColor = (data[nextPointOffset + 1] & 255) << 24 | (data[nextPointOffset + 2] & 255) << 16 | (data[nextPointOffset + 3] & 255) << 8 | data[nextPointOffset] & 255;
				break;
			}
			if(premultiplied) {
				if((readColor & 255) != 0 && (readColor & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (readColor & 255);
					var r1;
					var idx3 = Math.round((readColor >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx3];
					var g1;
					var idx4 = Math.round((readColor >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx4];
					var b1;
					var idx5 = Math.round((readColor >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx5];
					readColor = (r1 & 255) << 24 | (g1 & 255) << 16 | (b1 & 255) << 8 | readColor & 255 & 255;
				}
			}
			if(readColor == hitColor) {
				if(premultiplied) {
					if((fillColor & 255) == 0) {
						if(fillColor != 0) fillColor = 0;
					} else if((fillColor & 255) != 255) {
						lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[fillColor & 255];
						fillColor = ((fillColor >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((fillColor >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((fillColor >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | fillColor & 255 & 255;
					}
				}
				switch(format1) {
				case 2:
					data[nextPointOffset] = fillColor >> 8 & 255;
					data[nextPointOffset + 1] = fillColor >> 16 & 255;
					data[nextPointOffset + 2] = fillColor >> 24 & 255;
					data[nextPointOffset + 3] = fillColor & 255;
					break;
				case 0:
					data[nextPointOffset] = fillColor >> 24 & 255;
					data[nextPointOffset + 1] = fillColor >> 16 & 255;
					data[nextPointOffset + 2] = fillColor >> 8 & 255;
					data[nextPointOffset + 3] = fillColor & 255;
					break;
				case 1:
					data[nextPointOffset] = fillColor & 255;
					data[nextPointOffset + 1] = fillColor >> 24 & 255;
					data[nextPointOffset + 2] = fillColor >> 16 & 255;
					data[nextPointOffset + 3] = fillColor >> 8 & 255;
					break;
				}
				queue.push(nextPointX);
				queue.push(nextPointY);
			}
		}
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.getColorBoundsRect = function(image,mask,color,findColor,format) {
	if(findColor == null) findColor = true;
	var left = image.width + 1;
	var right = 0;
	var top = image.height + 1;
	var bottom = 0;
	var _color;
	var _mask;
	switch(format) {
	case 1:
		{
			var argb = color;
			var rgba = 0;
			rgba = (argb >> 16 & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb & 255 & 255) << 8 | argb >> 24 & 255 & 255;
			_color = rgba;
		}
		{
			var argb1 = mask;
			var rgba1 = 0;
			rgba1 = (argb1 >> 16 & 255 & 255) << 24 | (argb1 >> 8 & 255 & 255) << 16 | (argb1 & 255 & 255) << 8 | argb1 >> 24 & 255 & 255;
			_mask = rgba1;
		}
		break;
	case 2:
		{
			var bgra = color;
			var rgba2 = 0;
			rgba2 = (bgra >> 8 & 255 & 255) << 24 | (bgra >> 16 & 255 & 255) << 16 | (bgra >> 24 & 255 & 255) << 8 | bgra & 255 & 255;
			_color = rgba2;
		}
		{
			var bgra1 = mask;
			var rgba3 = 0;
			rgba3 = (bgra1 >> 8 & 255 & 255) << 24 | (bgra1 >> 16 & 255 & 255) << 16 | (bgra1 >> 24 & 255 & 255) << 8 | bgra1 & 255 & 255;
			_mask = rgba3;
		}
		break;
	default:
		_color = color;
		_mask = mask;
	}
	if(!image.get_transparent()) {
		_color = (_color >> 24 & 255 & 255) << 24 | (_color >> 16 & 255 & 255) << 16 | (_color >> 8 & 255 & 255) << 8 | 255;
		255;
		_mask = (_mask >> 24 & 255 & 255) << 24 | (_mask >> 16 & 255 & 255) << 16 | (_mask >> 8 & 255 & 255) << 8 | 255;
		255;
	}
	var pixel;
	var hit;
	var _g1 = 0;
	var _g = image.width;
	while(_g1 < _g) {
		var x = _g1++;
		hit = false;
		var _g3 = 0;
		var _g2 = image.height;
		while(_g3 < _g2) {
			var y = _g3++;
			pixel = image.getPixel32(x,y,0);
			if(findColor) hit = (pixel & _mask) == _color; else hit = (pixel & _mask) != _color;
			if(hit) {
				if(x < left) left = x;
				break;
			}
		}
		if(hit) break;
	}
	var ix;
	var _g11 = 0;
	var _g4 = image.width;
	while(_g11 < _g4) {
		var x1 = _g11++;
		ix = image.width - 1 - x1;
		hit = false;
		var _g31 = 0;
		var _g21 = image.height;
		while(_g31 < _g21) {
			var y1 = _g31++;
			pixel = image.getPixel32(ix,y1,0);
			if(findColor) hit = (pixel & _mask) == _color; else hit = (pixel & _mask) != _color;
			if(hit) {
				if(ix > right) right = ix;
				break;
			}
		}
		if(hit) break;
	}
	var _g12 = 0;
	var _g5 = image.height;
	while(_g12 < _g5) {
		var y2 = _g12++;
		hit = false;
		var _g32 = 0;
		var _g22 = image.width;
		while(_g32 < _g22) {
			var x2 = _g32++;
			pixel = image.getPixel32(x2,y2,0);
			if(findColor) hit = (pixel & _mask) == _color; else hit = (pixel & _mask) != _color;
			if(hit) {
				if(y2 < top) top = y2;
				break;
			}
		}
		if(hit) break;
	}
	var iy;
	var _g13 = 0;
	var _g6 = image.height;
	while(_g13 < _g6) {
		var y3 = _g13++;
		iy = image.height - 1 - y3;
		hit = false;
		var _g33 = 0;
		var _g23 = image.width;
		while(_g33 < _g23) {
			var x3 = _g33++;
			pixel = image.getPixel32(x3,iy,0);
			if(findColor) hit = (pixel & _mask) == _color; else hit = (pixel & _mask) != _color;
			if(hit) {
				if(iy > bottom) bottom = iy;
				break;
			}
		}
		if(hit) break;
	}
	var w = right - left;
	var h = bottom - top;
	if(w > 0) w++;
	if(h > 0) h++;
	if(w < 0) w = 0;
	if(h < 0) h = 0;
	if(left == right) w = 1;
	if(top == bottom) h = 1;
	if(left > image.width) left = 0;
	if(top > image.height) top = 0;
	return new lime_math_Rectangle(left,top,w,h);
};
lime_graphics_utils_ImageDataUtil.getPixel = function(image,x,y,format) {
	var pixel;
	var data = image.buffer.data;
	var offset = 4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4;
	switch(image.buffer.format) {
	case 2:
		pixel = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 0:
		pixel = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 1:
		pixel = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
		break;
	}
	if(image.buffer.premultiplied) {
		if((pixel & 255) != 0 && (pixel & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (pixel & 255);
			var r;
			var idx = Math.round((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.round((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var b;
			var idx2 = Math.round((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			pixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | pixel & 255 & 255;
		}
	}
	pixel = (pixel >> 24 & 255 & 255) << 24 | (pixel >> 16 & 255 & 255) << 16 | (pixel >> 8 & 255 & 255) << 8 | 0;
	0;
	switch(format) {
	case 1:
		return (function($this) {
			var $r;
			var argb = 0;
			argb = (pixel & 255 & 255) << 24 | (pixel >> 24 & 255 & 255) << 16 | (pixel >> 16 & 255 & 255) << 8 | pixel >> 8 & 255 & 255;
			$r = argb;
			return $r;
		}(this));
	case 2:
		return (function($this) {
			var $r;
			var bgra = 0;
			bgra = (pixel >> 8 & 255 & 255) << 24 | (pixel >> 16 & 255 & 255) << 16 | (pixel >> 24 & 255 & 255) << 8 | pixel & 255 & 255;
			$r = bgra;
			return $r;
		}(this));
	default:
		return pixel;
	}
};
lime_graphics_utils_ImageDataUtil.getPixel32 = function(image,x,y,format) {
	var pixel;
	var data = image.buffer.data;
	var offset = 4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4;
	switch(image.buffer.format) {
	case 2:
		pixel = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 0:
		pixel = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 1:
		pixel = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
		break;
	}
	if(image.buffer.premultiplied) {
		if((pixel & 255) != 0 && (pixel & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (pixel & 255);
			var r;
			var idx = Math.round((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.round((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var b;
			var idx2 = Math.round((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			pixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | pixel & 255 & 255;
		}
	}
	switch(format) {
	case 1:
		return (function($this) {
			var $r;
			var argb = 0;
			argb = (pixel & 255 & 255) << 24 | (pixel >> 24 & 255 & 255) << 16 | (pixel >> 16 & 255 & 255) << 8 | pixel >> 8 & 255 & 255;
			$r = argb;
			return $r;
		}(this));
	case 2:
		return (function($this) {
			var $r;
			var bgra = 0;
			bgra = (pixel >> 8 & 255 & 255) << 24 | (pixel >> 16 & 255 & 255) << 16 | (pixel >> 24 & 255 & 255) << 8 | pixel & 255 & 255;
			$r = bgra;
			return $r;
		}(this));
	default:
		return pixel;
	}
};
lime_graphics_utils_ImageDataUtil.getPixels = function(image,rect,format) {
	if(image.buffer.data == null) return null;
	var length = rect.width * rect.height | 0;
	var bytes = haxe_io_Bytes.alloc(length * 4);
	var data = image.buffer.data;
	var sourceFormat = image.buffer.format;
	var premultiplied = image.buffer.premultiplied;
	var dataView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,rect);
	var position;
	var argb;
	var bgra;
	var pixel;
	var destPosition = 0;
	var _g1 = 0;
	var _g = dataView.height;
	while(_g1 < _g) {
		var y = _g1++;
		position = dataView.offset + dataView.stride * y;
		var _g3 = 0;
		var _g2 = dataView.width;
		while(_g3 < _g2) {
			var x = _g3++;
			switch(sourceFormat) {
			case 2:
				pixel = (data[position + 2] & 255) << 24 | (data[position + 1] & 255) << 16 | (data[position] & 255) << 8 | data[position + 3] & 255;
				break;
			case 0:
				pixel = (data[position] & 255) << 24 | (data[position + 1] & 255) << 16 | (data[position + 2] & 255) << 8 | data[position + 3] & 255;
				break;
			case 1:
				pixel = (data[position + 1] & 255) << 24 | (data[position + 2] & 255) << 16 | (data[position + 3] & 255) << 8 | data[position] & 255;
				break;
			}
			if(premultiplied) {
				if((pixel & 255) != 0 && (pixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (pixel & 255);
					var r;
					var idx = Math.round((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
					var g;
					var idx1 = Math.round((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
					var b;
					var idx2 = Math.round((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
					pixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | pixel & 255 & 255;
				}
			}
			switch(format) {
			case 1:
				{
					var argb1 = 0;
					argb1 = (pixel & 255 & 255) << 24 | (pixel >> 24 & 255 & 255) << 16 | (pixel >> 16 & 255 & 255) << 8 | pixel >> 8 & 255 & 255;
					argb = argb1;
				}
				pixel = argb;
				break;
			case 2:
				{
					var bgra1 = 0;
					bgra1 = (pixel >> 8 & 255 & 255) << 24 | (pixel >> 16 & 255 & 255) << 16 | (pixel >> 24 & 255 & 255) << 8 | pixel & 255 & 255;
					bgra = bgra1;
				}
				pixel = bgra;
				break;
			default:
			}
			bytes.set(destPosition++,pixel >> 24 & 255);
			bytes.set(destPosition++,pixel >> 16 & 255);
			bytes.set(destPosition++,pixel >> 8 & 255);
			bytes.set(destPosition++,pixel & 255);
			position += 4;
		}
	}
	return bytes;
};
lime_graphics_utils_ImageDataUtil.merge = function(image,sourceImage,sourceRect,destPoint,redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier) {
	if(image.buffer.data == null || sourceImage.buffer.data == null) return;
	var sourceView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(sourceImage,sourceRect);
	var destView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,new lime_math_Rectangle(destPoint.x,destPoint.y,sourceView.width,sourceView.height));
	var sourceData = sourceImage.buffer.data;
	var destData = image.buffer.data;
	var sourceFormat = sourceImage.buffer.format;
	var destFormat = image.buffer.format;
	var sourcePremultiplied = sourceImage.buffer.premultiplied;
	var destPremultiplied = image.buffer.premultiplied;
	var sourcePosition;
	var destPosition;
	var sourcePixel;
	var destPixel;
	var _g1 = 0;
	var _g = destView.height;
	while(_g1 < _g) {
		var y = _g1++;
		sourcePosition = sourceView.offset + sourceView.stride * y;
		destPosition = destView.offset + destView.stride * y;
		var _g3 = 0;
		var _g2 = destView.width;
		while(_g3 < _g2) {
			var x = _g3++;
			switch(sourceFormat) {
			case 2:
				sourcePixel = (sourceData[sourcePosition + 2] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
				break;
			case 0:
				sourcePixel = (sourceData[sourcePosition] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition + 2] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
				break;
			case 1:
				sourcePixel = (sourceData[sourcePosition + 1] & 255) << 24 | (sourceData[sourcePosition + 2] & 255) << 16 | (sourceData[sourcePosition + 3] & 255) << 8 | sourceData[sourcePosition] & 255;
				break;
			}
			if(sourcePremultiplied) {
				if((sourcePixel & 255) != 0 && (sourcePixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (sourcePixel & 255);
					var r;
					var idx = Math.round((sourcePixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
					var g;
					var idx1 = Math.round((sourcePixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
					var b;
					var idx2 = Math.round((sourcePixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
					sourcePixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | sourcePixel & 255 & 255;
				}
			}
			switch(destFormat) {
			case 2:
				destPixel = (destData[destPosition + 2] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition] & 255) << 8 | destData[destPosition + 3] & 255;
				break;
			case 0:
				destPixel = (destData[destPosition] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition + 2] & 255) << 8 | destData[destPosition + 3] & 255;
				break;
			case 1:
				destPixel = (destData[destPosition + 1] & 255) << 24 | (destData[destPosition + 2] & 255) << 16 | (destData[destPosition + 3] & 255) << 8 | destData[destPosition] & 255;
				break;
			}
			if(destPremultiplied) {
				if((destPixel & 255) != 0 && (destPixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (destPixel & 255);
					var r1;
					var idx3 = Math.round((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx3];
					var g1;
					var idx4 = Math.round((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx4];
					var b1;
					var idx5 = Math.round((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx5];
					destPixel = (r1 & 255) << 24 | (g1 & 255) << 16 | (b1 & 255) << 8 | destPixel & 255 & 255;
				}
			}
			var value = ((sourcePixel >> 24 & 255) * redMultiplier + (destPixel >> 24 & 255) * (256 - redMultiplier)) / 256 | 0;
			destPixel = (value & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
			value;
			var value1 = ((sourcePixel >> 16 & 255) * greenMultiplier + (destPixel >> 16 & 255) * (256 - greenMultiplier)) / 256 | 0;
			destPixel = (destPixel >> 24 & 255 & 255) << 24 | (value1 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
			value1;
			var value2 = ((sourcePixel >> 8 & 255) * blueMultiplier + (destPixel >> 8 & 255) * (256 - blueMultiplier)) / 256 | 0;
			destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (value2 & 255) << 8 | destPixel & 255 & 255;
			value2;
			var value3 = ((sourcePixel & 255) * alphaMultiplier + (destPixel & 255) * (256 - alphaMultiplier)) / 256 | 0;
			destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | value3 & 255;
			value3;
			if(destPremultiplied) {
				if((destPixel & 255) == 0) {
					if(destPixel != 0) destPixel = 0;
				} else if((destPixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[destPixel & 255];
					destPixel = ((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | destPixel & 255 & 255;
				}
			}
			switch(destFormat) {
			case 2:
				destData[destPosition] = destPixel >> 8 & 255;
				destData[destPosition + 1] = destPixel >> 16 & 255;
				destData[destPosition + 2] = destPixel >> 24 & 255;
				destData[destPosition + 3] = destPixel & 255;
				break;
			case 0:
				destData[destPosition] = destPixel >> 24 & 255;
				destData[destPosition + 1] = destPixel >> 16 & 255;
				destData[destPosition + 2] = destPixel >> 8 & 255;
				destData[destPosition + 3] = destPixel & 255;
				break;
			case 1:
				destData[destPosition] = destPixel & 255;
				destData[destPosition + 1] = destPixel >> 24 & 255;
				destData[destPosition + 2] = destPixel >> 16 & 255;
				destData[destPosition + 3] = destPixel >> 8 & 255;
				break;
			}
			sourcePosition += 4;
			destPosition += 4;
		}
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.multiplyAlpha = function(image) {
	var data = image.buffer.data;
	if(data == null || !image.buffer.transparent) return;
	var format = image.buffer.format;
	var length = data.length / 4 | 0;
	var pixel;
	var _g = 0;
	while(_g < length) {
		var i = _g++;
		var offset = i * 4;
		switch(format) {
		case 2:
			pixel = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
			break;
		case 0:
			pixel = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
			break;
		case 1:
			pixel = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
			break;
		}
		var offset1 = i * 4;
		if((pixel & 255) == 0) {
			if(pixel != 0) pixel = 0;
		} else if((pixel & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[pixel & 255];
			pixel = ((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | pixel & 255 & 255;
		}
		switch(format) {
		case 2:
			data[offset1] = pixel >> 8 & 255;
			data[offset1 + 1] = pixel >> 16 & 255;
			data[offset1 + 2] = pixel >> 24 & 255;
			data[offset1 + 3] = pixel & 255;
			break;
		case 0:
			data[offset1] = pixel >> 24 & 255;
			data[offset1 + 1] = pixel >> 16 & 255;
			data[offset1 + 2] = pixel >> 8 & 255;
			data[offset1 + 3] = pixel & 255;
			break;
		case 1:
			data[offset1] = pixel & 255;
			data[offset1 + 1] = pixel >> 24 & 255;
			data[offset1 + 2] = pixel >> 16 & 255;
			data[offset1 + 3] = pixel >> 8 & 255;
			break;
		}
	}
	image.buffer.premultiplied = true;
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.resize = function(image,newWidth,newHeight) {
	var buffer = image.buffer;
	if(buffer.width == newWidth && buffer.height == newHeight) return;
	var newBuffer = new lime_graphics_ImageBuffer((function($this) {
		var $r;
		var elements = newWidth * newHeight * 4;
		var this1;
		if(elements != null) this1 = new Uint8Array(elements); else this1 = null;
		$r = this1;
		return $r;
	}(this)),newWidth,newHeight);
	var imageWidth = image.width;
	var imageHeight = image.height;
	var data = image.get_data();
	var newData = newBuffer.data;
	var sourceIndex;
	var sourceIndexX;
	var sourceIndexY;
	var sourceIndexXY;
	var index;
	var sourceX;
	var sourceY;
	var u;
	var v;
	var uRatio;
	var vRatio;
	var uOpposite;
	var vOpposite;
	var _g = 0;
	while(_g < newHeight) {
		var y = _g++;
		var _g1 = 0;
		while(_g1 < newWidth) {
			var x = _g1++;
			u = (x + 0.5) / newWidth * imageWidth - 0.5;
			v = (y + 0.5) / newHeight * imageHeight - 0.5;
			sourceX = u | 0;
			sourceY = v | 0;
			sourceIndex = (sourceY * imageWidth + sourceX) * 4;
			if(sourceX < imageWidth - 1) sourceIndexX = sourceIndex + 4; else sourceIndexX = sourceIndex;
			if(sourceY < imageHeight - 1) sourceIndexY = sourceIndex + imageWidth * 4; else sourceIndexY = sourceIndex;
			if(sourceIndexX != sourceIndex) sourceIndexXY = sourceIndexY + 4; else sourceIndexXY = sourceIndexY;
			index = (y * newWidth + x) * 4;
			uRatio = u - sourceX;
			vRatio = v - sourceY;
			uOpposite = 1 - uRatio;
			vOpposite = 1 - vRatio;
			var val = Std["int"]((_$UInt_UInt_$Impl_$.toFloat(data[sourceIndex]) * uOpposite + _$UInt_UInt_$Impl_$.toFloat(data[sourceIndexX]) * uRatio) * vOpposite + (_$UInt_UInt_$Impl_$.toFloat(data[sourceIndexY]) * uOpposite + _$UInt_UInt_$Impl_$.toFloat(data[sourceIndexXY]) * uRatio) * vRatio);
			newData[index] = val;
			var val1 = Std["int"]((_$UInt_UInt_$Impl_$.toFloat(data[sourceIndex + 1]) * uOpposite + _$UInt_UInt_$Impl_$.toFloat(data[sourceIndexX + 1]) * uRatio) * vOpposite + (_$UInt_UInt_$Impl_$.toFloat(data[sourceIndexY + 1]) * uOpposite + _$UInt_UInt_$Impl_$.toFloat(data[sourceIndexXY + 1]) * uRatio) * vRatio);
			newData[index + 1] = val1;
			var val2 = Std["int"]((_$UInt_UInt_$Impl_$.toFloat(data[sourceIndex + 2]) * uOpposite + _$UInt_UInt_$Impl_$.toFloat(data[sourceIndexX + 2]) * uRatio) * vOpposite + (_$UInt_UInt_$Impl_$.toFloat(data[sourceIndexY + 2]) * uOpposite + _$UInt_UInt_$Impl_$.toFloat(data[sourceIndexXY + 2]) * uRatio) * vRatio);
			newData[index + 2] = val2;
			if(data[sourceIndexX + 3] == 0 || data[sourceIndexY + 3] == 0 || data[sourceIndexXY + 3] == 0) newData[index + 3] = 0; else newData[index + 3] = data[sourceIndex + 3];
		}
	}
	buffer.data = newBuffer.data;
	buffer.width = newWidth;
	buffer.height = newHeight;
};
lime_graphics_utils_ImageDataUtil.resizeBuffer = function(image,newWidth,newHeight) {
	var buffer = image.buffer;
	var data = image.get_data();
	var newData;
	var elements = newWidth * newHeight * 4;
	var this1;
	if(elements != null) this1 = new Uint8Array(elements); else this1 = null;
	newData = this1;
	var sourceIndex;
	var index;
	var _g1 = 0;
	var _g = buffer.height;
	while(_g1 < _g) {
		var y = _g1++;
		var _g3 = 0;
		var _g2 = buffer.width;
		while(_g3 < _g2) {
			var x = _g3++;
			sourceIndex = (y * buffer.width + x) * 4;
			index = (y * newWidth + x) * 4;
			newData[index] = data[sourceIndex];
			newData[index + 1] = data[sourceIndex + 1];
			newData[index + 2] = data[sourceIndex + 2];
			newData[index + 3] = data[sourceIndex + 3];
		}
	}
	buffer.data = newData;
	buffer.width = newWidth;
	buffer.height = newHeight;
};
lime_graphics_utils_ImageDataUtil.setFormat = function(image,format) {
	var data = image.buffer.data;
	if(data == null) return;
	var index;
	var a16;
	var length = data.length / 4 | 0;
	var r1;
	var g1;
	var b1;
	var a1;
	var r2;
	var g2;
	var b2;
	var a2;
	var r;
	var g;
	var b;
	var a;
	var _g = image.get_format();
	switch(_g) {
	case 0:
		r1 = 0;
		g1 = 1;
		b1 = 2;
		a1 = 3;
		break;
	case 1:
		r1 = 1;
		g1 = 2;
		b1 = 3;
		a1 = 0;
		break;
	case 2:
		r1 = 2;
		g1 = 1;
		b1 = 0;
		a1 = 3;
		break;
	}
	switch(format) {
	case 0:
		r2 = 0;
		g2 = 1;
		b2 = 2;
		a2 = 3;
		break;
	case 1:
		r2 = 1;
		g2 = 2;
		b2 = 3;
		a2 = 0;
		break;
	case 2:
		r2 = 2;
		g2 = 1;
		b2 = 0;
		a2 = 3;
		break;
	}
	var _g1 = 0;
	while(_g1 < length) {
		var i = _g1++;
		index = i * 4;
		r = data[index + r1];
		g = data[index + g1];
		b = data[index + b1];
		a = data[index + a1];
		data[index + r2] = r;
		data[index + g2] = g;
		data[index + b2] = b;
		data[index + a2] = a;
	}
	image.buffer.format = format;
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.setPixel = function(image,x,y,color,format) {
	var pixel;
	switch(format) {
	case 1:
		{
			var argb = color;
			var rgba = 0;
			rgba = (argb >> 16 & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb & 255 & 255) << 8 | argb >> 24 & 255 & 255;
			pixel = rgba;
		}
		break;
	case 2:
		{
			var bgra = color;
			var rgba1 = 0;
			rgba1 = (bgra >> 8 & 255 & 255) << 24 | (bgra >> 16 & 255 & 255) << 16 | (bgra >> 24 & 255 & 255) << 8 | bgra & 255 & 255;
			pixel = rgba1;
		}
		break;
	default:
		pixel = color;
	}
	var source = 0;
	var data = image.buffer.data;
	var offset = 4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4;
	switch(image.buffer.format) {
	case 2:
		source = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 0:
		source = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 1:
		source = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
		break;
	}
	if(image.buffer.premultiplied) {
		if((source & 255) != 0 && (source & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (source & 255);
			var r;
			var idx = Math.round((source >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.round((source >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var b;
			var idx2 = Math.round((source >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			source = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | source & 255 & 255;
		}
	}
	var value = source & 255;
	pixel = (pixel >> 24 & 255 & 255) << 24 | (pixel >> 16 & 255 & 255) << 16 | (pixel >> 8 & 255 & 255) << 8 | value & 255;
	value;
	var data1 = image.buffer.data;
	var offset1 = 4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4;
	if(image.buffer.premultiplied) {
		if((pixel & 255) == 0) {
			if(pixel != 0) pixel = 0;
		} else if((pixel & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[pixel & 255];
			pixel = ((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | pixel & 255 & 255;
		}
	}
	switch(image.buffer.format) {
	case 2:
		data1[offset1] = pixel >> 8 & 255;
		data1[offset1 + 1] = pixel >> 16 & 255;
		data1[offset1 + 2] = pixel >> 24 & 255;
		data1[offset1 + 3] = pixel & 255;
		break;
	case 0:
		data1[offset1] = pixel >> 24 & 255;
		data1[offset1 + 1] = pixel >> 16 & 255;
		data1[offset1 + 2] = pixel >> 8 & 255;
		data1[offset1 + 3] = pixel & 255;
		break;
	case 1:
		data1[offset1] = pixel & 255;
		data1[offset1 + 1] = pixel >> 24 & 255;
		data1[offset1 + 2] = pixel >> 16 & 255;
		data1[offset1 + 3] = pixel >> 8 & 255;
		break;
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.setPixel32 = function(image,x,y,color,format) {
	var pixel;
	switch(format) {
	case 1:
		{
			var argb = color;
			var rgba = 0;
			rgba = (argb >> 16 & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb & 255 & 255) << 8 | argb >> 24 & 255 & 255;
			pixel = rgba;
		}
		break;
	case 2:
		{
			var bgra = color;
			var rgba1 = 0;
			rgba1 = (bgra >> 8 & 255 & 255) << 24 | (bgra >> 16 & 255 & 255) << 16 | (bgra >> 24 & 255 & 255) << 8 | bgra & 255 & 255;
			pixel = rgba1;
		}
		break;
	default:
		pixel = color;
	}
	if(!image.get_transparent()) {
		pixel = (pixel >> 24 & 255 & 255) << 24 | (pixel >> 16 & 255 & 255) << 16 | (pixel >> 8 & 255 & 255) << 8 | 255;
		255;
	}
	var data = image.buffer.data;
	var offset = 4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4;
	if(image.buffer.premultiplied) {
		if((pixel & 255) == 0) {
			if(pixel != 0) pixel = 0;
		} else if((pixel & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[pixel & 255];
			pixel = ((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | pixel & 255 & 255;
		}
	}
	switch(image.buffer.format) {
	case 2:
		data[offset] = pixel >> 8 & 255;
		data[offset + 1] = pixel >> 16 & 255;
		data[offset + 2] = pixel >> 24 & 255;
		data[offset + 3] = pixel & 255;
		break;
	case 0:
		data[offset] = pixel >> 24 & 255;
		data[offset + 1] = pixel >> 16 & 255;
		data[offset + 2] = pixel >> 8 & 255;
		data[offset + 3] = pixel & 255;
		break;
	case 1:
		data[offset] = pixel & 255;
		data[offset + 1] = pixel >> 24 & 255;
		data[offset + 2] = pixel >> 16 & 255;
		data[offset + 3] = pixel >> 8 & 255;
		break;
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.setPixels = function(image,rect,bytes,format) {
	if(image.buffer.data == null) return;
	var data = image.buffer.data;
	var sourceFormat = image.buffer.format;
	var premultiplied = image.buffer.premultiplied;
	var dataView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,rect);
	var row;
	var color;
	var pixel;
	var transparent = image.get_transparent();
	var dataPosition = 0;
	var _g1 = 0;
	var _g = dataView.height;
	while(_g1 < _g) {
		var y = _g1++;
		row = dataView.offset + dataView.stride * y;
		var _g3 = 0;
		var _g2 = dataView.width;
		while(_g3 < _g2) {
			var x = _g3++;
			color = bytes.b[dataPosition + 3] | bytes.b[dataPosition + 2] << 8 | bytes.b[dataPosition + 1] << 16 | bytes.b[dataPosition] << 24;
			dataPosition += 4;
			switch(format) {
			case 1:
				{
					var argb = color;
					var rgba = 0;
					rgba = (argb >> 16 & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb & 255 & 255) << 8 | argb >> 24 & 255 & 255;
					pixel = rgba;
				}
				break;
			case 2:
				{
					var bgra = color;
					var rgba1 = 0;
					rgba1 = (bgra >> 8 & 255 & 255) << 24 | (bgra >> 16 & 255 & 255) << 16 | (bgra >> 24 & 255 & 255) << 8 | bgra & 255 & 255;
					pixel = rgba1;
				}
				break;
			default:
				pixel = color;
			}
			if(!transparent) {
				pixel = (pixel >> 24 & 255 & 255) << 24 | (pixel >> 16 & 255 & 255) << 16 | (pixel >> 8 & 255 & 255) << 8 | 255;
				255;
			}
			var offset = row + x * 4;
			if(premultiplied) {
				if((pixel & 255) == 0) {
					if(pixel != 0) pixel = 0;
				} else if((pixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[pixel & 255];
					pixel = ((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | pixel & 255 & 255;
				}
			}
			switch(sourceFormat) {
			case 2:
				data[offset] = pixel >> 8 & 255;
				data[offset + 1] = pixel >> 16 & 255;
				data[offset + 2] = pixel >> 24 & 255;
				data[offset + 3] = pixel & 255;
				break;
			case 0:
				data[offset] = pixel >> 24 & 255;
				data[offset + 1] = pixel >> 16 & 255;
				data[offset + 2] = pixel >> 8 & 255;
				data[offset + 3] = pixel & 255;
				break;
			case 1:
				data[offset] = pixel & 255;
				data[offset + 1] = pixel >> 24 & 255;
				data[offset + 2] = pixel >> 16 & 255;
				data[offset + 3] = pixel >> 8 & 255;
				break;
			}
		}
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.threshold = function(image,sourceImage,sourceRect,destPoint,operation,threshold,color,mask,copySource,format) {
	var _color;
	var _mask;
	var _threshold;
	switch(format) {
	case 1:
		{
			var argb = color;
			var rgba = 0;
			rgba = (argb >> 16 & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb & 255 & 255) << 8 | argb >> 24 & 255 & 255;
			_color = rgba;
		}
		{
			var argb1 = mask;
			var rgba1 = 0;
			rgba1 = (argb1 >> 16 & 255 & 255) << 24 | (argb1 >> 8 & 255 & 255) << 16 | (argb1 & 255 & 255) << 8 | argb1 >> 24 & 255 & 255;
			_mask = rgba1;
		}
		{
			var argb2 = threshold;
			var rgba2 = 0;
			rgba2 = (argb2 >> 16 & 255 & 255) << 24 | (argb2 >> 8 & 255 & 255) << 16 | (argb2 & 255 & 255) << 8 | argb2 >> 24 & 255 & 255;
			_threshold = rgba2;
		}
		break;
	case 2:
		{
			var bgra = color;
			var rgba3 = 0;
			rgba3 = (bgra >> 8 & 255 & 255) << 24 | (bgra >> 16 & 255 & 255) << 16 | (bgra >> 24 & 255 & 255) << 8 | bgra & 255 & 255;
			_color = rgba3;
		}
		{
			var bgra1 = mask;
			var rgba4 = 0;
			rgba4 = (bgra1 >> 8 & 255 & 255) << 24 | (bgra1 >> 16 & 255 & 255) << 16 | (bgra1 >> 24 & 255 & 255) << 8 | bgra1 & 255 & 255;
			_mask = rgba4;
		}
		{
			var bgra2 = threshold;
			var rgba5 = 0;
			rgba5 = (bgra2 >> 8 & 255 & 255) << 24 | (bgra2 >> 16 & 255 & 255) << 16 | (bgra2 >> 24 & 255 & 255) << 8 | bgra2 & 255 & 255;
			_threshold = rgba5;
		}
		break;
	default:
		_color = color;
		_mask = mask;
		_threshold = threshold;
	}
	var _operation;
	switch(operation) {
	case "!=":
		_operation = 0;
		break;
	case "==":
		_operation = 1;
		break;
	case "<":
		_operation = 2;
		break;
	case "<=":
		_operation = 3;
		break;
	case ">":
		_operation = 4;
		break;
	case ">=":
		_operation = 5;
		break;
	default:
		_operation = -1;
	}
	if(_operation == -1) return 0;
	var srcData = sourceImage.buffer.data;
	var destData = image.buffer.data;
	if(srcData == null || destData == null) return 0;
	var hits = 0;
	var srcView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(sourceImage,sourceRect);
	var destView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,new lime_math_Rectangle(destPoint.x,destPoint.y,srcView.width,srcView.height));
	var srcFormat = sourceImage.buffer.format;
	var destFormat = image.buffer.format;
	var srcPremultiplied = sourceImage.buffer.premultiplied;
	var destPremultiplied = image.buffer.premultiplied;
	var srcPosition;
	var destPosition;
	var srcPixel;
	var destPixel;
	var pixelMask;
	var test;
	var value;
	var _g1 = 0;
	var _g = destView.height;
	while(_g1 < _g) {
		var y = _g1++;
		srcPosition = srcView.offset + srcView.stride * y;
		destPosition = destView.offset + destView.stride * y;
		var _g3 = 0;
		var _g2 = destView.width;
		while(_g3 < _g2) {
			var x = _g3++;
			switch(srcFormat) {
			case 2:
				srcPixel = (srcData[srcPosition + 2] & 255) << 24 | (srcData[srcPosition + 1] & 255) << 16 | (srcData[srcPosition] & 255) << 8 | srcData[srcPosition + 3] & 255;
				break;
			case 0:
				srcPixel = (srcData[srcPosition] & 255) << 24 | (srcData[srcPosition + 1] & 255) << 16 | (srcData[srcPosition + 2] & 255) << 8 | srcData[srcPosition + 3] & 255;
				break;
			case 1:
				srcPixel = (srcData[srcPosition + 1] & 255) << 24 | (srcData[srcPosition + 2] & 255) << 16 | (srcData[srcPosition + 3] & 255) << 8 | srcData[srcPosition] & 255;
				break;
			}
			if(srcPremultiplied) {
				if((srcPixel & 255) != 0 && (srcPixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (srcPixel & 255);
					var r;
					var idx = Math.round((srcPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
					var g;
					var idx1 = Math.round((srcPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
					var b;
					var idx2 = Math.round((srcPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
					srcPixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | srcPixel & 255 & 255;
				}
			}
			pixelMask = srcPixel & _mask;
			value = lime_graphics_utils_ImageDataUtil.__pixelCompare(pixelMask,_threshold);
			switch(_operation) {
			case 0:
				test = value != 0;
				break;
			case 1:
				test = value == 0;
				break;
			case 2:
				test = value == -1;
				break;
			case 3:
				test = value == 0 || value == -1;
				break;
			case 4:
				test = value == 1;
				break;
			case 5:
				test = value == 0 || value == 1;
				break;
			default:
				test = false;
			}
			if(test) {
				if(destPremultiplied) {
					if((_color & 255) == 0) {
						if(_color != 0) _color = 0;
					} else if((_color & 255) != 255) {
						lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[_color & 255];
						_color = ((_color >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((_color >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((_color >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | _color & 255 & 255;
					}
				}
				switch(destFormat) {
				case 2:
					destData[destPosition] = _color >> 8 & 255;
					destData[destPosition + 1] = _color >> 16 & 255;
					destData[destPosition + 2] = _color >> 24 & 255;
					destData[destPosition + 3] = _color & 255;
					break;
				case 0:
					destData[destPosition] = _color >> 24 & 255;
					destData[destPosition + 1] = _color >> 16 & 255;
					destData[destPosition + 2] = _color >> 8 & 255;
					destData[destPosition + 3] = _color & 255;
					break;
				case 1:
					destData[destPosition] = _color & 255;
					destData[destPosition + 1] = _color >> 24 & 255;
					destData[destPosition + 2] = _color >> 16 & 255;
					destData[destPosition + 3] = _color >> 8 & 255;
					break;
				}
				hits++;
			} else if(copySource) {
				if(destPremultiplied) {
					if((srcPixel & 255) == 0) {
						if(srcPixel != 0) srcPixel = 0;
					} else if((srcPixel & 255) != 255) {
						lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[srcPixel & 255];
						srcPixel = ((srcPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((srcPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((srcPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | srcPixel & 255 & 255;
					}
				}
				switch(destFormat) {
				case 2:
					destData[destPosition] = srcPixel >> 8 & 255;
					destData[destPosition + 1] = srcPixel >> 16 & 255;
					destData[destPosition + 2] = srcPixel >> 24 & 255;
					destData[destPosition + 3] = srcPixel & 255;
					break;
				case 0:
					destData[destPosition] = srcPixel >> 24 & 255;
					destData[destPosition + 1] = srcPixel >> 16 & 255;
					destData[destPosition + 2] = srcPixel >> 8 & 255;
					destData[destPosition + 3] = srcPixel & 255;
					break;
				case 1:
					destData[destPosition] = srcPixel & 255;
					destData[destPosition + 1] = srcPixel >> 24 & 255;
					destData[destPosition + 2] = srcPixel >> 16 & 255;
					destData[destPosition + 3] = srcPixel >> 8 & 255;
					break;
				}
			}
			srcPosition += 4;
			destPosition += 4;
		}
	}
	if(hits > 0) image.dirty = true;
	return hits;
};
lime_graphics_utils_ImageDataUtil.unmultiplyAlpha = function(image) {
	var data = image.buffer.data;
	if(data == null) return;
	var format = image.buffer.format;
	var length = data.length / 4 | 0;
	var pixel;
	var _g = 0;
	while(_g < length) {
		var i = _g++;
		var offset = i * 4;
		switch(format) {
		case 2:
			pixel = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
			break;
		case 0:
			pixel = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
			break;
		case 1:
			pixel = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
			break;
		}
		if((pixel & 255) != 0 && (pixel & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (pixel & 255);
			var r;
			var idx = Math.round((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.round((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var b;
			var idx2 = Math.round((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			pixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | pixel & 255 & 255;
		}
		var offset1 = i * 4;
		switch(format) {
		case 2:
			data[offset1] = pixel >> 8 & 255;
			data[offset1 + 1] = pixel >> 16 & 255;
			data[offset1 + 2] = pixel >> 24 & 255;
			data[offset1 + 3] = pixel & 255;
			break;
		case 0:
			data[offset1] = pixel >> 24 & 255;
			data[offset1 + 1] = pixel >> 16 & 255;
			data[offset1 + 2] = pixel >> 8 & 255;
			data[offset1 + 3] = pixel & 255;
			break;
		case 1:
			data[offset1] = pixel & 255;
			data[offset1 + 1] = pixel >> 24 & 255;
			data[offset1 + 2] = pixel >> 16 & 255;
			data[offset1 + 3] = pixel >> 8 & 255;
			break;
		}
	}
	image.buffer.premultiplied = false;
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.__pixelCompare = function(n1,n2) {
	var tmp1;
	var tmp2;
	tmp1 = n1 >> 24 & 255;
	tmp2 = n2 >> 24 & 255;
	if(tmp1 != tmp2) if(tmp1 > tmp2) return 1; else return -1; else {
		tmp1 = n1 >> 16 & 255;
		tmp2 = n2 >> 16 & 255;
		if(tmp1 != tmp2) if(tmp1 > tmp2) return 1; else return -1; else {
			tmp1 = n1 >> 8 & 255;
			tmp2 = n2 >> 8 & 255;
			if(tmp1 != tmp2) if(tmp1 > tmp2) return 1; else return -1; else {
				tmp1 = n1 & 255;
				tmp2 = n2 & 255;
				if(tmp1 != tmp2) if(tmp1 > tmp2) return 1; else return -1; else return 0;
			}
		}
	}
};
var lime_graphics_utils__$ImageDataUtil_ImageDataView = function(image,rect) {
	this.image = image;
	if(rect == null) this.rect = image.get_rect(); else {
		if(rect.x < 0) rect.x = 0;
		if(rect.y < 0) rect.y = 0;
		if(rect.x + rect.width > image.width) rect.width = image.width - rect.x;
		if(rect.y + rect.height > image.height) rect.height = image.height - rect.y;
		if(rect.width < 0) rect.width = 0;
		if(rect.height < 0) rect.height = 0;
		this.rect = rect;
	}
	this.stride = image.buffer.get_stride();
	this.x = Math.ceil(this.rect.x);
	this.y = Math.ceil(this.rect.y);
	this.width = Math.floor(this.rect.width);
	this.height = Math.floor(this.rect.height);
	this.offset = this.stride * (this.y + image.offsetY) + (this.x + image.offsetX) * 4;
};
$hxClasses["lime.graphics.utils._ImageDataUtil.ImageDataView"] = lime_graphics_utils__$ImageDataUtil_ImageDataView;
lime_graphics_utils__$ImageDataUtil_ImageDataView.__name__ = ["lime","graphics","utils","_ImageDataUtil","ImageDataView"];
lime_graphics_utils__$ImageDataUtil_ImageDataView.prototype = {
	clip: function(x,y,width,height) {
		this.rect.__contract(x,y,width,height);
		this.x = Math.ceil(this.rect.x);
		this.y = Math.ceil(this.rect.y);
		this.width = Math.floor(this.rect.width);
		this.height = Math.floor(this.rect.height);
		this.offset = this.stride * (this.y + this.image.offsetY) + (this.x + this.image.offsetX) * 4;
	}
	,row: function(y) {
		return this.offset + this.stride * y;
	}
	,__class__: lime_graphics_utils__$ImageDataUtil_ImageDataView
};
var lime_math__$ColorMatrix_ColorMatrix_$Impl_$ = {};
$hxClasses["lime.math._ColorMatrix.ColorMatrix_Impl_"] = lime_math__$ColorMatrix_ColorMatrix_$Impl_$;
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__name__ = ["lime","math","_ColorMatrix","ColorMatrix_Impl_"];
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__properties__ = {set_redOffset:"set_redOffset",get_redOffset:"get_redOffset",set_redMultiplier:"set_redMultiplier",get_redMultiplier:"get_redMultiplier",set_greenOffset:"set_greenOffset",get_greenOffset:"get_greenOffset",set_greenMultiplier:"set_greenMultiplier",get_greenMultiplier:"get_greenMultiplier",set_color:"set_color",get_color:"get_color",set_blueOffset:"set_blueOffset",get_blueOffset:"get_blueOffset",set_blueMultiplier:"set_blueMultiplier",get_blueMultiplier:"get_blueMultiplier",set_alphaOffset:"set_alphaOffset",get_alphaOffset:"get_alphaOffset",set_alphaMultiplier:"set_alphaMultiplier",get_alphaMultiplier:"get_alphaMultiplier"}
lime_math__$ColorMatrix_ColorMatrix_$Impl_$._new = function(data) {
	var this1;
	if(data != null && data.length == 20) this1 = data; else {
		var array = lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__identity;
		var this2;
		if(array != null) this2 = new Float32Array(array); else this2 = null;
		this1 = this2;
	}
	return this1;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.clone = function(this1) {
	return lime_math__$ColorMatrix_ColorMatrix_$Impl_$._new((function($this) {
		var $r;
		var this2;
		if(this1 != null) this2 = new Float32Array(this1); else this2 = null;
		$r = this2;
		return $r;
	}(this)));
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.concat = function(this1,second) {
	var _g = this1;
	_g[0] = _g[0] + second[0];
	var _g1 = this1;
	_g1[6] = _g1[6] + second[6];
	var _g2 = this1;
	_g2[12] = _g2[12] + second[12];
	var _g3 = this1;
	_g3[18] = _g3[18] + second[18];
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.copyFrom = function(this1,other) {
	this1.set(other);
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.identity = function(this1) {
	this1[0] = 1;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	this1[4] = 0;
	this1[5] = 0;
	this1[6] = 1;
	this1[7] = 0;
	this1[8] = 0;
	this1[9] = 0;
	this1[10] = 0;
	this1[11] = 0;
	this1[12] = 1;
	this1[13] = 0;
	this1[14] = 0;
	this1[15] = 0;
	this1[16] = 0;
	this1[17] = 0;
	this1[18] = 1;
	this1[19] = 0;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getAlphaTable = function(this1) {
	var table;
	var this2;
	this2 = new Uint8Array(256);
	table = this2;
	var multiplier = this1[18];
	var offset = this1[19] * 255;
	var value;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		value = Math.floor(i * multiplier + offset);
		if(value > 255) value = 255;
		if(value < 0) value = 0;
		table[i] = value;
	}
	return table;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getBlueTable = function(this1) {
	var table;
	var this2;
	this2 = new Uint8Array(256);
	table = this2;
	var multiplier = this1[12];
	var offset = this1[14] * 255;
	var value;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		value = Math.floor(i * multiplier + offset);
		if(value > 255) value = 255;
		if(value < 0) value = 0;
		table[i] = value;
	}
	return table;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getGreenTable = function(this1) {
	var table;
	var this2;
	this2 = new Uint8Array(256);
	table = this2;
	var multiplier = this1[6];
	var offset = this1[9] * 255;
	var value;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		value = Math.floor(i * multiplier + offset);
		if(value > 255) value = 255;
		if(value < 0) value = 0;
		table[i] = value;
	}
	return table;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getRedTable = function(this1) {
	var table;
	var this2;
	this2 = new Uint8Array(256);
	table = this2;
	var multiplier = this1[0];
	var offset = this1[4] * 255;
	var value;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		value = Math.floor(i * multiplier + offset);
		if(value > 255) value = 255;
		if(value < 0) value = 0;
		table[i] = value;
	}
	return table;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__toFlashColorTransform = function(this1) {
	return null;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_alphaMultiplier = function(this1) {
	return this1[18];
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_alphaMultiplier = function(this1,value) {
	return this1[18] = value;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_alphaOffset = function(this1) {
	return this1[19] * 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_alphaOffset = function(this1,value) {
	return this1[19] = value / 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_blueMultiplier = function(this1) {
	return this1[12];
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_blueMultiplier = function(this1,value) {
	return this1[12] = value;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_blueOffset = function(this1) {
	return this1[14] * 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_blueOffset = function(this1,value) {
	return this1[14] = value / 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_color = function(this1) {
	return (this1[4] * 255 | 0) << 16 | (this1[9] * 255 | 0) << 8 | (this1[14] * 255 | 0);
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_color = function(this1,value) {
	this1[4] = (value >> 16 & 255) / 255;
	this1[9] = (value >> 8 & 255) / 255;
	this1[14] = (value & 255) / 255;
	this1[0] = 0;
	this1[6] = 0;
	this1[12] = 0;
	return lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_color(this1);
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_greenMultiplier = function(this1) {
	return this1[6];
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_greenMultiplier = function(this1,value) {
	return this1[6] = value;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_greenOffset = function(this1) {
	return this1[9] * 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_greenOffset = function(this1,value) {
	return this1[9] = value / 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_redMultiplier = function(this1) {
	return this1[0];
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_redMultiplier = function(this1,value) {
	return this1[0] = value;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_redOffset = function(this1) {
	return this1[4] * 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_redOffset = function(this1,value) {
	return this1[4] = value / 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get = function(this1,index) {
	return this1[index];
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set = function(this1,index,value) {
	return this1[index] = value;
};
var lime_math_Matrix3 = function(a,b,c,d,tx,ty) {
	if(ty == null) ty = 0;
	if(tx == null) tx = 0;
	if(d == null) d = 1;
	if(c == null) c = 0;
	if(b == null) b = 0;
	if(a == null) a = 1;
	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;
	this.tx = tx;
	this.ty = ty;
};
$hxClasses["lime.math.Matrix3"] = lime_math_Matrix3;
lime_math_Matrix3.__name__ = ["lime","math","Matrix3"];
lime_math_Matrix3.prototype = {
	clone: function() {
		return new lime_math_Matrix3(this.a,this.b,this.c,this.d,this.tx,this.ty);
	}
	,concat: function(m) {
		var a1 = this.a * m.a + this.b * m.c;
		this.b = this.a * m.b + this.b * m.d;
		this.a = a1;
		var c1 = this.c * m.a + this.d * m.c;
		this.d = this.c * m.b + this.d * m.d;
		this.c = c1;
		var tx1 = this.tx * m.a + this.ty * m.c + m.tx;
		this.ty = this.tx * m.b + this.ty * m.d + m.ty;
		this.tx = tx1;
	}
	,copyColumnFrom: function(column,vector4) {
		if(column > 2) throw new js__$Boot_HaxeError("Column " + column + " out of bounds (2)"); else if(column == 0) {
			this.a = vector4.x;
			this.c = vector4.y;
		} else if(column == 1) {
			this.b = vector4.x;
			this.d = vector4.y;
		} else {
			this.tx = vector4.x;
			this.ty = vector4.y;
		}
	}
	,copyColumnTo: function(column,vector4) {
		if(column > 2) throw new js__$Boot_HaxeError("Column " + column + " out of bounds (2)"); else if(column == 0) {
			vector4.x = this.a;
			vector4.y = this.c;
			vector4.z = 0;
		} else if(column == 1) {
			vector4.x = this.b;
			vector4.y = this.d;
			vector4.z = 0;
		} else {
			vector4.x = this.tx;
			vector4.y = this.ty;
			vector4.z = 1;
		}
	}
	,copyFrom: function(sourceMatrix3) {
		this.a = sourceMatrix3.a;
		this.b = sourceMatrix3.b;
		this.c = sourceMatrix3.c;
		this.d = sourceMatrix3.d;
		this.tx = sourceMatrix3.tx;
		this.ty = sourceMatrix3.ty;
	}
	,copyRowFrom: function(row,vector4) {
		if(row > 2) throw new js__$Boot_HaxeError("Row " + row + " out of bounds (2)"); else if(row == 0) {
			this.a = vector4.x;
			this.c = vector4.y;
		} else if(row == 1) {
			this.b = vector4.x;
			this.d = vector4.y;
		} else {
			this.tx = vector4.x;
			this.ty = vector4.y;
		}
	}
	,copyRowTo: function(row,vector4) {
		if(row > 2) throw new js__$Boot_HaxeError("Row " + row + " out of bounds (2)"); else if(row == 0) {
			vector4.x = this.a;
			vector4.y = this.b;
			vector4.z = this.tx;
		} else if(row == 1) {
			vector4.x = this.c;
			vector4.y = this.d;
			vector4.z = this.ty;
		} else {
			vector4.x = 0;
			vector4.y = 0;
			vector4.z = 1;
		}
	}
	,createBox: function(scaleX,scaleY,rotation,tx,ty) {
		if(ty == null) ty = 0;
		if(tx == null) tx = 0;
		if(rotation == null) rotation = 0;
		this.a = scaleX;
		this.d = scaleY;
		this.b = rotation;
		this.tx = tx;
		this.ty = ty;
	}
	,createGradientBox: function(width,height,rotation,tx,ty) {
		if(ty == null) ty = 0;
		if(tx == null) tx = 0;
		if(rotation == null) rotation = 0;
		this.a = width / 1638.4;
		this.d = height / 1638.4;
		if(rotation != 0) {
			var cos = Math.cos(rotation);
			var sin = Math.sin(rotation);
			this.b = sin * this.d;
			this.c = -sin * this.a;
			this.a *= cos;
			this.d *= cos;
		} else {
			this.b = 0;
			this.c = 0;
		}
		this.tx = tx + width / 2;
		this.ty = ty + height / 2;
	}
	,equals: function(Matrix3) {
		return Matrix3 != null && this.tx == Matrix3.tx && this.ty == Matrix3.ty && this.a == Matrix3.a && this.b == Matrix3.b && this.c == Matrix3.c && this.d == Matrix3.d;
	}
	,deltaTransformVector2: function(Vector2) {
		return new lime_math_Vector2(Vector2.x * this.a + Vector2.y * this.c,Vector2.x * this.b + Vector2.y * this.d);
	}
	,identity: function() {
		this.a = 1;
		this.b = 0;
		this.c = 0;
		this.d = 1;
		this.tx = 0;
		this.ty = 0;
	}
	,invert: function() {
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) {
			this.a = this.b = this.c = this.d = 0;
			this.tx = -this.tx;
			this.ty = -this.ty;
		} else {
			norm = 1.0 / norm;
			var a1 = this.d * norm;
			this.d = this.a * norm;
			this.a = a1;
			this.b *= -norm;
			this.c *= -norm;
			var tx1 = -this.a * this.tx - this.c * this.ty;
			this.ty = -this.b * this.tx - this.d * this.ty;
			this.tx = tx1;
		}
		return this;
	}
	,mult: function(m) {
		var result = new lime_math_Matrix3(this.a,this.b,this.c,this.d,this.tx,this.ty);
		result.concat(m);
		return result;
	}
	,rotate: function(theta) {
		var cos = Math.cos(theta);
		var sin = Math.sin(theta);
		var a1 = this.a * cos - this.b * sin;
		this.b = this.a * sin + this.b * cos;
		this.a = a1;
		var c1 = this.c * cos - this.d * sin;
		this.d = this.c * sin + this.d * cos;
		this.c = c1;
		var tx1 = this.tx * cos - this.ty * sin;
		this.ty = this.tx * sin + this.ty * cos;
		this.tx = tx1;
	}
	,scale: function(sx,sy) {
		this.a *= sx;
		this.b *= sy;
		this.c *= sx;
		this.d *= sy;
		this.tx *= sx;
		this.ty *= sy;
	}
	,setRotation: function(theta,scale) {
		if(scale == null) scale = 1;
		this.a = Math.cos(theta) * scale;
		this.c = Math.sin(theta) * scale;
		this.b = -this.c;
		this.d = this.a;
	}
	,setTo: function(a,b,c,d,tx,ty) {
		this.a = a;
		this.b = b;
		this.c = c;
		this.d = d;
		this.tx = tx;
		this.ty = ty;
	}
	,to3DString: function(roundPixels) {
		if(roundPixels == null) roundPixels = false;
		if(roundPixels) return "Matrix33d(" + this.a + ", " + this.b + ", " + "0, 0, " + this.c + ", " + this.d + ", " + "0, 0, 0, 0, 1, 0, " + (this.tx | 0) + ", " + (this.ty | 0) + ", 0, 1)"; else return "Matrix33d(" + this.a + ", " + this.b + ", " + "0, 0, " + this.c + ", " + this.d + ", " + "0, 0, 0, 0, 1, 0, " + this.tx + ", " + this.ty + ", 0, 1)";
	}
	,toMozString: function() {
		return "Matrix3(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + "px, " + this.ty + "px)";
	}
	,toString: function() {
		return "Matrix3(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + ", " + this.ty + ")";
	}
	,transformVector2: function(pos) {
		return new lime_math_Vector2(pos.x * this.a + pos.y * this.c + this.tx,pos.x * this.b + pos.y * this.d + this.ty);
	}
	,translate: function(dx,dy) {
		this.tx += dx;
		this.ty += dy;
	}
	,__cleanValues: function() {
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.tx = Math.round(this.tx * 10) / 10;
		this.ty = Math.round(this.ty * 10) / 10;
	}
	,__transformX: function(pos) {
		return pos.x * this.a + pos.y * this.c + this.tx;
	}
	,__transformY: function(pos) {
		return pos.x * this.b + pos.y * this.d + this.ty;
	}
	,__translateTransformed: function(pos) {
		this.tx = pos.x * this.a + pos.y * this.c + this.tx;
		this.ty = pos.x * this.b + pos.y * this.d + this.ty;
	}
	,__class__: lime_math_Matrix3
};
var lime_math__$Matrix4_Matrix4_$Impl_$ = {};
$hxClasses["lime.math._Matrix4.Matrix4_Impl_"] = lime_math__$Matrix4_Matrix4_$Impl_$;
lime_math__$Matrix4_Matrix4_$Impl_$.__name__ = ["lime","math","_Matrix4","Matrix4_Impl_"];
lime_math__$Matrix4_Matrix4_$Impl_$.__properties__ = {set_position:"set_position",get_position:"get_position",get_determinant:"get_determinant"}
lime_math__$Matrix4_Matrix4_$Impl_$._new = function(data) {
	var this1;
	if(data != null && data.length == 16) this1 = data; else {
		var array = lime_math__$Matrix4_Matrix4_$Impl_$.__identity;
		var this2;
		if(array != null) this2 = new Float32Array(array); else this2 = null;
		this1 = this2;
	}
	return this1;
};
lime_math__$Matrix4_Matrix4_$Impl_$.append = function(this1,lhs) {
	var m111 = this1[0];
	var m121 = this1[4];
	var m131 = this1[8];
	var m141 = this1[12];
	var m112 = this1[1];
	var m122 = this1[5];
	var m132 = this1[9];
	var m142 = this1[13];
	var m113 = this1[2];
	var m123 = this1[6];
	var m133 = this1[10];
	var m143 = this1[14];
	var m114 = this1[3];
	var m124 = this1[7];
	var m134 = this1[11];
	var m144 = this1[15];
	var m211 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,0);
	var m221 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,4);
	var m231 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,8);
	var m241 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,12);
	var m212 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,1);
	var m222 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,5);
	var m232 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,9);
	var m242 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,13);
	var m213 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,2);
	var m223 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,6);
	var m233 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,10);
	var m243 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,14);
	var m214 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,3);
	var m224 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,7);
	var m234 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,11);
	var m244 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,15);
	this1[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;
	this1[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;
	this1[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;
	this1[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;
	this1[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;
	this1[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;
	this1[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;
	this1[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;
	this1[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;
	this1[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;
	this1[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;
	this1[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;
	this1[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;
	this1[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;
	this1[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;
	this1[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;
};
lime_math__$Matrix4_Matrix4_$Impl_$.appendRotation = function(this1,degrees,axis,pivotPoint) {
	var m = lime_math__$Matrix4_Matrix4_$Impl_$.getAxisRotation(axis.x,axis.y,axis.z,degrees);
	if(pivotPoint != null) {
		var p = pivotPoint;
		lime_math__$Matrix4_Matrix4_$Impl_$.appendTranslation(m,p.x,p.y,p.z);
	}
	lime_math__$Matrix4_Matrix4_$Impl_$.append(this1,m);
};
lime_math__$Matrix4_Matrix4_$Impl_$.appendScale = function(this1,xScale,yScale,zScale) {
	lime_math__$Matrix4_Matrix4_$Impl_$.append(this1,lime_math__$Matrix4_Matrix4_$Impl_$._new((function($this) {
		var $r;
		var array = [xScale,0.0,0.0,0.0,0.0,yScale,0.0,0.0,0.0,0.0,zScale,0.0,0.0,0.0,0.0,1.0];
		var this2;
		if(array != null) this2 = new Float32Array(array); else this2 = null;
		$r = this2;
		return $r;
	}(this))));
};
lime_math__$Matrix4_Matrix4_$Impl_$.appendTranslation = function(this1,x,y,z) {
	this1[12] = this1[12] + x;
	this1[13] = this1[13] + y;
	this1[14] = this1[14] + z;
};
lime_math__$Matrix4_Matrix4_$Impl_$.clone = function(this1) {
	return lime_math__$Matrix4_Matrix4_$Impl_$._new((function($this) {
		var $r;
		var this2;
		if(this1 != null) this2 = new Float32Array(this1); else this2 = null;
		$r = this2;
		return $r;
	}(this)));
};
lime_math__$Matrix4_Matrix4_$Impl_$.copyColumnFrom = function(this1,column,vector) {
	switch(column) {
	case 0:
		this1[0] = vector.x;
		this1[1] = vector.y;
		this1[2] = vector.z;
		this1[3] = vector.w;
		break;
	case 1:
		this1[4] = vector.x;
		this1[5] = vector.y;
		this1[6] = vector.z;
		this1[7] = vector.w;
		break;
	case 2:
		this1[8] = vector.x;
		this1[9] = vector.y;
		this1[10] = vector.z;
		this1[11] = vector.w;
		break;
	case 3:
		this1[12] = vector.x;
		this1[13] = vector.y;
		this1[14] = vector.z;
		this1[15] = vector.w;
		break;
	default:
		throw new js__$Boot_HaxeError("Error, Column " + column + " out of bounds [0, ..., 3]");
	}
};
lime_math__$Matrix4_Matrix4_$Impl_$.copyColumnTo = function(this1,column,vector) {
	switch(column) {
	case 0:
		vector.x = this1[0];
		vector.y = this1[1];
		vector.z = this1[2];
		vector.w = this1[3];
		break;
	case 1:
		vector.x = this1[4];
		vector.y = this1[5];
		vector.z = this1[6];
		vector.w = this1[7];
		break;
	case 2:
		vector.x = this1[8];
		vector.y = this1[9];
		vector.z = this1[10];
		vector.w = this1[11];
		break;
	case 3:
		vector.x = this1[12];
		vector.y = this1[13];
		vector.z = this1[14];
		vector.w = this1[15];
		break;
	default:
		throw new js__$Boot_HaxeError("Error, Column " + column + " out of bounds [0, ..., 3]");
	}
};
lime_math__$Matrix4_Matrix4_$Impl_$.copyFrom = function(this1,other) {
	this1.set(other);
};
lime_math__$Matrix4_Matrix4_$Impl_$.copythisFrom = function(this1,array,index,transposeValues) {
	if(transposeValues == null) transposeValues = false;
	if(index == null) index = 0;
	if(transposeValues) lime_math__$Matrix4_Matrix4_$Impl_$.transpose(this1);
	var l = array.length - index;
	var _g = 0;
	while(_g < l) {
		var c = _g++;
		this1[c] = array[c + index];
	}
	if(transposeValues) lime_math__$Matrix4_Matrix4_$Impl_$.transpose(this1);
};
lime_math__$Matrix4_Matrix4_$Impl_$.copythisTo = function(this1,array,index,transposeValues) {
	if(transposeValues == null) transposeValues = false;
	if(index == null) index = 0;
	if(transposeValues) lime_math__$Matrix4_Matrix4_$Impl_$.transpose(this1);
	var l = this1.length;
	var _g = 0;
	while(_g < l) {
		var c = _g++;
		array[c + index] = this1[c];
	}
	if(transposeValues) lime_math__$Matrix4_Matrix4_$Impl_$.transpose(this1);
};
lime_math__$Matrix4_Matrix4_$Impl_$.copyRowFrom = function(this1,row,vector) {
	switch(row) {
	case 0:
		this1[0] = vector.x;
		this1[4] = vector.y;
		this1[8] = vector.z;
		this1[12] = vector.w;
		break;
	case 1:
		this1[1] = vector.x;
		this1[5] = vector.y;
		this1[9] = vector.z;
		this1[13] = vector.w;
		break;
	case 2:
		this1[2] = vector.x;
		this1[6] = vector.y;
		this1[10] = vector.z;
		this1[14] = vector.w;
		break;
	case 3:
		this1[3] = vector.x;
		this1[7] = vector.y;
		this1[11] = vector.z;
		this1[15] = vector.w;
		break;
	default:
		throw new js__$Boot_HaxeError("Error, Row " + Std.string(_$UInt_UInt_$Impl_$.toFloat(row)) + " out of bounds [0, ..., 3]");
	}
};
lime_math__$Matrix4_Matrix4_$Impl_$.create2D = function(x,y,scale,rotation) {
	if(rotation == null) rotation = 0;
	if(scale == null) scale = 1;
	var theta = rotation * Math.PI / 180.0;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	return lime_math__$Matrix4_Matrix4_$Impl_$._new((function($this) {
		var $r;
		var array = [c * scale,-s * scale,0,0,s * scale,c * scale,0,0,0,0,1,0,x,y,0,1];
		var this1;
		if(array != null) this1 = new Float32Array(array); else this1 = null;
		$r = this1;
		return $r;
	}(this)));
};
lime_math__$Matrix4_Matrix4_$Impl_$.createABCD = function(a,b,c,d,tx,ty) {
	return lime_math__$Matrix4_Matrix4_$Impl_$._new((function($this) {
		var $r;
		var array = [a,b,0,0,c,d,0,0,0,0,1,0,tx,ty,0,1];
		var this1;
		if(array != null) this1 = new Float32Array(array); else this1 = null;
		$r = this1;
		return $r;
	}(this)));
};
lime_math__$Matrix4_Matrix4_$Impl_$.createOrtho = function(x0,x1,y0,y1,zNear,zFar) {
	var sx = 1.0 / (x1 - x0);
	var sy = 1.0 / (y1 - y0);
	var sz = 1.0 / (zFar - zNear);
	return lime_math__$Matrix4_Matrix4_$Impl_$._new((function($this) {
		var $r;
		var array = [2.0 * sx,0,0,0,0,2.0 * sy,0,0,0,0,-2. * sz,0,-(x0 + x1) * sx,-(y0 + y1) * sy,-(zNear + zFar) * sz,1];
		var this1;
		if(array != null) this1 = new Float32Array(array); else this1 = null;
		$r = this1;
		return $r;
	}(this)));
};
lime_math__$Matrix4_Matrix4_$Impl_$.copyRowTo = function(this1,row,vector) {
	switch(row) {
	case 0:
		vector.x = this1[0];
		vector.y = this1[4];
		vector.z = this1[8];
		vector.w = this1[12];
		break;
	case 1:
		vector.x = this1[1];
		vector.y = this1[5];
		vector.z = this1[9];
		vector.w = this1[13];
		break;
	case 2:
		vector.x = this1[2];
		vector.y = this1[6];
		vector.z = this1[10];
		vector.w = this1[14];
		break;
	case 3:
		vector.x = this1[3];
		vector.y = this1[7];
		vector.z = this1[11];
		vector.w = this1[15];
		break;
	default:
		throw new js__$Boot_HaxeError("Error, Row " + row + " out of bounds [0, ..., 3]");
	}
};
lime_math__$Matrix4_Matrix4_$Impl_$.copyToMatrix4 = function(this1,other) {
	(js_Boot.__cast(other , Float32Array)).set(this1);
};
lime_math__$Matrix4_Matrix4_$Impl_$.deltaTransformVector = function(this1,v) {
	var x = v.x;
	var y = v.y;
	var z = v.z;
	return new lime_math_Vector4(x * this1[0] + y * this1[4] + z * this1[8] + this1[3],x * this1[1] + y * this1[5] + z * this1[9] + this1[7],x * this1[2] + y * this1[6] + z * this1[10] + this1[11],0);
};
lime_math__$Matrix4_Matrix4_$Impl_$.identity = function(this1) {
	this1[0] = 1;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	this1[4] = 0;
	this1[5] = 1;
	this1[6] = 0;
	this1[7] = 0;
	this1[8] = 0;
	this1[9] = 0;
	this1[10] = 1;
	this1[11] = 0;
	this1[12] = 0;
	this1[13] = 0;
	this1[14] = 0;
	this1[15] = 1;
};
lime_math__$Matrix4_Matrix4_$Impl_$.interpolate = function(thisMat,toMat,percent) {
	var m = lime_math__$Matrix4_Matrix4_$Impl_$._new();
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		lime_math__$Matrix4_Matrix4_$Impl_$.set(m,i,lime_math__$Matrix4_Matrix4_$Impl_$.get(thisMat,i) + (lime_math__$Matrix4_Matrix4_$Impl_$.get(toMat,i) - lime_math__$Matrix4_Matrix4_$Impl_$.get(thisMat,i)) * percent);
	}
	return m;
};
lime_math__$Matrix4_Matrix4_$Impl_$.interpolateTo = function(this1,toMat,percent) {
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		var val = this1[i] + (lime_math__$Matrix4_Matrix4_$Impl_$.get(toMat,i) - this1[i]) * percent;
		this1[i] = val;
	}
};
lime_math__$Matrix4_Matrix4_$Impl_$.invert = function(this1) {
	var d = lime_math__$Matrix4_Matrix4_$Impl_$.get_determinant(this1);
	var invertable = Math.abs(d) > 0.00000000001;
	if(invertable) {
		d = 1 / d;
		var m11 = this1[0];
		var m21 = this1[4];
		var m31 = this1[8];
		var m41 = this1[12];
		var m12 = this1[1];
		var m22 = this1[5];
		var m32 = this1[9];
		var m42 = this1[13];
		var m13 = this1[2];
		var m23 = this1[6];
		var m33 = this1[10];
		var m43 = this1[14];
		var m14 = this1[3];
		var m24 = this1[7];
		var m34 = this1[11];
		var m44 = this1[15];
		this1[0] = d * (m22 * (m33 * m44 - m43 * m34) - m32 * (m23 * m44 - m43 * m24) + m42 * (m23 * m34 - m33 * m24));
		this1[1] = -d * (m12 * (m33 * m44 - m43 * m34) - m32 * (m13 * m44 - m43 * m14) + m42 * (m13 * m34 - m33 * m14));
		this1[2] = d * (m12 * (m23 * m44 - m43 * m24) - m22 * (m13 * m44 - m43 * m14) + m42 * (m13 * m24 - m23 * m14));
		this1[3] = -d * (m12 * (m23 * m34 - m33 * m24) - m22 * (m13 * m34 - m33 * m14) + m32 * (m13 * m24 - m23 * m14));
		this1[4] = -d * (m21 * (m33 * m44 - m43 * m34) - m31 * (m23 * m44 - m43 * m24) + m41 * (m23 * m34 - m33 * m24));
		this1[5] = d * (m11 * (m33 * m44 - m43 * m34) - m31 * (m13 * m44 - m43 * m14) + m41 * (m13 * m34 - m33 * m14));
		this1[6] = -d * (m11 * (m23 * m44 - m43 * m24) - m21 * (m13 * m44 - m43 * m14) + m41 * (m13 * m24 - m23 * m14));
		this1[7] = d * (m11 * (m23 * m34 - m33 * m24) - m21 * (m13 * m34 - m33 * m14) + m31 * (m13 * m24 - m23 * m14));
		this1[8] = d * (m21 * (m32 * m44 - m42 * m34) - m31 * (m22 * m44 - m42 * m24) + m41 * (m22 * m34 - m32 * m24));
		this1[9] = -d * (m11 * (m32 * m44 - m42 * m34) - m31 * (m12 * m44 - m42 * m14) + m41 * (m12 * m34 - m32 * m14));
		this1[10] = d * (m11 * (m22 * m44 - m42 * m24) - m21 * (m12 * m44 - m42 * m14) + m41 * (m12 * m24 - m22 * m14));
		this1[11] = -d * (m11 * (m22 * m34 - m32 * m24) - m21 * (m12 * m34 - m32 * m14) + m31 * (m12 * m24 - m22 * m14));
		this1[12] = -d * (m21 * (m32 * m43 - m42 * m33) - m31 * (m22 * m43 - m42 * m23) + m41 * (m22 * m33 - m32 * m23));
		this1[13] = d * (m11 * (m32 * m43 - m42 * m33) - m31 * (m12 * m43 - m42 * m13) + m41 * (m12 * m33 - m32 * m13));
		this1[14] = -d * (m11 * (m22 * m43 - m42 * m23) - m21 * (m12 * m43 - m42 * m13) + m41 * (m12 * m23 - m22 * m13));
		this1[15] = d * (m11 * (m22 * m33 - m32 * m23) - m21 * (m12 * m33 - m32 * m13) + m31 * (m12 * m23 - m22 * m13));
	}
	return invertable;
};
lime_math__$Matrix4_Matrix4_$Impl_$.pointAt = function(this1,pos,at,up) {
	if(at == null) at = new lime_math_Vector4(0,0,-1);
	if(up == null) up = new lime_math_Vector4(0,-1,0);
	var dir = new lime_math_Vector4(at.x - pos.x,at.y - pos.y,at.z - pos.z);
	var vup = new lime_math_Vector4(up.x,up.y,up.z,up.w);
	var right;
	dir.normalize();
	vup.normalize();
	var dir2 = new lime_math_Vector4(dir.x,dir.y,dir.z,dir.w);
	dir2.scaleBy(vup.x * dir.x + vup.y * dir.y + vup.z * dir.z);
	vup = new lime_math_Vector4(vup.x - dir2.x,vup.y - dir2.y,vup.z - dir2.z);
	if(Math.sqrt(vup.x * vup.x + vup.y * vup.y + vup.z * vup.z) > 0) vup.normalize(); else if(dir.x != 0) vup = new lime_math_Vector4(-dir.y,dir.x,0); else vup = new lime_math_Vector4(1,0,0);
	right = new lime_math_Vector4(vup.y * dir.z - vup.z * dir.y,vup.z * dir.x - vup.x * dir.z,vup.x * dir.y - vup.y * dir.x,1);
	right.normalize();
	this1[0] = right.x;
	this1[4] = right.y;
	this1[8] = right.z;
	this1[12] = 0.0;
	this1[1] = vup.x;
	this1[5] = vup.y;
	this1[9] = vup.z;
	this1[13] = 0.0;
	this1[2] = dir.x;
	this1[6] = dir.y;
	this1[10] = dir.z;
	this1[14] = 0.0;
	this1[3] = pos.x;
	this1[7] = pos.y;
	this1[11] = pos.z;
	this1[15] = 1.0;
};
lime_math__$Matrix4_Matrix4_$Impl_$.prepend = function(this1,rhs) {
	var m111 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,0);
	var m121 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,4);
	var m131 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,8);
	var m141 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,12);
	var m112 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,1);
	var m122 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,5);
	var m132 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,9);
	var m142 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,13);
	var m113 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,2);
	var m123 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,6);
	var m133 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,10);
	var m143 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,14);
	var m114 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,3);
	var m124 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,7);
	var m134 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,11);
	var m144 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,15);
	var m211 = this1[0];
	var m221 = this1[4];
	var m231 = this1[8];
	var m241 = this1[12];
	var m212 = this1[1];
	var m222 = this1[5];
	var m232 = this1[9];
	var m242 = this1[13];
	var m213 = this1[2];
	var m223 = this1[6];
	var m233 = this1[10];
	var m243 = this1[14];
	var m214 = this1[3];
	var m224 = this1[7];
	var m234 = this1[11];
	var m244 = this1[15];
	this1[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;
	this1[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;
	this1[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;
	this1[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;
	this1[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;
	this1[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;
	this1[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;
	this1[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;
	this1[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;
	this1[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;
	this1[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;
	this1[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;
	this1[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;
	this1[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;
	this1[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;
	this1[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;
};
lime_math__$Matrix4_Matrix4_$Impl_$.prependRotation = function(this1,degrees,axis,pivotPoint) {
	var m = lime_math__$Matrix4_Matrix4_$Impl_$.getAxisRotation(axis.x,axis.y,axis.z,degrees);
	if(pivotPoint != null) {
		var p = pivotPoint;
		lime_math__$Matrix4_Matrix4_$Impl_$.appendTranslation(m,p.x,p.y,p.z);
	}
	lime_math__$Matrix4_Matrix4_$Impl_$.prepend(this1,m);
};
lime_math__$Matrix4_Matrix4_$Impl_$.prependScale = function(this1,xScale,yScale,zScale) {
	lime_math__$Matrix4_Matrix4_$Impl_$.prepend(this1,lime_math__$Matrix4_Matrix4_$Impl_$._new((function($this) {
		var $r;
		var array = [xScale,0.0,0.0,0.0,0.0,yScale,0.0,0.0,0.0,0.0,zScale,0.0,0.0,0.0,0.0,1.0];
		var this2;
		if(array != null) this2 = new Float32Array(array); else this2 = null;
		$r = this2;
		return $r;
	}(this))));
};
lime_math__$Matrix4_Matrix4_$Impl_$.prependTranslation = function(this1,x,y,z) {
	var m = lime_math__$Matrix4_Matrix4_$Impl_$._new();
	lime_math__$Matrix4_Matrix4_$Impl_$.set_position(m,new lime_math_Vector4(x,y,z));
	lime_math__$Matrix4_Matrix4_$Impl_$.prepend(this1,m);
};
lime_math__$Matrix4_Matrix4_$Impl_$.transformVector = function(this1,v) {
	var x = v.x;
	var y = v.y;
	var z = v.z;
	return new lime_math_Vector4(x * this1[0] + y * this1[4] + z * this1[8] + this1[12],x * this1[1] + y * this1[5] + z * this1[9] + this1[13],x * this1[2] + y * this1[6] + z * this1[10] + this1[14],x * this1[3] + y * this1[7] + z * this1[11] + this1[15]);
};
lime_math__$Matrix4_Matrix4_$Impl_$.transformVectors = function(this1,ain,aout) {
	var i = 0;
	while(i + 3 <= ain.length) {
		var x = ain[i];
		var y = ain[i + 1];
		var z = ain[i + 2];
		aout[i] = x * this1[0] + y * this1[4] + z * this1[8] + this1[12];
		aout[i + 1] = x * this1[1] + y * this1[5] + z * this1[9] + this1[13];
		aout[i + 2] = x * this1[2] + y * this1[6] + z * this1[10] + this1[14];
		i += 3;
	}
};
lime_math__$Matrix4_Matrix4_$Impl_$.transpose = function(this1) {
	var othis;
	var this2;
	if(this1 != null) this2 = new Float32Array(this1); else this2 = null;
	othis = this2;
	this1[1] = othis[4];
	this1[2] = othis[8];
	this1[3] = othis[12];
	this1[4] = othis[1];
	this1[6] = othis[9];
	this1[7] = othis[13];
	this1[8] = othis[2];
	this1[9] = othis[6];
	this1[11] = othis[14];
	this1[12] = othis[3];
	this1[13] = othis[7];
	this1[14] = othis[11];
};
lime_math__$Matrix4_Matrix4_$Impl_$.getAxisRotation = function(x,y,z,degrees) {
	var m = lime_math__$Matrix4_Matrix4_$Impl_$._new();
	var a1 = new lime_math_Vector4(x,y,z);
	var rad = -degrees * (Math.PI / 180);
	var c = Math.cos(rad);
	var s = Math.sin(rad);
	var t = 1.0 - c;
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,0,c + a1.x * a1.x * t);
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,5,c + a1.y * a1.y * t);
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,10,c + a1.z * a1.z * t);
	var tmp1 = a1.x * a1.y * t;
	var tmp2 = a1.z * s;
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,4,tmp1 + tmp2);
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,1,tmp1 - tmp2);
	tmp1 = a1.x * a1.z * t;
	tmp2 = a1.y * s;
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,8,tmp1 - tmp2);
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,2,tmp1 + tmp2);
	tmp1 = a1.y * a1.z * t;
	tmp2 = a1.x * s;
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,9,tmp1 + tmp2);
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,6,tmp1 - tmp2);
	return m;
};
lime_math__$Matrix4_Matrix4_$Impl_$.get_determinant = function(this1) {
	return (this1[0] * this1[5] - this1[4] * this1[1]) * (this1[10] * this1[15] - this1[14] * this1[11]) - (this1[0] * this1[9] - this1[8] * this1[1]) * (this1[6] * this1[15] - this1[14] * this1[7]) + (this1[0] * this1[13] - this1[12] * this1[1]) * (this1[6] * this1[11] - this1[10] * this1[7]) + (this1[4] * this1[9] - this1[8] * this1[5]) * (this1[2] * this1[15] - this1[14] * this1[3]) - (this1[4] * this1[13] - this1[12] * this1[5]) * (this1[2] * this1[11] - this1[10] * this1[3]) + (this1[8] * this1[13] - this1[12] * this1[9]) * (this1[2] * this1[7] - this1[6] * this1[3]);
};
lime_math__$Matrix4_Matrix4_$Impl_$.get_position = function(this1) {
	return new lime_math_Vector4(this1[12],this1[13],this1[14]);
};
lime_math__$Matrix4_Matrix4_$Impl_$.set_position = function(this1,val) {
	this1[12] = val.x;
	this1[13] = val.y;
	this1[14] = val.z;
	return val;
};
lime_math__$Matrix4_Matrix4_$Impl_$.get = function(this1,index) {
	return this1[index];
};
lime_math__$Matrix4_Matrix4_$Impl_$.set = function(this1,index,value) {
	this1[index] = value;
	return value;
};
var lime_math_Rectangle = function(x,y,width,height) {
	if(height == null) height = 0;
	if(width == null) width = 0;
	if(y == null) y = 0;
	if(x == null) x = 0;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
};
$hxClasses["lime.math.Rectangle"] = lime_math_Rectangle;
lime_math_Rectangle.__name__ = ["lime","math","Rectangle"];
lime_math_Rectangle.prototype = {
	clone: function() {
		return new lime_math_Rectangle(this.x,this.y,this.width,this.height);
	}
	,contains: function(x,y) {
		return x >= this.x && y >= this.y && x < this.get_right() && y < this.get_bottom();
	}
	,containsPoint: function(point) {
		return this.contains(point.x,point.y);
	}
	,containsRect: function(rect) {
		if(rect.width <= 0 || rect.height <= 0) return rect.x > this.x && rect.y > this.y && rect.get_right() < this.get_right() && rect.get_bottom() < this.get_bottom(); else return rect.x >= this.x && rect.y >= this.y && rect.get_right() <= this.get_right() && rect.get_bottom() <= this.get_bottom();
	}
	,copyFrom: function(sourceRect) {
		this.x = sourceRect.x;
		this.y = sourceRect.y;
		this.width = sourceRect.width;
		this.height = sourceRect.height;
	}
	,equals: function(toCompare) {
		return toCompare != null && this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height;
	}
	,inflate: function(dx,dy) {
		this.x -= dx;
		this.width += dx * 2;
		this.y -= dy;
		this.height += dy * 2;
	}
	,inflatePoint: function(point) {
		this.inflate(point.x,point.y);
	}
	,intersection: function(toIntersect) {
		var x0;
		if(this.x < toIntersect.x) x0 = toIntersect.x; else x0 = this.x;
		var x1;
		if(this.get_right() > toIntersect.get_right()) x1 = toIntersect.get_right(); else x1 = this.get_right();
		if(x1 <= x0) return new lime_math_Rectangle();
		var y0;
		if(this.y < toIntersect.y) y0 = toIntersect.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() > toIntersect.get_bottom()) y1 = toIntersect.get_bottom(); else y1 = this.get_bottom();
		if(y1 <= y0) return new lime_math_Rectangle();
		return new lime_math_Rectangle(x0,y0,x1 - x0,y1 - y0);
	}
	,intersects: function(toIntersect) {
		var x0;
		if(this.x < toIntersect.x) x0 = toIntersect.x; else x0 = this.x;
		var x1;
		if(this.get_right() > toIntersect.get_right()) x1 = toIntersect.get_right(); else x1 = this.get_right();
		if(x1 <= x0) return false;
		var y0;
		if(this.y < toIntersect.y) y0 = toIntersect.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() > toIntersect.get_bottom()) y1 = toIntersect.get_bottom(); else y1 = this.get_bottom();
		return y1 > y0;
	}
	,isEmpty: function() {
		return this.width <= 0 || this.height <= 0;
	}
	,offset: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,offsetPoint: function(point) {
		this.x += point.x;
		this.y += point.y;
	}
	,setEmpty: function() {
		this.x = this.y = this.width = this.height = 0;
	}
	,setTo: function(xa,ya,widtha,heighta) {
		this.x = xa;
		this.y = ya;
		this.width = widtha;
		this.height = heighta;
	}
	,transform: function(m) {
		var tx0 = m.a * this.x + m.c * this.y;
		var tx1 = tx0;
		var ty0 = m.b * this.x + m.d * this.y;
		var ty1 = ty0;
		var tx = m.a * (this.x + this.width) + m.c * this.y;
		var ty = m.b * (this.x + this.width) + m.d * this.y;
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		tx = m.a * (this.x + this.width) + m.c * (this.y + this.height);
		ty = m.b * (this.x + this.width) + m.d * (this.y + this.height);
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		tx = m.a * this.x + m.c * (this.y + this.height);
		ty = m.b * this.x + m.d * (this.y + this.height);
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		return new lime_math_Rectangle(tx0 + m.tx,ty0 + m.ty,tx1 - tx0,ty1 - ty0);
	}
	,union: function(toUnion) {
		if(this.width == 0 || this.height == 0) return toUnion.clone(); else if(toUnion.width == 0 || toUnion.height == 0) return this.clone();
		var x0;
		if(this.x > toUnion.x) x0 = toUnion.x; else x0 = this.x;
		var x1;
		if(this.get_right() < toUnion.get_right()) x1 = toUnion.get_right(); else x1 = this.get_right();
		var y0;
		if(this.y > toUnion.y) y0 = toUnion.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() < toUnion.get_bottom()) y1 = toUnion.get_bottom(); else y1 = this.get_bottom();
		return new lime_math_Rectangle(x0,y0,x1 - x0,y1 - y0);
	}
	,__contract: function(x,y,width,height) {
		if(this.width == 0 && this.height == 0) return;
		if(this.x < x) this.x = x;
		if(this.y < y) this.y = y;
		if(this.get_right() > x + width) this.width = x + width - this.x;
		if(this.get_bottom() > y + height) this.height = y + height - this.y;
	}
	,__expand: function(x,y,width,height) {
		if(this.width == 0 && this.height == 0) {
			this.x = x;
			this.y = y;
			this.width = width;
			this.height = height;
			return;
		}
		var cacheRight = this.get_right();
		var cacheBottom = this.get_bottom();
		if(this.x > x) this.x = x;
		if(this.y > y) this.y = y;
		if(cacheRight < x + width) this.width = x + width - this.x;
		if(cacheBottom < y + height) this.height = y + height - this.y;
	}
	,__toFlashRectangle: function() {
		return null;
	}
	,get_bottom: function() {
		return this.y + this.height;
	}
	,set_bottom: function(b) {
		this.height = b - this.y;
		return b;
	}
	,get_bottomRight: function() {
		return new lime_math_Vector2(this.x + this.width,this.y + this.height);
	}
	,set_bottomRight: function(p) {
		this.width = p.x - this.x;
		this.height = p.y - this.y;
		return p.clone();
	}
	,get_left: function() {
		return this.x;
	}
	,set_left: function(l) {
		this.width -= l - this.x;
		this.x = l;
		return l;
	}
	,get_right: function() {
		return this.x + this.width;
	}
	,set_right: function(r) {
		this.width = r - this.x;
		return r;
	}
	,get_size: function() {
		return new lime_math_Vector2(this.width,this.height);
	}
	,set_size: function(p) {
		this.width = p.x;
		this.height = p.y;
		return p.clone();
	}
	,get_top: function() {
		return this.y;
	}
	,set_top: function(t) {
		this.height -= t - this.y;
		this.y = t;
		return t;
	}
	,get_topLeft: function() {
		return new lime_math_Vector2(this.x,this.y);
	}
	,set_topLeft: function(p) {
		this.x = p.x;
		this.y = p.y;
		return p.clone();
	}
	,__class__: lime_math_Rectangle
	,__properties__: {set_topLeft:"set_topLeft",get_topLeft:"get_topLeft",set_top:"set_top",get_top:"get_top",set_size:"set_size",get_size:"get_size",set_right:"set_right",get_right:"get_right",set_left:"set_left",get_left:"get_left",set_bottomRight:"set_bottomRight",get_bottomRight:"get_bottomRight",set_bottom:"set_bottom",get_bottom:"get_bottom"}
};
var lime_math_Vector2 = function(x,y) {
	if(y == null) y = 0;
	if(x == null) x = 0;
	this.x = x;
	this.y = y;
};
$hxClasses["lime.math.Vector2"] = lime_math_Vector2;
lime_math_Vector2.__name__ = ["lime","math","Vector2"];
lime_math_Vector2.distance = function(pt1,pt2) {
	var dx = pt1.x - pt2.x;
	var dy = pt1.y - pt2.y;
	return Math.sqrt(dx * dx + dy * dy);
};
lime_math_Vector2.interpolate = function(pt1,pt2,f) {
	return new lime_math_Vector2(pt2.x + f * (pt1.x - pt2.x),pt2.y + f * (pt1.y - pt2.y));
};
lime_math_Vector2.polar = function(len,angle) {
	return new lime_math_Vector2(len * Math.cos(angle),len * Math.sin(angle));
};
lime_math_Vector2.prototype = {
	add: function(v) {
		return new lime_math_Vector2(v.x + this.x,v.y + this.y);
	}
	,clone: function() {
		return new lime_math_Vector2(this.x,this.y);
	}
	,equals: function(toCompare) {
		return toCompare != null && toCompare.x == this.x && toCompare.y == this.y;
	}
	,normalize: function(thickness) {
		if(this.x == 0 && this.y == 0) return; else {
			var norm = thickness / Math.sqrt(this.x * this.x + this.y * this.y);
			this.x *= norm;
			this.y *= norm;
		}
	}
	,offset: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,setTo: function(xa,ya) {
		this.x = xa;
		this.y = ya;
	}
	,subtract: function(v) {
		return new lime_math_Vector2(this.x - v.x,this.y - v.y);
	}
	,__toFlashPoint: function() {
		return null;
	}
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,__class__: lime_math_Vector2
	,__properties__: {get_length:"get_length"}
};
var lime_math_Vector4 = function(x,y,z,w) {
	if(w == null) w = 0.;
	if(z == null) z = 0.;
	if(y == null) y = 0.;
	if(x == null) x = 0.;
	this.w = w;
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["lime.math.Vector4"] = lime_math_Vector4;
lime_math_Vector4.__name__ = ["lime","math","Vector4"];
lime_math_Vector4.__properties__ = {get_Z_AXIS:"get_Z_AXIS",get_Y_AXIS:"get_Y_AXIS",get_X_AXIS:"get_X_AXIS"}
lime_math_Vector4.X_AXIS = null;
lime_math_Vector4.Y_AXIS = null;
lime_math_Vector4.Z_AXIS = null;
lime_math_Vector4.angleBetween = function(a,b) {
	var a0 = new lime_math_Vector4(a.x,a.y,a.z,a.w);
	a0.normalize();
	var b0 = new lime_math_Vector4(b.x,b.y,b.z,b.w);
	b0.normalize();
	return Math.acos(a0.x * b0.x + a0.y * b0.y + a0.z * b0.z);
};
lime_math_Vector4.distance = function(pt1,pt2) {
	var x = pt2.x - pt1.x;
	var y = pt2.y - pt1.y;
	var z = pt2.z - pt1.z;
	return Math.sqrt(x * x + y * y + z * z);
};
lime_math_Vector4.get_X_AXIS = function() {
	return new lime_math_Vector4(1,0,0);
};
lime_math_Vector4.get_Y_AXIS = function() {
	return new lime_math_Vector4(0,1,0);
};
lime_math_Vector4.get_Z_AXIS = function() {
	return new lime_math_Vector4(0,0,1);
};
lime_math_Vector4.prototype = {
	add: function(a) {
		return new lime_math_Vector4(this.x + a.x,this.y + a.y,this.z + a.z);
	}
	,clone: function() {
		return new lime_math_Vector4(this.x,this.y,this.z,this.w);
	}
	,copyFrom: function(sourceVector4) {
		this.x = sourceVector4.x;
		this.y = sourceVector4.y;
		this.z = sourceVector4.z;
	}
	,crossProduct: function(a) {
		return new lime_math_Vector4(this.y * a.z - this.z * a.y,this.z * a.x - this.x * a.z,this.x * a.y - this.y * a.x,1);
	}
	,decrementBy: function(a) {
		this.x -= a.x;
		this.y -= a.y;
		this.z -= a.z;
	}
	,dotProduct: function(a) {
		return this.x * a.x + this.y * a.y + this.z * a.z;
	}
	,equals: function(toCompare,allFour) {
		if(allFour == null) allFour = false;
		return this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w);
	}
	,incrementBy: function(a) {
		this.x += a.x;
		this.y += a.y;
		this.z += a.z;
	}
	,nearEquals: function(toCompare,tolerance,allFour) {
		if(allFour == null) allFour = false;
		return Math.abs(this.x - toCompare.x) < tolerance && Math.abs(this.y - toCompare.y) < tolerance && Math.abs(this.z - toCompare.z) < tolerance && (!allFour || Math.abs(this.w - toCompare.w) < tolerance);
	}
	,negate: function() {
		this.x *= -1;
		this.y *= -1;
		this.z *= -1;
	}
	,normalize: function() {
		var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(l != 0) {
			this.x /= l;
			this.y /= l;
			this.z /= l;
		}
		return l;
	}
	,project: function() {
		this.x /= this.w;
		this.y /= this.w;
		this.z /= this.w;
	}
	,scaleBy: function(s) {
		this.x *= s;
		this.y *= s;
		this.z *= s;
	}
	,setTo: function(xa,ya,za) {
		this.x = xa;
		this.y = ya;
		this.z = za;
	}
	,subtract: function(a) {
		return new lime_math_Vector4(this.x - a.x,this.y - a.y,this.z - a.z);
	}
	,toString: function() {
		return "Vector4(" + this.x + ", " + this.y + ", " + this.z + ")";
	}
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,get_lengthSquared: function() {
		return this.x * this.x + this.y * this.y + this.z * this.z;
	}
	,__class__: lime_math_Vector4
	,__properties__: {get_lengthSquared:"get_lengthSquared",get_length:"get_length"}
};
var lime_math_color__$ARGB_ARGB_$Impl_$ = {};
$hxClasses["lime.math.color._ARGB.ARGB_Impl_"] = lime_math_color__$ARGB_ARGB_$Impl_$;
lime_math_color__$ARGB_ARGB_$Impl_$.__name__ = ["lime","math","color","_ARGB","ARGB_Impl_"];
lime_math_color__$ARGB_ARGB_$Impl_$.__properties__ = {set_r:"set_r",get_r:"get_r",set_g:"set_g",get_g:"get_g",set_b:"set_b",get_b:"get_b",set_a:"set_a",get_a:"get_a"}
lime_math_color__$ARGB_ARGB_$Impl_$.a16 = null;
lime_math_color__$ARGB_ARGB_$Impl_$.unmult = null;
lime_math_color__$ARGB_ARGB_$Impl_$._new = function(argb) {
	if(argb == null) argb = 0;
	return argb;
};
lime_math_color__$ARGB_ARGB_$Impl_$.create = function(a,r,g,b) {
	var argb = 0;
	argb = (a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
	return argb;
};
lime_math_color__$ARGB_ARGB_$Impl_$.multiplyAlpha = function(this1) {
	if((this1 >> 24 & 255) == 0) this1 = 0; else if((this1 >> 24 & 255) != 255) {
		lime_math_color__$ARGB_ARGB_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[this1 >> 24 & 255];
		this1 = (this1 >> 24 & 255 & 255) << 24 | ((this1 >> 16 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.a16 >> 16 & 255) << 16 | ((this1 >> 8 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.a16 >> 16 & 255) << 8 | (this1 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.a16 >> 16 & 255;
	}
};
lime_math_color__$ARGB_ARGB_$Impl_$.readUInt8 = function(this1,data,offset,format,premultiplied) {
	if(premultiplied == null) premultiplied = false;
	if(format == null) format = 0;
	switch(format) {
	case 2:
		this1 = (data[offset + 1] & 255) << 24 | (data[offset] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset + 2] & 255;
		break;
	case 0:
		this1 = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
		break;
	case 1:
		this1 = (data[offset + 2] & 255) << 24 | (data[offset + 3] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 1] & 255;
		break;
	}
	if(premultiplied) {
		if((this1 >> 24 & 255) != 0 && (this1 >> 24 & 255) != 255) {
			lime_math_color__$ARGB_ARGB_$Impl_$.unmult = 255.0 / (this1 >> 24 & 255);
			var r;
			var idx = Math.floor((this1 >> 16 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.floor((this1 >> 8 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var b;
			var idx2 = Math.floor((this1 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			this1 = (this1 >> 24 & 255 & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
		}
	}
};
lime_math_color__$ARGB_ARGB_$Impl_$.set = function(this1,a,r,g,b) {
	this1 = (a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
};
lime_math_color__$ARGB_ARGB_$Impl_$.unmultiplyAlpha = function(this1) {
	if((this1 >> 24 & 255) != 0 && (this1 >> 24 & 255) != 255) {
		lime_math_color__$ARGB_ARGB_$Impl_$.unmult = 255.0 / (this1 >> 24 & 255);
		var r;
		var idx = Math.floor((this1 >> 16 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.unmult);
		r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
		var g;
		var idx1 = Math.floor((this1 >> 8 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.unmult);
		g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
		var b;
		var idx2 = Math.floor((this1 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.unmult);
		b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
		this1 = (this1 >> 24 & 255 & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
	}
};
lime_math_color__$ARGB_ARGB_$Impl_$.writeUInt8 = function(this1,data,offset,format,premultiplied) {
	if(premultiplied == null) premultiplied = false;
	if(format == null) format = 0;
	if(premultiplied) {
		if((this1 >> 24 & 255) == 0) this1 = 0; else if((this1 >> 24 & 255) != 255) {
			lime_math_color__$ARGB_ARGB_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[this1 >> 24 & 255];
			this1 = (this1 >> 24 & 255 & 255) << 24 | ((this1 >> 16 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.a16 >> 16 & 255) << 16 | ((this1 >> 8 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.a16 >> 16 & 255) << 8 | (this1 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.a16 >> 16 & 255;
		}
	}
	switch(format) {
	case 2:
		data[offset] = this1 & 255;
		data[offset + 1] = this1 >> 8 & 255;
		data[offset + 2] = this1 >> 16 & 255;
		data[offset + 3] = this1 >> 24 & 255;
		break;
	case 0:
		data[offset] = this1 >> 16 & 255;
		data[offset + 1] = this1 >> 8 & 255;
		data[offset + 2] = this1 & 255;
		data[offset + 3] = this1 >> 24 & 255;
		break;
	case 1:
		data[offset] = this1 >> 24 & 255;
		data[offset + 1] = this1 >> 16 & 255;
		data[offset + 2] = this1 >> 8 & 255;
		data[offset + 3] = this1 & 255;
		break;
	}
};
lime_math_color__$ARGB_ARGB_$Impl_$.__fromBGRA = function(bgra) {
	var argb = 0;
	argb = (bgra & 255 & 255) << 24 | (bgra >> 8 & 255 & 255) << 16 | (bgra >> 16 & 255 & 255) << 8 | bgra >> 24 & 255 & 255;
	return argb;
};
lime_math_color__$ARGB_ARGB_$Impl_$.__fromRGBA = function(rgba) {
	var argb = 0;
	argb = (rgba & 255 & 255) << 24 | (rgba >> 24 & 255 & 255) << 16 | (rgba >> 16 & 255 & 255) << 8 | rgba >> 8 & 255 & 255;
	return argb;
};
lime_math_color__$ARGB_ARGB_$Impl_$.get_a = function(this1) {
	return this1 >> 24 & 255;
};
lime_math_color__$ARGB_ARGB_$Impl_$.set_a = function(this1,value) {
	this1 = (value & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return value;
};
lime_math_color__$ARGB_ARGB_$Impl_$.get_b = function(this1) {
	return this1 & 255;
};
lime_math_color__$ARGB_ARGB_$Impl_$.set_b = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | value & 255;
	return value;
};
lime_math_color__$ARGB_ARGB_$Impl_$.get_g = function(this1) {
	return this1 >> 8 & 255;
};
lime_math_color__$ARGB_ARGB_$Impl_$.set_g = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (value & 255) << 8 | this1 & 255 & 255;
	return value;
};
lime_math_color__$ARGB_ARGB_$Impl_$.get_r = function(this1) {
	return this1 >> 16 & 255;
};
lime_math_color__$ARGB_ARGB_$Impl_$.set_r = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (value & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return value;
};
var lime_math_color__$BGRA_BGRA_$Impl_$ = {};
$hxClasses["lime.math.color._BGRA.BGRA_Impl_"] = lime_math_color__$BGRA_BGRA_$Impl_$;
lime_math_color__$BGRA_BGRA_$Impl_$.__name__ = ["lime","math","color","_BGRA","BGRA_Impl_"];
lime_math_color__$BGRA_BGRA_$Impl_$.__properties__ = {set_r:"set_r",get_r:"get_r",set_g:"set_g",get_g:"get_g",set_b:"set_b",get_b:"get_b",set_a:"set_a",get_a:"get_a"}
lime_math_color__$BGRA_BGRA_$Impl_$.a16 = null;
lime_math_color__$BGRA_BGRA_$Impl_$.unmult = null;
lime_math_color__$BGRA_BGRA_$Impl_$._new = function(bgra) {
	if(bgra == null) bgra = 0;
	return bgra;
};
lime_math_color__$BGRA_BGRA_$Impl_$.create = function(b,g,r,a) {
	var bgra = 0;
	bgra = (b & 255) << 24 | (g & 255) << 16 | (r & 255) << 8 | a & 255;
	return bgra;
};
lime_math_color__$BGRA_BGRA_$Impl_$.multiplyAlpha = function(this1) {
	if((this1 & 255) == 0) this1 = 0; else if((this1 & 255) != 255) {
		lime_math_color__$BGRA_BGRA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[this1 & 255];
		this1 = ((this1 >> 24 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.a16 >> 16 & 255) << 24 | ((this1 >> 16 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.a16 >> 16 & 255) << 16 | ((this1 >> 8 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.a16 >> 16 & 255) << 8 | this1 & 255 & 255;
	}
};
lime_math_color__$BGRA_BGRA_$Impl_$.readUInt8 = function(this1,data,offset,format,premultiplied) {
	if(premultiplied == null) premultiplied = false;
	if(format == null) format = 0;
	switch(format) {
	case 2:
		this1 = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 0:
		this1 = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 1:
		this1 = (data[offset + 3] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 1] & 255) << 8 | data[offset] & 255;
		break;
	}
	if(premultiplied) {
		if((this1 & 255) != 0 && (this1 & 255) != 255) {
			lime_math_color__$BGRA_BGRA_$Impl_$.unmult = 255.0 / (this1 & 255);
			var b;
			var idx = Math.floor((this1 >> 24 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.floor((this1 >> 16 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var r;
			var idx2 = Math.floor((this1 >> 8 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			this1 = (b & 255) << 24 | (g & 255) << 16 | (r & 255) << 8 | this1 & 255 & 255;
		}
	}
};
lime_math_color__$BGRA_BGRA_$Impl_$.set = function(this1,b,g,r,a) {
	this1 = (b & 255) << 24 | (g & 255) << 16 | (r & 255) << 8 | a & 255;
};
lime_math_color__$BGRA_BGRA_$Impl_$.unmultiplyAlpha = function(this1) {
	if((this1 & 255) != 0 && (this1 & 255) != 255) {
		lime_math_color__$BGRA_BGRA_$Impl_$.unmult = 255.0 / (this1 & 255);
		var b;
		var idx = Math.floor((this1 >> 24 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.unmult);
		b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
		var g;
		var idx1 = Math.floor((this1 >> 16 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.unmult);
		g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
		var r;
		var idx2 = Math.floor((this1 >> 8 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.unmult);
		r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
		this1 = (b & 255) << 24 | (g & 255) << 16 | (r & 255) << 8 | this1 & 255 & 255;
	}
};
lime_math_color__$BGRA_BGRA_$Impl_$.writeUInt8 = function(this1,data,offset,format,premultiplied) {
	if(premultiplied == null) premultiplied = false;
	if(format == null) format = 0;
	if(premultiplied) {
		if((this1 & 255) == 0) this1 = 0; else if((this1 & 255) != 255) {
			lime_math_color__$BGRA_BGRA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[this1 & 255];
			this1 = ((this1 >> 24 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.a16 >> 16 & 255) << 24 | ((this1 >> 16 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.a16 >> 16 & 255) << 16 | ((this1 >> 8 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.a16 >> 16 & 255) << 8 | this1 & 255 & 255;
		}
	}
	switch(format) {
	case 2:
		data[offset] = this1 >> 24 & 255;
		data[offset + 1] = this1 >> 16 & 255;
		data[offset + 2] = this1 >> 8 & 255;
		data[offset + 3] = this1 & 255;
		break;
	case 0:
		data[offset] = this1 >> 8 & 255;
		data[offset + 1] = this1 >> 16 & 255;
		data[offset + 2] = this1 >> 24 & 255;
		data[offset + 3] = this1 & 255;
		break;
	case 1:
		data[offset] = this1 & 255;
		data[offset + 1] = this1 >> 8 & 255;
		data[offset + 2] = this1 >> 16 & 255;
		data[offset + 3] = this1 >> 24 & 255;
		break;
	}
};
lime_math_color__$BGRA_BGRA_$Impl_$.__fromARGB = function(argb) {
	var bgra = 0;
	bgra = (argb & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb >> 16 & 255 & 255) << 8 | argb >> 24 & 255 & 255;
	return bgra;
};
lime_math_color__$BGRA_BGRA_$Impl_$.__fromRGBA = function(rgba) {
	var bgra = 0;
	bgra = (rgba >> 8 & 255 & 255) << 24 | (rgba >> 16 & 255 & 255) << 16 | (rgba >> 24 & 255 & 255) << 8 | rgba & 255 & 255;
	return bgra;
};
lime_math_color__$BGRA_BGRA_$Impl_$.get_a = function(this1) {
	return this1 & 255;
};
lime_math_color__$BGRA_BGRA_$Impl_$.set_a = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | value & 255;
	return value;
};
lime_math_color__$BGRA_BGRA_$Impl_$.get_b = function(this1) {
	return this1 >> 24 & 255;
};
lime_math_color__$BGRA_BGRA_$Impl_$.set_b = function(this1,value) {
	this1 = (value & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return value;
};
lime_math_color__$BGRA_BGRA_$Impl_$.get_g = function(this1) {
	return this1 >> 16 & 255;
};
lime_math_color__$BGRA_BGRA_$Impl_$.set_g = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (value & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return value;
};
lime_math_color__$BGRA_BGRA_$Impl_$.get_r = function(this1) {
	return this1 >> 8 & 255;
};
lime_math_color__$BGRA_BGRA_$Impl_$.set_r = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (value & 255) << 8 | this1 & 255 & 255;
	return value;
};
var lime_math_color__$RGBA_RGBA_$Impl_$ = {};
$hxClasses["lime.math.color._RGBA.RGBA_Impl_"] = lime_math_color__$RGBA_RGBA_$Impl_$;
lime_math_color__$RGBA_RGBA_$Impl_$.__name__ = ["lime","math","color","_RGBA","RGBA_Impl_"];
lime_math_color__$RGBA_RGBA_$Impl_$.__properties__ = {set_r:"set_r",get_r:"get_r",set_g:"set_g",get_g:"get_g",set_b:"set_b",get_b:"get_b",set_a:"set_a",get_a:"get_a"}
lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16 = null;
lime_math_color__$RGBA_RGBA_$Impl_$.__clamp = null;
lime_math_color__$RGBA_RGBA_$Impl_$.a16 = null;
lime_math_color__$RGBA_RGBA_$Impl_$.unmult = null;
lime_math_color__$RGBA_RGBA_$Impl_$._new = function(rgba) {
	if(rgba == null) rgba = 0;
	return rgba;
};
lime_math_color__$RGBA_RGBA_$Impl_$.create = function(r,g,b,a) {
	var rgba = 0;
	rgba = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | a & 255;
	return rgba;
};
lime_math_color__$RGBA_RGBA_$Impl_$.multiplyAlpha = function(this1) {
	if((this1 & 255) == 0) {
		if(this1 != 0) this1 = 0;
	} else if((this1 & 255) != 255) {
		lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[this1 & 255];
		this1 = ((this1 >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((this1 >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((this1 >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | this1 & 255 & 255;
	}
};
lime_math_color__$RGBA_RGBA_$Impl_$.readUInt8 = function(this1,data,offset,format,premultiplied) {
	if(premultiplied == null) premultiplied = false;
	if(format == null) format = 0;
	switch(format) {
	case 2:
		this1 = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 0:
		this1 = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 1:
		this1 = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
		break;
	}
	if(premultiplied) {
		if((this1 & 255) != 0 && (this1 & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (this1 & 255);
			var r;
			var idx = Math.round((this1 >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.round((this1 >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var b;
			var idx2 = Math.round((this1 >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			this1 = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | this1 & 255 & 255;
		}
	}
};
lime_math_color__$RGBA_RGBA_$Impl_$.set = function(this1,r,g,b,a) {
	this1 = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | a & 255;
};
lime_math_color__$RGBA_RGBA_$Impl_$.unmultiplyAlpha = function(this1) {
	if((this1 & 255) != 0 && (this1 & 255) != 255) {
		lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (this1 & 255);
		var r;
		var idx = Math.round((this1 >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
		r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
		var g;
		var idx1 = Math.round((this1 >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
		g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
		var b;
		var idx2 = Math.round((this1 >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
		b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
		this1 = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | this1 & 255 & 255;
	}
};
lime_math_color__$RGBA_RGBA_$Impl_$.writeUInt8 = function(this1,data,offset,format,premultiplied) {
	if(premultiplied == null) premultiplied = false;
	if(format == null) format = 0;
	if(premultiplied) {
		if((this1 & 255) == 0) {
			if(this1 != 0) this1 = 0;
		} else if((this1 & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[this1 & 255];
			this1 = ((this1 >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((this1 >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((this1 >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | this1 & 255 & 255;
		}
	}
	switch(format) {
	case 2:
		data[offset] = this1 >> 8 & 255;
		data[offset + 1] = this1 >> 16 & 255;
		data[offset + 2] = this1 >> 24 & 255;
		data[offset + 3] = this1 & 255;
		break;
	case 0:
		data[offset] = this1 >> 24 & 255;
		data[offset + 1] = this1 >> 16 & 255;
		data[offset + 2] = this1 >> 8 & 255;
		data[offset + 3] = this1 & 255;
		break;
	case 1:
		data[offset] = this1 & 255;
		data[offset + 1] = this1 >> 24 & 255;
		data[offset + 2] = this1 >> 16 & 255;
		data[offset + 3] = this1 >> 8 & 255;
		break;
	}
};
lime_math_color__$RGBA_RGBA_$Impl_$.__fromARGB = function(argb) {
	var rgba = 0;
	rgba = (argb >> 16 & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb & 255 & 255) << 8 | argb >> 24 & 255 & 255;
	return rgba;
};
lime_math_color__$RGBA_RGBA_$Impl_$.__fromBGRA = function(bgra) {
	var rgba = 0;
	rgba = (bgra >> 8 & 255 & 255) << 24 | (bgra >> 16 & 255 & 255) << 16 | (bgra >> 24 & 255 & 255) << 8 | bgra & 255 & 255;
	return rgba;
};
lime_math_color__$RGBA_RGBA_$Impl_$.get_a = function(this1) {
	return this1 & 255;
};
lime_math_color__$RGBA_RGBA_$Impl_$.set_a = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | value & 255;
	return value;
};
lime_math_color__$RGBA_RGBA_$Impl_$.get_b = function(this1) {
	return this1 >> 8 & 255;
};
lime_math_color__$RGBA_RGBA_$Impl_$.set_b = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (value & 255) << 8 | this1 & 255 & 255;
	return value;
};
lime_math_color__$RGBA_RGBA_$Impl_$.get_g = function(this1) {
	return this1 >> 16 & 255;
};
lime_math_color__$RGBA_RGBA_$Impl_$.set_g = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (value & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return value;
};
lime_math_color__$RGBA_RGBA_$Impl_$.get_r = function(this1) {
	return this1 >> 24 & 255;
};
lime_math_color__$RGBA_RGBA_$Impl_$.set_r = function(this1,value) {
	this1 = (value & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return value;
};
var lime_net_HTTPRequest = function() {
	this.promise = new lime_app_Promise();
};
$hxClasses["lime.net.HTTPRequest"] = lime_net_HTTPRequest;
lime_net_HTTPRequest.__name__ = ["lime","net","HTTPRequest"];
lime_net_HTTPRequest.prototype = {
	load: function(url) {
		var _g = this;
		this.bytesLoaded = 0;
		this.bytesTotal = 0;
		var request = new XMLHttpRequest();
		request.addEventListener("progress",$bind(this,this.request_onProgress),false);
		request.onreadystatechange = function() {
			if(request.readyState != 4) return;
			if(request.status != null && request.status >= 200 && request.status <= 400) {
				_g.bytes = lime_utils_Bytes.ofData(request.response);
				_g.promise.complete(_g.bytes);
			} else _g.promise.error(request.status);
		};
		request.open("GET",url,true);
		request.responseType = "arraybuffer";
		request.send("");
		return this.promise.future;
	}
	,curl_onProgress: function(dltotal,dlnow,uptotal,upnow) {
		if(upnow > this.bytesLoaded || dlnow > this.bytesLoaded || uptotal > this.bytesTotal || dltotal > this.bytesTotal) {
			if(upnow > this.bytesLoaded) this.bytesLoaded = upnow | 0;
			if(dlnow > this.bytesLoaded) this.bytesLoaded = dlnow | 0;
			if(uptotal > this.bytesTotal) this.bytesTotal = uptotal | 0;
			if(dltotal > this.bytesTotal) this.bytesTotal = dltotal | 0;
			this.promise.progress(this.bytesLoaded / this.bytesTotal);
		}
		return 0;
	}
	,curl_onWrite: function(output,size,nmemb) {
		var cacheBytes = this.bytes;
		this.bytes = lime_utils_Bytes.alloc(this.bytes.length + output.length);
		this.bytes.blit(0,cacheBytes,0,cacheBytes.length);
		this.bytes.blit(cacheBytes.length,output,0,output.length);
		return size * nmemb;
	}
	,request_onProgress: function(event) {
		this.promise.progress(event.loaded / event.total);
	}
	,__class__: lime_net_HTTPRequest
};
var lime_net_curl__$CURL_CURL_$Impl_$ = {};
$hxClasses["lime.net.curl._CURL.CURL_Impl_"] = lime_net_curl__$CURL_CURL_$Impl_$;
lime_net_curl__$CURL_CURL_$Impl_$.__name__ = ["lime","net","curl","_CURL","CURL_Impl_"];
lime_net_curl__$CURL_CURL_$Impl_$.getDate = function(date,now) {
	return 0;
};
lime_net_curl__$CURL_CURL_$Impl_$.globalCleanup = function() {
};
lime_net_curl__$CURL_CURL_$Impl_$.globalInit = function(flags) {
	return 0;
};
lime_net_curl__$CURL_CURL_$Impl_$.version = function() {
	return null;
};
lime_net_curl__$CURL_CURL_$Impl_$.versionInfo = function(type) {
	return null;
};
lime_net_curl__$CURL_CURL_$Impl_$.intGt = function(a,b) {
	return a > b;
};
var lime_net_curl_CURLEasy = function() { };
$hxClasses["lime.net.curl.CURLEasy"] = lime_net_curl_CURLEasy;
lime_net_curl_CURLEasy.__name__ = ["lime","net","curl","CURLEasy"];
lime_net_curl_CURLEasy.cleanup = function(handle) {
};
lime_net_curl_CURLEasy.duphandle = function(handle) {
	return 0;
};
lime_net_curl_CURLEasy.escape = function(handle,url,length) {
	return null;
};
lime_net_curl_CURLEasy.getinfo = function(handle,info) {
	return null;
};
lime_net_curl_CURLEasy.init = function() {
	return 0;
};
lime_net_curl_CURLEasy.pause = function(handle,bitMask) {
	return 0;
};
lime_net_curl_CURLEasy.perform = function(handle) {
	return 0;
};
lime_net_curl_CURLEasy.reset = function(handle) {
};
lime_net_curl_CURLEasy.setopt = function(handle,option,parameter) {
	return 0;
};
lime_net_curl_CURLEasy.strerror = function(code) {
	return null;
};
lime_net_curl_CURLEasy.unescape = function(handle,url,inLength,outLength) {
	return null;
};
lime_net_curl_CURLEasy.__writeCallback = function(callback,output,size,nmemb) {
	return 0;
};
var lime_system_BackgroundWorker = function() {
	this.onProgress = new lime_app_Event_$Dynamic_$Void();
	this.onError = new lime_app_Event_$Dynamic_$Void();
	this.onComplete = new lime_app_Event_$Dynamic_$Void();
	this.doWork = new lime_app_Event_$Dynamic_$Void();
};
$hxClasses["lime.system.BackgroundWorker"] = lime_system_BackgroundWorker;
lime_system_BackgroundWorker.__name__ = ["lime","system","BackgroundWorker"];
lime_system_BackgroundWorker.prototype = {
	cancel: function() {
		this.canceled = true;
	}
	,run: function(message) {
		this.canceled = false;
		this.__runMessage = message;
		this.__doWork();
	}
	,sendComplete: function(message) {
		if(!this.canceled) {
			this.canceled = true;
			this.onComplete.dispatch(message);
		}
	}
	,sendError: function(message) {
		if(!this.canceled) {
			this.canceled = true;
			this.onError.dispatch(message);
		}
	}
	,sendProgress: function(message) {
		if(!this.canceled) this.onProgress.dispatch(message);
	}
	,__doWork: function() {
		this.doWork.dispatch(this.__runMessage);
	}
	,__update: function(deltaTime) {
	}
	,__class__: lime_system_BackgroundWorker
};
var lime_system_CFFI = function() { };
$hxClasses["lime.system.CFFI"] = lime_system_CFFI;
lime_system_CFFI.__name__ = ["lime","system","CFFI"];
lime_system_CFFI.available = null;
lime_system_CFFI.enabled = null;
lime_system_CFFI.load = function(library,method,args,lazy) {
	if(lazy == null) lazy = false;
	if(args == null) args = 0;
	if(!lime_system_CFFI.enabled) return Reflect.makeVarArgs(function(__) {
		return { };
	});
	var result = null;
	return result;
};
lime_system_CFFI.__findHaxelib = function(library) {
	return "";
};
lime_system_CFFI.__loaderTrace = function(message) {
};
lime_system_CFFI.__sysName = function() {
	return null;
};
lime_system_CFFI.__tryLoad = function(name,library,func,args) {
	return null;
};
var lime_system__$CFFIPointer_CFFIPointer_$Impl_$ = {};
$hxClasses["lime.system._CFFIPointer.CFFIPointer_Impl_"] = lime_system__$CFFIPointer_CFFIPointer_$Impl_$;
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.__name__ = ["lime","system","_CFFIPointer","CFFIPointer_Impl_"];
lime_system__$CFFIPointer_CFFIPointer_$Impl_$._new = function(handle) {
	return handle;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get = function(this1) {
	if(this1 != null) {
	}
	return 0;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.equals = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) == b;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.equalsPointer = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) == lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(b);
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.greaterThan = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) > b;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.greaterThanPointer = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) > lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(b);
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.greaterThanOrEqual = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) >= b;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.greaterThanOrEqualPointer = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) >= lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(b);
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.lessThan = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) < b;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.lessThanPointer = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) < lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(b);
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.lessThanOrEqual = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) <= b;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.lessThanOrEqualPointer = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) <= lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(b);
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.notEquals = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) != b;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.notEqualsPointer = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) != lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(b);
};
var lime_system_Clipboard = function() { };
$hxClasses["lime.system.Clipboard"] = lime_system_Clipboard;
lime_system_Clipboard.__name__ = ["lime","system","Clipboard"];
lime_system_Clipboard.__properties__ = {set_text:"set_text",get_text:"get_text"}
lime_system_Clipboard.get_text = function() {
	return null;
};
lime_system_Clipboard.set_text = function(value) {
	return null;
};
var lime_system_Display = function() {
};
$hxClasses["lime.system.Display"] = lime_system_Display;
lime_system_Display.__name__ = ["lime","system","Display"];
lime_system_Display.prototype = {
	__class__: lime_system_Display
};
var lime_system_DisplayMode = function(width,height,refreshRate,pixelFormat) {
	this.width = width;
	this.height = height;
	this.refreshRate = refreshRate;
	this.pixelFormat = pixelFormat;
};
$hxClasses["lime.system.DisplayMode"] = lime_system_DisplayMode;
lime_system_DisplayMode.__name__ = ["lime","system","DisplayMode"];
lime_system_DisplayMode.prototype = {
	__class__: lime_system_DisplayMode
};
var lime_system_Endian = $hxClasses["lime.system.Endian"] = { __ename__ : ["lime","system","Endian"], __constructs__ : ["LITTLE_ENDIAN","BIG_ENDIAN"] };
lime_system_Endian.LITTLE_ENDIAN = ["LITTLE_ENDIAN",0];
lime_system_Endian.LITTLE_ENDIAN.toString = $estr;
lime_system_Endian.LITTLE_ENDIAN.__enum__ = lime_system_Endian;
lime_system_Endian.BIG_ENDIAN = ["BIG_ENDIAN",1];
lime_system_Endian.BIG_ENDIAN.toString = $estr;
lime_system_Endian.BIG_ENDIAN.__enum__ = lime_system_Endian;
var lime_system_System = function() { };
$hxClasses["lime.system.System"] = lime_system_System;
lime_system_System.__name__ = ["lime","system","System"];
lime_system_System.__properties__ = {get_userDirectory:"get_userDirectory",get_numDisplays:"get_numDisplays",get_fontsDirectory:"get_fontsDirectory",get_endianness:"get_endianness",get_documentsDirectory:"get_documentsDirectory",get_desktopDirectory:"get_desktopDirectory",get_applicationStorageDirectory:"get_applicationStorageDirectory",get_applicationDirectory:"get_applicationDirectory",set_allowScreenTimeout:"set_allowScreenTimeout",get_allowScreenTimeout:"get_allowScreenTimeout"}
lime_system_System.applicationDirectory = null;
lime_system_System.applicationStorageDirectory = null;
lime_system_System.desktopDirectory = null;
lime_system_System.disableCFFI = null;
lime_system_System.documentsDirectory = null;
lime_system_System.endianness = null;
lime_system_System.fontsDirectory = null;
lime_system_System.numDisplays = null;
lime_system_System.userDirectory = null;
lime_system_System.embed = $hx_exports.lime.embed = function(element,width,height,background,assetsPrefix) {
	var htmlElement = null;
	if(typeof(element) == "string") htmlElement = window.document.getElementById(js_Boot.__cast(element , String)); else if(element == null) htmlElement = window.document.createElement("div"); else htmlElement = element;
	var color = null;
	if(background != null) {
		background = StringTools.replace(background,"#","");
		if(background.indexOf("0x") > -1) color = Std.parseInt(background); else color = Std.parseInt("0x" + background);
	}
	if(width == null) width = 0;
	if(height == null) height = 0;
	ApplicationMain.config.windows[0].background = color;
	ApplicationMain.config.windows[0].element = htmlElement;
	ApplicationMain.config.windows[0].width = width;
	ApplicationMain.config.windows[0].height = height;
	ApplicationMain.config.assetsPrefix = assetsPrefix;
	ApplicationMain.create();
};
lime_system_System.exit = function(code) {
};
lime_system_System.getDisplay = function(id) {
	if(id == 0) {
		var display = new lime_system_Display();
		display.id = 0;
		display.name = "Generic Display";
		display.dpi = 96;
		display.currentMode = new lime_system_DisplayMode(window.screen.width,window.screen.height,60,1);
		display.supportedModes = [display.currentMode];
		display.bounds = new lime_math_Rectangle(0,0,display.currentMode.width,display.currentMode.height);
		return display;
	}
	return null;
};
lime_system_System.getTimer = function() {
	return new Date().getTime();
};
lime_system_System.load = function(library,method,args,lazy) {
	if(lazy == null) lazy = false;
	if(args == null) args = 0;
	return lime_system_CFFI.load(library,method,args,lazy);
};
lime_system_System.get_allowScreenTimeout = function() {
	return true;
};
lime_system_System.set_allowScreenTimeout = function(value) {
	return true;
};
lime_system_System.get_applicationDirectory = function() {
	return null;
};
lime_system_System.get_applicationStorageDirectory = function() {
	var company = "MyCompany";
	var file = "MyApplication";
	if(lime_app_Application.current != null && lime_app_Application.current.config != null) {
		if(lime_app_Application.current.config.company != null) company = lime_app_Application.current.config.company;
		if(lime_app_Application.current.config.file != null) file = lime_app_Application.current.config.file;
	}
	return null;
};
lime_system_System.get_desktopDirectory = function() {
	return null;
};
lime_system_System.get_documentsDirectory = function() {
	return null;
};
lime_system_System.get_fontsDirectory = function() {
	return null;
};
lime_system_System.get_numDisplays = function() {
	return 1;
};
lime_system_System.get_userDirectory = function() {
	return null;
};
lime_system_System.get_endianness = function() {
	return lime_system_Endian.LITTLE_ENDIAN;
};
var lime_system_ThreadPool = function(minThreads,maxThreads) {
	if(maxThreads == null) maxThreads = 1;
	if(minThreads == null) minThreads = 0;
	this.onProgress = new lime_app_Event_$Dynamic_$Void();
	this.onError = new lime_app_Event_$Dynamic_$Void();
	this.onComplete = new lime_app_Event_$Dynamic_$Void();
	this.doWork = new lime_app_Event_$Dynamic_$Void();
	this.minThreads = minThreads;
	this.maxThreads = maxThreads;
	this.currentThreads = 0;
};
$hxClasses["lime.system.ThreadPool"] = lime_system_ThreadPool;
lime_system_ThreadPool.__name__ = ["lime","system","ThreadPool"];
lime_system_ThreadPool.prototype = {
	queue: function(state) {
		this.doWork.dispatch(state);
	}
	,sendComplete: function(state) {
		this.onComplete.dispatch(state);
	}
	,sendError: function(state) {
		this.onError.dispatch(state);
	}
	,sendProgress: function(state) {
		this.onProgress.dispatch(state);
	}
	,__class__: lime_system_ThreadPool
};
var lime_system__$ThreadPool_ThreadPoolMessageType = $hxClasses["lime.system._ThreadPool.ThreadPoolMessageType"] = { __ename__ : ["lime","system","_ThreadPool","ThreadPoolMessageType"], __constructs__ : ["COMPLETE","ERROR","EXIT","PROGRESS","WORK"] };
lime_system__$ThreadPool_ThreadPoolMessageType.COMPLETE = ["COMPLETE",0];
lime_system__$ThreadPool_ThreadPoolMessageType.COMPLETE.toString = $estr;
lime_system__$ThreadPool_ThreadPoolMessageType.COMPLETE.__enum__ = lime_system__$ThreadPool_ThreadPoolMessageType;
lime_system__$ThreadPool_ThreadPoolMessageType.ERROR = ["ERROR",1];
lime_system__$ThreadPool_ThreadPoolMessageType.ERROR.toString = $estr;
lime_system__$ThreadPool_ThreadPoolMessageType.ERROR.__enum__ = lime_system__$ThreadPool_ThreadPoolMessageType;
lime_system__$ThreadPool_ThreadPoolMessageType.EXIT = ["EXIT",2];
lime_system__$ThreadPool_ThreadPoolMessageType.EXIT.toString = $estr;
lime_system__$ThreadPool_ThreadPoolMessageType.EXIT.__enum__ = lime_system__$ThreadPool_ThreadPoolMessageType;
lime_system__$ThreadPool_ThreadPoolMessageType.PROGRESS = ["PROGRESS",3];
lime_system__$ThreadPool_ThreadPoolMessageType.PROGRESS.toString = $estr;
lime_system__$ThreadPool_ThreadPoolMessageType.PROGRESS.__enum__ = lime_system__$ThreadPool_ThreadPoolMessageType;
lime_system__$ThreadPool_ThreadPoolMessageType.WORK = ["WORK",4];
lime_system__$ThreadPool_ThreadPoolMessageType.WORK.toString = $estr;
lime_system__$ThreadPool_ThreadPoolMessageType.WORK.__enum__ = lime_system__$ThreadPool_ThreadPoolMessageType;
var lime_system__$ThreadPool_ThreadPoolMessage = function(type,state) {
	this.type = type;
	this.state = state;
};
$hxClasses["lime.system._ThreadPool.ThreadPoolMessage"] = lime_system__$ThreadPool_ThreadPoolMessage;
lime_system__$ThreadPool_ThreadPoolMessage.__name__ = ["lime","system","_ThreadPool","ThreadPoolMessage"];
lime_system__$ThreadPool_ThreadPoolMessage.prototype = {
	__class__: lime_system__$ThreadPool_ThreadPoolMessage
};
var lime_text__$Glyph_Glyph_$Impl_$ = {};
$hxClasses["lime.text._Glyph.Glyph_Impl_"] = lime_text__$Glyph_Glyph_$Impl_$;
lime_text__$Glyph_Glyph_$Impl_$.__name__ = ["lime","text","_Glyph","Glyph_Impl_"];
lime_text__$Glyph_Glyph_$Impl_$._new = function(i) {
	return i;
};
var lime_text_GlyphMetrics = function() {
};
$hxClasses["lime.text.GlyphMetrics"] = lime_text_GlyphMetrics;
lime_text_GlyphMetrics.__name__ = ["lime","text","GlyphMetrics"];
lime_text_GlyphMetrics.prototype = {
	__class__: lime_text_GlyphMetrics
};
var lime_text_GlyphPosition = function(glyph,advance,offset) {
	this.glyph = glyph;
	this.advance = advance;
	if(offset != null) this.offset = offset; else this.offset = new lime_math_Vector2();
};
$hxClasses["lime.text.GlyphPosition"] = lime_text_GlyphPosition;
lime_text_GlyphPosition.__name__ = ["lime","text","GlyphPosition"];
lime_text_GlyphPosition.prototype = {
	__class__: lime_text_GlyphPosition
};
var lime_text__$TextDirection_TextDirection_$Impl_$ = {};
$hxClasses["lime.text._TextDirection.TextDirection_Impl_"] = lime_text__$TextDirection_TextDirection_$Impl_$;
lime_text__$TextDirection_TextDirection_$Impl_$.__name__ = ["lime","text","_TextDirection","TextDirection_Impl_"];
lime_text__$TextDirection_TextDirection_$Impl_$.__properties__ = {get_vertical:"get_vertical",get_horizontal:"get_horizontal",get_forward:"get_forward",get_backward:"get_backward"}
lime_text__$TextDirection_TextDirection_$Impl_$.reverse = function(this1) {
	this1 = this1 ^ 1;
};
lime_text__$TextDirection_TextDirection_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 4:
		return "leftToRight";
	case 5:
		return "rightToLeft";
	case 6:
		return "topToBottom";
	case 7:
		return "bottomToTop";
	default:
		return "";
	}
};
lime_text__$TextDirection_TextDirection_$Impl_$.get_backward = function(this1) {
	return (this1 & -3) == 5;
};
lime_text__$TextDirection_TextDirection_$Impl_$.get_forward = function(this1) {
	return (this1 & -3) == 4;
};
lime_text__$TextDirection_TextDirection_$Impl_$.get_horizontal = function(this1) {
	return (this1 & -2) == 4;
};
lime_text__$TextDirection_TextDirection_$Impl_$.get_vertical = function(this1) {
	return (this1 & -2) == 6;
};
var lime_text_TextLayout = function(text,font,size,direction,script,language) {
	if(language == null) language = "en";
	if(script == null) script = "Zyyy";
	if(direction == null) direction = 4;
	if(size == null) size = 12;
	if(text == null) text = "";
	this.set_text(text);
	this.set_font(font);
	this.set_size(size);
	this.__direction = direction;
	this.__script = script;
	this.__language = language;
	this.positions = [];
	this.__dirty = true;
};
$hxClasses["lime.text.TextLayout"] = lime_text_TextLayout;
lime_text_TextLayout.__name__ = ["lime","text","TextLayout"];
lime_text_TextLayout.prototype = {
	__position: function() {
		this.positions = [];
	}
	,get_positions: function() {
		if(this.__dirty) {
			this.__dirty = false;
			this.__position();
		}
		return this.positions;
	}
	,get_direction: function() {
		return this.__direction;
	}
	,set_direction: function(value) {
		if(value == this.__direction) return value;
		this.__direction = value;
		this.__dirty = true;
		return value;
	}
	,set_font: function(value) {
		if(value == this.font) return value;
		this.font = value;
		this.__dirty = true;
		return value;
	}
	,get_glyphs: function() {
		var glyphs = [];
		var _g = 0;
		var _g1 = this.get_positions();
		while(_g < _g1.length) {
			var position = _g1[_g];
			++_g;
			glyphs.push(position.glyph);
		}
		return glyphs;
	}
	,get_language: function() {
		return this.__language;
	}
	,set_language: function(value) {
		if(value == this.__language) return value;
		this.__language = value;
		this.__dirty = true;
		return value;
	}
	,get_script: function() {
		return this.__script;
	}
	,set_script: function(value) {
		if(value == this.__script) return value;
		this.__script = value;
		this.__dirty = true;
		return value;
	}
	,set_size: function(value) {
		if(value == this.size) return value;
		this.size = value;
		this.__dirty = true;
		return value;
	}
	,set_text: function(value) {
		if(value == this.text) return value;
		this.text = value;
		this.__dirty = true;
		return value;
	}
	,__class__: lime_text_TextLayout
	,__properties__: {set_text:"set_text",set_size:"set_size",set_script:"set_script",get_script:"get_script",get_positions:"get_positions",set_language:"set_language",get_language:"get_language",get_glyphs:"get_glyphs",set_font:"set_font",set_direction:"set_direction",get_direction:"get_direction"}
};
var lime_text__$TextScript_TextScript_$Impl_$ = {};
$hxClasses["lime.text._TextScript.TextScript_Impl_"] = lime_text__$TextScript_TextScript_$Impl_$;
lime_text__$TextScript_TextScript_$Impl_$.__name__ = ["lime","text","_TextScript","TextScript_Impl_"];
lime_text__$TextScript_TextScript_$Impl_$.__properties__ = {get_rightToLeft:"get_rightToLeft"}
lime_text__$TextScript_TextScript_$Impl_$.get_rightToLeft = function(this1) {
	switch(this1) {
	case "Hebr":case "Arab":case "Syrc":case "Thaa":case "Nkoo":case "Samr":case "Mand":case "Armi":case "Phnx":case "Lydi":case "Cprt":case "Khar":case "Sarb":case "Avst":case "Phli":case "Phlp":case "Orkh":
		return true;
	default:
		return false;
	}
};
var lime_ui_Gamepad = function(id) {
	this.onDisconnect = new lime_app_Event_$Void_$Void();
	this.onButtonUp = new lime_app_Event_$lime_$ui_$GamepadButton_$Void();
	this.onButtonDown = new lime_app_Event_$lime_$ui_$GamepadButton_$Void();
	this.onAxisMove = new lime_app_Event_$lime_$ui_$GamepadAxis_$Float_$Void();
	this.id = id;
	this.connected = true;
};
$hxClasses["lime.ui.Gamepad"] = lime_ui_Gamepad;
lime_ui_Gamepad.__name__ = ["lime","ui","Gamepad"];
lime_ui_Gamepad.addMappings = function(mappings) {
};
lime_ui_Gamepad.__connect = function(id) {
	if(!lime_ui_Gamepad.devices.h.hasOwnProperty(id)) {
		var gamepad = new lime_ui_Gamepad(id);
		lime_ui_Gamepad.devices.h[id] = gamepad;
		lime_ui_Gamepad.onConnect.dispatch(gamepad);
	}
};
lime_ui_Gamepad.__disconnect = function(id) {
	var gamepad = lime_ui_Gamepad.devices.h[id];
	if(gamepad != null) gamepad.connected = false;
	lime_ui_Gamepad.devices.remove(id);
	if(gamepad != null) gamepad.onDisconnect.dispatch();
};
lime_ui_Gamepad.prototype = {
	get_guid: function() {
		var devices = lime_ui_Joystick.__getDeviceData();
		return devices[this.id].id;
	}
	,get_name: function() {
		var devices = lime_ui_Joystick.__getDeviceData();
		return devices[this.id].id;
	}
	,__class__: lime_ui_Gamepad
	,__properties__: {get_name:"get_name",get_guid:"get_guid"}
};
var lime_ui__$GamepadAxis_GamepadAxis_$Impl_$ = {};
$hxClasses["lime.ui._GamepadAxis.GamepadAxis_Impl_"] = lime_ui__$GamepadAxis_GamepadAxis_$Impl_$;
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.__name__ = ["lime","ui","_GamepadAxis","GamepadAxis_Impl_"];
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "LEFT_X";
	case 1:
		return "LEFT_Y";
	case 2:
		return "RIGHT_X";
	case 3:
		return "RIGHT_Y";
	case 4:
		return "TRIGGER_LEFT";
	case 5:
		return "TRIGGER_RIGHT";
	default:
		return "UNKNOWN (" + this1 + ")";
	}
};
var lime_ui__$GamepadButton_GamepadButton_$Impl_$ = {};
$hxClasses["lime.ui._GamepadButton.GamepadButton_Impl_"] = lime_ui__$GamepadButton_GamepadButton_$Impl_$;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.__name__ = ["lime","ui","_GamepadButton","GamepadButton_Impl_"];
lime_ui__$GamepadButton_GamepadButton_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "A";
	case 1:
		return "B";
	case 2:
		return "X";
	case 3:
		return "Y";
	case 4:
		return "BACK";
	case 5:
		return "GUIDE";
	case 6:
		return "START";
	case 7:
		return "LEFT_STICK";
	case 8:
		return "RIGHT_STICK";
	case 9:
		return "LEFT_SHOULDER";
	case 10:
		return "RIGHT_SHOULDER";
	case 11:
		return "DPAD_UP";
	case 12:
		return "DPAD_DOWN";
	case 13:
		return "DPAD_LEFT";
	case 14:
		return "DPAD_RIGHT";
	default:
		return "UNKNOWN (" + this1 + ")";
	}
};
var lime_ui_Joystick = function(id) {
	this.onTrackballMove = new lime_app_Event_$Int_$Float_$Void();
	this.onHatMove = new lime_app_Event_$Int_$lime_$ui_$JoystickHatPosition_$Void();
	this.onDisconnect = new lime_app_Event_$Void_$Void();
	this.onButtonUp = new lime_app_Event_$Int_$Void();
	this.onButtonDown = new lime_app_Event_$Int_$Void();
	this.onAxisMove = new lime_app_Event_$Int_$Float_$Void();
	this.id = id;
	this.connected = true;
};
$hxClasses["lime.ui.Joystick"] = lime_ui_Joystick;
lime_ui_Joystick.__name__ = ["lime","ui","Joystick"];
lime_ui_Joystick.__connect = function(id) {
	if(!lime_ui_Joystick.devices.h.hasOwnProperty(id)) {
		var joystick = new lime_ui_Joystick(id);
		lime_ui_Joystick.devices.h[id] = joystick;
		lime_ui_Joystick.onConnect.dispatch(joystick);
	}
};
lime_ui_Joystick.__disconnect = function(id) {
	var joystick = lime_ui_Joystick.devices.h[id];
	if(joystick != null) joystick.connected = false;
	lime_ui_Joystick.devices.remove(id);
	if(joystick != null) joystick.onDisconnect.dispatch();
};
lime_ui_Joystick.__getDeviceData = function() {
	if(navigator.getGamepads) return navigator.getGamepads(); else if(navigator.webkitGetGamepads) return navigator.webkitGetGamepads(); else return null;
};
lime_ui_Joystick.prototype = {
	get_guid: function() {
		var devices = lime_ui_Joystick.__getDeviceData();
		return devices[this.id].id;
	}
	,get_name: function() {
		var devices = lime_ui_Joystick.__getDeviceData();
		return devices[this.id].id;
	}
	,get_numAxes: function() {
		var devices = lime_ui_Joystick.__getDeviceData();
		return devices[this.id].axes.length;
	}
	,get_numButtons: function() {
		var devices = lime_ui_Joystick.__getDeviceData();
		return devices[this.id].buttons.length;
	}
	,get_numHats: function() {
		return 0;
	}
	,get_numTrackballs: function() {
		return 0;
	}
	,__class__: lime_ui_Joystick
	,__properties__: {get_numTrackballs:"get_numTrackballs",get_numHats:"get_numHats",get_numButtons:"get_numButtons",get_numAxes:"get_numAxes",get_name:"get_name",get_guid:"get_guid"}
};
var lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$ = {};
$hxClasses["lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_"] = lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.__name__ = ["lime","ui","_JoystickHatPosition","JoystickHatPosition_Impl_"];
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.__properties__ = {set_up:"set_up",get_up:"get_up",set_right:"set_right",get_right:"get_right",set_left:"set_left",get_left:"get_left",set_down:"set_down",get_down:"get_down",set_center:"set_center",get_center:"get_center"}
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$._new = function(value) {
	return value;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.get_center = function(this1) {
	return this1 == 0;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.set_center = function(this1,value) {
	if(value) this1 = 0;
	return value;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.get_down = function(this1) {
	return (this1 & 4) > 0;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.set_down = function(this1,value) {
	if(value) this1 |= 4; else this1 &= 268435455 - 4;
	return value;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.get_left = function(this1) {
	return (this1 & 8) > 0;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.set_left = function(this1,value) {
	if(value) this1 |= 8; else this1 &= 268435455 - 8;
	return value;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.get_right = function(this1) {
	return (this1 & 2) > 0;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.set_right = function(this1,value) {
	if(value) this1 |= 2; else this1 &= 268435455 - 2;
	return value;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.get_up = function(this1) {
	return (this1 & 1) > 0;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.set_up = function(this1,value) {
	if(value) this1 |= 1; else this1 &= 268435455 - 1;
	return value;
};
var lime_ui__$KeyCode_KeyCode_$Impl_$ = {};
$hxClasses["lime.ui._KeyCode.KeyCode_Impl_"] = lime_ui__$KeyCode_KeyCode_$Impl_$;
lime_ui__$KeyCode_KeyCode_$Impl_$.__name__ = ["lime","ui","_KeyCode","KeyCode_Impl_"];
lime_ui__$KeyCode_KeyCode_$Impl_$.gt = function(a,b) {
	return a > b;
};
lime_ui__$KeyCode_KeyCode_$Impl_$.gte = function(a,b) {
	return a >= b;
};
lime_ui__$KeyCode_KeyCode_$Impl_$.lt = function(a,b) {
	return a < b;
};
lime_ui__$KeyCode_KeyCode_$Impl_$.lte = function(a,b) {
	return a <= b;
};
lime_ui__$KeyCode_KeyCode_$Impl_$.plus = function(a,b) {
	return a + b;
};
var lime_ui__$KeyModifier_KeyModifier_$Impl_$ = {};
$hxClasses["lime.ui._KeyModifier.KeyModifier_Impl_"] = lime_ui__$KeyModifier_KeyModifier_$Impl_$;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.__name__ = ["lime","ui","_KeyModifier","KeyModifier_Impl_"];
lime_ui__$KeyModifier_KeyModifier_$Impl_$.__properties__ = {set_shiftKey:"set_shiftKey",get_shiftKey:"get_shiftKey",set_numLock:"set_numLock",get_numLock:"get_numLock",set_metaKey:"set_metaKey",get_metaKey:"get_metaKey",set_ctrlKey:"set_ctrlKey",get_ctrlKey:"get_ctrlKey",set_capsLock:"set_capsLock",get_capsLock:"get_capsLock",set_altKey:"set_altKey",get_altKey:"get_altKey"}
lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_altKey = function(this1) {
	return (this1 & 256) > 0 || (this1 & 512) > 0;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.set_altKey = function(this1,value) {
	if(value) this1 |= 768; else this1 &= 268435455 - 768;
	return value;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_capsLock = function(this1) {
	return (this1 & 8192) > 0 || (this1 & 8192) > 0;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.set_capsLock = function(this1,value) {
	if(value) this1 |= 8192; else this1 &= 268435455 - 8192;
	return value;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey = function(this1) {
	return (this1 & 64) > 0 || (this1 & 128) > 0;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.set_ctrlKey = function(this1,value) {
	if(value) this1 |= 192; else this1 &= 268435455 - 192;
	return value;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey = function(this1) {
	return (this1 & 1024) > 0 || (this1 & 2048) > 0;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.set_metaKey = function(this1,value) {
	if(value) this1 |= 3072; else this1 &= 268435455 - 3072;
	return value;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_numLock = function(this1) {
	return (this1 & 4096) > 0 || (this1 & 4096) > 0;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.set_numLock = function(this1,value) {
	if(value) this1 |= 4096; else this1 &= 268435455 - 4096;
	return value;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey = function(this1) {
	return (this1 & 1) > 0 || (this1 & 2) > 0;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.set_shiftKey = function(this1,value) {
	if(value) this1 |= 3; else this1 &= 268435455 - 3;
	return value;
};
var lime_ui_Mouse = function() { };
$hxClasses["lime.ui.Mouse"] = lime_ui_Mouse;
lime_ui_Mouse.__name__ = ["lime","ui","Mouse"];
lime_ui_Mouse.__properties__ = {set_lock:"set_lock",get_lock:"get_lock",set_cursor:"set_cursor",get_cursor:"get_cursor"}
lime_ui_Mouse.hide = function() {
	lime__$backend_html5_HTML5Mouse.hide();
};
lime_ui_Mouse.show = function() {
	lime__$backend_html5_HTML5Mouse.show();
};
lime_ui_Mouse.warp = function(x,y,window) {
	lime__$backend_html5_HTML5Mouse.warp(x,y,window);
};
lime_ui_Mouse.get_cursor = function() {
	return lime__$backend_html5_HTML5Mouse.get_cursor();
};
lime_ui_Mouse.set_cursor = function(value) {
	return lime__$backend_html5_HTML5Mouse.set_cursor(value);
};
lime_ui_Mouse.get_lock = function() {
	return lime__$backend_html5_HTML5Mouse.get_lock();
};
lime_ui_Mouse.set_lock = function(value) {
	return lime__$backend_html5_HTML5Mouse.set_lock(value);
};
var lime_ui_MouseCursor = $hxClasses["lime.ui.MouseCursor"] = { __ename__ : ["lime","ui","MouseCursor"], __constructs__ : ["ARROW","CROSSHAIR","DEFAULT","MOVE","POINTER","RESIZE_NESW","RESIZE_NS","RESIZE_NWSE","RESIZE_WE","TEXT","WAIT","WAIT_ARROW","CUSTOM"] };
lime_ui_MouseCursor.ARROW = ["ARROW",0];
lime_ui_MouseCursor.ARROW.toString = $estr;
lime_ui_MouseCursor.ARROW.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.CROSSHAIR = ["CROSSHAIR",1];
lime_ui_MouseCursor.CROSSHAIR.toString = $estr;
lime_ui_MouseCursor.CROSSHAIR.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.DEFAULT = ["DEFAULT",2];
lime_ui_MouseCursor.DEFAULT.toString = $estr;
lime_ui_MouseCursor.DEFAULT.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.MOVE = ["MOVE",3];
lime_ui_MouseCursor.MOVE.toString = $estr;
lime_ui_MouseCursor.MOVE.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.POINTER = ["POINTER",4];
lime_ui_MouseCursor.POINTER.toString = $estr;
lime_ui_MouseCursor.POINTER.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.RESIZE_NESW = ["RESIZE_NESW",5];
lime_ui_MouseCursor.RESIZE_NESW.toString = $estr;
lime_ui_MouseCursor.RESIZE_NESW.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.RESIZE_NS = ["RESIZE_NS",6];
lime_ui_MouseCursor.RESIZE_NS.toString = $estr;
lime_ui_MouseCursor.RESIZE_NS.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.RESIZE_NWSE = ["RESIZE_NWSE",7];
lime_ui_MouseCursor.RESIZE_NWSE.toString = $estr;
lime_ui_MouseCursor.RESIZE_NWSE.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.RESIZE_WE = ["RESIZE_WE",8];
lime_ui_MouseCursor.RESIZE_WE.toString = $estr;
lime_ui_MouseCursor.RESIZE_WE.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.TEXT = ["TEXT",9];
lime_ui_MouseCursor.TEXT.toString = $estr;
lime_ui_MouseCursor.TEXT.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.WAIT = ["WAIT",10];
lime_ui_MouseCursor.WAIT.toString = $estr;
lime_ui_MouseCursor.WAIT.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.WAIT_ARROW = ["WAIT_ARROW",11];
lime_ui_MouseCursor.WAIT_ARROW.toString = $estr;
lime_ui_MouseCursor.WAIT_ARROW.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.CUSTOM = ["CUSTOM",12];
lime_ui_MouseCursor.CUSTOM.toString = $estr;
lime_ui_MouseCursor.CUSTOM.__enum__ = lime_ui_MouseCursor;
var lime_ui_Touch = function(x,y,id,dx,dy,pressure,device) {
	this.x = x;
	this.y = y;
	this.id = id;
	this.dx = dx;
	this.dy = dy;
	this.pressure = pressure;
	this.device = device;
};
$hxClasses["lime.ui.Touch"] = lime_ui_Touch;
lime_ui_Touch.__name__ = ["lime","ui","Touch"];
lime_ui_Touch.prototype = {
	__class__: lime_ui_Touch
};
var lime_ui_Window = function(config) {
	this.onTextInput = new lime_app_Event_$String_$Void();
	this.onTextEdit = new lime_app_Event_$String_$Int_$Int_$Void();
	this.onRestore = new lime_app_Event_$Void_$Void();
	this.onResize = new lime_app_Event_$Int_$Int_$Void();
	this.onMove = new lime_app_Event_$Float_$Float_$Void();
	this.onMouseWheel = new lime_app_Event_$Float_$Float_$Void();
	this.onMouseUp = new lime_app_Event_$Float_$Float_$Int_$Void();
	this.onMouseMoveRelative = new lime_app_Event_$Float_$Float_$Void();
	this.onMouseMove = new lime_app_Event_$Float_$Float_$Void();
	this.onMouseDown = new lime_app_Event_$Float_$Float_$Int_$Void();
	this.onMinimize = new lime_app_Event_$Void_$Void();
	this.onLeave = new lime_app_Event_$Void_$Void();
	this.onKeyUp = new lime_app_Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void();
	this.onKeyDown = new lime_app_Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void();
	this.onFullscreen = new lime_app_Event_$Void_$Void();
	this.onFocusOut = new lime_app_Event_$Void_$Void();
	this.onFocusIn = new lime_app_Event_$Void_$Void();
	this.onEnter = new lime_app_Event_$Void_$Void();
	this.onDropFile = new lime_app_Event_$String_$Void();
	this.onDeactivate = new lime_app_Event_$Void_$Void();
	this.onCreate = new lime_app_Event_$Void_$Void();
	this.onClose = new lime_app_Event_$Void_$Void();
	this.onActivate = new lime_app_Event_$Void_$Void();
	this.config = config;
	this.__width = 0;
	this.__height = 0;
	this.__fullscreen = false;
	this.__scale = 1;
	this.__x = 0;
	this.__y = 0;
	this.__title = "";
	this.id = -1;
	if(config != null) {
		if(Object.prototype.hasOwnProperty.call(config,"width")) this.__width = config.width;
		if(Object.prototype.hasOwnProperty.call(config,"height")) this.__height = config.height;
		if(Object.prototype.hasOwnProperty.call(config,"x")) this.__x = config.x;
		if(Object.prototype.hasOwnProperty.call(config,"y")) this.__y = config.y;
		if(Object.prototype.hasOwnProperty.call(config,"fullscreen")) this.__fullscreen = config.fullscreen;
		if(Object.prototype.hasOwnProperty.call(config,"borderless")) this.__borderless = config.borderless;
		if(Object.prototype.hasOwnProperty.call(config,"resizable")) this.__resizable = config.resizable;
		if(Object.prototype.hasOwnProperty.call(config,"title")) this.__title = config.title;
	}
	this.backend = new lime__$backend_html5_HTML5Window(this);
};
$hxClasses["lime.ui.Window"] = lime_ui_Window;
lime_ui_Window.__name__ = ["lime","ui","Window"];
lime_ui_Window.prototype = {
	alert: function(message,title) {
		this.backend.alert(message,title);
	}
	,close: function() {
		this.backend.close();
	}
	,create: function(application) {
		this.application = application;
		this.backend.create(application);
		if(this.renderer != null) this.renderer.create();
	}
	,focus: function() {
		this.backend.focus();
	}
	,move: function(x,y) {
		this.backend.move(x,y);
		this.__x = x;
		this.__y = y;
	}
	,resize: function(width,height) {
		this.backend.resize(width,height);
		this.__width = width;
		this.__height = height;
	}
	,setIcon: function(image) {
		if(image == null) return;
		this.backend.setIcon(image);
	}
	,toString: function() {
		return "[object Window]";
	}
	,get_display: function() {
		return this.backend.getDisplay();
	}
	,get_borderless: function() {
		return this.__borderless;
	}
	,set_borderless: function(value) {
		return this.__borderless = this.backend.setBorderless(value);
	}
	,get_enableTextEvents: function() {
		return this.backend.getEnableTextEvents();
	}
	,set_enableTextEvents: function(value) {
		return this.backend.setEnableTextEvents(value);
	}
	,get_fullscreen: function() {
		return this.__fullscreen;
	}
	,set_fullscreen: function(value) {
		return this.__fullscreen = this.backend.setFullscreen(value);
	}
	,get_height: function() {
		return this.__height;
	}
	,set_height: function(value) {
		this.resize(this.__width,value);
		return this.__height;
	}
	,get_maximized: function() {
		return this.__maximized;
	}
	,set_maximized: function(value) {
		this.__minimized = false;
		return this.__maximized = this.backend.setMaximized(value);
	}
	,get_minimized: function() {
		return this.__minimized;
	}
	,set_minimized: function(value) {
		this.__maximized = false;
		return this.__minimized = this.backend.setMinimized(value);
	}
	,get_resizable: function() {
		return this.__resizable;
	}
	,set_resizable: function(value) {
		this.__resizable = this.backend.setResizable(value);
		return this.__resizable;
	}
	,get_scale: function() {
		return this.__scale;
	}
	,get_title: function() {
		return this.__title;
	}
	,set_title: function(value) {
		return this.__title = this.backend.setTitle(this.__title);
	}
	,get_width: function() {
		return this.__width;
	}
	,set_width: function(value) {
		this.resize(value,this.__height);
		return this.__width;
	}
	,get_x: function() {
		return this.__x;
	}
	,set_x: function(value) {
		this.move(value,this.__y);
		return this.__x;
	}
	,get_y: function() {
		return this.__y;
	}
	,set_y: function(value) {
		this.move(this.__x,value);
		return this.__y;
	}
	,__class__: lime_ui_Window
	,__properties__: {set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x",set_width:"set_width",get_width:"get_width",set_title:"set_title",get_title:"get_title",get_scale:"get_scale",set_resizable:"set_resizable",get_resizable:"get_resizable",set_minimized:"set_minimized",get_minimized:"get_minimized",set_maximized:"set_maximized",get_maximized:"get_maximized",set_height:"set_height",get_height:"get_height",set_fullscreen:"set_fullscreen",get_fullscreen:"get_fullscreen",set_enableTextEvents:"set_enableTextEvents",get_enableTextEvents:"get_enableTextEvents",get_display:"get_display",set_borderless:"set_borderless",get_borderless:"get_borderless"}
};
var lime_utils_TAError = $hxClasses["lime.utils.TAError"] = { __ename__ : ["lime","utils","TAError"], __constructs__ : ["RangeError"] };
lime_utils_TAError.RangeError = ["RangeError",0];
lime_utils_TAError.RangeError.toString = $estr;
lime_utils_TAError.RangeError.__enum__ = lime_utils_TAError;
var lime_utils_Bytes = function(length,bytesData) {
	haxe_io_Bytes.call(this,bytesData);
};
$hxClasses["lime.utils.Bytes"] = lime_utils_Bytes;
lime_utils_Bytes.__name__ = ["lime","utils","Bytes"];
lime_utils_Bytes.alloc = function(length) {
	var bytes = haxe_io_Bytes.alloc(length);
	return new lime_utils_Bytes(bytes.length,bytes.b.bufferValue);
};
lime_utils_Bytes.fastGet = function(b,pos) {
	return b.bytes[pos];
};
lime_utils_Bytes.ofData = function(b) {
	var bytes = haxe_io_Bytes.ofData(b);
	return new lime_utils_Bytes(bytes.length,bytes.b.bufferValue);
};
lime_utils_Bytes.ofString = function(s) {
	var bytes = haxe_io_Bytes.ofString(s);
	return new lime_utils_Bytes(bytes.length,bytes.b.bufferValue);
};
lime_utils_Bytes.readFile = function(path) {
	return null;
};
lime_utils_Bytes.lime_bytes_from_data_pointer = function(data,length) {
	return lime_utils_Bytes.cffi_lime_bytes_from_data_pointer(data,length);
};
lime_utils_Bytes.lime_bytes_get_data_pointer = function(data) {
	return lime_utils_Bytes.cffi_lime_bytes_get_data_pointer(data);
};
lime_utils_Bytes.lime_bytes_read_file = function(path) {
	return lime_utils_Bytes.cffi_lime_bytes_read_file(path);
};
lime_utils_Bytes.__super__ = haxe_io_Bytes;
lime_utils_Bytes.prototype = $extend(haxe_io_Bytes.prototype,{
	__class__: lime_utils_Bytes
});
var lime_utils__$Float32Array_Float32Array_$Impl_$ = {};
$hxClasses["lime.utils._Float32Array.Float32Array_Impl_"] = lime_utils__$Float32Array_Float32Array_$Impl_$;
lime_utils__$Float32Array_Float32Array_$Impl_$.__name__ = ["lime","utils","_Float32Array","Float32Array_Impl_"];
lime_utils__$Float32Array_Float32Array_$Impl_$.__set = function(this1,idx,val) {
	return this1[idx] = val;
};
lime_utils__$Float32Array_Float32Array_$Impl_$.__get = function(this1,idx) {
	return this1[idx];
};
lime_utils__$Float32Array_Float32Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) byteOffset = 0;
	if(byteOffset == null) return new Float32Array(bytes.b.bufferValue);
	if(len == null) return new Float32Array(bytes.b.bufferValue,byteOffset);
	return new Float32Array(bytes.b.bufferValue,byteOffset,len);
};
lime_utils__$Float32Array_Float32Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
lime_utils__$Float32Array_Float32Array_$Impl_$.toString = function(this1) {
	if(this1 != null) return "Float32Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]"; else return null;
};
var lime_utils_GLUtils = function() { };
$hxClasses["lime.utils.GLUtils"] = lime_utils_GLUtils;
lime_utils_GLUtils.__name__ = ["lime","utils","GLUtils"];
lime_utils_GLUtils.compileShader = function(source,type) {
	var shader = lime_graphics_opengl_GL.context.createShader(type);
	lime_graphics_opengl_GL.context.shaderSource(shader,source);
	lime_graphics_opengl_GL.context.compileShader(shader);
	if(lime_graphics_opengl_GL.context.getShaderParameter(shader,35713) == 0) switch(type) {
	case 35633:
		throw new js__$Boot_HaxeError("Error compiling vertex shader");
		break;
	case 35632:
		throw new js__$Boot_HaxeError("Error compiling fragment shader");
		break;
	default:
		throw new js__$Boot_HaxeError("Error compiling unknown shader type");
	}
	return shader;
};
lime_utils_GLUtils.createProgram = function(vertexSource,fragmentSource) {
	var vertexShader = lime_utils_GLUtils.compileShader(vertexSource,35633);
	var fragmentShader = lime_utils_GLUtils.compileShader(fragmentSource,35632);
	var program = lime_graphics_opengl_GL.context.createProgram();
	lime_graphics_opengl_GL.context.attachShader(program,vertexShader);
	lime_graphics_opengl_GL.context.attachShader(program,fragmentShader);
	lime_graphics_opengl_GL.context.linkProgram(program);
	if(lime_graphics_opengl_GL.context.getProgramParameter(program,35714) == 0) throw new js__$Boot_HaxeError("Unable to initialize the shader program.");
	return program;
};
var lime_utils__$Int16Array_Int16Array_$Impl_$ = {};
$hxClasses["lime.utils._Int16Array.Int16Array_Impl_"] = lime_utils__$Int16Array_Int16Array_$Impl_$;
lime_utils__$Int16Array_Int16Array_$Impl_$.__name__ = ["lime","utils","_Int16Array","Int16Array_Impl_"];
lime_utils__$Int16Array_Int16Array_$Impl_$.__set = function(this1,idx,val) {
	return this1[idx] = val;
};
lime_utils__$Int16Array_Int16Array_$Impl_$.__get = function(this1,idx) {
	return this1[idx];
};
lime_utils__$Int16Array_Int16Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) byteOffset = 0;
	if(byteOffset == null) return new Int16Array(bytes.b.bufferValue);
	if(len == null) return new Int16Array(bytes.b.bufferValue,byteOffset);
	return new Int16Array(bytes.b.bufferValue,byteOffset,len);
};
lime_utils__$Int16Array_Int16Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
lime_utils__$Int16Array_Int16Array_$Impl_$.toString = function(this1) {
	if(this1 != null) return "Int16Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]"; else return null;
};
var lime_utils__$Int32Array_Int32Array_$Impl_$ = {};
$hxClasses["lime.utils._Int32Array.Int32Array_Impl_"] = lime_utils__$Int32Array_Int32Array_$Impl_$;
lime_utils__$Int32Array_Int32Array_$Impl_$.__name__ = ["lime","utils","_Int32Array","Int32Array_Impl_"];
lime_utils__$Int32Array_Int32Array_$Impl_$.__set = function(this1,idx,val) {
	return this1[idx] = val;
};
lime_utils__$Int32Array_Int32Array_$Impl_$.__get = function(this1,idx) {
	return this1[idx];
};
lime_utils__$Int32Array_Int32Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) byteOffset = 0;
	if(byteOffset == null) return new Int32Array(bytes.b.bufferValue);
	if(len == null) return new Int32Array(bytes.b.bufferValue,byteOffset);
	return new Int32Array(bytes.b.bufferValue,byteOffset,len);
};
lime_utils__$Int32Array_Int32Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
lime_utils__$Int32Array_Int32Array_$Impl_$.toString = function(this1) {
	if(this1 != null) return "Int32Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]"; else return null;
};
var lime_utils_LZMA = function() { };
$hxClasses["lime.utils.LZMA"] = lime_utils_LZMA;
lime_utils_LZMA.__name__ = ["lime","utils","LZMA"];
lime_utils_LZMA.decode = function(bytes) {
	return null;
};
lime_utils_LZMA.encode = function(bytes) {
	return null;
};
var lime_utils__$UInt16Array_UInt16Array_$Impl_$ = {};
$hxClasses["lime.utils._UInt16Array.UInt16Array_Impl_"] = lime_utils__$UInt16Array_UInt16Array_$Impl_$;
lime_utils__$UInt16Array_UInt16Array_$Impl_$.__name__ = ["lime","utils","_UInt16Array","UInt16Array_Impl_"];
lime_utils__$UInt16Array_UInt16Array_$Impl_$.__set = function(this1,idx,val) {
	return this1[idx] = val;
};
lime_utils__$UInt16Array_UInt16Array_$Impl_$.__get = function(this1,idx) {
	return this1[idx];
};
lime_utils__$UInt16Array_UInt16Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) byteOffset = 0;
	if(byteOffset == null) return new Uint16Array(bytes.b.bufferValue);
	if(len == null) return new Uint16Array(bytes.b.bufferValue,byteOffset);
	return new Uint16Array(bytes.b.bufferValue,byteOffset,len);
};
lime_utils__$UInt16Array_UInt16Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
lime_utils__$UInt16Array_UInt16Array_$Impl_$.toString = function(this1) {
	if(this1 != null) return "UInt16Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]"; else return null;
};
var lime_utils__$UInt32Array_UInt32Array_$Impl_$ = {};
$hxClasses["lime.utils._UInt32Array.UInt32Array_Impl_"] = lime_utils__$UInt32Array_UInt32Array_$Impl_$;
lime_utils__$UInt32Array_UInt32Array_$Impl_$.__name__ = ["lime","utils","_UInt32Array","UInt32Array_Impl_"];
lime_utils__$UInt32Array_UInt32Array_$Impl_$.__set = function(this1,idx,val) {
	return this1[idx] = val;
};
lime_utils__$UInt32Array_UInt32Array_$Impl_$.__get = function(this1,idx) {
	return this1[idx];
};
lime_utils__$UInt32Array_UInt32Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) byteOffset = 0;
	if(byteOffset == null) return new Uint32Array(bytes.b.bufferValue);
	if(len == null) return new Uint32Array(bytes.b.bufferValue,byteOffset);
	return new Uint32Array(bytes.b.bufferValue,byteOffset,len);
};
lime_utils__$UInt32Array_UInt32Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
lime_utils__$UInt32Array_UInt32Array_$Impl_$.toString = function(this1) {
	if(this1 != null) return "UInt32Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]"; else return null;
};
var lime_utils__$UInt8Array_UInt8Array_$Impl_$ = {};
$hxClasses["lime.utils._UInt8Array.UInt8Array_Impl_"] = lime_utils__$UInt8Array_UInt8Array_$Impl_$;
lime_utils__$UInt8Array_UInt8Array_$Impl_$.__name__ = ["lime","utils","_UInt8Array","UInt8Array_Impl_"];
lime_utils__$UInt8Array_UInt8Array_$Impl_$.__set = function(this1,idx,val) {
	return this1[idx] = val;
};
lime_utils__$UInt8Array_UInt8Array_$Impl_$.__get = function(this1,idx) {
	return this1[idx];
};
lime_utils__$UInt8Array_UInt8Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) return new Uint8Array(bytes.b.bufferValue);
	if(len == null) return new Uint8Array(bytes.b.bufferValue,byteOffset);
	return new Uint8Array(bytes.b.bufferValue,byteOffset,len);
};
lime_utils__$UInt8Array_UInt8Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
lime_utils__$UInt8Array_UInt8Array_$Impl_$.toString = function(this1) {
	if(this1 != null) return "UInt8Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]"; else return null;
};
var motion_actuators_IGenericActuator = function() { };
$hxClasses["motion.actuators.IGenericActuator"] = motion_actuators_IGenericActuator;
motion_actuators_IGenericActuator.__name__ = ["motion","actuators","IGenericActuator"];
motion_actuators_IGenericActuator.prototype = {
	__class__: motion_actuators_IGenericActuator
};
var motion_actuators_GenericActuator = function(target,duration,properties) {
	this._autoVisible = true;
	this._delay = 0;
	this._reflect = false;
	this._repeat = 0;
	this._reverse = false;
	this._smartRotation = false;
	this._snapping = false;
	this.special = false;
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	this._ease = motion_Actuate.defaultEase;
};
$hxClasses["motion.actuators.GenericActuator"] = motion_actuators_GenericActuator;
motion_actuators_GenericActuator.__name__ = ["motion","actuators","GenericActuator"];
motion_actuators_GenericActuator.__interfaces__ = [motion_actuators_IGenericActuator];
motion_actuators_GenericActuator.prototype = {
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,i)) Reflect.setField(this.target,i,Reflect.field(this.properties,i)); else Reflect.setProperty(this.target,i,Reflect.field(this.properties,i));
		}
	}
	,autoVisible: function(value) {
		if(value == null) value = true;
		this._autoVisible = value;
		return this;
	}
	,callMethod: function(method,params) {
		if(params == null) params = [];
		return Reflect.callMethod(method,method,params);
	}
	,change: function() {
		if(this._onUpdate != null) this.callMethod(this._onUpdate,this._onUpdateParams);
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) sendEvent = true;
		if(sendEvent) {
			this.change();
			if(this._onComplete != null) this.callMethod(this._onComplete,this._onCompleteParams);
		}
		motion_Actuate.unload(this);
	}
	,delay: function(duration) {
		this._delay = duration;
		return this;
	}
	,ease: function(easing) {
		this._ease = easing;
		return this;
	}
	,move: function() {
	}
	,onComplete: function(handler,parameters) {
		this._onComplete = handler;
		if(parameters == null) this._onCompleteParams = []; else this._onCompleteParams = parameters;
		if(this.duration == 0) this.complete();
		return this;
	}
	,onRepeat: function(handler,parameters) {
		this._onRepeat = handler;
		if(parameters == null) this._onRepeatParams = []; else this._onRepeatParams = parameters;
		return this;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) this._onUpdateParams = []; else this._onUpdateParams = parameters;
		return this;
	}
	,onPause: function(handler,parameters) {
		this._onPause = handler;
		if(parameters == null) this._onPauseParams = []; else this._onPauseParams = parameters;
		return this;
	}
	,onResume: function(handler,parameters) {
		this._onResume = handler;
		if(parameters == null) this._onResumeParams = []; else this._onResumeParams = parameters;
		return this;
	}
	,pause: function() {
		if(this._onPause != null) this.callMethod(this._onPause,this._onPauseParams);
	}
	,reflect: function(value) {
		if(value == null) value = true;
		this._reflect = value;
		this.special = true;
		return this;
	}
	,repeat: function(times) {
		if(times == null) times = -1;
		this._repeat = times;
		return this;
	}
	,resume: function() {
		if(this._onResume != null) this.callMethod(this._onResume,this._onResumeParams);
	}
	,reverse: function(value) {
		if(value == null) value = true;
		this._reverse = value;
		this.special = true;
		return this;
	}
	,smartRotation: function(value) {
		if(value == null) value = true;
		this._smartRotation = value;
		this.special = true;
		return this;
	}
	,snapping: function(value) {
		if(value == null) value = true;
		this._snapping = value;
		this.special = true;
		return this;
	}
	,stop: function(properties,complete,sendEvent) {
	}
	,__class__: motion_actuators_GenericActuator
};
var motion_actuators_SimpleActuator = function(target,duration,properties) {
	this.active = true;
	this.propertyDetails = [];
	this.sendChange = false;
	this.paused = false;
	this.cacheVisible = false;
	this.initialized = false;
	this.setVisible = false;
	this.toggleVisible = false;
	this.startTime = openfl_Lib.getTimer() / 1000;
	motion_actuators_GenericActuator.call(this,target,duration,properties);
	if(!motion_actuators_SimpleActuator.addedEvent) {
		motion_actuators_SimpleActuator.addedEvent = true;
		openfl_Lib.current.stage.addEventListener("enterFrame",motion_actuators_SimpleActuator.stage_onEnterFrame);
	}
};
$hxClasses["motion.actuators.SimpleActuator"] = motion_actuators_SimpleActuator;
motion_actuators_SimpleActuator.__name__ = ["motion","actuators","SimpleActuator"];
motion_actuators_SimpleActuator.stage_onEnterFrame = function(event) {
	var currentTime = openfl_Lib.getTimer() / 1000;
	var actuator;
	var j = 0;
	var cleanup = false;
	var _g1 = 0;
	var _g = motion_actuators_SimpleActuator.actuatorsLength;
	while(_g1 < _g) {
		var i = _g1++;
		actuator = motion_actuators_SimpleActuator.actuators[j];
		if(actuator != null && actuator.active) {
			if(currentTime >= actuator.timeOffset) actuator.update(currentTime);
			j++;
		} else {
			motion_actuators_SimpleActuator.actuators.splice(j,1);
			--motion_actuators_SimpleActuator.actuatorsLength;
		}
	}
};
motion_actuators_SimpleActuator.__super__ = motion_actuators_GenericActuator;
motion_actuators_SimpleActuator.prototype = $extend(motion_actuators_GenericActuator.prototype,{
	setField_openfl_geom_Transform: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) target[propertyName] = value; else Reflect.setProperty(target,propertyName,value);
	}
	,setField_motion_actuators_TransformActuator_T: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) target[propertyName] = value; else Reflect.setProperty(target,propertyName,value);
	}
	,setField_motion_actuators_MotionPathActuator_T: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) target[propertyName] = value; else Reflect.setProperty(target,propertyName,value);
	}
	,setField_openfl_display_DisplayObject: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) target[propertyName] = value; else Reflect.setProperty(target,propertyName,value);
	}
	,setField_motion_actuators_SimpleActuator_T: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) target[propertyName] = value; else Reflect.setProperty(target,propertyName,value);
	}
	,autoVisible: function(value) {
		if(value == null) value = true;
		this._autoVisible = value;
		if(!value) {
			this.toggleVisible = false;
			if(this.setVisible) this.setField_motion_actuators_SimpleActuator_T(this.target,"visible",this.cacheVisible);
		}
		return this;
	}
	,delay: function(duration) {
		this._delay = duration;
		this.timeOffset = this.startTime + duration;
		return this;
	}
	,getField: function(target,propertyName) {
		var value = null;
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) value = Reflect.field(target,propertyName); else value = Reflect.getProperty(target,propertyName);
		return value;
	}
	,initialize: function() {
		var details;
		var start;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var isField = true;
			if(Object.prototype.hasOwnProperty.call(this.target,i) && !(this.target.__properties__ && this.target.__properties__["set_" + i])) start = Reflect.field(this.target,i); else {
				isField = false;
				start = Reflect.getProperty(this.target,i);
			}
			if(typeof(start) == "number") {
				var value = this.getField(this.properties,i);
				if(start == null) start = 0;
				if(value == null) value = 0;
				details = new motion_actuators_PropertyDetails(this.target,i,start,value - start,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,move: function() {
		this.toggleVisible = Object.prototype.hasOwnProperty.call(this.properties,"alpha") && js_Boot.__instanceof(this.target,openfl_display_DisplayObject);
		if(this.toggleVisible && this.properties.alpha != 0 && !this.getField(this.target,"visible")) {
			this.setVisible = true;
			this.cacheVisible = this.getField(this.target,"visible");
			this.setField_motion_actuators_SimpleActuator_T(this.target,"visible",true);
		}
		this.timeOffset = this.startTime;
		motion_actuators_SimpleActuator.actuators.push(this);
		++motion_actuators_SimpleActuator.actuatorsLength;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) this._onUpdateParams = []; else this._onUpdateParams = parameters;
		this.sendChange = true;
		return this;
	}
	,pause: function() {
		if(!this.paused) {
			this.paused = true;
			motion_actuators_GenericActuator.prototype.pause.call(this);
			this.pauseTime = openfl_Lib.getTimer();
		}
	}
	,resume: function() {
		if(this.paused) {
			this.paused = false;
			this.timeOffset += (openfl_Lib.getTimer() - this.pauseTime) / 1000;
			motion_actuators_GenericActuator.prototype.resume.call(this);
		}
	}
	,setProperty: function(details,value) {
		if(details.isField) details.target[details.propertyName] = value; else Reflect.setProperty(details.target,details.propertyName,value);
	}
	,stop: function(properties,complete,sendEvent) {
		if(this.active) {
			if(properties == null) {
				this.active = false;
				if(complete) this.apply();
				this.complete(sendEvent);
				return;
			}
			var _g = 0;
			var _g1 = Reflect.fields(properties);
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(Object.prototype.hasOwnProperty.call(this.properties,i)) {
					this.active = false;
					if(complete) this.apply();
					this.complete(sendEvent);
					return;
				}
			}
		}
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var i;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) tweenPosition = 1;
			if(!this.initialized) this.initialize();
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g1 = 0;
				var _g = this.detailsLength;
				while(_g1 < _g) {
					var i1 = _g1++;
					details = this.propertyDetails[i1];
					this.setProperty(details,details.start + details.change * easing);
				}
			} else {
				if(!this._reverse) easing = this._ease.calculate(tweenPosition); else easing = this._ease.calculate(1 - tweenPosition);
				var endValue;
				var _g11 = 0;
				var _g2 = this.detailsLength;
				while(_g11 < _g2) {
					var i2 = _g11++;
					details = this.propertyDetails[i2];
					if(this._smartRotation && (details.propertyName == "rotation" || details.propertyName == "rotationX" || details.propertyName == "rotationY" || details.propertyName == "rotationZ")) {
						var rotation = details.change % 360;
						if(rotation > 180) rotation -= 360; else if(rotation < -180) rotation += 360;
						endValue = details.start + rotation * easing;
					} else endValue = details.start + details.change * easing;
					if(!this._snapping) {
						if(details.isField) details.target[details.propertyName] = endValue; else Reflect.setProperty(details.target,details.propertyName,endValue);
					} else this.setProperty(details,Math.round(endValue));
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					if(this.toggleVisible && this.getField(this.target,"alpha") == 0) this.setField_motion_actuators_SimpleActuator_T(this.target,"visible",false);
					this.complete(true);
					return;
				} else {
					if(this._onRepeat != null) this.callMethod(this._onRepeat,this._onRepeatParams);
					if(this._reflect) this._reverse = !this._reverse;
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) this._repeat--;
				}
			}
			if(this.sendChange) this.change();
		}
	}
	,__class__: motion_actuators_SimpleActuator
});
var motion_easing_Expo = function() { };
$hxClasses["motion.easing.Expo"] = motion_easing_Expo;
motion_easing_Expo.__name__ = ["motion","easing","Expo"];
motion_easing_Expo.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"}
motion_easing_Expo.get_easeIn = function() {
	return new motion_easing_ExpoEaseIn();
};
motion_easing_Expo.get_easeInOut = function() {
	return new motion_easing_ExpoEaseInOut();
};
motion_easing_Expo.get_easeOut = function() {
	return new motion_easing_ExpoEaseOut();
};
var motion_easing_IEasing = function() { };
$hxClasses["motion.easing.IEasing"] = motion_easing_IEasing;
motion_easing_IEasing.__name__ = ["motion","easing","IEasing"];
motion_easing_IEasing.prototype = {
	__class__: motion_easing_IEasing
};
var motion_easing_ExpoEaseOut = function() {
};
$hxClasses["motion.easing.ExpoEaseOut"] = motion_easing_ExpoEaseOut;
motion_easing_ExpoEaseOut.__name__ = ["motion","easing","ExpoEaseOut"];
motion_easing_ExpoEaseOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_ExpoEaseOut.prototype = {
	calculate: function(k) {
		if(k == 1) return 1; else return 1 - Math.pow(2,-10 * k);
	}
	,ease: function(t,b,c,d) {
		if(t == d) return b + c; else return c * (1 - Math.pow(2,-10 * t / d)) + b;
	}
	,__class__: motion_easing_ExpoEaseOut
};
var motion_Actuate = function() { };
$hxClasses["motion.Actuate"] = motion_Actuate;
motion_Actuate.__name__ = ["motion","Actuate"];
motion_Actuate.apply = function(target,properties,customActuator) {
	motion_Actuate.stop(target,properties);
	if(customActuator == null) customActuator = motion_Actuate.defaultActuator;
	var actuator = Type.createInstance(customActuator,[target,0,properties]);
	actuator.apply();
	return actuator;
};
motion_Actuate.effects = function(target,duration,overwrite) {
	if(overwrite == null) overwrite = true;
	return new motion__$Actuate_EffectsOptions(target,duration,overwrite);
};
motion_Actuate.getLibrary = function(target,allowCreation) {
	if(allowCreation == null) allowCreation = true;
	if(!(motion_Actuate.targetLibraries.h.__keys__[target.__id__] != null) && allowCreation) motion_Actuate.targetLibraries.set(target,[]);
	return motion_Actuate.targetLibraries.h[target.__id__];
};
motion_Actuate.isActive = function() {
	var result = false;
	var $it0 = motion_Actuate.targetLibraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		result = true;
		break;
	}
	return result;
};
motion_Actuate.motionPath = function(target,duration,properties,overwrite) {
	if(overwrite == null) overwrite = true;
	return motion_Actuate.tween(target,duration,properties,overwrite,motion_actuators_MotionPathActuator);
};
motion_Actuate.pause = function(target) {
	if(js_Boot.__instanceof(target,motion_actuators_IGenericActuator)) {
		var actuator = target;
		actuator.pause();
	} else {
		var library = motion_Actuate.getLibrary(target,false);
		if(library != null) {
			var _g = 0;
			while(_g < library.length) {
				var actuator1 = library[_g];
				++_g;
				actuator1.pause();
			}
		}
	}
};
motion_Actuate.pauseAll = function() {
	var $it0 = motion_Actuate.targetLibraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var _g = 0;
		while(_g < library.length) {
			var actuator = library[_g];
			++_g;
			actuator.pause();
		}
	}
};
motion_Actuate.reset = function() {
	var $it0 = motion_Actuate.targetLibraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var i = library.length - 1;
		while(i >= 0) {
			library[i].stop(null,false,false);
			i--;
		}
	}
	motion_Actuate.targetLibraries = new haxe_ds_ObjectMap();
};
motion_Actuate.resume = function(target) {
	if(js_Boot.__instanceof(target,motion_actuators_IGenericActuator)) {
		var actuator = target;
		actuator.resume();
	} else {
		var library = motion_Actuate.getLibrary(target,false);
		if(library != null) {
			var _g = 0;
			while(_g < library.length) {
				var actuator1 = library[_g];
				++_g;
				actuator1.resume();
			}
		}
	}
};
motion_Actuate.resumeAll = function() {
	var $it0 = motion_Actuate.targetLibraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var _g = 0;
		while(_g < library.length) {
			var actuator = library[_g];
			++_g;
			actuator.resume();
		}
	}
};
motion_Actuate.stop = function(target,properties,complete,sendEvent) {
	if(sendEvent == null) sendEvent = true;
	if(complete == null) complete = false;
	if(target != null) {
		if(js_Boot.__instanceof(target,motion_actuators_IGenericActuator)) {
			var actuator = target;
			actuator.stop(null,complete,sendEvent);
		} else {
			var library = motion_Actuate.getLibrary(target,false);
			if(library != null) {
				if(typeof(properties) == "string") {
					var temp = { };
					Reflect.setField(temp,properties,null);
					properties = temp;
				} else if((properties instanceof Array) && properties.__enum__ == null) {
					var temp1 = { };
					var _g = 0;
					var _g1;
					_g1 = js_Boot.__cast(properties , Array);
					while(_g < _g1.length) {
						var property = _g1[_g];
						++_g;
						Reflect.setField(temp1,property,null);
					}
					properties = temp1;
				}
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(properties,complete,sendEvent);
					i--;
				}
			}
		}
	}
};
motion_Actuate.timer = function(duration,customActuator) {
	return motion_Actuate.tween(new motion__$Actuate_TweenTimer(0),duration,new motion__$Actuate_TweenTimer(1),false,customActuator);
};
motion_Actuate.transform = function(target,duration,overwrite) {
	if(overwrite == null) overwrite = true;
	if(duration == null) duration = 0;
	return new motion__$Actuate_TransformOptions(target,duration,overwrite);
};
motion_Actuate.tween = function(target,duration,properties,overwrite,customActuator) {
	if(overwrite == null) overwrite = true;
	if(target != null) {
		if(duration > 0) {
			if(customActuator == null) customActuator = motion_Actuate.defaultActuator;
			var actuator = Type.createInstance(customActuator,[target,duration,properties]);
			var library = motion_Actuate.getLibrary(actuator.target);
			if(overwrite) {
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(actuator.properties,false,false);
					i--;
				}
				library = motion_Actuate.getLibrary(actuator.target);
			}
			library.push(actuator);
			actuator.move();
			return actuator;
		} else return motion_Actuate.apply(target,properties,customActuator);
	}
	return null;
};
motion_Actuate.unload = function(actuator) {
	var target = actuator.target;
	if(motion_Actuate.targetLibraries.h.__keys__[target.__id__] != null) {
		HxOverrides.remove(motion_Actuate.targetLibraries.h[target.__id__],actuator);
		if(motion_Actuate.targetLibraries.h[target.__id__].length == 0) motion_Actuate.targetLibraries.remove(target);
	}
};
motion_Actuate.update = function(target,duration,start,end,overwrite) {
	if(overwrite == null) overwrite = true;
	var properties = { start : start, end : end};
	return motion_Actuate.tween(target,duration,properties,overwrite,motion_actuators_MethodActuator);
};
var motion__$Actuate_EffectsOptions = function(target,duration,overwrite) {
	this.target = target;
	this.duration = duration;
	this.overwrite = overwrite;
};
$hxClasses["motion._Actuate.EffectsOptions"] = motion__$Actuate_EffectsOptions;
motion__$Actuate_EffectsOptions.__name__ = ["motion","_Actuate","EffectsOptions"];
motion__$Actuate_EffectsOptions.prototype = {
	filter: function(reference,properties) {
		properties.filter = reference;
		return motion_Actuate.tween(this.target,this.duration,properties,this.overwrite,motion_actuators_FilterActuator);
	}
	,__class__: motion__$Actuate_EffectsOptions
};
var motion__$Actuate_TransformOptions = function(target,duration,overwrite) {
	this.target = target;
	this.duration = duration;
	this.overwrite = overwrite;
};
$hxClasses["motion._Actuate.TransformOptions"] = motion__$Actuate_TransformOptions;
motion__$Actuate_TransformOptions.__name__ = ["motion","_Actuate","TransformOptions"];
motion__$Actuate_TransformOptions.prototype = {
	color: function(value,strength,alpha) {
		if(strength == null) strength = 1;
		if(value == null) value = 0;
		var properties = { colorValue : value, colorStrength : strength};
		if(alpha != null) properties.colorAlpha = alpha;
		return motion_Actuate.tween(this.target,this.duration,properties,this.overwrite,motion_actuators_TransformActuator);
	}
	,sound: function(volume,pan) {
		var properties = { };
		if(volume != null) properties.soundVolume = volume;
		if(pan != null) properties.soundPan = pan;
		return motion_Actuate.tween(this.target,this.duration,properties,this.overwrite,motion_actuators_TransformActuator);
	}
	,__class__: motion__$Actuate_TransformOptions
};
var motion__$Actuate_TweenTimer = function(progress) {
	this.progress = progress;
};
$hxClasses["motion._Actuate.TweenTimer"] = motion__$Actuate_TweenTimer;
motion__$Actuate_TweenTimer.__name__ = ["motion","_Actuate","TweenTimer"];
motion__$Actuate_TweenTimer.prototype = {
	__class__: motion__$Actuate_TweenTimer
};
var motion_MotionPath = function() {
	this._x = new motion_ComponentPath();
	this._y = new motion_ComponentPath();
	this._rotation = null;
};
$hxClasses["motion.MotionPath"] = motion_MotionPath;
motion_MotionPath.__name__ = ["motion","MotionPath"];
motion_MotionPath.prototype = {
	bezier: function(x,y,controlX,controlY,strength) {
		if(strength == null) strength = 1;
		this._x.addPath(new motion_BezierPath(x,controlX,strength));
		this._y.addPath(new motion_BezierPath(y,controlY,strength));
		return this;
	}
	,line: function(x,y,strength) {
		if(strength == null) strength = 1;
		this._x.addPath(new motion_LinearPath(x,strength));
		this._y.addPath(new motion_LinearPath(y,strength));
		return this;
	}
	,get_rotation: function() {
		if(this._rotation == null) this._rotation = new motion_RotationPath(this._x,this._y);
		return this._rotation;
	}
	,get_x: function() {
		return this._x;
	}
	,get_y: function() {
		return this._y;
	}
	,__class__: motion_MotionPath
	,__properties__: {get_y:"get_y",get_x:"get_x",get_rotation:"get_rotation"}
};
var motion_IComponentPath = function() { };
$hxClasses["motion.IComponentPath"] = motion_IComponentPath;
motion_IComponentPath.__name__ = ["motion","IComponentPath"];
motion_IComponentPath.prototype = {
	__class__: motion_IComponentPath
	,__properties__: {get_end:"get_end"}
};
var motion_ComponentPath = function() {
	this.paths = [];
	this.start = 0;
	this.totalStrength = 0;
};
$hxClasses["motion.ComponentPath"] = motion_ComponentPath;
motion_ComponentPath.__name__ = ["motion","ComponentPath"];
motion_ComponentPath.__interfaces__ = [motion_IComponentPath];
motion_ComponentPath.prototype = {
	addPath: function(path) {
		this.paths.push(path);
		this.totalStrength += path.strength;
	}
	,calculate: function(k) {
		if(this.paths.length == 1) return this.paths[0].calculate(this.start,k); else {
			var ratio = k * this.totalStrength;
			var lastEnd = this.start;
			var _g = 0;
			var _g1 = this.paths;
			while(_g < _g1.length) {
				var path = _g1[_g];
				++_g;
				if(ratio > path.strength) {
					ratio -= path.strength;
					lastEnd = path.end;
				} else return path.calculate(lastEnd,ratio / path.strength);
			}
		}
		return 0;
	}
	,get_end: function() {
		if(this.paths.length > 0) {
			var path = this.paths[this.paths.length - 1];
			return path.end;
		} else return this.start;
	}
	,__class__: motion_ComponentPath
	,__properties__: {get_end:"get_end"}
};
var motion_BezierPath = function(end,control,strength) {
	this.end = end;
	this.control = control;
	this.strength = strength;
};
$hxClasses["motion.BezierPath"] = motion_BezierPath;
motion_BezierPath.__name__ = ["motion","BezierPath"];
motion_BezierPath.prototype = {
	calculate: function(start,k) {
		return (1 - k) * (1 - k) * start + 2 * (1 - k) * k * this.control + k * k * this.end;
	}
	,__class__: motion_BezierPath
};
var motion_LinearPath = function(end,strength) {
	motion_BezierPath.call(this,end,0,strength);
};
$hxClasses["motion.LinearPath"] = motion_LinearPath;
motion_LinearPath.__name__ = ["motion","LinearPath"];
motion_LinearPath.__super__ = motion_BezierPath;
motion_LinearPath.prototype = $extend(motion_BezierPath.prototype,{
	calculate: function(start,k) {
		return start + k * (this.end - start);
	}
	,__class__: motion_LinearPath
});
var motion_RotationPath = function(x,y) {
	this.step = 0.01;
	this._x = x;
	this._y = y;
	this.offset = 0;
	this.start = this.calculate(0.0);
};
$hxClasses["motion.RotationPath"] = motion_RotationPath;
motion_RotationPath.__name__ = ["motion","RotationPath"];
motion_RotationPath.__interfaces__ = [motion_IComponentPath];
motion_RotationPath.prototype = {
	calculate: function(k) {
		var dX = this._x.calculate(k) - this._x.calculate(k + this.step);
		var dY = this._y.calculate(k) - this._y.calculate(k + this.step);
		var angle = Math.atan2(dY,dX) * (180 / Math.PI);
		angle = (angle + this.offset) % 360;
		return angle;
	}
	,get_end: function() {
		return this.calculate(1.0);
	}
	,__class__: motion_RotationPath
	,__properties__: {get_end:"get_end"}
};
var motion_actuators_FilterActuator = function(target,duration,properties) {
	this.filterIndex = -1;
	motion_actuators_SimpleActuator.call(this,target,duration,properties);
	if(js_Boot.__instanceof(properties.filter,Class)) {
		this.filterClass = properties.filter;
		if(target.get_filters().length == 0) target.set_filters([Type.createInstance(this.filterClass,[])]);
		var _g = 0;
		var _g1 = target.get_filters();
		while(_g < _g1.length) {
			var filter = _g1[_g];
			++_g;
			if(js_Boot.__instanceof(filter,this.filterClass)) this.filter = filter;
		}
	} else {
		this.filterIndex = properties.filter;
		this.filter = target.get_filters()[this.filterIndex];
	}
};
$hxClasses["motion.actuators.FilterActuator"] = motion_actuators_FilterActuator;
motion_actuators_FilterActuator.__name__ = ["motion","actuators","FilterActuator"];
motion_actuators_FilterActuator.__super__ = motion_actuators_SimpleActuator;
motion_actuators_FilterActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype,{
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			if(propertyName != "filter") Reflect.setField(this.filter,propertyName,Reflect.field(this.properties,propertyName));
		}
		var filters = this.getField(this.target,"filters");
		Reflect.setField(filters,this.properties.filter,this.filter);
		this.setField_openfl_display_DisplayObject(this.target,"filters",filters);
	}
	,initialize: function() {
		var details;
		var start;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			if(propertyName != "filter") {
				start = this.getField(this.filter,propertyName);
				details = new motion_actuators_PropertyDetails(this.filter,propertyName,start,Reflect.field(this.properties,propertyName) - start);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		motion_actuators_SimpleActuator.prototype.update.call(this,currentTime);
		var filters = this.target.get_filters();
		if(this.filterIndex > -1) Reflect.setField(filters,this.properties.filter,this.filter); else {
			var _g1 = 0;
			var _g = filters.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(js_Boot.__instanceof(filters[i],this.filterClass)) filters[i] = this.filter;
			}
		}
		this.setField_openfl_display_DisplayObject(this.target,"filters",filters);
	}
	,__class__: motion_actuators_FilterActuator
});
var motion_actuators_MethodActuator = function(target,duration,properties) {
	this.currentParameters = [];
	this.tweenProperties = { };
	motion_actuators_SimpleActuator.call(this,target,duration,properties);
	if(!Object.prototype.hasOwnProperty.call(properties,"start")) this.properties.start = [];
	if(!Object.prototype.hasOwnProperty.call(properties,"end")) this.properties.end = this.properties.start;
	var _g1 = 0;
	var _g = this.properties.start.length;
	while(_g1 < _g) {
		var i = _g1++;
		this.currentParameters.push(this.properties.start[i]);
	}
};
$hxClasses["motion.actuators.MethodActuator"] = motion_actuators_MethodActuator;
motion_actuators_MethodActuator.__name__ = ["motion","actuators","MethodActuator"];
motion_actuators_MethodActuator.__super__ = motion_actuators_SimpleActuator;
motion_actuators_MethodActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype,{
	apply: function() {
		this.callMethod(this.target,this.properties.end);
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) sendEvent = true;
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
		}
		this.callMethod(this.target,this.currentParameters);
		motion_actuators_SimpleActuator.prototype.complete.call(this,sendEvent);
	}
	,initialize: function() {
		var details;
		var propertyName;
		var start;
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			propertyName = "param" + i;
			start = this.properties.start[i];
			this.tweenProperties[propertyName] = start;
			if(typeof(start) == "number" || ((start | 0) === start)) {
				details = new motion_actuators_PropertyDetails(this.tweenProperties,propertyName,start,this.properties.end[i] - start);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		motion_actuators_SimpleActuator.prototype.update.call(this,currentTime);
		if(this.active && !this.paused) {
			var _g1 = 0;
			var _g = this.properties.start.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
			}
			this.callMethod(this.target,this.currentParameters);
		}
	}
	,__class__: motion_actuators_MethodActuator
});
var motion_actuators_MotionPathActuator = function(target,duration,properties) {
	motion_actuators_SimpleActuator.call(this,target,duration,properties);
};
$hxClasses["motion.actuators.MotionPathActuator"] = motion_actuators_MotionPathActuator;
motion_actuators_MotionPathActuator.__name__ = ["motion","actuators","MotionPathActuator"];
motion_actuators_MotionPathActuator.__super__ = motion_actuators_SimpleActuator;
motion_actuators_MotionPathActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype,{
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) Reflect.setField(this.target,propertyName,(js_Boot.__cast(Reflect.field(this.properties,propertyName) , motion_IComponentPath)).get_end()); else Reflect.setProperty(this.target,propertyName,(js_Boot.__cast(Reflect.field(this.properties,propertyName) , motion_IComponentPath)).get_end());
		}
	}
	,initialize: function() {
		var details;
		var path;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			path = js_Boot.__cast(Reflect.field(this.properties,propertyName) , motion_IComponentPath);
			if(path != null) {
				var isField = true;
				if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) path.start = Reflect.field(this.target,propertyName); else {
					isField = false;
					path.start = Reflect.getProperty(this.target,propertyName);
				}
				details = new motion_actuators_PropertyPathDetails(this.target,propertyName,path,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) tweenPosition = 1;
			if(!this.initialized) this.initialize();
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g = 0;
				var _g1 = this.propertyDetails;
				while(_g < _g1.length) {
					var details1 = _g1[_g];
					++_g;
					if(details1.isField) Reflect.setField(details1.target,details1.propertyName,(js_Boot.__cast(details1 , motion_actuators_PropertyPathDetails)).path.calculate(easing)); else Reflect.setProperty(details1.target,details1.propertyName,(js_Boot.__cast(details1 , motion_actuators_PropertyPathDetails)).path.calculate(easing));
				}
			} else {
				if(!this._reverse) easing = this._ease.calculate(tweenPosition); else easing = this._ease.calculate(1 - tweenPosition);
				var endValue;
				var _g2 = 0;
				var _g11 = this.propertyDetails;
				while(_g2 < _g11.length) {
					var details2 = _g11[_g2];
					++_g2;
					if(!this._snapping) {
						if(details2.isField) Reflect.setField(details2.target,details2.propertyName,(js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing)); else Reflect.setProperty(details2.target,details2.propertyName,(js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing));
					} else if(details2.isField) Reflect.setField(details2.target,details2.propertyName,Math.round((js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing))); else Reflect.setProperty(details2.target,details2.propertyName,Math.round((js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing)));
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					if(this.toggleVisible && this.getField(this.target,"alpha") == 0) this.setField_motion_actuators_MotionPathActuator_T(this.target,"visible",false);
					this.complete(true);
					return;
				} else {
					if(this._onRepeat != null) this.callMethod(this._onRepeat,this._onRepeatParams);
					if(this._reflect) this._reverse = !this._reverse;
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) this._repeat--;
				}
			}
			if(this.sendChange) this.change();
		}
	}
	,__class__: motion_actuators_MotionPathActuator
});
var motion_actuators_PropertyDetails = function(target,propertyName,start,change,isField) {
	if(isField == null) isField = true;
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.change = change;
	this.isField = isField;
};
$hxClasses["motion.actuators.PropertyDetails"] = motion_actuators_PropertyDetails;
motion_actuators_PropertyDetails.__name__ = ["motion","actuators","PropertyDetails"];
motion_actuators_PropertyDetails.prototype = {
	__class__: motion_actuators_PropertyDetails
};
var motion_actuators_PropertyPathDetails = function(target,propertyName,path,isField) {
	if(isField == null) isField = true;
	motion_actuators_PropertyDetails.call(this,target,propertyName,0,0,isField);
	this.path = path;
};
$hxClasses["motion.actuators.PropertyPathDetails"] = motion_actuators_PropertyPathDetails;
motion_actuators_PropertyPathDetails.__name__ = ["motion","actuators","PropertyPathDetails"];
motion_actuators_PropertyPathDetails.__super__ = motion_actuators_PropertyDetails;
motion_actuators_PropertyPathDetails.prototype = $extend(motion_actuators_PropertyDetails.prototype,{
	__class__: motion_actuators_PropertyPathDetails
});
var motion_actuators_TransformActuator = function(target,duration,properties) {
	motion_actuators_SimpleActuator.call(this,target,duration,properties);
};
$hxClasses["motion.actuators.TransformActuator"] = motion_actuators_TransformActuator;
motion_actuators_TransformActuator.__name__ = ["motion","actuators","TransformActuator"];
motion_actuators_TransformActuator.__super__ = motion_actuators_SimpleActuator;
motion_actuators_TransformActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype,{
	apply: function() {
		this.initialize();
		if(this.endColorTransform != null) {
			var transform = this.getField(this.target,"transform");
			this.setField_openfl_geom_Transform(transform,"colorTransform",this.endColorTransform);
		}
		if(this.endSoundTransform != null) this.setField_motion_actuators_TransformActuator_T(this.target,"soundTransform",this.endSoundTransform);
	}
	,initialize: function() {
		if(Object.prototype.hasOwnProperty.call(this.properties,"colorValue") && js_Boot.__instanceof(this.target,openfl_display_DisplayObject)) this.initializeColor();
		if(Object.prototype.hasOwnProperty.call(this.properties,"soundVolume") || Object.prototype.hasOwnProperty.call(this.properties,"soundPan")) this.initializeSound();
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,initializeColor: function() {
		this.endColorTransform = new openfl_geom_ColorTransform();
		var color = this.properties.colorValue;
		var strength = this.properties.colorStrength;
		if(strength < 1) {
			var multiplier;
			var offset;
			if(strength < 0.5) {
				multiplier = 1;
				offset = strength * 2;
			} else {
				multiplier = 1 - (strength - 0.5) * 2;
				offset = 1;
			}
			this.endColorTransform.redMultiplier = multiplier;
			this.endColorTransform.greenMultiplier = multiplier;
			this.endColorTransform.blueMultiplier = multiplier;
			this.endColorTransform.redOffset = offset * (color >> 16 & 255);
			this.endColorTransform.greenOffset = offset * (color >> 8 & 255);
			this.endColorTransform.blueOffset = offset * (color & 255);
		} else {
			this.endColorTransform.redMultiplier = 0;
			this.endColorTransform.greenMultiplier = 0;
			this.endColorTransform.blueMultiplier = 0;
			this.endColorTransform.redOffset = color >> 16 & 255;
			this.endColorTransform.greenOffset = color >> 8 & 255;
			this.endColorTransform.blueOffset = color & 255;
		}
		var propertyNames = ["redMultiplier","greenMultiplier","blueMultiplier","redOffset","greenOffset","blueOffset"];
		if(Object.prototype.hasOwnProperty.call(this.properties,"colorAlpha")) {
			this.endColorTransform.alphaMultiplier = this.properties.colorAlpha;
			propertyNames.push("alphaMultiplier");
		} else this.endColorTransform.alphaMultiplier = this.getField(this.target,"alpha");
		var transform = this.getField(this.target,"transform");
		var begin = this.getField(transform,"colorTransform");
		this.tweenColorTransform = new openfl_geom_ColorTransform();
		var details;
		var start;
		var _g = 0;
		while(_g < propertyNames.length) {
			var propertyName = propertyNames[_g];
			++_g;
			start = this.getField(begin,propertyName);
			details = new motion_actuators_PropertyDetails(this.tweenColorTransform,propertyName,start,this.getField(this.endColorTransform,propertyName) - start);
			this.propertyDetails.push(details);
		}
	}
	,initializeSound: function() {
		if(this.getField(this.target,"soundTransform") == null) this.setField_motion_actuators_TransformActuator_T(this.target,"soundTransform",new openfl_media_SoundTransform());
		var start = this.getField(this.target,"soundTransform");
		this.endSoundTransform = this.getField(this.target,"soundTransform");
		this.tweenSoundTransform = new openfl_media_SoundTransform();
		if(Object.prototype.hasOwnProperty.call(this.properties,"soundVolume")) {
			this.endSoundTransform.volume = this.properties.soundVolume;
			this.propertyDetails.push(new motion_actuators_PropertyDetails(this.tweenSoundTransform,"volume",start.volume,this.endSoundTransform.volume - start.volume));
		}
		if(Object.prototype.hasOwnProperty.call(this.properties,"soundPan")) {
			this.endSoundTransform.pan = this.properties.soundPan;
			this.propertyDetails.push(new motion_actuators_PropertyDetails(this.tweenSoundTransform,"pan",start.pan,this.endSoundTransform.pan - start.pan));
		}
	}
	,update: function(currentTime) {
		motion_actuators_SimpleActuator.prototype.update.call(this,currentTime);
		if(this.endColorTransform != null) {
			var transform = this.getField(this.target,"transform");
			this.setField_openfl_geom_Transform(transform,"colorTransform",this.tweenColorTransform);
		}
		if(this.endSoundTransform != null) this.setField_motion_actuators_TransformActuator_T(this.target,"soundTransform",this.tweenSoundTransform);
	}
	,__class__: motion_actuators_TransformActuator
});
var motion_easing_Bounce = function() { };
$hxClasses["motion.easing.Bounce"] = motion_easing_Bounce;
motion_easing_Bounce.__name__ = ["motion","easing","Bounce"];
motion_easing_Bounce.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"}
motion_easing_Bounce.get_easeIn = function() {
	return new motion_easing_BounceEaseIn();
};
motion_easing_Bounce.get_easeInOut = function() {
	return new motion_easing_BounceEaseInOut();
};
motion_easing_Bounce.get_easeOut = function() {
	return new motion_easing_BounceEaseOut();
};
var motion_easing_BounceEaseIn = function() {
};
$hxClasses["motion.easing.BounceEaseIn"] = motion_easing_BounceEaseIn;
motion_easing_BounceEaseIn.__name__ = ["motion","easing","BounceEaseIn"];
motion_easing_BounceEaseIn.__interfaces__ = [motion_easing_IEasing];
motion_easing_BounceEaseIn._ease = function(t,b,c,d) {
	return c - motion_easing_BounceEaseOut._ease(d - t,0,c,d) + b;
};
motion_easing_BounceEaseIn.prototype = {
	calculate: function(k) {
		return 1 - motion_easing_BounceEaseOut._ease(1 - k,0,1,1);
	}
	,ease: function(t,b,c,d) {
		return c - motion_easing_BounceEaseOut._ease(d - t,0,c,d) + b;
	}
	,__class__: motion_easing_BounceEaseIn
};
var motion_easing_BounceEaseInOut = function() {
};
$hxClasses["motion.easing.BounceEaseInOut"] = motion_easing_BounceEaseInOut;
motion_easing_BounceEaseInOut.__name__ = ["motion","easing","BounceEaseInOut"];
motion_easing_BounceEaseInOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_BounceEaseInOut.prototype = {
	calculate: function(k) {
		if(k < .5) return (1 - motion_easing_BounceEaseOut._ease(1 - k * 2,0,1,1)) * .5; else return motion_easing_BounceEaseOut._ease(k * 2 - 1,0,1,1) * .5 + .5;
	}
	,ease: function(t,b,c,d) {
		if(t < d / 2) return (c - motion_easing_BounceEaseOut._ease(d - t * 2,0,c,d)) * .5 + b; else return motion_easing_BounceEaseOut._ease(t * 2 - d,0,c,d) * .5 + c * .5 + b;
	}
	,__class__: motion_easing_BounceEaseInOut
};
var motion_easing_BounceEaseOut = function() {
};
$hxClasses["motion.easing.BounceEaseOut"] = motion_easing_BounceEaseOut;
motion_easing_BounceEaseOut.__name__ = ["motion","easing","BounceEaseOut"];
motion_easing_BounceEaseOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_BounceEaseOut._ease = function(t,b,c,d) {
	if((t /= d) < 0.36363636363636365) return c * (7.5625 * t * t) + b; else if(t < 0.72727272727272729) return c * (7.5625 * (t -= 0.54545454545454541) * t + .75) + b; else if(t < 0.90909090909090906) return c * (7.5625 * (t -= 0.81818181818181823) * t + .9375) + b; else return c * (7.5625 * (t -= 0.95454545454545459) * t + .984375) + b;
};
motion_easing_BounceEaseOut.prototype = {
	calculate: function(k) {
		return motion_easing_BounceEaseOut._ease(k,0,1,1);
	}
	,ease: function(t,b,c,d) {
		return motion_easing_BounceEaseOut._ease(t,b,c,d);
	}
	,__class__: motion_easing_BounceEaseOut
};
var motion_easing_ExpoEaseIn = function() {
};
$hxClasses["motion.easing.ExpoEaseIn"] = motion_easing_ExpoEaseIn;
motion_easing_ExpoEaseIn.__name__ = ["motion","easing","ExpoEaseIn"];
motion_easing_ExpoEaseIn.__interfaces__ = [motion_easing_IEasing];
motion_easing_ExpoEaseIn.prototype = {
	calculate: function(k) {
		if(k == 0) return 0; else return Math.pow(2,10 * (k - 1));
	}
	,ease: function(t,b,c,d) {
		if(t == 0) return b; else return c * Math.pow(2,10 * (t / d - 1)) + b;
	}
	,__class__: motion_easing_ExpoEaseIn
};
var motion_easing_ExpoEaseInOut = function() {
};
$hxClasses["motion.easing.ExpoEaseInOut"] = motion_easing_ExpoEaseInOut;
motion_easing_ExpoEaseInOut.__name__ = ["motion","easing","ExpoEaseInOut"];
motion_easing_ExpoEaseInOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_ExpoEaseInOut.prototype = {
	calculate: function(k) {
		if(k == 0) return 0;
		if(k == 1) return 1;
		if((k /= 0.5) < 1.0) return 0.5 * Math.pow(2,10 * (k - 1));
		return 0.5 * (2 - Math.pow(2,-10 * --k));
	}
	,ease: function(t,b,c,d) {
		if(t == 0) return b;
		if(t == d) return b + c;
		if((t /= d / 2.0) < 1.0) return c / 2 * Math.pow(2,10 * (t - 1)) + b;
		return c / 2 * (2 - Math.pow(2,-10 * --t)) + b;
	}
	,__class__: motion_easing_ExpoEaseInOut
};
var motion_easing_Linear = function() { };
$hxClasses["motion.easing.Linear"] = motion_easing_Linear;
motion_easing_Linear.__name__ = ["motion","easing","Linear"];
motion_easing_Linear.__properties__ = {get_easeNone:"get_easeNone"}
motion_easing_Linear.get_easeNone = function() {
	return new motion_easing_LinearEaseNone();
};
var motion_easing_LinearEaseNone = function() {
};
$hxClasses["motion.easing.LinearEaseNone"] = motion_easing_LinearEaseNone;
motion_easing_LinearEaseNone.__name__ = ["motion","easing","LinearEaseNone"];
motion_easing_LinearEaseNone.__interfaces__ = [motion_easing_IEasing];
motion_easing_LinearEaseNone.prototype = {
	calculate: function(k) {
		return k;
	}
	,ease: function(t,b,c,d) {
		return c * t / d + b;
	}
	,__class__: motion_easing_LinearEaseNone
};
var motion_easing_Quad = function() { };
$hxClasses["motion.easing.Quad"] = motion_easing_Quad;
motion_easing_Quad.__name__ = ["motion","easing","Quad"];
motion_easing_Quad.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"}
motion_easing_Quad.get_easeIn = function() {
	return new motion_easing_QuadEaseIn();
};
motion_easing_Quad.get_easeInOut = function() {
	return new motion_easing_QuadEaseInOut();
};
motion_easing_Quad.get_easeOut = function() {
	return new motion_easing_QuadEaseOut();
};
var motion_easing_QuadEaseIn = function() {
};
$hxClasses["motion.easing.QuadEaseIn"] = motion_easing_QuadEaseIn;
motion_easing_QuadEaseIn.__name__ = ["motion","easing","QuadEaseIn"];
motion_easing_QuadEaseIn.__interfaces__ = [motion_easing_IEasing];
motion_easing_QuadEaseIn.prototype = {
	calculate: function(k) {
		return k * k;
	}
	,ease: function(t,b,c,d) {
		return c * (t /= d) * t + b;
	}
	,__class__: motion_easing_QuadEaseIn
};
var motion_easing_QuadEaseInOut = function() {
};
$hxClasses["motion.easing.QuadEaseInOut"] = motion_easing_QuadEaseInOut;
motion_easing_QuadEaseInOut.__name__ = ["motion","easing","QuadEaseInOut"];
motion_easing_QuadEaseInOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_QuadEaseInOut.prototype = {
	calculate: function(k) {
		if((k *= 2) < 1) return 0.5 * k * k;
		return -0.5 * ((k - 1) * (k - 3) - 1);
	}
	,ease: function(t,b,c,d) {
		if((t /= d / 2) < 1) return c / 2 * t * t + b;
		return -c / 2 * ((t - 1) * (t - 3) - 1) + b;
	}
	,__class__: motion_easing_QuadEaseInOut
};
var motion_easing_QuadEaseOut = function() {
};
$hxClasses["motion.easing.QuadEaseOut"] = motion_easing_QuadEaseOut;
motion_easing_QuadEaseOut.__name__ = ["motion","easing","QuadEaseOut"];
motion_easing_QuadEaseOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_QuadEaseOut.prototype = {
	calculate: function(k) {
		return -k * (k - 2);
	}
	,ease: function(t,b,c,d) {
		return -c * (t /= d) * (t - 2) + b;
	}
	,__class__: motion_easing_QuadEaseOut
};
var objects_AnimatedBullet = function() {
	this.active = false;
	this.playerBullet = false;
	this.color = 48879;
	this.special = false;
	this.damage = 0;
	this.spy = 0;
	this.spx = 0;
	this.speed = 0.0005;
	spritesheet_AnimatedSprite.call(this,null,true);
	this.speed = 0.00000005;
	this._fastRect = new openfl_geom_Rectangle();
};
$hxClasses["objects.AnimatedBullet"] = objects_AnimatedBullet;
objects_AnimatedBullet.__name__ = ["objects","AnimatedBullet"];
objects_AnimatedBullet.__interfaces__ = [utils_FastRect,objects_GameObject];
objects_AnimatedBullet.__super__ = spritesheet_AnimatedSprite;
objects_AnimatedBullet.prototype = $extend(spritesheet_AnimatedSprite.prototype,{
	fastRect: function() {
		this._fastRect.x = this.get_x();
		this._fastRect.y = this.get_y();
		return this._fastRect;
	}
	,fastRectParent: function() {
		return this.parent;
	}
	,set: function(sps,speed,angle,pbehaviour) {
		if(pbehaviour == null) pbehaviour = "stop";
		if(angle == null) angle = 0;
		if(speed == null) speed = 0.001;
		this.spritesheet = sps;
		this.set_rotation(angle);
		this.speed = speed;
		this.spx = utils_Utils.dcos(this.get_rotation()) * speed;
		this.spy = utils_Utils.dsin(this.get_rotation()) * speed;
		this.showBehavior(pbehaviour,true);
		this._w = this.get_width();
		this._h = this.get_height();
		this._fastRect.x = this.get_x();
		this._fastRect.y = this.get_y();
		this._fastRect.width = this.get_width() / 2.0;
		this._fastRect.height = this.get_height() / 2.0;
		this.setColider(this.special?30:10);
		return this;
	}
	,kill: function(rem) {
		if(rem == null) rem = true;
		this._pool.kill(this,rem);
	}
	,update: function(dt) {
		if(this.spritesheet == null) return;
		var dx;
		var dy;
		dx = this.spx * dt;
		if(this.playerBullet) dy = (this.spy - scenes_Gameplay.scrollingSpeed / 4) * dt; else dy = (this.spy + scenes_Gameplay.scrollingSpeed / 2) * dt;
		var _g = this;
		_g.set_y(_g.get_y() + dy);
		this._fastRect.y += dy;
		var _g1 = this;
		_g1.set_x(_g1.get_x() + dx);
		this._fastRect.x += dx;
		spritesheet_AnimatedSprite.prototype.update.call(this,dt);
		if(utils_Utils.amIOffScreen(this)) this.kill();
	}
	,setColider: function(myWidth) {
		if(myWidth == null) myWidth = 20;
		if(this.colider != null) this.removeChild(this.colider);
		this.colider = utils_Utils.newCollider(myWidth,myWidth,0,0,false);
		this.addChild(this.colider);
	}
	,__class__: objects_AnimatedBullet
});
var objects_BaseSprite = function(data,m_states) {
	this._colliders = null;
	this.tint_obj = null;
	this.states = null;
	this._y = 0;
	this._x = 0;
	this._angle = 0;
	this.off_y = 0;
	this.off_x = 0;
	this.parts = [];
	this._cur_an = "";
	this.states = m_states;
	this.set_name(utils_Utils.getAttr(data,"name",this.get_name()));
	var fps = utils_Utils.getAttr(data,"fps",30);
	var asset = utils_Utils.getAttr(data,"asset","");
	var off = utils_Utils.getAttr(data,"off",[0,0]);
	var pos = utils_Utils.getAttr(data,"pos",[0,0]);
	var scount = utils_Utils.getAttr(data,"scount",[1,1]);
	var isize = utils_Utils.getAttr(data,"isize",[1,1]);
	var dont_loop = utils_Utils.getAttr(data,"dont_loop",[]);
	var apply_off = utils_Utils.getAttr(data,"apply_off",false);
	var parts = [];
	var sps;
	if(asset != "") sps = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData(asset),scount[0],scount[1],Math.ceil(isize[0] / scount[0]),Math.ceil(isize[1] / scount[1])); else sps = spritesheet_importers_BitmapImporter.create(new openfl_display_BitmapData(3,3,true,0),1,1,3,3);
	spritesheet_AnimatedSprite.call(this,sps,true);
	this.set_visible(utils_Utils.getAttr(data,"visible",true));
	this.off_x = -off[0];
	this.off_y = -off[1];
	this._x = js_Boot.__cast(pos[0] , Float);
	this._y = js_Boot.__cast(pos[1] , Float);
	this.applyTrans();
	var anims = utils_Utils.getAttr(data,"anims",{ });
	var sp_off_x;
	if(apply_off) sp_off_x = off[0]; else sp_off_x = 0;
	var sp_off_y;
	if(apply_off) sp_off_y = off[1]; else sp_off_y = 0;
	this._ans = Reflect.fields(anims);
	if(this._ans.length == 0) {
		sps.addBehavior(new spritesheet_data_BehaviorData("stop",[0],false,fps,sp_off_x,sp_off_y));
		this._ans = ["stop"];
	} else {
		var loop;
		var _g = 0;
		var _g1 = this._ans;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			var an = Reflect.field(anims,a);
			loop = an.length > 1 && HxOverrides.indexOf(dont_loop,a,0) < 0;
			sps.addBehavior(new spritesheet_data_BehaviorData(a,an,loop,fps,sp_off_x,sp_off_y));
		}
	}
	var pparts = utils_Utils.getAttr(data,"parts",[]);
	var _g2 = 0;
	while(_g2 < pparts.length) {
		var p = pparts[_g2];
		++_g2;
		this.addPart(new objects_BaseSprite(p));
	}
	this._cur_an = "stop";
	this.showBehavior(this._cur_an);
};
$hxClasses["objects.BaseSprite"] = objects_BaseSprite;
objects_BaseSprite.__name__ = ["objects","BaseSprite"];
objects_BaseSprite.__super__ = spritesheet_AnimatedSprite;
objects_BaseSprite.prototype = $extend(spritesheet_AnimatedSprite.prototype,{
	untint: function() {
		if(this.tint_obj != null) {
			if(this.tint_obj.parent != null) this.removeChild(this.tint_obj);
			this.tint_obj = null;
		}
	}
	,tint: function(by) {
		this.untint();
		this.tint_obj = utils_Utils.snapshot(this,by);
		this.addChild(this.tint_obj);
	}
	,addCollider: function(w,h,dx,dy,circle) {
		if(circle == null) circle = false;
		if(dy == null) dy = 0;
		if(dx == null) dx = 0;
		if(h == null) h = 20;
		if(w == null) w = 20;
		if(this._colliders == null) this._colliders = [];
		var collider = utils_Utils.newCollider(w,h,dx,dy,circle);
		this.addChild(collider);
		this._colliders.push(collider);
		return collider;
	}
	,collidesWith: function(obj) {
		if(this._colliders == null || obj == null) return false;
		var _g = 0;
		var _g1 = this._colliders;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.hitTestObject(obj)) return true;
		}
		return false;
	}
	,set_x: function(_f) {
		this._x = _f;
		this.applyTrans();
		return this._x;
	}
	,get_y: function() {
		return this._y;
	}
	,set_y: function(_f) {
		this._y = _f;
		this.applyTrans();
		return this._y;
	}
	,get_x: function() {
		return this._x;
	}
	,set_rotation: function(angle) {
		this._angle = angle;
		this.applyTrans();
		return angle;
	}
	,get_rotation: function() {
		return this._angle;
	}
	,applyTrans: function() {
		var matrix = this.get_transform().get_matrix();
		matrix.identity();
		matrix.translate(this.off_x,this.off_y);
		matrix.rotate(this._angle * utils_Utils.toRad);
		matrix.translate(this._x,this._y);
		this.get_transform().set_matrix(matrix);
	}
	,applyAnims: function(orStop) {
		if(orStop == null) orStop = true;
		if(this.states == null) return;
		var cur_states = this.states[objects_BaseSprite.S_STATES];
		var anims = this.states[objects_BaseSprite.S_ANIMS];
		var toplay = [];
		var _g1 = 0;
		var _g = cur_states.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(cur_states[i]) toplay.push(anims[i]);
		}
		if(orStop) toplay.push("stop");
		this.play(toplay);
	}
	,checkStates: function() {
		if(this.states == null) return;
		var ns;
		var cur_states = this.states[objects_BaseSprite.S_STATES];
		var keys = this.states[objects_BaseSprite.S_KEYS];
		var k;
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			k = keys[i];
			if(k > 0) {
				ns = utils_KeyboardMap.isPressed[keys[i]];
				if(ns != cur_states[i]) this.stateChanged(i,ns);
				cur_states[i] = ns;
			}
		}
	}
	,stateChanged: function(i,v) {
	}
	,addPart: function(p) {
		this.parts.push(p);
		this.addChild(p);
	}
	,play: function(anyOf,force) {
		if(force == null) force = false;
		var _g1 = 0;
		var _g = this.get_numChildren();
		while(_g1 < _g) {
			var i = _g1++;
			var c = this.getChildAt(i);
			if(js_Boot.__instanceof(c,objects_BaseSprite)) (js_Boot.__cast(c , objects_BaseSprite)).play(anyOf,force);
		}
		var _g2 = 0;
		while(_g2 < anyOf.length) {
			var a = anyOf[_g2];
			++_g2;
			if(HxOverrides.indexOf(this._ans,a,0) < 0) continue;
			if(!force && this._cur_an == a) return;
			this._cur_an = a;
			this.showBehavior(a);
			return;
		}
	}
	,update: function(d) {
		var _g = 0;
		var _g1 = this.parts;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			i.update(d);
		}
		spritesheet_AnimatedSprite.prototype.update.call(this,d);
	}
	,__class__: objects_BaseSprite
});
var utils_PhasedGameObject = function() { };
$hxClasses["utils.PhasedGameObject"] = utils_PhasedGameObject;
utils_PhasedGameObject.__name__ = ["utils","PhasedGameObject"];
utils_PhasedGameObject.prototype = {
	__class__: utils_PhasedGameObject
};
var objects_Ben = function(X,Y) {
	if(Y == null) Y = 0;
	if(X == null) X = 0;
	this.focusIncrement = 0.1875;
	this.blink_step = 0;
	this.hitted = false;
	this.base_points_sp = [[new openfl_geom_Point(43,40)],[new openfl_geom_Point(93,37),new openfl_geom_Point(17,37)],[new openfl_geom_Point(55,42)],[new openfl_geom_Point(30,20)]];
	this.base_points = [[new openfl_geom_Point(43,40)],[new openfl_geom_Point(93,37),new openfl_geom_Point(17,37)],[new openfl_geom_Point(88,26),new openfl_geom_Point(22,26)],[new openfl_geom_Point(30,20)]];
	this.swap_mask_cent_y = 0;
	this.swap_mask_cent_x = 0;
	this.swap_max_tint = 256;
	this.swap_mask = null;
	this.swap_time = 0;
	this.swap_to = 0;
	this.swap_half = 500;
	this.swap_max = 800;
	this.bpool = new utils_Pooler_$objects_$AnimatedBullet();
	this.BULLET_COOLDWON = 300;
	this.bullet_last = 0;
	this.bi = 0;
	this.bullet_colors = [10011161,16777215,16760852,16760852];
	this.speed_ss = 0.17;
	this.speed_s = 0.17;
	this.speed = 0.17;
	this.defense_b = 1;
	this.defense = 1;
	this.damage_s = 1;
	this.damage = 1;
	this.bullet_color = 48879;
	this.bullet_s_c = 1;
	this.bullet_c = 1;
	this.trans_color = new openfl_geom_ColorTransform();
	this.rot_head_max = 5;
	this.rot_head_speed = 0.165;
	this.rot_max = 15;
	this.rot_body2head = 0.33;
	this.rot_speed = 0.0125;
	this.dust_step = 3;
	this.focus = 0.0;
	this.power = 1.0;
	this.level3 = 66;
	this.level2 = 33;
	this.level1 = 1;
	this.actualAlien = 1;
	this.energy = 32;
	this.foot_colider = new openfl_display_Sprite();
	this.colider = new openfl_display_Sprite();
	var array = [100.0,140.0,Main.screenWidth - 100,Main.screenHeight - 40];
	var vec;
	var this1;
	this1 = new Array(array.length);
	vec = this1;
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		vec[i] = array[i];
	}
	this.limites = vec;
	var ms;
	var this2;
	this2 = new Array(3);
	ms = this2;
	var val;
	var array1 = [false,false,false,false,false,false,false,false,false,false,false,false];
	var vec1;
	var this3;
	this3 = new Array(array1.length);
	vec1 = this3;
	var _g11 = 0;
	var _g2 = array1.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		vec1[i1] = array1[i1];
	}
	val = vec1;
	ms[objects_BaseSprite.S_STATES] = val;
	var val1;
	var array2 = [-1,-1,-1,-1,-1,40,37,39,38,88,-1,65];
	var vec2;
	var this4;
	this4 = new Array(array2.length);
	vec2 = this4;
	var _g12 = 0;
	var _g3 = array2.length;
	while(_g12 < _g3) {
		var i2 = _g12++;
		vec2[i2] = array2[i2];
	}
	val1 = vec2;
	ms[objects_BaseSprite.S_KEYS] = val1;
	var val2;
	var array3 = ["still","stop","shoot","charged","hit","d","l","r","u","charging","",""];
	var vec3;
	var this5;
	this5 = new Array(array3.length);
	vec3 = this5;
	var _g13 = 0;
	var _g4 = array3.length;
	while(_g13 < _g4) {
		var i3 = _g13++;
		vec3[i3] = array3[i3];
	}
	val2 = vec3;
	ms[objects_BaseSprite.S_ANIMS] = val2;
	objects_BaseSprite.call(this,{ name : "ben"},ms);
	this.set_x(X);
	this.set_y(Y);
	this.loadAliens();
	this.colider = this.addCollider(40,40,0,-50,false);
	this.foot_colider = this.addCollider(30,30,0,0,true);
	this.loadParticles();
	this.swapAlien(objects_Ben.A_BEN - 1);
	this.setDifficult();
};
$hxClasses["objects.Ben"] = objects_Ben;
objects_Ben.__name__ = ["objects","Ben"];
objects_Ben.__interfaces__ = [utils_PhasedGameObject,objects_GameObject];
objects_Ben.__super__ = objects_BaseSprite;
objects_Ben.prototype = $extend(objects_BaseSprite.prototype,{
	setPhase: function(s) {
		if(s == scenes_Gameplay.GP_INTRO) this.c_p_arma.currentBehavior.loop = true; else if(s == scenes_Gameplay.GP_OUTRO) {
		} else if(s == scenes_Gameplay.GP_PLAYING) {
		}
	}
	,loadAliens: function() {
		this.bullet_cs = [];
		this.bullet_s_cs = [];
		this.collider_sizes = [];
		this.damages = [];
		this.damages_s = [];
		this.defenses = [];
		this.defenses_b = [];
		this.speeds = [];
		this.speeds_s = [];
		this.speeds_ss = [];
		this.swap_mask = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/aliens/mascara transformacion.png"),0,true);
		this.c_sombra = new objects_BaseSprite(utils_Utils.loadJson("data/aliens/sombra.json"));
		this.addChild(this.c_sombra);
		var aliens_json = ["data/aliens/alien insectoide.json","data/aliens/alien overflow.json","data/aliens/alien fuego.json","data/aliens/ben.json"];
		var this1;
		this1 = new Array(aliens_json.length);
		this.p_parts = this1;
		var p;
		var c = 0;
		var d;
		var _g = 0;
		while(_g < aliens_json.length) {
			var i = aliens_json[_g];
			++_g;
			d = utils_Utils.loadJson(i);
			var bs = new objects_BaseSprite(d);
			this.addPart(bs);
			var this2;
			this2 = new Array(4);
			p = this2;
			var val = utils_Utils.getAttr(d,"p_arma",-1);
			p[0] = val;
			var val1 = utils_Utils.getAttr(d,"p_cabeza",-1);
			p[1] = val1;
			var val2 = utils_Utils.getAttr(d,"p_disparo",-1);
			p[2] = val2;
			var val3 = utils_Utils.getAttr(d,"p_especial",-1);
			p[3] = val3;
			this.p_parts[c] = p;
			this.collider_sizes.push(utils_Utils.getAttr(d,"collider_size",1));
			this.bullet_cs.push(utils_Utils.getAttr(d,"bullet_c",this.bullet_c));
			this.bullet_s_cs.push(utils_Utils.getAttr(d,"bullet_s_c",this.bullet_s_c));
			this.damages.push(utils_Utils.getAttr(d,"damage",this.damage));
			this.damages_s.push(utils_Utils.getAttr(d,"damage_s",this.damage_s));
			this.defenses.push(utils_Utils.getAttr(d,"defense",this.defense));
			this.defenses_b.push(utils_Utils.getAttr(d,"defense_b",this.defense_b));
			this.speeds.push(utils_Utils.getAttr(d,"speed",this.speed));
			this.speeds_s.push(utils_Utils.getAttr(d,"speed_s",this.speed_s));
			this.speeds_ss.push(utils_Utils.getAttr(d,"speed_ss",this.speed_ss));
			c++;
		}
		this.base_points.push(this.base_points[0]);
		this.base_points_sp.push(this.base_points_sp[0]);
	}
	,loadParticles: function() {
		this.bullet_particles = utils_particles_GenParticle.newConf(scenes_Gameplay.current.particlesLayerUp);
		this.bullet_particles.max_parts = 15;
		this.bullet_particles.min_parts = 20;
		this.bullet_particles.max_life = 200;
		this.bullet_particles.min_life = 90;
		this.bullet_particles.min_speed = 0.15;
		this.bullet_particles.max_speed = 0.20;
		this.bullet_particles.end_alpha = 0.001;
		this.bullet_particles.size = 3;
		this.bullet_trail = utils_particles_GenParticle.newConf(scenes_Gameplay.current.particlesLayerDown);
		this.bullet_trail.max_parts = 3;
		this.bullet_trail.min_parts = 0;
		this.bullet_trail.direction = -90;
		this.bullet_trail.apperture = 30;
		this.bullet_trail.max_life = 150;
		this.bullet_trail.min_life = 100;
		this.bullet_trail.min_speed = 0.15;
		this.bullet_trail.max_speed = 0.20;
		this.bullet_trail.end_alpha = 0.001;
		this.bullet_trail.size = 3;
		this.bullet_trail.end_scale = 0.001;
		this.bullet_fire_trail = utils_particles_GenParticle.newConf(scenes_Gameplay.current.particlesLayerDown);
		this.bullet_fire_trail.max_parts = 1;
		this.bullet_fire_trail.min_parts = 0;
		this.bullet_fire_trail.direction = -90;
		this.bullet_fire_trail.apperture = 5;
		this.bullet_fire_trail.max_life = 1000;
		this.bullet_fire_trail.min_life = 800;
		this.bullet_fire_trail.min_speed = 0.15;
		this.bullet_fire_trail.max_speed = 0.20;
		this.bullet_fire_trail.start_alpha = 0.9;
		this.bullet_fire_trail.end_alpha = 0;
		this.bullet_fire_trail.size = 2;
		this.bullet_fire_trail.color = 6710886;
		this.bullet_fire_trail.end_scale = 0.01;
		this.bullet_fire_trail.start_scale = 1;
		this.bullet_fire_trail.end_scale = 0.001;
	}
	,swapAlien: function(to) {
		this.actualAlien = to + 1;
		this.c_alien = this.parts[to];
		this.bullet_c = this.bullet_cs[to];
		this.bullet_s_c = this.bullet_s_cs[to];
		this.bullet_color = this.bullet_colors[to];
		this.damage = this.damages[to];
		this.damage_s = this.damages_s[to];
		this.defense = this.defenses[to];
		this.defense_b = this.defenses_b[to];
		this.speed = this.speeds[to];
		this.speed_s = this.speeds_s[to];
		this.speed_ss = this.speeds_ss[to];
		this.bullet_particles.color = this.bullet_color;
		this.swap_mask_cent_x = Math.round(this.c_alien.off_x);
		this.swap_mask_cent_y = Math.round(this.c_alien.off_y - this.c_sombra.off_y);
		if(this.c_p_arma != null) {
			this.c_p_arma.removeEventListener("complete",$bind(this,this.onArmaAnimationComplete));
			this.c_p_arma = null;
		}
		var _g = 0;
		var _g1 = this.parts;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.set_visible(false);
		}
		this.c_alien.set_visible(true);
		this.P_ARMA = this.p_parts[to][0];
		this.P_CABEZA = this.p_parts[to][1];
		this.P_DISPARO = this.p_parts[to][2];
		this.P_ESPECIAL = this.p_parts[to][3];
		this.c_p_arma = this.c_alien.parts[this.P_ARMA];
		if(this.P_CABEZA < 0) this.c_p_cabeza = null; else this.c_p_cabeza = this.c_alien.parts[this.P_CABEZA];
		if(this.P_DISPARO < 0) this.c_p_disparo = null; else this.c_p_disparo = this.c_alien.parts[this.P_DISPARO];
		if(this.P_ESPECIAL < 0) this.c_p_especial = null; else this.c_p_especial = this.c_alien.parts[this.P_ESPECIAL];
		if(this.c_p_arma != null) this.c_p_arma.addEventListener("complete",$bind(this,this.onArmaAnimationComplete));
		var col = this._colliders[0];
		col.set_scaleX(col.set_scaleY(this.collider_sizes[to]));
		col.set_x(this.swap_mask_cent_x - col.get_width() / 2);
		col.set_y(this.swap_mask_cent_y - col.get_height());
		this.foot_colider.set_scaleX(this.foot_colider.set_scaleY(this.collider_sizes[to]));
		this.foot_colider.set_x(this.swap_mask_cent_x - this.foot_colider.get_width() / 2 + 5);
		this.foot_colider.set_y(this.swap_mask_cent_y - this.foot_colider.get_height() / 2 + 25);
		var _g2 = this.actualAlien;
		switch(_g2) {
		case 1:
			utils_SoundLib.playFX("transformA");
			break;
		case 3:
			utils_SoundLib.playFX("transformB");
			break;
		case 2:
			utils_SoundLib.playFX("transformC");
			break;
		}
		if(hud_GUI.faces != null) hud_GUI.faces.swapFace(this.actualAlien);
	}
	,emitBulletTrails: function(px,py) {
		if(this.actualAlien == objects_Ben.A_HEAT) utils_particles_GenParticle.emit(this.bullet_fire_trail,px,py);
		utils_particles_GenParticle.emit(this.bullet_trail,px,py);
	}
	,animateBulletTrails: function(d) {
		var c = 4;
		var hw;
		if(this.actualAlien == objects_Ben.A_HEAT) hw = 20; else hw = 5;
		var _g = 0;
		var _g1 = this.bpool._pool;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(!b.active) continue;
			this.bullet_trail.color = b.color;
			if(b.special) this.bullet_trail.max_life = 200; else this.bullet_trail.max_life = 150;
			this.bullet_trail.direction = b.get_rotation() + 180.0;
			if(b.special) this.bullet_trail.max_parts = 4; else this.bullet_trail.max_parts = 3;
			if(b.special) {
				var _g2 = 0;
				while(_g2 < c) {
					var i = _g2++;
					this.emitBulletTrails(b.get_x() - hw + hw * 2 / c * i,b.get_y() + hw * utils_Utils.dsin(180.0 / (c - 1) * i));
				}
			} else this.emitBulletTrails(b.get_x(),b.get_y() + 15);
		}
	}
	,animateBenOutro: function(d) {
		var llego = this.get_y() < -this.get_height();
		llego = llego || scenes_Gameplay.isBossLevel;
		var cambiando = this.states[objects_BaseSprite.S_STATES][objects_Ben.S_SWAPPING_ALIENS];
		if(!llego) {
			var _g = this;
			_g.set_y(_g.get_y() - d * this.speed);
		}
		if(cambiando) {
			this.animateAlienChange(d);
			return;
		}
		if(!cambiando) {
			if(this.actualAlien != objects_Ben.A_BEN) this.changeAlien(objects_Ben.A_BEN); else if(llego) {
				var walk = Math.round(scenes_Gameplay.scrollingSpeed * 10000) != 0;
				this.c_p_arma.currentBehavior.loop = walk;
				this.c_alien.currentBehavior.loop = walk;
				if(!scenes_Gameplay.isBossLevel) scenes_Gameplay.current.setPhase(scenes_Gameplay.GP_FINISHED);
			}
		}
	}
	,animateBenIntro: function(d) {
		if(this.states[objects_BaseSprite.S_STATES][objects_Ben.S_SWAPPING_ALIENS]) {
			this.animateAlienChange(d);
			return;
		}
		if(this.get_y() < Main.screenHeight - 75) {
			if(this.actualAlien == objects_Ben.A_BEN) this.changeAlien(1 + Math.round(Math.random() * 2)); else scenes_Gameplay.current.setPhase(scenes_Gameplay.GP_PLAYING);
			return;
		}
		var _g = this;
		_g.set_y(_g.get_y() - d * this.speed);
		return;
	}
	,animateAlienChange: function(d) {
		this.swap_time += d;
		var mask_sc = 1;
		var mask_a = 0;
		var p = 0;
		mask_sc = 0.1 + 0.75 * (this.swap_time / this.swap_max);
		if(this.swap_mask.parent != null) this.removeChild(this.swap_mask);
		if(this.swap_time > this.swap_max) {
			this.states[objects_BaseSprite.S_STATES][objects_Ben.S_SWAPPING_ALIENS] = false;
			this.applyTint(0);
		} else if(this.swap_time > this.swap_half) {
			p = (this.swap_time - this.swap_half) / (this.swap_max - this.swap_half);
			if(this.actualAlien != this.swap_to + 1) this.swapAlien(this.swap_to);
			this.applyTint(this.swap_max_tint - Math.round(p * this.swap_max_tint));
			mask_a = 1 - p;
			this.addChild(this.swap_mask);
		} else {
			p = this.swap_time / this.swap_half;
			this.applyTint(Math.round(p * this.swap_max_tint));
			mask_a = p * 1.3 - 0.3;
			this.addChild(this.swap_mask);
		}
		this.swap_mask.set_scaleX(this.swap_mask.set_scaleY(mask_sc));
		this.swap_mask.set_alpha(mask_a);
		this.swap_mask.set_x(this.swap_mask_cent_x - this.swap_mask.get_width() / 2);
		this.swap_mask.set_y(this.swap_mask_cent_y - this.swap_mask.get_height() / 2);
	}
	,changeAlien: function(value) {
		if(value == null) value = 1;
		this.swap_to = value - 1;
		this.swap_time = 0;
		this.swap_half = Math.round(this.swap_max / 2.0);
		this.states[objects_BaseSprite.S_STATES][objects_Ben.S_SWAPPING_ALIENS] = true;
	}
	,onArmaAnimationComplete: function(ev) {
		var cb = this.c_p_arma._cur_an;
		var states = this.states[objects_BaseSprite.S_STATES];
		if(cb == "charging") states[objects_Ben.S_CHARGED] = true;
		states[objects_Ben.S_CHARGING] = false;
		states[objects_Ben.S_SHOOT] = false;
		states[objects_Ben.S_HIT] = false;
	}
	,shoot: function() {
		if(!this.canIShoot()) return;
		var sp = this.focus == 100;
		var is_insect = this.actualAlien == objects_Ben.A_INSECT;
		var basep;
		if(sp) basep = this.base_points_sp[this.actualAlien - 1]; else basep = this.base_points[this.actualAlien - 1];
		var p;
		var c;
		if(sp) c = this.bullet_s_c; else c = this.bullet_c;
		var dang = 10;
		var ang = dang * (c - 1);
		var a = 0.0;
		var base = this.c_p_arma.get_rotation() - 90 - ang / 2.0;
		var _g = 0;
		while(_g < c) {
			var i = _g++;
			a = base + dang * i;
			p = basep[i % basep.length];
			p = this.c_alien.get_transform().get_matrix().transformPoint(this.c_p_arma.get_transform().get_matrix().transformPoint(p));
			var b = this.bpool.get();
			b.special = sp;
			if(this.c_p_disparo != null) b.set((sp?this.c_p_especial:this.c_p_disparo).spritesheet,sp?this.speed_ss:this.speed_s,a);
			b.set_x(this.get_x() + p.x);
			b.set_y(this.get_y() + p.y);
			b.playerBullet = true;
			b.damage = Math.round((sp?this.damage_s:this.damage) * this.power);
			b.color = this.bullet_color;
			utils_particles_GenParticle.emit(this.bullet_particles,b.get_x(),b.get_y());
		}
		var _g1 = this.actualAlien;
		switch(_g1) {
		case 1:
			utils_SoundLib.playFX("shootA");
			break;
		case 3:
			utils_SoundLib.playFX("shootB");
			break;
		case 2:
			utils_SoundLib.playFX("shootC");
			break;
		}
	}
	,canIShoot: function() {
		if(openfl_Lib.getTimer() - this.bullet_last < this.BULLET_COOLDWON) return false;
		this.bullet_last = openfl_Lib.getTimer();
		return true;
	}
	,stateChanged: function(s,v) {
		if(utils_Utils.IS_DEBUG && v && s == objects_Ben.S_TEST) {
			var n = this.actualAlien + 1;
			if(n > 4) n = 1;
			this.changeAlien(n);
			this.changeEnergy(10);
		}
	}
	,applyTint: function(d,hit) {
		if(hit == null) hit = false;
		this.c_alien.set_visible(true);
		if(d == 0) this.untint(); else {
			this.c_sombra.set_visible(false);
			if(hit) {
				this.trans_color.redOffset = d;
				this.trans_color.blueOffset = this.trans_color.greenOffset = this.trans_color.redOffset * 0.15;
			} else this.trans_color.greenOffset = this.trans_color.redOffset = this.trans_color.blueOffset = d;
			this.tint(this.trans_color);
			this.c_alien.set_visible(false);
			this.c_sombra.set_visible(true);
		}
	}
	,update: function(d) {
		if(d == 0) {
			objects_BaseSprite.prototype.update.call(this,d);
			return;
		}
		if(scenes_Gameplay.current.game_phase == scenes_Gameplay.GP_PAUSED) return;
		this.animateBulletTrails(d);
		if(scenes_Gameplay.current.game_phase == scenes_Gameplay.GP_INTRO) {
			this.animateBenIntro(d);
			objects_BaseSprite.prototype.update.call(this,d);
			return;
		} else if(scenes_Gameplay.current.game_phase == scenes_Gameplay.GP_OUTRO) {
			this.animateBenOutro(d);
			objects_BaseSprite.prototype.update.call(this,d);
			return;
		} else if(scenes_Gameplay.current.game_phase == scenes_Gameplay.GP_FINISHED) {
			objects_BaseSprite.prototype.update.call(this,d);
			return;
		} else if(this.energy <= 0) {
			objects_BaseSprite.prototype.update.call(this,d);
			this.blink();
			return;
		}
		this.checkStates();
		var keys = this.states[objects_BaseSprite.S_KEYS];
		var states = this.states[objects_BaseSprite.S_STATES];
		this.checkEnemyBullets();
		this.blink();
		var dx = 0;
		var dy = 0;
		if(states[objects_Ben.S_RIGHT]) dx += this.speed * d;
		if(states[objects_Ben.S_LEFT]) dx -= this.speed * d;
		if(states[objects_Ben.S_DOWN]) dy += this.speed * d;
		if(states[objects_Ben.S_UP]) dy -= this.speed * d;
		this.set_x(Math.min(Math.max(this.get_x() + dx,this.limites[0]),this.limites[2]));
		this.set_y(Math.min(Math.max(this.get_y() + dy,this.limites[1]),this.limites[3]));
		var nra = 0;
		var nrb = false;
		var crot;
		if(this.c_p_arma == null) crot = 0; else crot = this.c_p_arma.get_rotation();
		var icrot = Math.round(crot * 10000);
		if(states[objects_Ben.S_LEFT] && icrot <= 0) nra = Math.max(this.c_p_arma.get_rotation() - this.rot_speed * d,-this.rot_max); else if(states[objects_Ben.S_RIGHT] && icrot >= 0) nra = Math.min(this.c_p_arma.get_rotation() + this.rot_speed * d,this.rot_max); else if(icrot != 0) {
			var si;
			if(crot >= 0) si = 1; else si = -1;
			var nrot = this.c_p_arma.get_rotation() - si * (d / 7.0);
			if(si != (nrot >= 0?1:-1)) nrot = 0.0;
			nra = nrot;
		}
		var val = !(states[objects_Ben.S_RIGHT] || states[objects_Ben.S_LEFT] || states[objects_Ben.S_UP] || states[objects_Ben.S_DOWN] || Math.round(scenes_Gameplay.scrollingSpeed * 10000) != 0);
		states[objects_Ben.S_STILL] = val;
		this.c_p_arma.set_rotation(nra);
		if(this.c_p_cabeza != null) this.c_p_cabeza.set_rotation(nra * this.rot_body2head);
		if(this.dust_step <= 0) {
			if(!states[objects_Ben.S_STILL]) {
				scenes_Gameplay.current.particlesDown.emit(this.get_x(),this.get_y());
				this.dust_step = 3;
			}
		} else this.dust_step--;
		if(states[objects_Ben.S_CHARGING]) this.accumulateShoot(d); else this.doShoot();
		this.applyAnims(true);
		objects_BaseSprite.prototype.update.call(this,d);
		if(states[objects_Ben.S_SWAPPING_ALIENS]) this.animateAlienChange(d);
		return;
	}
	,changeEnergy: function(value) {
		if(value == null) value = 1;
		if(this.energy == 0) return;
		this.energy += value;
		if(this.energy >= 100) this.energy = 100; else if(this.energy <= 0) {
			this.energy = 0;
			utils_SoundLib.fadeMusic("level end");
			var explotion = new gameplay_Explotion();
			explotion.spawn(this.get_x(),this.get_y());
			motion_Actuate.timer(0.5).onComplete($bind(this,this.generateExplotion));
			motion_Actuate.timer(0.75).onComplete($bind(this,this.generateExplotion));
			motion_Actuate.timer(1.0).onComplete($bind(this,this.generateExplotion));
			motion_Actuate.timer(1.0).onComplete($bind(this,this.generateExplotion));
			motion_Actuate.timer(1.5).onComplete($bind(this,this.generateExplotion));
			motion_Actuate.timer(1.75).onComplete($bind(this,this.generateExplotion));
			motion_Actuate.timer(2.0).onComplete($bind(this,this.generateExplotion));
			motion_Actuate.timer(2.0).onComplete($bind(this,this.generateExplotion));
			motion_Actuate.timer(2.5).onComplete($bind(this,this.generateExplotion));
			motion_Actuate.timer(2.75).onComplete($bind(this,this.generateExplotion));
			motion_Actuate.timer(2.75).onComplete($bind(this,this.generateExplotion));
			motion_Actuate.timer(3.0).onComplete($bind(this,this.generateExplotion));
			motion_Actuate.timer(3.0).onComplete($bind(this,this.generateExplotion));
			motion_Actuate.timer(3.0).onComplete($bind(this,this.generateExplotion));
			hud_GUI.hideButtons();
			motion_Actuate.timer(3.5).onComplete(($_=scenes_Gameplay.current,$bind($_,$_.gameOver)));
		}
		hud_GUI.energyGauge.fixGauge(this.energy,100);
		if(this.energy >= this.level1 && this.energy < this.level2) this.power = 1.0; else if(this.energy >= this.level2 && this.energy < this.level3) this.power = 1.5; else if(this.energy >= this.level3) this.power = 2.0;
	}
	,generateExplotion: function() {
		var explotion = new gameplay_Explotion();
		var randX = Math.round(Math.random() * 31654987 % 10 - 5);
		randX *= 10;
		var randY = Math.round(Math.random() * 31654987 % 10 - 5);
		randY *= 10;
		explotion.spawn(this.get_x() + randX,this.get_y() + randY);
		var rand = Math.round(Math.random() * 3);
		switch(rand) {
		case 0:
			utils_SoundLib.playFX("boomA");
			break;
		case 1:
			utils_SoundLib.playFX("boomB");
			break;
		case 2:
			utils_SoundLib.playFX("boomC");
			break;
		default:
			utils_SoundLib.playFX("boomA");
		}
	}
	,setDifficult: function() {
		var _g = scenes_Gameplay.difficult;
		switch(_g) {
		case "easy":
			objects_Ben.DMG_BULLET = 5;
			objects_Ben.DMG_KAMIKAZE = 5;
			objects_Ben.DMG_SOLDIER = 3;
			objects_Ben.DMG_SPIKE = 10;
			objects_Ben.DMG_MINE = 10;
			objects_Ben.DMG_BEE = 15;
			objects_Ben.DMG_AXOLOTE = 15;
			objects_Ben.DMG_ZOMBOZO = 15;
			break;
		case "normal":
			objects_Ben.DMG_BULLET = 8;
			objects_Ben.DMG_KAMIKAZE = 8;
			objects_Ben.DMG_SOLDIER = 5;
			objects_Ben.DMG_SPIKE = 12;
			objects_Ben.DMG_MINE = 12;
			objects_Ben.DMG_BEE = 20;
			objects_Ben.DMG_AXOLOTE = 20;
			objects_Ben.DMG_ZOMBOZO = 20;
			break;
		case "hard":
			objects_Ben.DMG_BULLET = 10;
			objects_Ben.DMG_KAMIKAZE = 10;
			objects_Ben.DMG_SOLDIER = 7;
			objects_Ben.DMG_SPIKE = 15;
			objects_Ben.DMG_MINE = 15;
			objects_Ben.DMG_BEE = 25;
			objects_Ben.DMG_AXOLOTE = 25;
			objects_Ben.DMG_ZOMBOZO = 25;
			break;
		}
	}
	,getDamage: function(value,type) {
		if(type == null) type = "punch";
		if(value == null) value = 1;
		if(this.hitted) return;
		if(scenes_Gameplay.current.game_phase != scenes_Gameplay.GP_PLAYING) return;
		this.hitted = true;
		switch(type) {
		case "punch":
			this.changeEnergy(Math.ceil(-value / this.defense));
			utils_SoundLib.playFX("hitA");
			break;
		case "spike":
			this.changeEnergy(Math.ceil(-value / this.defense));
			utils_SoundLib.playFX("hitB");
			break;
		case "bullet":
			this.changeEnergy(Math.ceil(-value / this.defense_b));
			utils_SoundLib.playFX("hitB");
			break;
		case "explotion":
			this.changeEnergy(Math.ceil(-value / this.defense_b));
			utils_SoundLib.playFX("hitB");
			break;
		}
		motion_Actuate.timer(1.0).onComplete($bind(this,this.blinkEnd));
		this.states[objects_BaseSprite.S_STATES][objects_Ben.S_HIT] = true;
	}
	,blink: function() {
		if(!this.hitted) return;
		this.blink_step++;
		if(this.blink_step >= 5) {
			this.set_alpha(this.get_alpha() != 1?1:0.0);
			this.blink_step = 0;
		}
	}
	,blinkEnd: function() {
		this.hitted = false;
		this.blink_step = 0;
		var alive = this.energy > 0;
		this.set_alpha(alive?1:0);
		this.states[objects_BaseSprite.S_STATES][objects_Ben.S_HIT] = false;
	}
	,accumulateShoot: function(dt) {
		this.focus += this.focusIncrement * dt;
		if(this.focus >= 100) this.focus = 100;
		hud_GUI.shootGauge.fixGauge(this.focus,100);
	}
	,doShoot: function(d) {
		if(d == null) d = 0;
		if(this.focus != 0) {
			hud_GUI.shootGauge.fixGauge(1,100);
			this.shoot();
			this.states[objects_BaseSprite.S_STATES][objects_Ben.S_CHARGED] = false;
			this.states[objects_BaseSprite.S_STATES][objects_Ben.S_SHOOT] = true;
			this.focus = 0;
		}
		this.states[objects_BaseSprite.S_STATES][objects_Ben.S_SHOOT] = this.states[objects_BaseSprite.S_STATES][objects_Ben.S_SHOOT] && (this.c_p_arma.currentBehavior.name != "shoot" || this.c_p_arma.currentFrameIndex < this.c_p_arma.currentBehavior.frames.length - 1);
	}
	,checkEnemyBullets: function() {
		var _g = 0;
		var _g1 = objects_Enemy.bpool._pool;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.active && this.energy > 0 && this.collidesWith(b.colider)) {
				b.kill();
				this.getDamage(objects_Ben.DMG_BULLET,"bullet");
			}
		}
	}
	,__class__: objects_Ben
});
var utils_Pooler_$objects_$AnimatedBullet = function() {
	this._inc = 5;
	this._deads = [];
	this._pool = [];
};
$hxClasses["utils.Pooler_objects_AnimatedBullet"] = utils_Pooler_$objects_$AnimatedBullet;
utils_Pooler_$objects_$AnimatedBullet.__name__ = ["utils","Pooler_objects_AnimatedBullet"];
utils_Pooler_$objects_$AnimatedBullet.prototype = {
	kill: function(obj,remove) {
		if(remove == null) remove = true;
		if(!obj.active) {
		}
		if(HxOverrides.indexOf(this._deads,obj,0) < 0) this._deads.splice(0,0,obj); else {
		}
		obj.active = false;
		if(remove) scenes_Gameplay.current.removeObject(obj);
	}
	,create: function() {
		var i = new objects_AnimatedBullet();
		this._pool.push(i);
		i._pool = this;
		i.active = true;
		return i;
	}
	,get: function(add) {
		if(add == null) add = true;
		var n;
		if(this._deads.length == 0) n = this.create(); else n = this._deads.pop();
		if(add) scenes_Gameplay.current.addObject(n);
		n.active = true;
		return n;
	}
	,killAll: function(empty) {
		if(empty == null) empty = false;
		var _g = 0;
		var _g1 = this._pool;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			this.kill(i,true);
		}
		if(empty) {
			this._pool = [];
			this._deads = [];
		}
	}
	,__class__: utils_Pooler_$objects_$AnimatedBullet
};
var objects_Enemy = function(_x,_y,type,_destroyCallback,group,bossFlag) {
	if(_y == null) _y = 0;
	if(_x == null) _x = 0;
	this.hit_color = new openfl_geom_ColorTransform();
	this.hit_anim_max = 200;
	this.hit_anim_time = 200;
	this.sineHeight_f = 60;
	this.amplitud_f = 100;
	this.cumulativeTime = 0;
	this.freq = 0.0033333333333333335;
	this.amplitud = 50;
	this.rush_y = 0;
	this.rush_x = 0;
	this.rush_flag = false;
	this.shoot_points = [new openfl_geom_Point(36,85),new openfl_geom_Point(36,85),new openfl_geom_Point(30,50)];
	this.hp = 3;
	this.enemies_jsons = [[["data/enemigos/payasos/payaso1-1.json","data/enemigos/payasos/payaso1-2.json","data/enemigos/payasos/payaso1-3.json"],["data/enemigos/payasos/payaso2-1.json","data/enemigos/payasos/payaso2-2.json","data/enemigos/payasos/payaso2-3.json"],["data/enemigos/payasos/payaso3-1.json","data/enemigos/payasos/payaso3-2.json","data/enemigos/payasos/payaso3-3.json"]],[["data/enemigos/abejas/abeja1-1.json","data/enemigos/abejas/abeja1-2.json","data/enemigos/abejas/abeja1-3.json"],["data/enemigos/abejas/abeja2-1.json","data/enemigos/abejas/abeja2-2.json","data/enemigos/abejas/abeja2-3.json"],["data/enemigos/abejas/abeja3-1.json","data/enemigos/abejas/abeja3-2.json","data/enemigos/abejas/abeja3-3.json"]],[["data/enemigos/bichos/bicho1-1.json","data/enemigos/bichos/bicho1-2.json","data/enemigos/bichos/bicho1-3.json"],["data/enemigos/bichos/bicho2-1.json","data/enemigos/bichos/bicho2-2.json","data/enemigos/bichos/bicho2-3.json"],["data/enemigos/bichos/bicho3-1.json","data/enemigos/bichos/bicho3-2.json","data/enemigos/bichos/bicho3-3.json"]]];
	this.c_p_disparo = null;
	this.c_p_cabeza = null;
	this.c_p_arma = null;
	this.boss_flag = false;
	this.kamikaze_flag = false;
	this.setGraph(type,group);
	var ms;
	var this1;
	this1 = new Array(3);
	ms = this1;
	var val;
	var array = [false,false,false,false,false,false];
	var vec;
	var this2;
	this2 = new Array(array.length);
	vec = this2;
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		vec[i] = array[i];
	}
	val = vec;
	ms[objects_BaseSprite.S_STATES] = val;
	var val1;
	var array1 = [-1,-1,-1,-1,-1,-1];
	var vec1;
	var this3;
	this3 = new Array(array1.length);
	vec1 = this3;
	var _g11 = 0;
	var _g2 = array1.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		vec1[i1] = array1[i1];
	}
	val1 = vec1;
	ms[objects_BaseSprite.S_KEYS] = val1;
	var val2;
	var array2 = ["stop","shoot","d","focus","unfocus","focused"];
	var vec2;
	var this4;
	this4 = new Array(array2.length);
	vec2 = this4;
	var _g12 = 0;
	var _g3 = array2.length;
	while(_g12 < _g3) {
		var i2 = _g12++;
		vec2[i2] = array2[i2];
	}
	val2 = vec2;
	ms[objects_BaseSprite.S_ANIMS] = val2;
	var p_arma = utils_Utils.getAttr(this.data,"p_arma",-1);
	var p_cabeza = utils_Utils.getAttr(this.data,"p_cabeza",-1);
	var p_disparo = utils_Utils.getAttr(this.data,"p_disparo",-1);
	objects_BaseSprite.call(this,this.data,ms);
	if(p_arma >= 0) {
		this.c_p_arma = this.parts[p_arma];
		this.c_p_arma.addEventListener("complete",$bind(this,this.onArmaAnimationComplete));
	}
	if(p_cabeza >= 0) this.c_p_cabeza = this.parts[p_cabeza];
	if(p_disparo >= 0) this.c_p_disparo = this.parts[p_disparo];
	this.set_x(this.originalX = _x);
	this.set_y(this.originalY = _y + 30);
	if(_destroyCallback == null) this.destroyCallback = ($_=scenes_Gameplay.current,$bind($_,$_.removeObject)); else this.destroyCallback = _destroyCallback;
	this.create(type);
	this.addCollider(60,60,0,0,false);
	this.boss_flag = bossFlag;
};
$hxClasses["objects.Enemy"] = objects_Enemy;
objects_Enemy.__name__ = ["objects","Enemy"];
objects_Enemy.__interfaces__ = [utils_Generable,objects_GameObject];
objects_Enemy.spawn = function(_x,_y,type,group,bossFlag) {
	if(_y == null) _y = 0;
	if(_x == null) _x = 0;
	scenes_Gameplay.current.addObject(new objects_Enemy(_x,_y,type,($_=scenes_Gameplay.current,$bind($_,$_.removeObject)),group,bossFlag));
};
objects_Enemy.__super__ = objects_BaseSprite;
objects_Enemy.prototype = $extend(objects_BaseSprite.prototype,{
	onArmaAnimationComplete: function(ev) {
		this.states[objects_BaseSprite.S_STATES][objects_Enemy.S_SHOOT] = false;
	}
	,setGraph: function(_type,_group) {
		this.eclass = scenes_Gameplay.assetSet;
		this.eType = 0;
		this.lvl = 0;
		if(this.eclass == 3) this.eclass = 0;
		switch(_group) {
		case 1:
			this.lvl = 0;
			break;
		case 2:
			this.lvl = 1;
			break;
		case 3:
			this.lvl = 2;
			break;
		default:
			var rand = Math.round(Math.random() * 321654987 % 100);
			if(rand < 50) this.lvl = 0; else this.lvl = 1;
		}
		if(_type >= objects_Enemy.TYPE_KAMIKAZE_1 && _type <= objects_Enemy.TYPE_KAMIKAZE_8) {
			this.eType = 0;
			this.hp = 8;
		} else if(_type >= objects_Enemy.TYPE_SOLDIER_1 && _type <= objects_Enemy.TYPE_SOLDIER_12) {
			this.eType = 1;
			this.hp = 10;
		} else if(_type >= objects_Enemy.TYPE_HEAVY_1 && _type <= objects_Enemy.TYPE_HEAVY_6) {
			this.eType = 2;
			this.hp = 12;
		} else this.hp = 5;
		this.data = utils_Utils.loadJson(this.enemies_jsons[this.eclass][this.eType][this.lvl]);
		var _g = scenes_Gameplay.difficult;
		switch(_g) {
		case "easy":
			this.hp *= 0.5;
			break;
		case "normal":
			this.hp *= 0.75;
			break;
		case "hard":
			this.hp *= 1.0;
			break;
		}
	}
	,create: function(type) {
		this.type = type;
		this.currentStepIndex = 0;
		this.shootBurstTime = 0;
		this.shootBurstCounter = 0;
		this.shootTime = 0;
		this.shootType = objects_Enemy.SHOOT_PATTERN_NONE;
		this.arraySteps = [];
		switch(type) {
		case 1:
			this.arraySteps.push(objects_Enemy.WALK_FORWARD);
			this.shootType = objects_Enemy.PUNCH_PATTERN_SIMPLE;
			this.kamikaze_flag = true;
			break;
		case 2:
			this.arraySteps.push(objects_Enemy.RUSH_TARGET);
			this.shootType = objects_Enemy.PUNCH_PATTERN_SIMPLE;
			this.kamikaze_flag = true;
			break;
		case 3:
			this.arraySteps.push(objects_Enemy.ZIG_ZAG);
			this.shootType = objects_Enemy.PUNCH_PATTERN_BURST;
			this.kamikaze_flag = true;
			break;
		case 4:
			this.cumulativeTime = 1000;
			this.set_y(this.originalY + 1);
			this.arraySteps.push(objects_Enemy.ZIG_ZAG);
			this.shootType = objects_Enemy.PUNCH_PATTERN_BURST;
			this.kamikaze_flag = true;
			break;
		case 5:
			this.arraySteps.push(objects_Enemy.RUSH_TARGET);
			this.shootType = objects_Enemy.PUNCH_PATTERN_BURST;
			this.kamikaze_flag = true;
			break;
		case 6:
			this.cumulativeTime = 1000;
			this.set_y(this.originalY + 1);
			this.arraySteps.push(objects_Enemy.RUSH_TARGET);
			this.shootType = objects_Enemy.PUNCH_PATTERN_BURST;
			this.kamikaze_flag = true;
			break;
		case 7:
			this.arraySteps.push(objects_Enemy.CHASE);
			this.shootType = objects_Enemy.PUNCH_PATTERN_BURST;
			this.kamikaze_flag = true;
			break;
		case 8:
			this.arraySteps.push(objects_Enemy.CHASE_RUSH);
			this.shootType = objects_Enemy.PUNCH_PATTERN_BURST;
			this.kamikaze_flag = true;
			break;
		case 9:
			this.arraySteps.push(objects_Enemy.STAND);
			this.shootType = objects_Enemy.SHOOT_PATTERN_SIMPLE;
			break;
		case 10:
			this.arraySteps.push(objects_Enemy.WALK_FORWARD);
			this.shootType = objects_Enemy.SHOOT_PATTERN_SIMPLE;
			break;
		case 11:
			this.arraySteps.push(objects_Enemy.ZIG_ZAG);
			this.shootType = objects_Enemy.SHOOT_PATTERN_SIMPLE;
			break;
		case 12:
			this.arraySteps.push(objects_Enemy.ZIG_ZAG);
			this.cumulativeTime = 1000;
			this.set_y(this.originalY + 1);
			this.shootType = objects_Enemy.SHOOT_PATTERN_SIMPLE;
			break;
		case 13:
			this.arraySteps.push(objects_Enemy.CHASE);
			this.shootType = objects_Enemy.SHOOT_PATTERN_SIMPLE;
			break;
		case 14:
			this.arraySteps.push(objects_Enemy.CHASE_X);
			this.shootType = objects_Enemy.SHOOT_PATTERN_SIMPLE;
			break;
		case 15:
			this.arraySteps.push(objects_Enemy.STAND);
			this.shootType = objects_Enemy.SHOOT_PATTERN_BURST;
			break;
		case 16:
			this.arraySteps.push(objects_Enemy.WALK_FORWARD);
			this.shootType = objects_Enemy.SHOOT_PATTERN_BURST;
			break;
		case 17:
			this.arraySteps.push(objects_Enemy.ZIG_ZAG);
			this.shootType = objects_Enemy.SHOOT_PATTERN_BURST;
			break;
		case 18:
			this.arraySteps.push(objects_Enemy.ZIG_ZAG);
			this.cumulativeTime = 1000;
			this.set_y(this.originalY + 1);
			this.shootType = objects_Enemy.SHOOT_PATTERN_BURST;
			break;
		case 19:
			this.arraySteps.push(objects_Enemy.CHASE);
			this.shootType = objects_Enemy.SHOOT_PATTERN_BURST;
			break;
		case 20:
			this.arraySteps.push(objects_Enemy.CHASE_X);
			this.shootType = objects_Enemy.SHOOT_PATTERN_BURST;
			break;
		case 21:
			this.arraySteps.push(objects_Enemy.STAND);
			this.shootType = objects_Enemy.SHOOT_PATTERN_OPEN;
			break;
		case 22:
			this.arraySteps.push(objects_Enemy.WALK_FORWARD);
			this.shootType = objects_Enemy.SHOOT_PATTERN_OPEN;
			break;
		case 23:
			this.arraySteps.push(objects_Enemy.ZIG_ZAG);
			this.shootType = objects_Enemy.SHOOT_PATTERN_OPEN;
			break;
		case 24:
			this.arraySteps.push(objects_Enemy.ZIG_ZAG);
			this.cumulativeTime = 1000;
			this.set_y(this.originalY + 1);
			this.shootType = objects_Enemy.SHOOT_PATTERN_OPEN;
			break;
		case 25:
			this.arraySteps.push(objects_Enemy.CHASE);
			this.shootType = objects_Enemy.SHOOT_PATTERN_OPEN;
			break;
		case 26:
			this.arraySteps.push(objects_Enemy.CHASE_X);
			this.shootType = objects_Enemy.SHOOT_PATTERN_OPEN;
			break;
		case 99:
			this.arraySteps.push(objects_Enemy.STAND);
			break;
		default:
			this.arraySteps.push(objects_Enemy.NOTHING);
		}
		if(this.lvl == 2) this.hp *= 2;
		this.step();
	}
	,step: function() {
		if(this.currentStepIndex < this.arraySteps.length) {
			this.resetTimer();
			this.state = this.arraySteps[this.currentStepIndex];
		} else this.removed();
		this.currentStepIndex++;
	}
	,OSUpdate: function(dt) {
		this.scroll(dt);
		return false;
	}
	,update: function(dt) {
		this.set_visible(!utils_Utils.amIOffScreen(this));
		if(!this.get_visible()) {
			this.scroll(dt);
			return;
		}
		var c_states = this.states[objects_BaseSprite.S_STATES];
		c_states[objects_Enemy.S_WALK] = false;
		var _g = this.state;
		switch(_g) {
		case 0:
			this.scroll(dt);
			break;
		case 10:
			this.scroll(dt,1.80);
			this.timer(dt,4.0);
			break;
		case 11:
			var _g1 = this;
			_g1.set_x(_g1.get_x() + dt);
			this.timer(dt,2.0);
			break;
		case 12:
			this.scroll(dt,-1.00);
			break;
		case 13:
			this.scroll(dt,5.0);
			break;
		case 1:
			this.scroll(dt);
			this.walk(dt,0.8);
			break;
		case 2:
			if(!this.rush_flag) {
				this.scroll(dt);
				this.walk(dt,0.8);
				this.rush();
			} else {
				this.scroll(dt);
				this.walk(dt,4);
			}
			break;
		case 3:
			if(!this.rush_flag) {
				this.scroll(dt);
				this.walk(dt,0.8);
				this.rush();
			} else {
				this.scroll(dt);
				this.rushTarget(dt,0.25);
			}
			break;
		case 4:
			this.scroll(dt);
			this.walk(dt,0.8);
			this.chaseHero(dt);
			break;
		case 5:
			this.chaseHeroX(dt);
			if(this.get_y() < Main.screenHeight / 2) this.scroll(dt); else this.floating(dt);
			break;
		case 6:
			if(!this.rush_flag) {
				this.scroll(dt);
				this.walk(dt,0.8);
				this.chaseHero(dt);
				this.rush();
			} else {
				this.scroll(dt);
				this.rushTarget(dt,0.25);
			}
			break;
		case 7:
			this.scroll(dt);
			this.walk(dt,0.5);
			this.zigzag(dt);
			break;
		case 8:
			if(!this.rush_flag) {
				this.scroll(dt);
				this.walk(dt,0.5);
				this.zigzag(dt);
				this.rush();
			} else {
				this.scroll(dt);
				this.walk(dt,4);
			}
			break;
		}
		this.checkOutScreenDown();
		var _g2 = this.shootType;
		switch(_g2) {
		case 0:
			break;
		case 1:
			this.shootSimple(dt,2.0);
			break;
		case 2:
			this.shootBurst(dt,3.0,0.5,3);
			break;
		case 3:
			this.shootSimple(dt,3.0);
			break;
		case 4:
			this.shootBurst(dt,2.0,0.5,2);
			break;
		case 5:
			this.shootBurst(dt,3.0,0.35,3);
			break;
		case 6:
			this.shootSimple(dt,0.25);
			break;
		}
		this.checkCollisionWithHero();
		this.checkBullet();
		this.aimHero(dt);
		this.applyAnims();
		objects_BaseSprite.prototype.update.call(this,dt);
		this.animateHit(dt);
	}
	,shootSimple: function(dt,seconds) {
		if(this.get_y() < 0) {
			this.shootTime = Math.round(seconds * objects_Enemy.SECONDS_TO_MILLISECONDS / 2);
			return;
		}
		this.shootTime += dt;
		if(scenes_Gameplay.scrollingSpeed == scenes_Gameplay.SCROLLING_SPRINT) this.shootTime += dt;
		if(this.shootTime > seconds * objects_Enemy.SECONDS_TO_MILLISECONDS) {
			if(this.shootType == objects_Enemy.SHOOT_PATTERN_OPEN) this.shootOpen(); else this.shoot();
			this.shootTime = 0;
		}
	}
	,shootBurst: function(dt,secondsBetweenCycle,secondsBetweenBullets,numberOfBullets) {
		if(this.get_y() < 0) {
			this.shootBurstTime = Math.round(secondsBetweenCycle * objects_Enemy.SECONDS_TO_MILLISECONDS / 2);
			return;
		}
		this.shootBurstTime += dt;
		if(scenes_Gameplay.scrollingSpeed == scenes_Gameplay.SCROLLING_SPRINT) this.shootBurstTime += dt;
		if(this.shootBurstTime > secondsBetweenCycle * objects_Enemy.SECONDS_TO_MILLISECONDS) {
			if(this.shootBurstTime > (secondsBetweenCycle + secondsBetweenBullets * this.shootBurstCounter) * objects_Enemy.SECONDS_TO_MILLISECONDS) {
				this.shootBurstCounter++;
				this.shoot();
				if(this.shootBurstCounter >= numberOfBullets) {
					this.shootBurstTime = 0;
					this.shootBurstCounter = 0;
				}
			}
		}
	}
	,shoot: function() {
		this.states[objects_BaseSprite.S_STATES][objects_Enemy.S_SHOOT] = true;
		if(this.kamikaze_flag) return null;
		var b = objects_Enemy.bpool.get();
		var p = this.get_transform().get_matrix().transformPoint(this.c_p_arma.get_transform().get_matrix().transformPoint(this.shoot_points[this.eclass]));
		b.set_x(p.x);
		b.set_y(p.y);
		if(this.c_p_disparo != null) b.set(this.c_p_disparo.spritesheet,0.22,90 + this.c_p_arma.get_rotation());
		utils_SoundLib.playFX("tiro");
		b.damage = 4;
		return b;
	}
	,shootOpen: function() {
		var b1 = this.shoot();
		var b2 = this.shoot();
		var b3 = this.shoot();
		var rot = 80 + this.c_p_arma.get_rotation();
		if(this.c_p_disparo != null) {
			var _g = 0;
			var _g1 = [b1,b2,b3];
			while(_g < _g1.length) {
				var bb = _g1[_g];
				++_g;
				bb.set(this.c_p_disparo.spritesheet,0.18,rot);
				rot += 10;
			}
		}
		b1.damage = b2.damage = b3.damage = 4;
		this.states[objects_BaseSprite.S_STATES][objects_Enemy.S_SHOOT] = true;
		utils_SoundLib.playFX("tiro");
	}
	,timer: function(dt,seconds) {
		this.time += dt;
		if(this.time > seconds * 960) this.step();
	}
	,resetTimer: function() {
		this.time = 0;
	}
	,aimHero: function(dt) {
		if(this.c_p_arma == null) return;
		var dx = this.get_x() - scenes_Gameplay.player.get_x();
		var dy = scenes_Gameplay.player.get_y() - this.get_y();
		if(scenes_Gameplay.player.get_y() < this.get_y()) dx = dy = 0;
		var sa = 0.025;
		var na = utils_Utils.datan2(dx,dy);
		if(na < 0) na += 360;
		if(dy < 0) {
			na = 0;
			sa = 0.1;
		}
		var ca = this.c_p_arma.get_rotation();
		var da = na - ca;
		if(da > 180) da -= 360;
		if(da < -180) da += 360;
		if(Math.round(da * 100) != 0) {
			var s;
			if(da < 0) s = -1; else s = 1;
			na = ca + s * dt * sa;
			this.c_p_arma.set_rotation(Math.min(30,Math.max(-30,na)));
			if(this.c_p_cabeza != null) this.c_p_cabeza.set_rotation(this.c_p_arma.get_rotation() * 0.33);
		}
	}
	,chaseHero: function(dt) {
		var dx = scenes_Gameplay.player.get_x() - this.get_x();
		var dy = scenes_Gameplay.player.get_y() - this.get_y();
		var distance = Math.sqrt(dx * dx + dy * dy);
		if(scenes_Gameplay.player.get_y() > this.get_y()) {
			if(distance < objects_Enemy.CHASE_RADIOUS) {
				if(Math.abs(dx) > dt * objects_Enemy.CHASE_SPEED) {
					var sign;
					if(dx >= 0) sign = 1; else sign = -1;
					var _g = this;
					_g.set_x(_g.get_x() + sign * objects_Enemy.CHASE_SPEED * dt);
					this.originalX = this.get_x();
					this.states[objects_BaseSprite.S_STATES][objects_Enemy.S_WALK] = true;
				}
				return true;
			}
		}
		return false;
	}
	,rush: function() {
		if(scenes_Gameplay.player.get_y() > this.get_y() + 25 && !this.rush_flag) {
			var dx = scenes_Gameplay.player.get_x() - this.get_x();
			var dy = scenes_Gameplay.player.get_y() - this.get_y();
			var distance = Math.sqrt(dx * dx + dy * dy);
			if(distance < objects_Enemy.RUSH_RADIOUS) {
				this.rush_flag = true;
				this.rush_x = dx / (Math.abs(dx) + Math.abs(dy));
				this.rush_y = dy / (Math.abs(dx) + Math.abs(dy));
				if(this.rush_y < 0) this.rush_y *= -1;
				this.shootType = objects_Enemy.PUNCH_PATTERN_CONSTANT;
			}
		}
	}
	,rushTarget: function(dt,speed) {
		if(speed == null) speed = 1.0;
		var _g = this;
		_g.set_x(_g.get_x() + speed * this.rush_x * dt);
		var _g1 = this;
		_g1.set_y(_g1.get_y() + speed * this.rush_y * dt);
		this.states[objects_BaseSprite.S_STATES][objects_Enemy.S_WALK] = true;
	}
	,checkCollisionWithHero: function() {
		var dx = scenes_Gameplay.player.get_x() - this.get_x();
		var dy = scenes_Gameplay.player.get_y() - this.get_y();
		var distance = Math.sqrt(dx * dx + dy * dy);
		if(distance < objects_Enemy.EXPLODE_DISTANCE) {
			if(this.type < objects_Enemy.TYPE_BOSS_3) {
			}
			if(HxOverrides.indexOf(objects_Enemy.T_KAMIKAZES,this.type,0) != -1) scenes_Gameplay.player.getDamage(objects_Ben.DMG_KAMIKAZE,"punch"); else scenes_Gameplay.player.getDamage(objects_Ben.DMG_SOLDIER,"punch");
		}
	}
	,explode: function() {
		this.currentStepIndex = this.arraySteps.length;
		var explotion = new gameplay_Explotion();
		explotion.spawn(this.get_x(),this.get_y() - 15);
		var removeTime = this.hit_anim_max / 2000;
		motion_Actuate.timer(removeTime).onComplete($bind(this,this.removed));
		var rand = Math.round(Math.random() * 3);
		switch(rand) {
		case 0:
			utils_SoundLib.playFX("boomA");
			break;
		case 1:
			utils_SoundLib.playFX("boomB");
			break;
		case 2:
			utils_SoundLib.playFX("boomC");
			break;
		default:
			utils_SoundLib.playFX("boomA");
		}
	}
	,chaseHeroX: function(dt) {
		var dx = Math.round((scenes_Gameplay.player.get_x() - this.get_x()) * 100);
		var sign;
		if(dx == 0) sign = 0; else if(dx > 0) sign = 1; else sign = -1;
		var _g = this;
		_g.set_x(_g.get_x() + sign / 20 * dt);
		this.originalX = this.get_x();
		this.states[objects_BaseSprite.S_STATES][objects_Enemy.S_WALK] = true;
	}
	,scroll: function(dt,speed) {
		if(speed == null) speed = 1.0;
		var _g = this;
		_g.set_y(_g.get_y() + scenes_Gameplay.scrollingSpeed * speed * dt);
	}
	,walk: function(dt,speed) {
		if(speed == null) speed = 1.0;
		if(this.get_y() > -100) {
			var _g = this;
			_g.set_y(_g.get_y() + speed * dt / 16);
			this.states[objects_BaseSprite.S_STATES][objects_Enemy.S_WALK] = true;
		}
		if(this.boss_flag) {
			var _g1 = this;
			_g1.set_y(_g1.get_y() + dt / 16 * 0.5);
		}
	}
	,zigzag: function(dt) {
		this.cumulativeTime += dt;
		this.set_x(this.amplitud * Math.sin(this.freq * this.cumulativeTime) + this.originalX);
		this.states[objects_BaseSprite.S_STATES][objects_Enemy.S_WALK] = true;
	}
	,floating: function(dt) {
		this.cumulativeTime += dt;
		var _g = this;
		_g.set_y(_g.get_y() + Math.sin(this.cumulativeTime / this.amplitud_f) * this.sineHeight_f / 50);
	}
	,checkOutScreenDown: function() {
		if(this.get_y() > Main.screenHeight + this.get_height()) this.step();
	}
	,checkOutScreenUp: function() {
		if(this.get_y() < -this.get_height()) this.step();
	}
	,animateHit: function(d) {
		if(this.hit_anim_time >= this.hit_anim_max) return;
		this.hit_anim_time += d;
		var p = this.hit_anim_time / this.hit_anim_max;
		if(this.hit_anim_time >= this.hit_anim_max) {
			this.untint();
			return;
		}
		this.hit_color.redOffset = Math.sin(p * Math.PI) * 150;
		this.hit_color.blueOffset = this.hit_color.greenOffset = this.hit_color.redOffset * 0.15;
		this.tint(this.hit_color);
	}
	,takeDamage: function(dmg) {
		if(this.hit_anim_time < this.hit_anim_max) return false;
		this.hp -= dmg;
		this.hit_anim_time = 0;
		if(this.hp <= 0) {
			this.explode();
			this.generateReward();
			return true;
		}
		return false;
	}
	,checkBullet: function() {
		if(this.hit_anim_time < this.hit_anim_max) return;
		var _g = 0;
		var _g1 = scenes_Gameplay.player.bpool._pool;
		while(_g < _g1.length) {
			var bullet = _g1[_g];
			++_g;
			if(bullet.active && this.collidesWith(bullet.colider) && this.hp > 0) {
				if(!bullet.special) bullet.kill();
				if(this.takeDamage(bullet.damage)) return;
			}
		}
	}
	,generateReward: function() {
		var amount = 1;
		var reward = "coin a";
		var _g = this.lvl;
		switch(_g) {
		case 0:
			reward = "coin a";
			break;
		case 1:
			reward = "orbe";
			break;
		case 2:
			reward = "coin b";
			break;
		}
		var _g1 = this.eType;
		switch(_g1) {
		case 0:
			amount = 1;
			break;
		case 1:
			amount = 2;
			break;
		case 2:
			amount = 3;
			break;
		}
		if(amount == 1) scenes_Gameplay.current.addObject(new gameplay_Collectable(Math.round(this.get_x()),Math.round(this.get_y() - 10),reward)); else {
			var item;
			var dirx = 0;
			var diry = 0;
			var _g2 = 0;
			while(_g2 < amount) {
				var i = _g2++;
				item = new gameplay_Collectable(Math.round(this.get_x()),Math.round(this.get_y()),reward);
				dirx = 1 - (Math.floor(Math.random() * 100) + 1) / 50;
				diry = 1 - (Math.floor(Math.random() * 100) + 1) / 50;
				item.setSpeed(dirx,diry,0.5);
				scenes_Gameplay.current.addObject(item);
			}
		}
	}
	,removed: function() {
		scenes_Gameplay.current.removeObject(this);
	}
	,__class__: objects_Enemy
});
var objects_Generator = function() {
	this.enemyQueue = [];
	this.delayBetweenEnemies = 2.0;
};
$hxClasses["objects.Generator"] = objects_Generator;
objects_Generator.__name__ = ["objects","Generator"];
objects_Generator.__interfaces__ = [objects_GameObject];
objects_Generator.prototype = {
	_queueEnemy: function(px,py,ptype,pgroup,bossFlag,preload) {
		if(preload == null) preload = false;
		if(bossFlag == null) bossFlag = false;
		var e = null;
		if(preload) e = this.newEnemy(px,py,ptype,pgroup,bossFlag);
		var p = [objects_Generator.ET_ENEMY,e,px,py,ptype,pgroup];
		this.enemyQueue.push(p);
	}
	,_queueBox: function(px,py,ptype,preload) {
		if(preload == null) preload = false;
		var e = null;
		if(preload) e = this.newBox(px,py,ptype);
		var p = [objects_Generator.ET_BOX,e,px,py,ptype];
		this.enemyQueue.push(p);
	}
	,_queueWall: function(px,py,preload) {
		if(preload == null) preload = false;
		var e = null;
		if(preload) e = this.newWall(px,py);
		var p = [objects_Generator.ET_WALL,e,px,py];
		this.enemyQueue.push(p);
	}
	,_queueMine: function(px,py,preload) {
		if(preload == null) preload = false;
		var e = null;
		if(preload) e = this.newMine(px,py);
		var p = [objects_Generator.ET_MINE,e,px,py];
		this.enemyQueue.push(p);
	}
	,queueCollectable: function(px,py,type,preload) {
		if(preload == null) preload = false;
		var e = null;
		if(preload) e = this.newCollectable(px,py,type);
		var p = [objects_Generator.ET_COLLECTABLE,e,px,py,type];
		this.enemyQueue.push(p);
	}
	,sendWave: function(_enemiesCount,_eType) {
		if(_eType == null) _eType = 0;
		this.enemiesCount = _enemiesCount - 1;
		if(this.enemiesCount > 0) {
			this._queueEnemy(Math.round(Math.random() * Main.screenWidth),0.0,_eType,0);
			motion_Actuate.timer(this.delayBetweenEnemies).onComplete($bind(this,this.sendWave),[this.enemiesCount]);
		}
	}
	,newEnemy: function(x,y,eType,eGroup,bossFlag) {
		if(bossFlag == null) bossFlag = false;
		switch(eType) {
		case 100:
			haxe_Log.trace("Generator real boss",{ fileName : "Generator.hx", lineNumber : 115, className : "objects.Generator", methodName : "newEnemy"});
			return new objects_bosses_Bee(x,y,$bind(this,this.destroyCallback));
		case 101:
			haxe_Log.trace("Generator real boss",{ fileName : "Generator.hx", lineNumber : 118, className : "objects.Generator", methodName : "newEnemy"});
			return new objects_bosses_Axolotl(x,y,$bind(this,this.destroyCallback));
		case 102:
			haxe_Log.trace("Generator real boss",{ fileName : "Generator.hx", lineNumber : 121, className : "objects.Generator", methodName : "newEnemy"});
			return new objects_bosses_Zombozo(x,y,$bind(this,this.destroyCallback));
		default:
			haxe_Log.trace("Generator enemy",{ fileName : "Generator.hx", lineNumber : 124, className : "objects.Generator", methodName : "newEnemy"});
			return new objects_Enemy(x,y,eType,$bind(this,this.destroyCallback),eGroup,bossFlag);
		}
		return null;
	}
	,newBox: function(x,y,type) {
		haxe_Log.trace("Generator box",{ fileName : "Generator.hx", lineNumber : 131, className : "objects.Generator", methodName : "newBox"});
		return new gameplay_Box(x,y,type);
	}
	,newWall: function(x,y) {
		haxe_Log.trace("Generator wall",{ fileName : "Generator.hx", lineNumber : 136, className : "objects.Generator", methodName : "newWall"});
		return new gameplay_Wall(x,y,"wall");
	}
	,newMine: function(x,y) {
		haxe_Log.trace("Generator mine",{ fileName : "Generator.hx", lineNumber : 142, className : "objects.Generator", methodName : "newMine"});
		var e = new gameplay_Mine(x,y,"mine");
		scenes_Gameplay.current.particlesLayerDown.addChild(js_Boot.__cast(e , openfl_display_DisplayObject));
		return e;
	}
	,newCollectable: function(x,y,type) {
		haxe_Log.trace("Generator collectable",{ fileName : "Generator.hx", lineNumber : 149, className : "objects.Generator", methodName : "newCollectable"});
		return new gameplay_Collectable(x,y,type);
	}
	,addElement: function(el) {
		var et = Math.round(el[0]);
		var e = el[1];
		if(e == null) switch(et) {
		case 0:
			e = this.newEnemy(el[2],el[3],el[4],el[5]);
			break;
		case 1:
			e = this.newBox(el[2],el[3],el[4]);
			break;
		case 2:
			e = this.newWall(el[2],el[3]);
			break;
		case 3:
			e = this.newMine(el[2],el[3]);
			break;
		case 4:
			e = this.newCollectable(el[2],el[3],el[4]);
			break;
		}
		scenes_Gameplay.current.addObject(e,et != objects_Generator.ET_MINE);
	}
	,destroyCallback: function(enemy) {
		scenes_Gameplay.current.removeObject(enemy);
	}
	,update: function(dt) {
		var to_remove = [];
		var el;
		var insert;
		var _g1 = 0;
		var _g = this.enemyQueue.length;
		while(_g1 < _g) {
			var i = _g1++;
			el = this.enemyQueue[i];
			el[3] += scenes_Gameplay.scrollingSpeed * dt;
			insert = el[3] >= objects_Generator.y_limit;
			if(js_Boot.__instanceof(el[1],utils_Generable)) insert = insert || (js_Boot.__cast(el[1] , utils_Generable)).OSUpdate(dt);
			if(insert) {
				to_remove.splice(0,0,i);
				this.addElement(el);
			}
		}
		var _g2 = 0;
		while(_g2 < to_remove.length) {
			var sqw = to_remove[_g2];
			++_g2;
			this.enemyQueue.splice(sqw,1);
		}
	}
	,__class__: objects_Generator
};
var objects_ScrollingBackground = function() {
	openfl_display_Sprite.call(this);
	this.camera = new openfl_geom_Rectangle(0,0,640,480);
	this.groundBMD = openfl_Assets.getBitmapData("img/textures/fondo mundo1.png");
	var _g = scenes_Gameplay.assetSet;
	switch(_g) {
	case 1:
		this.groundBMD = openfl_Assets.getBitmapData("img/textures/fondo mundo1.png");
		break;
	case 2:
		this.groundBMD = openfl_Assets.getBitmapData("img/textures/fondo mundo2.png");
		break;
	case 3:
		this.groundBMD = openfl_Assets.getBitmapData("img/textures/fondo mundo3.png");
		break;
	}
	this.currentMatrix = new openfl_geom_Matrix();
	this.currentMatrix.tx = 64.;
	this.get_graphics().clear();
	if(scenes_Gameplay.assetSet == 2) this.get_graphics().beginFill(1536126,1.0); else this.get_graphics().beginFill(0,1.0);
	this.get_graphics().drawRect(0,0,640,2048);
	this.get_graphics().endFill();
	this.get_graphics().beginBitmapFill(this.groundBMD,this.currentMatrix,true);
	this.get_graphics().drawRect(64.,0,512,2048);
	this.get_graphics().endFill();
	this.set_scrollRect(this.camera);
	this.camera.y = 1024;
};
$hxClasses["objects.ScrollingBackground"] = objects_ScrollingBackground;
objects_ScrollingBackground.__name__ = ["objects","ScrollingBackground"];
objects_ScrollingBackground.__interfaces__ = [objects_GameObject];
objects_ScrollingBackground.__super__ = openfl_display_Sprite;
objects_ScrollingBackground.prototype = $extend(openfl_display_Sprite.prototype,{
	update: function(delta) {
		this.camera.y -= scenes_Gameplay.scrollingSpeed * delta;
		if(this.camera.y <= 0) this.camera.y = 1024;
		this.set_scrollRect(this.camera);
	}
	,__class__: objects_ScrollingBackground
});
var objects_ScrollingBorderLeft = function() {
	openfl_display_Sprite.call(this);
	this.camera = new openfl_geom_Rectangle(0,0,80,480);
	this.groundBMD = openfl_Assets.getBitmapData("img/textures/pared mundo1.png");
	var _g = scenes_Gameplay.assetSet;
	switch(_g) {
	case 1:
		this.groundBMD = openfl_Assets.getBitmapData("img/textures/pared mundo1.png");
		objects_ScrollingBorderLeft.SCROLLING_RATIO = 1.25;
		break;
	case 2:
		this.groundBMD = openfl_Assets.getBitmapData("img/textures/pared mundo2.png");
		objects_ScrollingBorderLeft.SCROLLING_RATIO = 1.25;
		break;
	case 3:
		this.groundBMD = openfl_Assets.getBitmapData("img/textures/pared mundo3.png");
		objects_ScrollingBorderLeft.SCROLLING_RATIO = 1.10;
		break;
	}
	this.currentMatrix = new openfl_geom_Matrix();
	this.get_graphics().clear();
	this.get_graphics().beginBitmapFill(this.groundBMD,this.currentMatrix,true);
	this.get_graphics().drawRect(0,0,80,2048);
	this.get_graphics().endFill();
	this.set_scrollRect(this.camera);
	this.camera.y = 1024;
	this.mouseEnabled = false;
};
$hxClasses["objects.ScrollingBorderLeft"] = objects_ScrollingBorderLeft;
objects_ScrollingBorderLeft.__name__ = ["objects","ScrollingBorderLeft"];
objects_ScrollingBorderLeft.__interfaces__ = [objects_GameObject];
objects_ScrollingBorderLeft.__super__ = openfl_display_Sprite;
objects_ScrollingBorderLeft.prototype = $extend(openfl_display_Sprite.prototype,{
	update: function(delta) {
		this.camera.y -= scenes_Gameplay.scrollingSpeed * objects_ScrollingBorderLeft.SCROLLING_RATIO * delta;
		if(this.camera.y <= 0) this.camera.y = 1024;
		this.set_scrollRect(this.camera);
	}
	,__class__: objects_ScrollingBorderLeft
});
var objects_ScrollingBorderRight = function() {
	openfl_display_Sprite.call(this);
	this.camera = new openfl_geom_Rectangle(0,0,80,480);
	this.groundBMD = openfl_Assets.getBitmapData("img/textures/pared mundo1.png");
	var _g = scenes_Gameplay.assetSet;
	switch(_g) {
	case 1:
		this.groundBMD = openfl_Assets.getBitmapData("img/textures/pared mundo1.png");
		objects_ScrollingBorderRight.SCROLLING_RATIO = 1.25;
		break;
	case 2:
		this.groundBMD = openfl_Assets.getBitmapData("img/textures/pared mundo2.png");
		objects_ScrollingBorderRight.SCROLLING_RATIO = 1.25;
		break;
	case 3:
		this.groundBMD = openfl_Assets.getBitmapData("img/textures/pared mundo3.png");
		objects_ScrollingBorderRight.SCROLLING_RATIO = 1.10;
		break;
	}
	this.currentMatrix = new openfl_geom_Matrix();
	this.currentMatrix.ty = 512;
	this.get_graphics().clear();
	this.get_graphics().beginBitmapFill(this.groundBMD,this.currentMatrix,true);
	this.get_graphics().drawRect(0,0,80,2048);
	this.get_graphics().endFill();
	this.set_scrollRect(this.camera);
	this.set_x(Main.screenWidth);
	this.set_scaleX(-1);
	this.camera.y = 1024;
	this.mouseEnabled = false;
};
$hxClasses["objects.ScrollingBorderRight"] = objects_ScrollingBorderRight;
objects_ScrollingBorderRight.__name__ = ["objects","ScrollingBorderRight"];
objects_ScrollingBorderRight.__interfaces__ = [objects_GameObject];
objects_ScrollingBorderRight.__super__ = openfl_display_Sprite;
objects_ScrollingBorderRight.prototype = $extend(openfl_display_Sprite.prototype,{
	update: function(delta) {
		this.camera.y -= scenes_Gameplay.scrollingSpeed * objects_ScrollingBorderRight.SCROLLING_RATIO * delta;
		if(this.camera.y <= 0) this.camera.y = 1024;
		this.set_scrollRect(this.camera);
	}
	,__class__: objects_ScrollingBorderRight
});
var objects_bosses_Axolotl = function(_x,_y,_destroyCallback) {
	if(_y == null) _y = 0;
	if(_x == null) _x = 0;
	this.limitY = 0;
	this.cumulativeTime = 0;
	this.dir = 1;
	this.freq = 0.0025;
	this.amplitud = 60;
	this.tint_obj = null;
	this.hit_color = new openfl_geom_ColorTransform();
	this.hit_anim_max = 150;
	this.hit_anim_time = 0;
	this.nowX = 0;
	this.tongueTarget = 0;
	this.deadTime = 1000;
	this.deadStep = 0;
	this.lockBg = false;
	this.scream = false;
	this.dt = 0;
	this.TONGUE_MAX_AMPLITUDE = 50;
	this.SEGMENTS = 3;
	this.amplitude = 0;
	this.destroyCallback = _destroyCallback;
	this.spritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/bosses/jefe2 - boca.png"),2,3,300,140);
	this.spritesheet.addBehavior(new spritesheet_data_BehaviorData("idle",[0],false,30,150,140));
	this.spritesheet.addBehavior(new spritesheet_data_BehaviorData("open",[1,2,3,4,5],false,30,150,140));
	this.spritesheet.addBehavior(new spritesheet_data_BehaviorData("close",[5,4,3,2,1],false,30,150,140));
	spritesheet_AnimatedSprite.call(this,this.spritesheet);
	this.showBehavior("idle");
	this.set_x(this.originalX = _x);
	this.set_y(this.originalY = _y + 1);
	var insideBitmap = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/bosses/jefe2 - interior.png"));
	var outsideSpriteSheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/bosses/jefe2.png"),1,2,640,240);
	outsideSpriteSheet.addBehavior(new spritesheet_data_BehaviorData("idle",[0],false,30,320,230));
	outsideSpriteSheet.addBehavior(new spritesheet_data_BehaviorData("hit",[1,1,1,1],false,30,320,230));
	var fondoAguaBitmap = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/bosses/jefe2 - fondo.png"));
	this.fondoAgua = new openfl_display_Sprite();
	fondoAguaBitmap.set_y(260);
	this.fondoAgua.addChild(fondoAguaBitmap);
	this.interior = new openfl_display_Sprite();
	this.exterior = new spritesheet_AnimatedSprite(outsideSpriteSheet);
	this.exterior.showBehavior("idle");
	insideBitmap.set_x(-insideBitmap.get_width() / 2);
	insideBitmap.set_y(-insideBitmap.get_height() + 100);
	this.interior.addChild(insideBitmap);
	this.interior.set_x(this.get_x());
	this.interior.set_y(this.get_y() - 100);
	this.exterior.set_x(this.get_x());
	this.exterior.set_y(this.get_y() - 10);
	this.interior.set_name("interior");
	this.exterior.set_name("exterior");
	this.fondoAgua.set_y(this.get_y() - 500);
	scenes_Gameplay.current.addChild(this.fondoAgua);
	scenes_Gameplay.current.addChild(this.interior);
	this.tongue = new openfl_display_Sprite();
	this.tongue.set_y(this.get_y() - 15);
	scenes_Gameplay.current.addChild(this.tongue);
	scenes_Gameplay.current.addChild(this.exterior);
	this.set_name("axolotl");
	this.collider = new openfl_display_Sprite();
	this.collider.get_graphics().beginFill(16777215,0.0);
	this.collider.get_graphics().drawRect(-120,-150,240,40);
	this.collider.get_graphics().endFill();
	this.addChild(this.collider);
	var _g = scenes_Gameplay.difficult;
	switch(_g) {
	case "easy":
		objects_bosses_Axolotl.BOSS_HP = 200;
		break;
	case "normal":
		objects_bosses_Axolotl.BOSS_HP = 300;
		break;
	case "hard":
		objects_bosses_Axolotl.BOSS_HP = 400;
		break;
	}
	this.hp = objects_bosses_Axolotl.BOSS_HP - 1;
	this.state = objects_bosses_Axolotl.BOSS_STATE_SCROLL;
	hud_GUI.bossBar.fixGauge(this.hp,objects_bosses_Axolotl.BOSS_HP);
	hud_GUI.bossBar.setCover("jefe2");
};
$hxClasses["objects.bosses.Axolotl"] = objects_bosses_Axolotl;
objects_bosses_Axolotl.__name__ = ["objects","bosses","Axolotl"];
objects_bosses_Axolotl.__interfaces__ = [objects_GameObject];
objects_bosses_Axolotl.__super__ = spritesheet_AnimatedSprite;
objects_bosses_Axolotl.prototype = $extend(spritesheet_AnimatedSprite.prototype,{
	drawTongue: function(targetY) {
		var beginPoint = new openfl_geom_Point(0,-100);
		var endPoint = new openfl_geom_Point(0,targetY);
		var segmentLength = Math.abs(beginPoint.y - endPoint.y) / this.SEGMENTS;
		this.tongue.set_y(this.get_y() - 15);
		this.tongue.set_x(this.get_x());
		this.tongue.get_graphics().clear();
		this.tongue.get_graphics().lineStyle(80,43656,1.0);
		if(segmentLength > 5) {
			this.tongue.get_graphics().moveTo(endPoint.x,endPoint.y);
			var side;
			var _g1 = 1;
			var _g = this.SEGMENTS + 1;
			while(_g1 < _g) {
				var i = _g1++;
				side = i % 2 * this.amplitude - this.amplitude / 2;
				this.tongue.get_graphics().curveTo(endPoint.x + side,endPoint.y - segmentLength * (i - 0.5),endPoint.x,endPoint.y - segmentLength * i);
			}
		}
		this.tongue.get_graphics().moveTo(beginPoint.x,beginPoint.y);
		this.tongue.get_graphics().endFill();
		this.tongue.get_graphics().lineStyle(70,65416,1.0);
		if(segmentLength > 5) {
			this.tongue.get_graphics().moveTo(endPoint.x,endPoint.y);
			var side1;
			var _g11 = 1;
			var _g2 = this.SEGMENTS + 1;
			while(_g11 < _g2) {
				var i1 = _g11++;
				side1 = i1 % 2 * this.amplitude - this.amplitude / 2;
				this.tongue.get_graphics().curveTo(endPoint.x + side1,endPoint.y - segmentLength * (i1 - 0.5),endPoint.x,endPoint.y - segmentLength * i1);
			}
		}
		this.tongue.get_graphics().moveTo(beginPoint.x,beginPoint.y);
		this.tongue.get_graphics().endFill();
		this.dt += 0.3;
		this.amplitude = this.TONGUE_MAX_AMPLITUDE * Math.sin(this.dt);
	}
	,step: function() {
		this.time = 0;
		if(this.state == objects_bosses_Axolotl.BOSS_STATE_TONGUE_BACK) this.tongue.get_graphics().clear();
		if(this.state == objects_bosses_Axolotl.BOSS_STATE_BACK) {
			this.showBehaviors(["close","idle"]);
			var _g = objects_bosses_Axolotl.STANCE;
			switch(_g) {
			case 1:
				objects_Enemy.spawn(this.get_x() + 200.0,-20,objects_Enemy.TYPE_KAMIKAZE_2,1,true);
				objects_Enemy.spawn(this.get_x() - 200.0,-20,objects_Enemy.TYPE_KAMIKAZE_2,1,true);
				break;
			case 2:
				objects_Enemy.spawn(this.get_x() + 200,-20,objects_Enemy.TYPE_KAMIKAZE_2,1,true);
				objects_Enemy.spawn(this.get_x() - 200,-20,objects_Enemy.TYPE_KAMIKAZE_2,1,true);
				objects_Enemy.spawn(this.get_x() + 200,-100,objects_Enemy.TYPE_KAMIKAZE_2,2,true);
				objects_Enemy.spawn(this.get_x() - 200,-100,objects_Enemy.TYPE_KAMIKAZE_2,2,true);
				break;
			case 3:
				objects_Enemy.spawn(this.get_x() + 200,-20,objects_Enemy.TYPE_KAMIKAZE_2,1,true);
				objects_Enemy.spawn(this.get_x() - 200,-20,objects_Enemy.TYPE_KAMIKAZE_2,1,true);
				objects_Enemy.spawn(this.get_x() + 200,-100,objects_Enemy.TYPE_KAMIKAZE_2,2,true);
				objects_Enemy.spawn(this.get_x() - 200,-100,objects_Enemy.TYPE_KAMIKAZE_2,2,true);
				objects_Enemy.spawn(this.get_x() + 200,-160,objects_Enemy.TYPE_KAMIKAZE_2,3,true);
				objects_Enemy.spawn(this.get_x() - 200,-160,objects_Enemy.TYPE_KAMIKAZE_2,3,true);
				break;
			}
			this.state = objects_bosses_Axolotl.BOSS_STATE_STAND;
		} else {
			if(this.currentBehavior.name != "open" && this.state != objects_bosses_Axolotl.BOSS_STATE_SCROLL) {
				this.cumulativeTime = 0;
				this.dir *= -1;
				this.freq = 1 / (400 + this.hp);
				hud_GUI.bossBar.set_visible(true);
				this.showBehavior("open");
			}
			if(this.state != objects_bosses_Axolotl.BOSS_STATE_SCROLLBACK) {
				this.state++;
				if(this.state == objects_bosses_Axolotl.BOSS_STATE_TONGUE_GO) utils_SoundLib.playFX("axolote");
			}
		}
	}
	,scroll: function(dt,speed,checkStep) {
		if(checkStep == null) checkStep = true;
		if(speed == null) speed = 1.0;
		var _g = this;
		_g.set_y(_g.get_y() + speed * dt / 16);
		if(dt > 0) {
			if(!this.lockBg) this.fondoAgua.set_y(this.get_y() - 500);
		}
		this.interior.set_y(this.get_y() - 100);
		this.exterior.set_y(this.get_y() - 10);
		if(this.get_y() > 0 && !this.scream) {
			this.scream = true;
			utils_SoundLib.playFX("axolote");
			utils_SoundLib.fadeMusic("silence");
		}
		if(this.get_y() > 235 && checkStep) {
			utils_SoundLib.fadeMusic("boss");
			scenes_Gameplay.scrollingSpeed = 0;
			this.lockBg = true;
			this.step();
		}
	}
	,explode: function() {
		var explotion = new gameplay_Explotion();
		explotion.spawn(this.get_x(),this.get_y());
		hud_GUI.bossBar.set_visible(false);
		this.state = objects_bosses_Axolotl.BOSS_STATE_SCROLLBACK;
		utils_SoundLib.fadeMusic("silence");
		scenes_Gameplay.current.endGame();
	}
	,deadSequence: function(dt) {
		this.deadTime += dt;
		if(this.deadTime >= 1000) {
			this.deadStep++;
			this.deadTime -= 1000;
			var _g = this.deadStep;
			switch(_g) {
			case 0:
				break;
			case 1:
				utils_SoundLib.playFX("axolote");
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				break;
			case 2:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				break;
			case 3:
				utils_SoundLib.playFX("axolote");
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 4:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 5:
				utils_SoundLib.playFX("axolote");
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 6:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 7:
				utils_SoundLib.playFX("axolote");
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 8:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 9:
				this.destroy();
				break;
			}
		}
	}
	,generateExplotion: function() {
		var explotion = new gameplay_Explotion();
		var randX = Math.round(Math.random() * 31654987 % 8 - 4);
		randX *= 25;
		var randY = Math.round(Math.random() * 31654987 % 4 - 4);
		randY *= 25;
		explotion.spawn(this.get_x() + randX,this.get_y() + randY);
		var rand = Math.round(Math.random() * 3);
		switch(rand) {
		case 0:
			utils_SoundLib.playFX("boomA");
			break;
		case 1:
			utils_SoundLib.playFX("boomB");
			break;
		case 2:
			utils_SoundLib.playFX("boomC");
			break;
		default:
			utils_SoundLib.playFX("boomA");
		}
	}
	,update: function(dt) {
		var _g = this.state;
		switch(_g) {
		case -1:
			this.scroll(dt,scenes_Gameplay.scrollingSpeed * 16);
			this.limitY = this.get_y() + this.get_height() - 100;
			break;
		case 0:
			this.timer(dt,5);
			this.originalY = this.get_y();
			this.limitY = this.get_y() + this.get_height() - 100;
			break;
		case 1:
			this.circles(dt);
			this.nowX = this.get_x();
			break;
		case 2:
			this.timer(dt,0.1);
			this.scroll(dt,-5.0,false);
			break;
		case 3:
			this.timer(dt,1);
			this.set_x(this.nowX + Math.random() * 3 - 3);
			this.interior.set_x(this.get_x());
			this.exterior.set_x(this.get_x());
			this.tongueTarget = 0;
			break;
		case 4:
			if(this.get_y() < this.originalY) this.scroll(dt,5.0,false); else {
				this.set_y(this.originalY);
				this.interior.set_y(this.get_y() - 100);
				this.exterior.set_y(this.get_y() - 10);
			}
			this.tongueTarget += dt / 2;
			this.drawTongue(this.tongueTarget);
			if(this.tongueTarget > Main.screenHeight + 100) this.step();
			break;
		case 5:
			this.drawTongue(this.tongueTarget);
			this.timer(dt,3);
			break;
		case 6:
			this.tongueTarget -= dt / 2;
			this.drawTongue(this.tongueTarget);
			if(this.tongueTarget < 0) this.step();
			break;
		case 7:
			this.back(dt);
			break;
		case 8:
			this.scroll(-dt,0.5,false);
			this.deadSequence(dt);
			if(this.tongueTarget > -100) {
				this.tongueTarget -= dt;
				this.drawTongue(this.tongueTarget);
			} else this.tongue.get_graphics().clear();
			if(this.get_y() < 0) {
			}
			break;
		default:
			haxe_Log.trace("axolotl no satte",{ fileName : "Axolotl.hx", lineNumber : 425, className : "objects.bosses.Axolotl", methodName : "update"});
		}
		this.checkCollisionWithHero();
		this.checkBullet();
		spritesheet_AnimatedSprite.prototype.update.call(this,dt);
		if(this.exterior != null) this.exterior.update(dt);
		this.checkPlayerLimits();
		this.animateHit(dt);
	}
	,destroy: function() {
		scenes_Gameplay.current.removeChild(this.interior);
		scenes_Gameplay.current.removeChild(this.tongue);
		scenes_Gameplay.current.removeChild(this.exterior);
		this.destroyCallback(this);
		scenes_Gameplay.current.setPhase(scenes_Gameplay.GP_FINISHED);
	}
	,animateHit: function(d) {
		if(this.hit_anim_time >= this.hit_anim_max) return;
		this.hit_anim_time += d;
		var p = this.hit_anim_time / this.hit_anim_max;
		if(this.hit_anim_time >= this.hit_anim_max) {
			this.untint();
			return;
		}
		this.hit_color.redOffset = Math.sin(p * Math.PI) * 150 + 100;
		this.hit_color.blueOffset = this.hit_color.greenOffset = this.hit_color.redOffset * 0.05;
		this.tint(this.hit_color);
	}
	,untint: function() {
		if(this.tint_obj != null) {
			if(this.tint_obj.parent != null) this.tint_obj.parent.removeChild(this.tint_obj);
			this.tint_obj = null;
		}
	}
	,tint: function(by) {
		this.untint();
		if(this.exterior != null) {
			this.tint_obj = utils_Utils.snapshot(this.interior,by);
			this.interior.addChild(this.tint_obj);
		}
	}
	,go: function(dt) {
		var targetX = this.originalX;
		this.amplitud = objects_bosses_Axolotl.INITIAL_AMPLITUDE;
		var targetY = this.amplitud + this.originalY;
		var dx = targetX - this.get_x();
		var dy = targetY - this.get_y();
		this.set_x(this.get_x() + dx / 20);
		this.set_y(this.get_y() + dy / 20);
		if(dx * dx + dy * dy < 3) {
			this.originalX = this.get_x();
			this.originalY = this.get_y();
			this.step();
		}
	}
	,back: function(dt) {
		var dx = this.originalX - this.get_x();
		this.set_x(this.get_x() + dx / 25);
		this.interior.set_x(this.get_x());
		this.exterior.set_x(this.get_x());
		if(dx * dx < 5) this.step();
	}
	,timer: function(dt,seconds) {
		this.time += dt;
		if(this.time > seconds * 960) this.step();
	}
	,circles: function(dt) {
		this.cumulativeTime += dt;
		this.amplitud = objects_bosses_Axolotl.MAX_AMPLITUDE * (this.cumulativeTime / objects_bosses_Axolotl.CIRCLES_MAX_TIME);
		this.set_x(this.amplitud * 0.8 * Math.sin(this.dir * this.freq * this.cumulativeTime) + this.originalX);
		this.interior.set_x(this.get_x());
		this.exterior.set_x(this.get_x());
		if(this.cumulativeTime > objects_bosses_Axolotl.CIRCLES_MAX_TIME) this.step();
	}
	,checkCollisionWithHero: function() {
		if(scenes_Gameplay.current.game_phase != scenes_Gameplay.GP_PLAYING) return;
		if(this.state == objects_bosses_Axolotl.BOSS_STATE_TONGUE_GO || this.state == objects_bosses_Axolotl.BOSS_STATE_TONGUE_MOVE || this.state == objects_bosses_Axolotl.BOSS_STATE_TONGUE_BACK) {
			if(scenes_Gameplay.player.colider.hitTestObject(this.tongue)) scenes_Gameplay.player.getDamage(objects_Ben.DMG_AXOLOTE,"punch");
		}
	}
	,checkBullet: function() {
		var _g = 0;
		var _g1 = scenes_Gameplay.player.bpool._pool;
		while(_g < _g1.length) {
			var bullet = _g1[_g];
			++_g;
			if(bullet.active && this.collidesWith(bullet) && this.hp > 0) {
				if(!bullet.special) bullet.kill();
				if(this.hit_anim_time < this.hit_anim_max) return;
				if(this.currentBehavior.name == "open") {
					this.hp -= bullet.damage;
					if(this.hp < objects_bosses_Axolotl.BOSS_HP / 3) objects_bosses_Axolotl.STANCE = 3; else if(this.hp < objects_bosses_Axolotl.BOSS_HP * 2 / 3) objects_bosses_Axolotl.STANCE = 2; else if(this.hp >= objects_bosses_Axolotl.BOSS_HP * 2 / 3) objects_bosses_Axolotl.STANCE = 1;
					this.hit_anim_time = 0;
					hud_GUI.bossBar.fixGauge(this.hp,objects_bosses_Axolotl.BOSS_HP);
					if(this.hp <= 0) {
						this.exterior.showBehavior("hit");
						this.explode();
					}
				}
			}
		}
	}
	,collidesWith: function(obj) {
		if(this.collider != null) {
			if(this.collider.hitTestObject(obj)) return true;
		}
		return false;
	}
	,checkPlayerLimits: function() {
		if(scenes_Gameplay.player.get_y() < this.limitY) scenes_Gameplay.player.set_y(this.limitY);
	}
	,__class__: objects_bosses_Axolotl
});
var objects_bosses_Bee = function(_x,_y,_destroyCallback) {
	if(_y == null) _y = 0;
	if(_x == null) _x = 0;
	this.deadTime = 1000;
	this.deadStep = 0;
	this.cumulativeTime = 0;
	this.dir = 1;
	this.freq = 0.0025;
	this.amplitud = 60;
	this.tint_obj = null;
	this.hit_color = new openfl_geom_ColorTransform();
	this.hit_anim_max = 200;
	this.hit_anim_time = 0;
	this.scream = false;
	this.destroyCallback = _destroyCallback;
	this.spritesheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/bosses/jefe1.png"),3,2,120,120);
	this.spritesheet.addBehavior(new spritesheet_data_BehaviorData("idle",[0],false,30,60,120));
	this.spritesheet.addBehavior(new spritesheet_data_BehaviorData("fly",[1,2,3,4],true,30,60,120));
	this.spritesheet.addBehavior(new spritesheet_data_BehaviorData("hit",[5],false,30,60,120));
	spritesheet_AnimatedSprite.call(this,this.spritesheet);
	this.showBehavior("idle");
	this.set_x(this.originalX = _x);
	this.set_y(this.originalY = _y);
	haxe_Log.trace("Generator bee" + Std.string([this.get_x(),this.get_y()]),{ fileName : "Bee.hx", lineNumber : 67, className : "objects.bosses.Bee", methodName : "new"});
	var chairBitmap = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/bosses/sillon jefe1.png"));
	this.chair = new openfl_display_Sprite();
	chairBitmap.set_x(-chairBitmap.get_width() / 2);
	chairBitmap.set_y(-chairBitmap.get_height() / 2 - 20);
	this.chair.addChild(chairBitmap);
	this.chair.set_x(this.get_x());
	this.chair.set_y(this.get_y() - 50);
	scenes_Gameplay.current.addChild(this.chair);
	this.collider = new openfl_display_Sprite();
	this.collider.get_graphics().beginFill(16777215,0.0);
	this.collider.get_graphics().drawRect(-20,-80,40,40);
	this.collider.get_graphics().endFill();
	this.addChild(this.collider);
	this.mountain = new objects_bosses_GoldMountain();
	this.mountain.set_x(20);
	this.mountain.set_y(this.get_y() - this.mountain.get_height() / 2.0 - 50);
	scenes_Gameplay.current.particlesLayerDown.addChild(this.mountain);
	scenes_Gameplay.current.addObject(this.mountain,false);
	var _g = scenes_Gameplay.difficult;
	switch(_g) {
	case "easy":
		objects_bosses_Bee.BOSS_HP = 125;
		break;
	case "normal":
		objects_bosses_Bee.BOSS_HP = 150;
		break;
	case "hard":
		objects_bosses_Bee.BOSS_HP = 200;
		break;
	}
	this.hp = objects_bosses_Bee.BOSS_HP - 1;
	this.state = objects_bosses_Bee.BOSS_STATE_SCROLL;
	hud_GUI.bossBar.fixGauge(this.hp,objects_bosses_Bee.BOSS_HP);
	hud_GUI.bossBar.setCover("jefe1");
};
$hxClasses["objects.bosses.Bee"] = objects_bosses_Bee;
objects_bosses_Bee.__name__ = ["objects","bosses","Bee"];
objects_bosses_Bee.__interfaces__ = [objects_GameObject];
objects_bosses_Bee.__super__ = spritesheet_AnimatedSprite;
objects_bosses_Bee.prototype = $extend(spritesheet_AnimatedSprite.prototype,{
	step: function() {
		this.time = 0;
		if(this.state == objects_bosses_Bee.BOSS_STATE_BACK) {
			this.showBehavior("idle");
			var _g = objects_bosses_Bee.STANCE;
			switch(_g) {
			case 1:
				utils_SoundLib.playFX("abeja");
				objects_Enemy.spawn(this.get_x() + 150,-20,objects_Enemy.TYPE_KAMIKAZE_3,1,true);
				objects_Enemy.spawn(this.get_x() - 150,-20,objects_Enemy.TYPE_KAMIKAZE_4,1,true);
				break;
			case 2:
				utils_SoundLib.playFX("abeja");
				objects_Enemy.spawn(this.get_x() + 150,-20,objects_Enemy.TYPE_KAMIKAZE_3,1,true);
				objects_Enemy.spawn(this.get_x() - 150,-20,objects_Enemy.TYPE_KAMIKAZE_4,1,true);
				objects_Enemy.spawn(this.get_x() + 150,-100,objects_Enemy.TYPE_KAMIKAZE_4,2,true);
				objects_Enemy.spawn(this.get_x() - 150,-100,objects_Enemy.TYPE_KAMIKAZE_3,2,true);
				break;
			case 3:
				utils_SoundLib.playFX("abeja");
				objects_Enemy.spawn(this.get_x() + 150,-20,objects_Enemy.TYPE_KAMIKAZE_3,1,true);
				objects_Enemy.spawn(this.get_x() - 150,-20,objects_Enemy.TYPE_KAMIKAZE_4,1,true);
				objects_Enemy.spawn(this.get_x() + 150,-100,objects_Enemy.TYPE_KAMIKAZE_4,2,true);
				objects_Enemy.spawn(this.get_x() - 150,-100,objects_Enemy.TYPE_KAMIKAZE_3,2,true);
				objects_Enemy.spawn(this.get_x() + 150,-160,objects_Enemy.TYPE_KAMIKAZE_3,3,true);
				objects_Enemy.spawn(this.get_x() - 150,-160,objects_Enemy.TYPE_KAMIKAZE_4,3,true);
				break;
			}
			this.state = objects_bosses_Bee.BOSS_STATE_STAND;
		} else {
			if(this.currentBehavior.name != "fly" && this.state != objects_bosses_Bee.BOSS_STATE_SCROLL) {
				this.cumulativeTime = 0;
				this.dir *= -1;
				this.freq = 1 / (400 + this.hp);
				hud_GUI.bossBar.set_visible(true);
				this.showBehavior("fly");
			}
			this.state++;
		}
	}
	,scroll: function(dt,speed) {
		if(speed == null) speed = 1.0;
		var _g = this.chair;
		_g.set_y(_g.get_y() + scenes_Gameplay.scrollingSpeed * speed * dt);
		var _g1 = this;
		_g1.set_y(_g1.get_y() + scenes_Gameplay.scrollingSpeed * speed * dt);
		if(this.get_y() > 50 && !this.scream) {
			this.scream = true;
			utils_SoundLib.fadeMusic("silence");
			utils_SoundLib.playFX("abeja");
		}
		if(this.get_y() > 150) {
			this.chairSitX = this.originalX = this.get_x();
			this.chairSitY = this.originalY = this.get_y();
			scenes_Gameplay.scrollingSpeed = 0;
			utils_SoundLib.fadeMusic("boss");
			this.step();
			this.time = 3000;
		}
	}
	,explode: function() {
		var explotion = new gameplay_Explotion();
		explotion.spawn(this.get_x(),this.get_y());
		hud_GUI.bossBar.set_visible(false);
		this.state = objects_bosses_Bee.BOSS_STATE_EXPLODE;
		utils_SoundLib.fadeMusic("boss dead");
		scenes_Gameplay.current.endGame();
	}
	,update: function(dt) {
		this.set_visible(!utils_Utils.amIOffScreen(this));
		if(!this.get_visible()) {
			this.scroll(dt);
			return;
		}
		var _g = this.state;
		switch(_g) {
		case -1:
			this.scroll(dt);
			break;
		case 0:
			this.timer(dt,6);
			break;
		case 1:
			this.go(dt);
			break;
		case 2:
			this.circles(dt);
			break;
		case 3:
			this.back(dt);
			break;
		case 4:
			this.deadSequence(dt);
			break;
		}
		this.checkCollisionWithHero();
		this.checkBullet();
		spritesheet_AnimatedSprite.prototype.update.call(this,dt);
		this.animateHit(dt);
	}
	,animateHit: function(d) {
		if(this.hit_anim_time >= this.hit_anim_max) return;
		this.hit_anim_time += d;
		var p = this.hit_anim_time / this.hit_anim_max;
		if(this.hit_anim_time >= this.hit_anim_max) {
			this.untint();
			return;
		}
		this.hit_color.redOffset = Math.sin(p * Math.PI) * 150;
		this.hit_color.blueOffset = this.hit_color.greenOffset = this.hit_color.redOffset * 0.15;
		this.tint(this.hit_color);
	}
	,untint: function() {
		if(this.tint_obj != null) {
			if(this.tint_obj.parent != null) this.removeChild(this.tint_obj);
			this.tint_obj = null;
		}
	}
	,tint: function(by) {
		this.untint();
		this.tint_obj = utils_Utils.snapshot(this,by);
		this.addChild(this.tint_obj);
	}
	,go: function(dt) {
		var targetX = this.chairSitX;
		this.amplitud = objects_bosses_Bee.INITIAL_AMPLITUDE;
		var targetY = this.amplitud + this.chairSitY;
		var dx = targetX - this.get_x();
		var dy = targetY - this.get_y();
		this.set_x(this.get_x() + dx / 20);
		this.set_y(this.get_y() + dy / 20);
		if(dx * dx + dy * dy < 3) {
			this.originalX = this.get_x();
			this.originalY = this.get_y();
			this.step();
		}
	}
	,back: function(dt) {
		var dx = this.chairSitX - this.get_x();
		var dy = this.chairSitY - this.get_y();
		this.set_x(this.get_x() + dx / 25);
		this.set_y(this.get_y() + dy / 25);
		if(dx * dx + dy * dy < 5) this.step();
	}
	,timer: function(dt,seconds) {
		this.time += dt;
		if(this.time > seconds * 960) this.step();
	}
	,circles: function(dt) {
		this.cumulativeTime += dt;
		this.amplitud = objects_bosses_Bee.MAX_AMPLITUDE * (this.cumulativeTime / objects_bosses_Bee.CIRCLES_MAX_TIME);
		this.set_x(this.amplitud * 0.7 * Math.sin(this.dir * this.freq * this.cumulativeTime) + this.originalX);
		this.set_y(this.amplitud * Math.cos(this.dir * this.freq * this.cumulativeTime) + this.originalY);
		if(this.cumulativeTime > objects_bosses_Bee.CIRCLES_MAX_TIME && this.get_y() > this.originalY + 20) this.step();
	}
	,checkCollisionWithHero: function() {
		if(scenes_Gameplay.current.game_phase != scenes_Gameplay.GP_PLAYING) return;
		var dx = scenes_Gameplay.player.get_x() - this.get_x();
		var dy = scenes_Gameplay.player.get_y() - this.get_y();
		var distance = Math.sqrt(dx * dx + dy * dy);
		if(distance < objects_bosses_Bee.EXPLODE_DISTANCE) scenes_Gameplay.player.getDamage(objects_Ben.DMG_BEE,"punch");
	}
	,checkBullet: function() {
		var _g = 0;
		var _g1 = scenes_Gameplay.player.bpool._pool;
		while(_g < _g1.length) {
			var bullet = _g1[_g];
			++_g;
			if(bullet.active && this.collidesWith(bullet) && this.hp > 0) {
				if(!bullet.special) bullet.kill();
				if(this.hit_anim_time < this.hit_anim_max) return;
				if(this.state != objects_bosses_Bee.BOSS_STATE_STAND && this.state != objects_bosses_Bee.BOSS_STATE_SCROLL) {
					this.hp -= bullet.damage;
					if(this.hp < objects_bosses_Bee.BOSS_HP / 3) objects_bosses_Bee.STANCE = 3; else if(this.hp < objects_bosses_Bee.BOSS_HP * 2 / 3) objects_bosses_Bee.STANCE = 2; else if(this.hp >= objects_bosses_Bee.BOSS_HP * 2 / 3) objects_bosses_Bee.STANCE = 1;
					this.hit_anim_time = 0;
					hud_GUI.bossBar.fixGauge(this.hp,objects_bosses_Bee.BOSS_HP);
					if(this.hp <= 0) {
						this.showBehavior("hit");
						this.explode();
					}
				}
			}
		}
	}
	,collidesWith: function(obj) {
		if(this.collider != null) {
			if(this.collider.hitTestObject(obj)) return true;
		}
		return false;
	}
	,deadSequence: function(dt) {
		this.deadTime += dt;
		if(this.deadTime >= 1000) {
			this.deadStep++;
			this.deadTime -= 1000;
			var _g = this.deadStep;
			switch(_g) {
			case 0:
				break;
			case 1:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 2:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 3:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 4:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 5:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 6:
				this.destroy();
				break;
			}
		}
	}
	,generateExplotion: function() {
		var explotion = new gameplay_Explotion();
		var randX = Math.round(Math.random() * 31654987 % 8 - 4);
		randX *= 10;
		var randY = Math.round(Math.random() * 31654987 % 8 - 4);
		randY *= 10;
		explotion.spawn(this.get_x() + randX,this.get_y() + randY - 50);
		var rand = Math.round(Math.random() * 3);
		switch(rand) {
		case 0:
			utils_SoundLib.playFX("boomA");
			break;
		case 1:
			utils_SoundLib.playFX("boomB");
			break;
		case 2:
			utils_SoundLib.playFX("boomC");
			break;
		default:
			utils_SoundLib.playFX("boomA");
		}
	}
	,destroy: function() {
		this.destroyCallback(this);
		scenes_Gameplay.current.setPhase(scenes_Gameplay.GP_FINISHED);
	}
	,__class__: objects_bosses_Bee
});
var objects_bosses_Bomb = function(_x,_y) {
	var spritesheet1 = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/bosses/jefe3 - bomba.png"),2,2,80,80);
	spritesheet1.addBehavior(new spritesheet_data_BehaviorData("idle",[0,1,2,3],true,30,40,40));
	spritesheet_AnimatedSprite.call(this,spritesheet1,true);
	this.set_x(_x);
	this.set_y(_y);
	this._z = 1.0;
	var shadowBitmap = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/bosses/sombra.png"));
	shadowBitmap.set_x(-shadowBitmap.get_width() / 2);
	shadowBitmap.set_y(-shadowBitmap.get_height() / 2);
	this.shadow = new openfl_display_Sprite();
	this.shadow.addChild(shadowBitmap);
	this.cumulativeTime = 0;
	this.targetX = scenes_Gameplay.player.get_x();
	this.targetY = scenes_Gameplay.player.get_y();
	this.len = Math.sqrt(Math.pow(this.targetX - this.get_x(),2) + Math.pow(this.targetY - spritesheet_AnimatedSprite.prototype.get_y.call(this),2));
	this.angle = Math.atan2(this.targetY - spritesheet_AnimatedSprite.prototype.get_y.call(this),this.targetX - this.get_x());
	this.showBehavior("idle");
	scenes_Gameplay.current.addObject(this);
	scenes_Gameplay.current.particlesLayerDown.addChild(this.shadow);
};
$hxClasses["objects.bosses.Bomb"] = objects_bosses_Bomb;
objects_bosses_Bomb.__name__ = ["objects","bosses","Bomb"];
objects_bosses_Bomb.__interfaces__ = [objects_GameObject];
objects_bosses_Bomb.__super__ = spritesheet_AnimatedSprite;
objects_bosses_Bomb.prototype = $extend(spritesheet_AnimatedSprite.prototype,{
	update: function(dt) {
		var _g = this;
		_g.set_x(_g.get_x() + objects_bosses_Bomb.SPEED * Math.cos(this.angle) * dt);
		this.set_y(spritesheet_AnimatedSprite.prototype.get_y.call(this) + objects_bosses_Bomb.SPEED * Math.sin(this.angle) * dt);
		var _g1 = this;
		_g1.set_rotation(_g1.get_rotation() + dt / 90);
		this.cumulativeTime += objects_bosses_Bomb.SPEED * dt;
		this._z = 1.5 - 0.5 * Math.pow(2 / this.len * (this.cumulativeTime - this.len / 2),2);
		this.set_scaleY(this.set_scaleX(this._z));
		this.shadow.set_x(this.get_x());
		this.shadow.set_y(spritesheet_AnimatedSprite.prototype.get_y.call(this) + 160 * (this._z - 1.0));
		this.shadow.set_scaleX(this.shadow.set_scaleY(this._z));
		this.shadow.set_alpha(2.3 - this._z);
		if(Math.abs(this.targetY - spritesheet_AnimatedSprite.prototype.get_y.call(this)) < 5 || this._z < 0.9) this.destroy();
		spritesheet_AnimatedSprite.prototype.update.call(this,dt);
	}
	,destroy: function() {
		if(scenes_Gameplay.player.collidesWith(this.shadow)) scenes_Gameplay.player.getDamage(objects_Ben.DMG_BULLET,"punch");
		var explotion = new gameplay_Explotion();
		explotion.spawn(this.get_x(),spritesheet_AnimatedSprite.prototype.get_y.call(this));
		scenes_Gameplay.current.removeObject(this);
		scenes_Gameplay.current.particlesLayerDown.removeChild(this.shadow);
	}
	,get_y: function() {
		return spritesheet_AnimatedSprite.prototype.get_y.call(this) + 120;
	}
	,__class__: objects_bosses_Bomb
});
var objects_bosses_GoldMountain = function() {
	this.sprite = new openfl_display_Sprite();
	openfl_display_Sprite.call(this);
	this.set_x(0);
	this.set_y(0);
	this.setRoundColider(100);
	this.setSprite();
};
$hxClasses["objects.bosses.GoldMountain"] = objects_bosses_GoldMountain;
objects_bosses_GoldMountain.__name__ = ["objects","bosses","GoldMountain"];
objects_bosses_GoldMountain.__interfaces__ = [objects_GameObject];
objects_bosses_GoldMountain.__super__ = openfl_display_Sprite;
objects_bosses_GoldMountain.prototype = $extend(openfl_display_Sprite.prototype,{
	setRoundColider: function(myR) {
		if(myR == null) myR = 20;
		this.colider = utils_Utils.newCollider(myR,myR,0,0,true);
		this.addChild(this.colider);
	}
	,setSprite: function() {
		this.sprite = new openfl_display_Sprite();
		var myImg = "img/bosses/montania2.png";
		var bitmapData = openfl_Assets.getBitmapData(myImg);
		var bitmap = new openfl_display_Bitmap(bitmapData);
		this.sprite.addChild(bitmap);
		this.addChild(this.sprite);
		bitmap.set_x(bitmap.get_width() / 2);
		bitmap.set_y(bitmap.get_height() / 2);
		this.colider.set_x(bitmap.get_x() + this.colider.get_width() / 2 + 30);
		this.colider.set_y(bitmap.get_y() + this.colider.get_height() / 2 - 60);
		this.addChild(this.colider);
	}
	,update: function(dt) {
		this.move(dt);
		this.hitPlayer();
		this.hittedByBullet();
		this.checkOut();
	}
	,move: function(dt) {
		var _g = this;
		_g.set_y(_g.get_y() + scenes_Gameplay.scrollingSpeed * dt);
	}
	,hitPlayer: function() {
		var d = utils_Utils.circHitTest(scenes_Gameplay.player.foot_colider,this.colider);
		if(d == null) return;
		d.normalize((scenes_Gameplay.player.foot_colider.get_width() + this.colider.get_width()) / 40);
		var _g = scenes_Gameplay.player;
		_g.set_x(_g.get_x() + d.x);
		var _g1 = scenes_Gameplay.player;
		_g1.set_y(_g1.get_y() + d.y);
		return;
	}
	,hittedByBullet: function() {
		var _g = 0;
		var _g1 = scenes_Gameplay.player.bpool._pool;
		while(_g < _g1.length) {
			var bullet = _g1[_g];
			++_g;
			if(bullet.active && this.colider.hitTestObject(bullet.colider)) bullet.kill();
		}
	}
	,checkOut: function() {
		if(this.get_y() > Main.screenHeight + 200) this.removed();
	}
	,removed: function() {
		scenes_Gameplay.current.removeObject(this);
	}
	,__class__: objects_bosses_GoldMountain
});
var objects_bosses_Zombozo = function(_x,_y,_destroyCallback) {
	if(_y == null) _y = 0;
	if(_x == null) _x = 0;
	this.limitY = 0;
	this.timeBetweenBombs = 1250;
	this.bombCounter = 0;
	this.bombLimit = 1;
	this.minesPerLine = 1;
	this.tint_obj = null;
	this.hit_color = new openfl_geom_ColorTransform();
	this.hit_anim_max = 150;
	this.hit_anim_time = 0;
	this.deadTime = 1000;
	this.deadStep = 0;
	this.scream = false;
	this.destroyCallback = _destroyCallback;
	this.spriteSheet = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/bosses/jefe3 - zombozo.png"),3,3,180,140);
	this.spriteSheet.addBehavior(new spritesheet_data_BehaviorData("idle",[0,1,2,3],true,15,90,90));
	this.spriteSheet.addBehavior(new spritesheet_data_BehaviorData("bomb",[4,5,6,7],false,15,90,90));
	this.spriteSheet.addBehavior(new spritesheet_data_BehaviorData("hit",[8],false,15,90,90));
	this.spriteSheetExterior = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/bosses/jefe3 - cabeza grande.png"),1,5,460,174);
	this.spriteSheetExterior.addBehavior(new spritesheet_data_BehaviorData("idle",[0],false,30,230,120));
	this.spriteSheetExterior.addBehavior(new spritesheet_data_BehaviorData("open",[1,2,3,4],false,30,230,120));
	this.spriteSheetExterior.addBehavior(new spritesheet_data_BehaviorData("close",[4,3,2,1],false,30,230,120));
	this.spriteSheetExteriorAtras = spritesheet_importers_BitmapImporter.create(openfl_Assets.getBitmapData("img/bosses/jefe3 - cabeza grande atras.png"),1,5,460,174);
	this.spriteSheetExteriorAtras.addBehavior(new spritesheet_data_BehaviorData("idle",[0],false,30,230,100));
	this.spriteSheetExteriorAtras.addBehavior(new spritesheet_data_BehaviorData("open",[1,2,3,4],false,30,230,120));
	this.spriteSheetExteriorAtras.addBehavior(new spritesheet_data_BehaviorData("close",[4,3,2,1],false,30,230,120));
	this.exterior = new spritesheet_AnimatedSprite(this.spriteSheetExterior);
	this.exteriorAtras = new spritesheet_AnimatedSprite(this.spriteSheetExteriorAtras);
	var carroBitmap = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/bosses/jefe3 - carro.png"));
	carroBitmap.set_x(-carroBitmap.get_width() / 2);
	carroBitmap.set_y(0);
	this.carro = new openfl_display_Sprite();
	this.carro.addChild(carroBitmap);
	spritesheet_AnimatedSprite.call(this,this.spriteSheet);
	this.set_x(this.originalX = _x);
	this.set_y(this.originalY = _y);
	this.showHeadBehavior("idle");
	this.showBehavior("idle");
	spritesheet_AnimatedSprite.prototype.update.call(this,16);
	this.carro.set_x(this.get_x());
	this.carro.set_y(this.get_y() - 100);
	this.exterior.set_x(this.get_x());
	this.exterior.set_y(this.get_y() + 10);
	this.exteriorAtras.set_x(this.get_x());
	this.exteriorAtras.set_y(this.get_y() - 10);
	this.carro.set_name("interior");
	this.exterior.set_name("exterior");
	scenes_Gameplay.current.addChild(this.carro);
	scenes_Gameplay.current.addChild(this.exteriorAtras);
	scenes_Gameplay.current.addChild(this.exterior);
	this.set_name("zombozo");
	this.collider = new openfl_display_Sprite();
	this.collider.get_graphics().beginFill(16777215,0.0);
	this.collider.get_graphics().drawRect(-50,-40,100,40);
	this.collider.get_graphics().endFill();
	this.addChild(this.collider);
	objects_bosses_Zombozo.ARRAY_MINES_POSITION = [];
	var minesPositionStart = 150;
	var _g = 0;
	while(_g < 8) {
		var i = _g++;
		objects_bosses_Zombozo.ARRAY_MINES_POSITION.push(minesPositionStart + 50 * i);
	}
	var _g1 = scenes_Gameplay.difficult;
	switch(_g1) {
	case "easy":
		objects_bosses_Zombozo.BOSS_HP = 100;
		break;
	case "normal":
		objects_bosses_Zombozo.BOSS_HP = 150;
		break;
	case "hard":
		objects_bosses_Zombozo.BOSS_HP = 200;
		break;
	}
	this.hp = objects_bosses_Zombozo.BOSS_HP - 1;
	this.state = objects_bosses_Zombozo.BOSS_STATE_SCROLL;
	hud_GUI.bossBar.fixGauge(this.hp,objects_bosses_Zombozo.BOSS_HP);
	hud_GUI.bossBar.setCover("jefe3");
};
$hxClasses["objects.bosses.Zombozo"] = objects_bosses_Zombozo;
objects_bosses_Zombozo.__name__ = ["objects","bosses","Zombozo"];
objects_bosses_Zombozo.__interfaces__ = [objects_GameObject];
objects_bosses_Zombozo.ARRAY_MINES_POSITION = null;
objects_bosses_Zombozo.__super__ = spritesheet_AnimatedSprite;
objects_bosses_Zombozo.prototype = $extend(spritesheet_AnimatedSprite.prototype,{
	step: function() {
		this.time = 0;
		this.cumulativeTime = 0;
		this.bombCounter = 0;
		if(this.state == objects_bosses_Zombozo.BOSS_STATE_BACK) {
			this.showHeadBehaviors(["close","idle"]);
			this.state = objects_bosses_Zombozo.BOSS_STATE_DROP_MINES;
		} else {
			if(this.getHeadBehavior() != "open" && this.state == objects_bosses_Zombozo.BOSS_STATE_STAND) {
				hud_GUI.bossBar.set_visible(true);
				this.showBehavior("idle");
				this.showHeadBehavior("open");
			}
			if(this.state != objects_bosses_Zombozo.BOSS_STATE_SCROLLBACK) this.state++;
		}
	}
	,scroll: function(dt,speed) {
		if(speed == null) speed = 1.0;
		var _g = this;
		_g.set_y(_g.get_y() + scenes_Gameplay.scrollingSpeed * speed * dt);
		this.carro.set_y(this.get_y() - 100);
		this.exterior.set_y(this.get_y() + 10);
		this.exteriorAtras.set_y(this.get_y() - 10);
		if(this.get_y() > -100 && !this.scream) {
			this.scream = true;
			utils_SoundLib.fadeMusic("silence");
			utils_SoundLib.playFX("zombozo");
		}
		if(this.get_y() > 100) {
			this.originalX = this.get_x();
			utils_SoundLib.fadeMusic("boss");
			this.step();
		}
	}
	,explode: function() {
		var explotion = new gameplay_Explotion();
		explotion.spawn(this.get_x(),this.get_y());
		hud_GUI.bossBar.set_visible(false);
		this.showBehavior("hit");
		this.state = objects_bosses_Zombozo.BOSS_STATE_SCROLLBACK;
		utils_SoundLib.fadeMusic("silence");
		scenes_Gameplay.current.endGame();
	}
	,deadSequence: function(dt) {
		this.deadTime += dt;
		if(this.deadTime >= 1000) {
			this.deadStep++;
			this.deadTime -= 1000;
			var _g = this.deadStep;
			switch(_g) {
			case 0:
				break;
			case 1:
				utils_SoundLib.playFX("zombozo");
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				break;
			case 2:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				break;
			case 3:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 4:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 5:
				utils_SoundLib.playFX("zombozo");
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 6:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 7:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			case 8:
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				this.generateExplotion();
				motion_Actuate.timer(0.25).onComplete($bind(this,this.generateExplotion));
				break;
			}
		}
	}
	,generateExplotion: function() {
		var explotion = new gameplay_Explotion();
		var randX = Math.round(Math.random() * 31654987 % 8 - 4);
		randX *= 25;
		var randY = Math.round(Math.random() * 31654987 % 4 - 4);
		randY *= 25;
		explotion.spawn(this.get_x() + randX,this.get_y() + randY);
		var rand = Math.round(Math.random() * 3);
		switch(rand) {
		case 0:
			utils_SoundLib.playFX("boomA");
			break;
		case 1:
			utils_SoundLib.playFX("boomB");
			break;
		case 2:
			utils_SoundLib.playFX("boomC");
			break;
		default:
			utils_SoundLib.playFX("boomA");
		}
	}
	,update: function(dt) {
		var _g = this.state;
		switch(_g) {
		case -1:
			this.scroll(dt);
			this.limitY = this.get_y() + this.get_height();
			break;
		case 1:
			this.timer(dt,1);
			this.limitY = this.get_y() + this.get_height();
			break;
		case 0:
			this.dropMines(dt);
			break;
		case 2:
			this.bomb(dt);
			this.dropMines(dt);
			break;
		case 3:
			this.timer(dt,2);
			break;
		case 4:
			this.scroll(-dt,0.5);
			this.deadSequence(dt);
			if(this.get_y() < -150) this.destroy();
			break;
		}
		this.checkBullet();
		this.checkPlayerLimits();
		this.exterior.update(dt);
		this.exteriorAtras.update(dt);
		spritesheet_AnimatedSprite.prototype.update.call(this,dt);
		this.animateHit(dt);
	}
	,destroy: function() {
		scenes_Gameplay.current.removeChild(this.carro);
		scenes_Gameplay.current.removeChild(this.exterior);
		scenes_Gameplay.current.removeChild(this.exteriorAtras);
		scenes_Gameplay.current.removeChild(this);
		this.destroyCallback(this);
		scenes_Gameplay.current.setPhase(scenes_Gameplay.GP_FINISHED);
	}
	,animateHit: function(d) {
		if(this.hit_anim_time >= this.hit_anim_max) return;
		this.hit_anim_time += d;
		var p = this.hit_anim_time / this.hit_anim_max;
		if(this.hit_anim_time >= this.hit_anim_max) {
			this.untint();
			return;
		}
		this.hit_color.redOffset = Math.sin(p * Math.PI) * 150;
		this.hit_color.blueOffset = this.hit_color.greenOffset = this.hit_color.redOffset * 0.15;
		this.tint(this.hit_color);
	}
	,untint: function() {
		if(this.tint_obj != null) {
			if(this.tint_obj.parent != null) this.removeChild(this.tint_obj);
			this.tint_obj = null;
		}
	}
	,tint: function(by) {
		this.untint();
		this.tint_obj = utils_Utils.snapshot(this,by);
		this.addChild(this.tint_obj);
	}
	,timer: function(dt,seconds) {
		this.time += dt;
		if(this.time > seconds * 960) this.step();
	}
	,dropMines: function(dt) {
		if(this.state == objects_bosses_Zombozo.BOSS_STATE_DROP_MINES) this.cumulativeTime += dt;
		this.time += dt;
		var _g = objects_bosses_Zombozo.STANCE;
		switch(_g) {
		case 1:
			this.minesPerLine = 1;
			objects_bosses_Zombozo.DROP_MINES_TIME_MS = 7500;
			break;
		case 2:
			this.minesPerLine = 2;
			objects_bosses_Zombozo.DROP_MINES_TIME_MS = 6000;
			break;
		case 3:
			this.minesPerLine = 3;
			objects_bosses_Zombozo.DROP_MINES_TIME_MS = 4000;
			break;
		}
		if(this.time > objects_bosses_Zombozo.DROP_MINES_EVERY_MS) {
			this.createMineLine(this.minesPerLine);
			this.time = 0;
		}
		if(this.state == objects_bosses_Zombozo.BOSS_STATE_DROP_MINES) {
			if(this.cumulativeTime > objects_bosses_Zombozo.DROP_MINES_TIME_MS) this.step();
		}
	}
	,createMineLine: function(count) {
		var index;
		var posArray = [0,1,2,3,4,5,6,7];
		var _g = 0;
		while(_g < count) {
			var i = _g++;
			var random = Math.floor(Math.random() * posArray.length);
			index = posArray[random];
			posArray.splice(random,1);
			this.createSingleMine(index);
		}
	}
	,createSingleMine: function(index) {
		var mine = new gameplay_Mine(objects_bosses_Zombozo.ARRAY_MINES_POSITION[index],Math.round(this.get_y()),"a",true);
		scenes_Gameplay.current.particlesLayerDown.addChild(mine);
		scenes_Gameplay.current.addObject(mine,false);
		mine.setTimer(0.5);
	}
	,bomb: function(dt) {
		this.cumulativeTime += dt;
		var _g = objects_bosses_Zombozo.STANCE;
		switch(_g) {
		case 1:
			this.bombLimit = 1;
			break;
		case 2:
			this.bombLimit = 2;
			break;
		case 3:
			this.bombLimit = 3;
			break;
		}
		if(this.cumulativeTime > this.timeBetweenBombs) {
			this.cumulativeTime = 0;
			this.showBehavior("bomb");
			new objects_bosses_Bomb(this.get_x(),this.get_y());
			this.bombCounter++;
			utils_SoundLib.playFX("zombozo");
			if(this.bombCounter >= this.bombLimit) this.step();
		}
	}
	,checkCollisionWithHero: function() {
		if(scenes_Gameplay.current.game_phase != scenes_Gameplay.GP_PLAYING) return;
		if(scenes_Gameplay.player.colider.hitTestObject(this.carro)) scenes_Gameplay.player.getDamage(objects_Ben.DMG_ZOMBOZO,"punch");
	}
	,checkBullet: function() {
		var _g = 0;
		var _g1 = scenes_Gameplay.player.bpool._pool;
		while(_g < _g1.length) {
			var bullet = _g1[_g];
			++_g;
			if(bullet.active && this.collidesWith(bullet) && this.hp > 0) {
				if(this.hit_anim_time < this.hit_anim_max) return;
				if(this.getHeadBehavior() == "open") {
					if(!bullet.special) bullet.kill();
					this.hp -= bullet.damage;
					if(this.hp < objects_bosses_Zombozo.BOSS_HP / 3) objects_bosses_Zombozo.STANCE = 3; else if(this.hp < objects_bosses_Zombozo.BOSS_HP * 2 / 3) objects_bosses_Zombozo.STANCE = 2; else if(this.hp >= objects_bosses_Zombozo.BOSS_HP * 2 / 3) objects_bosses_Zombozo.STANCE = 1;
					this.hit_anim_time = 0;
					hud_GUI.bossBar.fixGauge(this.hp,objects_bosses_Zombozo.BOSS_HP);
					if(this.hp <= 0) {
						this.explode();
						return;
					}
				} else bullet.kill();
			}
		}
	}
	,collidesWith: function(obj) {
		if(this.collider != null) {
			if(this.collider.hitTestObject(obj)) return true;
		}
		return false;
	}
	,showHeadBehavior: function(s) {
		this.exterior.showBehavior(s);
		this.exteriorAtras.showBehavior(s);
	}
	,showHeadBehaviors: function(s) {
		this.exterior.showBehaviors(s);
		this.exteriorAtras.showBehaviors(s);
	}
	,getHeadBehavior: function() {
		var name = "";
		if(this.exterior.currentBehavior != null) name = this.exterior.currentBehavior.name;
		return name;
	}
	,checkPlayerLimits: function() {
		if(scenes_Gameplay.player.get_y() < this.limitY) scenes_Gameplay.player.set_y(this.limitY);
	}
	,__class__: objects_bosses_Zombozo
});
var openfl_IAssetCache = function() { };
$hxClasses["openfl.IAssetCache"] = openfl_IAssetCache;
openfl_IAssetCache.__name__ = ["openfl","IAssetCache"];
openfl_IAssetCache.prototype = {
	__class__: openfl_IAssetCache
	,__properties__: {set_enabled:"set_enabled",get_enabled:"get_enabled"}
};
var openfl_AssetCache = function() {
	this.__enabled = true;
	this.bitmapData = new haxe_ds_StringMap();
	this.font = new haxe_ds_StringMap();
	this.sound = new haxe_ds_StringMap();
};
$hxClasses["openfl.AssetCache"] = openfl_AssetCache;
openfl_AssetCache.__name__ = ["openfl","AssetCache"];
openfl_AssetCache.__interfaces__ = [openfl_IAssetCache];
openfl_AssetCache.prototype = {
	clear: function(prefix) {
		if(prefix == null) {
			this.bitmapData = new haxe_ds_StringMap();
			this.font = new haxe_ds_StringMap();
			this.sound = new haxe_ds_StringMap();
		} else {
			var keys = this.bitmapData.keys();
			while( keys.hasNext() ) {
				var key = keys.next();
				if(StringTools.startsWith(key,prefix)) this.bitmapData.remove(key);
			}
			var keys1 = this.font.keys();
			while( keys1.hasNext() ) {
				var key1 = keys1.next();
				if(StringTools.startsWith(key1,prefix)) this.font.remove(key1);
			}
			var keys2 = this.sound.keys();
			while( keys2.hasNext() ) {
				var key2 = keys2.next();
				if(StringTools.startsWith(key2,prefix)) this.sound.remove(key2);
			}
		}
	}
	,getBitmapData: function(id) {
		return this.bitmapData.get(id);
	}
	,getFont: function(id) {
		return this.font.get(id);
	}
	,getSound: function(id) {
		return this.sound.get(id);
	}
	,hasBitmapData: function(id) {
		return this.bitmapData.exists(id);
	}
	,hasFont: function(id) {
		return this.font.exists(id);
	}
	,hasSound: function(id) {
		return this.sound.exists(id);
	}
	,removeBitmapData: function(id) {
		return this.bitmapData.remove(id);
	}
	,removeFont: function(id) {
		return this.font.remove(id);
	}
	,removeSound: function(id) {
		return this.sound.remove(id);
	}
	,setBitmapData: function(id,bitmapData) {
		this.bitmapData.set(id,bitmapData);
	}
	,setFont: function(id,font) {
		this.font.set(id,font);
	}
	,setSound: function(id,sound) {
		this.sound.set(id,sound);
	}
	,get_enabled: function() {
		return this.__enabled;
	}
	,set_enabled: function(value) {
		return this.__enabled = value;
	}
	,__class__: openfl_AssetCache
	,__properties__: {set_enabled:"set_enabled",get_enabled:"get_enabled"}
};
var openfl_Assets = function() { };
$hxClasses["openfl.Assets"] = openfl_Assets;
openfl_Assets.__name__ = ["openfl","Assets"];
openfl_Assets.addEventListener = function(type,listener,useCapture,priority,useWeakReference) {
	if(useWeakReference == null) useWeakReference = false;
	if(priority == null) priority = 0;
	if(useCapture == null) useCapture = false;
	if(!lime_Assets.onChange.has(openfl_Assets.LimeAssets_onChange)) lime_Assets.onChange.add(openfl_Assets.LimeAssets_onChange);
	openfl_Assets.dispatcher.addEventListener(type,listener,useCapture,priority,useWeakReference);
};
openfl_Assets.dispatchEvent = function(event) {
	return openfl_Assets.dispatcher.dispatchEvent(event);
};
openfl_Assets.exists = function(id,type) {
	return lime_Assets.exists(id,type);
};
openfl_Assets.getBitmapData = function(id,useCache) {
	if(useCache == null) useCache = true;
	if(useCache && openfl_Assets.cache.get_enabled() && openfl_Assets.cache.hasBitmapData(id)) {
		var bitmapData = openfl_Assets.cache.getBitmapData(id);
		if(openfl_Assets.isValidBitmapData(bitmapData)) return bitmapData;
	}
	var image = lime_Assets.getImage(id,false);
	if(image != null) {
		var bitmapData1 = openfl_display_BitmapData.fromImage(image);
		if(useCache && openfl_Assets.cache.get_enabled()) openfl_Assets.cache.setBitmapData(id,bitmapData1);
		return bitmapData1;
	}
	return null;
};
openfl_Assets.getBytes = function(id) {
	return openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes(lime_Assets.getBytes(id));
};
openfl_Assets.getFont = function(id,useCache) {
	if(useCache == null) useCache = true;
	if(useCache && openfl_Assets.cache.get_enabled() && openfl_Assets.cache.hasFont(id)) return openfl_Assets.cache.getFont(id);
	var limeFont = lime_Assets.getFont(id,false);
	if(limeFont != null) {
		var font = openfl_text_Font.__fromLimeFont(limeFont);
		if(useCache && openfl_Assets.cache.get_enabled()) openfl_Assets.cache.setFont(id,font);
		return font;
	}
	return new openfl_text_Font();
};
openfl_Assets.getLibrary = function(name) {
	return lime_Assets.getLibrary(name);
};
openfl_Assets.getMovieClip = function(id) {
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"MOVIE_CLIP")) {
			if(library.isLocal(symbolName,"MOVIE_CLIP")) return library.getMovieClip(symbolName); else haxe_Log.trace("[openfl.Assets] MovieClip asset \"" + id + "\" exists, but only asynchronously",{ fileName : "Assets.hx", lineNumber : 223, className : "openfl.Assets", methodName : "getMovieClip"});
		} else haxe_Log.trace("[openfl.Assets] There is no MovieClip asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 229, className : "openfl.Assets", methodName : "getMovieClip"});
	} else haxe_Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 235, className : "openfl.Assets", methodName : "getMovieClip"});
	return null;
};
openfl_Assets.getMusic = function(id,useCache) {
	if(useCache == null) useCache = true;
	var path = lime_Assets.getPath(id);
	if(path != null) return new openfl_media_Sound(new openfl_net_URLRequest(path));
	return null;
};
openfl_Assets.getPath = function(id) {
	return lime_Assets.getPath(id);
};
openfl_Assets.getSound = function(id,useCache) {
	if(useCache == null) useCache = true;
	if(useCache && openfl_Assets.cache.get_enabled() && openfl_Assets.cache.hasSound(id)) {
		var sound = openfl_Assets.cache.getSound(id);
		if(openfl_Assets.isValidSound(sound)) return sound;
	}
	var path = lime_Assets.getPath(id);
	if(path != null) return new openfl_media_Sound(new openfl_net_URLRequest(path));
	return null;
};
openfl_Assets.getText = function(id) {
	return lime_Assets.getText(id);
};
openfl_Assets.hasEventListener = function(type) {
	return openfl_Assets.dispatcher.hasEventListener(type);
};
openfl_Assets.isLocal = function(id,type,useCache) {
	if(useCache == null) useCache = true;
	if(useCache && openfl_Assets.cache.get_enabled()) {
		if(type == "IMAGE" || type == null) {
			if(openfl_Assets.cache.hasBitmapData(id)) return true;
		}
		if(type == "FONT" || type == null) {
			if(openfl_Assets.cache.hasFont(id)) return true;
		}
		if(type == "SOUND" || type == "MUSIC" || type == null) {
			if(openfl_Assets.cache.hasSound(id)) return true;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl_Assets.getLibrary(libraryName);
	if(library != null) return library.isLocal(symbolName,type);
	return false;
};
openfl_Assets.isValidBitmapData = function(bitmapData) {
	return bitmapData != null && bitmapData.image != null;
};
openfl_Assets.isValidSound = function(sound) {
	return true;
};
openfl_Assets.list = function(type) {
	return lime_Assets.list(type);
};
openfl_Assets.loadBitmapData = function(id,useCache,handler) {
	if(useCache == null) useCache = true;
	if(useCache == null) useCache = true;
	var promise = new lime_app_Promise();
	if(handler != null) {
		promise.future.onComplete(handler);
		promise.future.onError(function(_) {
			handler(null);
		});
	}
	if(useCache && openfl_Assets.cache.get_enabled() && openfl_Assets.cache.hasBitmapData(id)) {
		var bitmapData = openfl_Assets.cache.getBitmapData(id);
		if(openfl_Assets.isValidBitmapData(bitmapData)) {
			promise.complete(bitmapData);
			return promise.future;
		}
	}
	lime_Assets.loadImage(id,false).onComplete(function(image) {
		if(image != null) {
			var bitmapData1 = openfl_display_BitmapData.fromImage(image);
			if(useCache && openfl_Assets.cache.get_enabled()) openfl_Assets.cache.setBitmapData(id,bitmapData1);
			promise.complete(bitmapData1);
		} else promise.error("[Assets] Could not load Image \"" + id + "\"");
	}).onError($bind(promise,promise.error)).onProgress($bind(promise,promise.progress));
	return promise.future;
};
openfl_Assets.loadBytes = function(id,handler) {
	var promise = new lime_app_Promise();
	var future = lime_Assets.loadBytes(id);
	if(handler != null) {
		promise.future.onComplete(handler);
		promise.future.onError(function(_) {
			handler(null);
		});
		future.onComplete(function(bytes) {
			promise.complete(openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes(bytes));
		});
		future.onProgress(function(progress) {
			promise.progress(progress);
		});
		future.onError(function(msg) {
			promise.error(msg);
		});
	}
	return promise.future;
};
openfl_Assets.loadFont = function(id,useCache,handler) {
	if(useCache == null) useCache = true;
	if(useCache == null) useCache = true;
	var promise = new lime_app_Promise();
	if(handler != null) {
		promise.future.onComplete(handler);
		promise.future.onError(function(_) {
			handler(null);
		});
	}
	if(useCache && openfl_Assets.cache.get_enabled() && openfl_Assets.cache.hasFont(id)) {
		promise.complete(openfl_Assets.cache.getFont(id));
		return promise.future;
	}
	lime_Assets.loadFont(id).onComplete(function(limeFont) {
		var font = openfl_text_Font.__fromLimeFont(limeFont);
		if(useCache && openfl_Assets.cache.get_enabled()) openfl_Assets.cache.setFont(id,font);
		promise.complete(font);
	}).onError($bind(promise,promise.error)).onProgress($bind(promise,promise.progress));
	return promise.future;
};
openfl_Assets.loadLibrary = function(name,handler) {
	var future = lime_Assets.loadLibrary(name);
	if(handler != null) {
		future.onComplete(handler);
		future.onError(function(_) {
			handler(null);
		});
	}
	return future;
};
openfl_Assets.loadMusic = function(id,useCache,handler) {
	if(useCache == null) useCache = true;
	if(useCache == null) useCache = true;
	return new lime_app_Future(function() {
		return openfl_Assets.getMusic(id,useCache);
	});
};
openfl_Assets.loadMovieClip = function(id,handler) {
	var promise = new lime_app_Promise();
	if(handler != null) {
		promise.future.onComplete(handler);
		promise.future.onError(function(_) {
			handler(null);
		});
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"MOVIE_CLIP")) promise.completeWith(library.loadMovieClip(symbolName)); else promise.error("[Assets] There is no MovieClip asset with an ID of \"" + id + "\"");
	} else promise.error("[Assets] There is no asset library named \"" + libraryName + "\"");
	return promise.future;
};
openfl_Assets.loadSound = function(id,useCache,handler) {
	if(useCache == null) useCache = true;
	if(useCache == null) useCache = true;
	return new lime_app_Future(function() {
		return openfl_Assets.getSound(id,useCache);
	});
};
openfl_Assets.loadText = function(id,handler) {
	var future = lime_Assets.loadText(id);
	if(handler != null) {
		future.onComplete(handler);
		future.onError(function(_) {
			handler(null);
		});
	}
	return future;
};
openfl_Assets.registerLibrary = function(name,library) {
	lime_Assets.registerLibrary(name,library);
};
openfl_Assets.removeEventListener = function(type,listener,capture) {
	if(capture == null) capture = false;
	openfl_Assets.dispatcher.removeEventListener(type,listener,capture);
};
openfl_Assets.resolveClass = function(name) {
	return Type.resolveClass(name);
};
openfl_Assets.resolveEnum = function(name) {
	var value = Type.resolveEnum(name);
	return value;
};
openfl_Assets.unloadLibrary = function(name) {
	lime_Assets.unloadLibrary(name);
};
openfl_Assets.LimeAssets_onChange = function() {
	openfl_Assets.dispatchEvent(new openfl_events_Event("change"));
};
var openfl_AssetLibrary = function() {
	lime_AssetLibrary.call(this);
};
$hxClasses["openfl.AssetLibrary"] = openfl_AssetLibrary;
openfl_AssetLibrary.__name__ = ["openfl","AssetLibrary"];
openfl_AssetLibrary.__super__ = lime_AssetLibrary;
openfl_AssetLibrary.prototype = $extend(lime_AssetLibrary.prototype,{
	getMovieClip: function(id) {
		return null;
	}
	,loadMovieClip: function(id) {
		var _g = this;
		return new lime_app_Future(function() {
			return _g.getMovieClip(id);
		});
	}
	,__class__: openfl_AssetLibrary
});
var openfl_display_MovieClip = function() {
	openfl_display_Sprite.call(this);
	this.__currentFrame = 0;
	this.__currentLabels = [];
	this.__totalFrames = 0;
	this.enabled = true;
};
$hxClasses["openfl.display.MovieClip"] = openfl_display_MovieClip;
openfl_display_MovieClip.__name__ = ["openfl","display","MovieClip"];
openfl_display_MovieClip.__super__ = openfl_display_Sprite;
openfl_display_MovieClip.prototype = $extend(openfl_display_Sprite.prototype,{
	addFrameScript: function(index,method) {
		if(method != null) {
			if(this.__frameScripts == null) this.__frameScripts = new haxe_ds_IntMap();
			this.__frameScripts.h[index] = method;
		} else if(this.__frameScripts != null) this.__frameScripts.remove(index);
	}
	,gotoAndPlay: function(frame,scene) {
	}
	,gotoAndStop: function(frame,scene) {
	}
	,nextFrame: function() {
	}
	,play: function() {
	}
	,prevFrame: function() {
	}
	,stop: function() {
	}
	,get_currentFrame: function() {
		return this.__currentFrame;
	}
	,get_currentFrameLabel: function() {
		return this.__currentFrameLabel;
	}
	,get_currentLabel: function() {
		return this.__currentLabel;
	}
	,get_currentLabels: function() {
		return this.__currentLabels;
	}
	,get_framesLoaded: function() {
		return this.__totalFrames;
	}
	,get_totalFrames: function() {
		return this.__totalFrames;
	}
	,__class__: openfl_display_MovieClip
	,__properties__: $extend(openfl_display_Sprite.prototype.__properties__,{get_totalFrames:"get_totalFrames",get_framesLoaded:"get_framesLoaded",get_currentLabels:"get_currentLabels",get_currentLabel:"get_currentLabel",get_currentFrameLabel:"get_currentFrameLabel",get_currentFrame:"get_currentFrame"})
});
var openfl_display_LoaderInfo = function() {
	openfl_events_EventDispatcher.call(this);
	this.applicationDomain = openfl_system_ApplicationDomain.currentDomain;
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.childAllowsParent = true;
	this.parameters = { };
};
$hxClasses["openfl.display.LoaderInfo"] = openfl_display_LoaderInfo;
openfl_display_LoaderInfo.__name__ = ["openfl","display","LoaderInfo"];
openfl_display_LoaderInfo.create = function(loader) {
	var loaderInfo = new openfl_display_LoaderInfo();
	loaderInfo.uncaughtErrorEvents = new openfl_events_UncaughtErrorEvents();
	if(loader != null) loaderInfo.loader = loader; else loaderInfo.url = openfl_display_LoaderInfo.__rootURL;
	return loaderInfo;
};
openfl_display_LoaderInfo.__super__ = openfl_events_EventDispatcher;
openfl_display_LoaderInfo.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	__class__: openfl_display_LoaderInfo
});
var openfl_system_ApplicationDomain = function(parentDomain) {
	if(parentDomain != null) this.parentDomain = parentDomain; else this.parentDomain = openfl_system_ApplicationDomain.currentDomain;
};
$hxClasses["openfl.system.ApplicationDomain"] = openfl_system_ApplicationDomain;
openfl_system_ApplicationDomain.__name__ = ["openfl","system","ApplicationDomain"];
openfl_system_ApplicationDomain.prototype = {
	getDefinition: function(name) {
		return Type.resolveClass(name);
	}
	,hasDefinition: function(name) {
		return Type.resolveClass(name) != null;
	}
	,__class__: openfl_system_ApplicationDomain
};
var openfl_events_UncaughtErrorEvents = function() {
	openfl_events_EventDispatcher.call(this);
};
$hxClasses["openfl.events.UncaughtErrorEvents"] = openfl_events_UncaughtErrorEvents;
openfl_events_UncaughtErrorEvents.__name__ = ["openfl","events","UncaughtErrorEvents"];
openfl_events_UncaughtErrorEvents.__super__ = openfl_events_EventDispatcher;
openfl_events_UncaughtErrorEvents.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	__class__: openfl_events_UncaughtErrorEvents
});
var openfl_geom_Matrix = function(a,b,c,d,tx,ty) {
	if(ty == null) ty = 0;
	if(tx == null) tx = 0;
	if(d == null) d = 1;
	if(c == null) c = 0;
	if(b == null) b = 0;
	if(a == null) a = 1;
	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;
	this.tx = tx;
	this.ty = ty;
};
$hxClasses["openfl.geom.Matrix"] = openfl_geom_Matrix;
openfl_geom_Matrix.__name__ = ["openfl","geom","Matrix"];
openfl_geom_Matrix.prototype = {
	clone: function() {
		return new openfl_geom_Matrix(this.a,this.b,this.c,this.d,this.tx,this.ty);
	}
	,concat: function(m) {
		var a1 = this.a * m.a + this.b * m.c;
		this.b = this.a * m.b + this.b * m.d;
		this.a = a1;
		var c1 = this.c * m.a + this.d * m.c;
		this.d = this.c * m.b + this.d * m.d;
		this.c = c1;
		var tx1 = this.tx * m.a + this.ty * m.c + m.tx;
		this.ty = this.tx * m.b + this.ty * m.d + m.ty;
		this.tx = tx1;
	}
	,copyColumnFrom: function(column,vector3D) {
		if(column > 2) throw new js__$Boot_HaxeError("Column " + column + " out of bounds (2)"); else if(column == 0) {
			this.a = vector3D.x;
			this.c = vector3D.y;
		} else if(column == 1) {
			this.b = vector3D.x;
			this.d = vector3D.y;
		} else {
			this.tx = vector3D.x;
			this.ty = vector3D.y;
		}
	}
	,copyColumnTo: function(column,vector3D) {
		if(column > 2) throw new js__$Boot_HaxeError("Column " + column + " out of bounds (2)"); else if(column == 0) {
			vector3D.x = this.a;
			vector3D.y = this.c;
			vector3D.z = 0;
		} else if(column == 1) {
			vector3D.x = this.b;
			vector3D.y = this.d;
			vector3D.z = 0;
		} else {
			vector3D.x = this.tx;
			vector3D.y = this.ty;
			vector3D.z = 1;
		}
	}
	,copyFrom: function(sourceMatrix) {
		this.a = sourceMatrix.a;
		this.b = sourceMatrix.b;
		this.c = sourceMatrix.c;
		this.d = sourceMatrix.d;
		this.tx = sourceMatrix.tx;
		this.ty = sourceMatrix.ty;
	}
	,copyRowFrom: function(row,vector3D) {
		if(row > 2) throw new js__$Boot_HaxeError("Row " + row + " out of bounds (2)"); else if(row == 0) {
			this.a = vector3D.x;
			this.c = vector3D.y;
		} else if(row == 1) {
			this.b = vector3D.x;
			this.d = vector3D.y;
		} else {
			this.tx = vector3D.x;
			this.ty = vector3D.y;
		}
	}
	,copyRowTo: function(row,vector3D) {
		if(row > 2) throw new js__$Boot_HaxeError("Row " + row + " out of bounds (2)"); else if(row == 0) {
			vector3D.x = this.a;
			vector3D.y = this.b;
			vector3D.z = this.tx;
		} else if(row == 1) {
			vector3D.x = this.c;
			vector3D.y = this.d;
			vector3D.z = this.ty;
		} else vector3D.setTo(0,0,1);
	}
	,createBox: function(scaleX,scaleY,rotation,tx,ty) {
		if(ty == null) ty = 0;
		if(tx == null) tx = 0;
		if(rotation == null) rotation = 0;
		if(rotation != 0) {
			var cos = Math.cos(rotation);
			var sin = Math.sin(rotation);
			this.a = cos * scaleX;
			this.b = sin * scaleY;
			this.c = -sin * scaleX;
			this.d = cos * scaleY;
		} else {
			this.a = scaleX;
			this.b = 0;
			this.c = 0;
			this.d = scaleY;
		}
		this.tx = tx;
		this.ty = ty;
	}
	,createGradientBox: function(width,height,rotation,tx,ty) {
		if(ty == null) ty = 0;
		if(tx == null) tx = 0;
		if(rotation == null) rotation = 0;
		this.a = width / 1638.4;
		this.d = height / 1638.4;
		if(rotation != 0) {
			var cos = Math.cos(rotation);
			var sin = Math.sin(rotation);
			this.b = sin * this.d;
			this.c = -sin * this.a;
			this.a *= cos;
			this.d *= cos;
		} else {
			this.b = 0;
			this.c = 0;
		}
		this.tx = tx + width / 2;
		this.ty = ty + height / 2;
	}
	,deltaTransformPoint: function(point) {
		return new openfl_geom_Point(point.x * this.a + point.y * this.c,point.x * this.b + point.y * this.d);
	}
	,equals: function(matrix) {
		return matrix != null && this.tx == matrix.tx && this.ty == matrix.ty && this.a == matrix.a && this.b == matrix.b && this.c == matrix.c && this.d == matrix.d;
	}
	,identity: function() {
		this.a = 1;
		this.b = 0;
		this.c = 0;
		this.d = 1;
		this.tx = 0;
		this.ty = 0;
	}
	,invert: function() {
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) {
			this.a = this.b = this.c = this.d = 0;
			this.tx = -this.tx;
			this.ty = -this.ty;
		} else {
			norm = 1.0 / norm;
			var a1 = this.d * norm;
			this.d = this.a * norm;
			this.a = a1;
			this.b *= -norm;
			this.c *= -norm;
			var tx1 = -this.a * this.tx - this.c * this.ty;
			this.ty = -this.b * this.tx - this.d * this.ty;
			this.tx = tx1;
		}
		return this;
	}
	,rotate: function(theta) {
		var cos = Math.cos(theta);
		var sin = Math.sin(theta);
		var a1 = this.a * cos - this.b * sin;
		this.b = this.a * sin + this.b * cos;
		this.a = a1;
		var c1 = this.c * cos - this.d * sin;
		this.d = this.c * sin + this.d * cos;
		this.c = c1;
		var tx1 = this.tx * cos - this.ty * sin;
		this.ty = this.tx * sin + this.ty * cos;
		this.tx = tx1;
	}
	,scale: function(sx,sy) {
		this.a *= sx;
		this.b *= sy;
		this.c *= sx;
		this.d *= sy;
		this.tx *= sx;
		this.ty *= sy;
	}
	,setRotation: function(theta,scale) {
		if(scale == null) scale = 1;
		this.a = Math.cos(theta) * scale;
		this.c = Math.sin(theta) * scale;
		this.b = -this.c;
		this.d = this.a;
	}
	,setTo: function(a,b,c,d,tx,ty) {
		this.a = a;
		this.b = b;
		this.c = c;
		this.d = d;
		this.tx = tx;
		this.ty = ty;
	}
	,to3DString: function(roundPixels) {
		if(roundPixels == null) roundPixels = false;
		if(roundPixels) return "matrix3d(" + this.a + ", " + this.b + ", 0, 0, " + this.c + ", " + this.d + ", 0, 0, 0, 0, 1, 0, " + (this.tx | 0) + ", " + (this.ty | 0) + ", 0, 1)"; else return "matrix3d(" + this.a + ", " + this.b + ", 0, 0, " + this.c + ", " + this.d + ", 0, 0, 0, 0, 1, 0, " + this.tx + ", " + this.ty + ", 0, 1)";
	}
	,toMozString: function() {
		return "matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + "px, " + this.ty + "px)";
	}
	,toString: function() {
		return "matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + ", " + this.ty + ")";
	}
	,transformPoint: function(pos) {
		return new openfl_geom_Point(pos.x * this.a + pos.y * this.c + this.tx,pos.x * this.b + pos.y * this.d + this.ty);
	}
	,translate: function(dx,dy) {
		this.tx += dx;
		this.ty += dy;
	}
	,toArray: function(transpose) {
		if(transpose == null) transpose = false;
		if(this.__array == null) {
			var this1;
			this1 = new Float32Array(9);
			this.__array = this1;
		}
		if(transpose) {
			this.__array[0] = this.a;
			this.__array[1] = this.b;
			this.__array[2] = 0;
			this.__array[3] = this.c;
			this.__array[4] = this.d;
			this.__array[5] = 0;
			this.__array[6] = this.tx;
			this.__array[7] = this.ty;
			this.__array[8] = 1;
		} else {
			this.__array[0] = this.a;
			this.__array[1] = this.c;
			this.__array[2] = this.tx;
			this.__array[3] = this.b;
			this.__array[4] = this.d;
			this.__array[5] = this.ty;
			this.__array[6] = 0;
			this.__array[7] = 0;
			this.__array[8] = 1;
		}
		return this.__array;
	}
	,__cleanValues: function() {
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.tx = Math.round(this.tx * 10) / 10;
		this.ty = Math.round(this.ty * 10) / 10;
	}
	,__toMatrix3: function() {
		return new lime_math_Matrix3(this.a,this.b,this.c,this.d,this.tx,this.ty);
	}
	,__transformInversePoint: function(point) {
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) {
			point.x = -this.tx;
			point.y = -this.ty;
		} else {
			var px = 1.0 / norm * (this.c * (this.ty - point.y) + this.d * (point.x - this.tx));
			point.y = 1.0 / norm * (this.a * (point.y - this.ty) + this.b * (this.tx - point.x));
			point.x = px;
		}
	}
	,__transformInverseX: function(px,py) {
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) return -this.tx; else return 1.0 / norm * (this.c * (this.ty - py) + this.d * (px - this.tx));
	}
	,__transformInverseY: function(px,py) {
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) return -this.ty; else return 1.0 / norm * (this.a * (py - this.ty) + this.b * (this.tx - px));
	}
	,__transformPoint: function(point) {
		var px = point.x;
		var py = point.y;
		point.x = px * this.a + py * this.c + this.tx;
		point.y = px * this.b + py * this.d + this.ty;
	}
	,__transformX: function(px,py) {
		return px * this.a + py * this.c + this.tx;
	}
	,__transformY: function(px,py) {
		return px * this.b + py * this.d + this.ty;
	}
	,__translateTransformed: function(px,py) {
		this.tx = px * this.a + py * this.c + this.tx;
		this.ty = px * this.b + py * this.d + this.ty;
	}
	,__class__: openfl_geom_Matrix
};
var openfl_geom_Point = function(x,y) {
	if(y == null) y = 0;
	if(x == null) x = 0;
	this.x = x;
	this.y = y;
};
$hxClasses["openfl.geom.Point"] = openfl_geom_Point;
openfl_geom_Point.__name__ = ["openfl","geom","Point"];
openfl_geom_Point.distance = function(pt1,pt2) {
	var dx = pt1.x - pt2.x;
	var dy = pt1.y - pt2.y;
	return Math.sqrt(dx * dx + dy * dy);
};
openfl_geom_Point.interpolate = function(pt1,pt2,f) {
	return new openfl_geom_Point(pt2.x + f * (pt1.x - pt2.x),pt2.y + f * (pt1.y - pt2.y));
};
openfl_geom_Point.polar = function(len,angle) {
	return new openfl_geom_Point(len * Math.cos(angle),len * Math.sin(angle));
};
openfl_geom_Point.prototype = {
	add: function(v) {
		return new openfl_geom_Point(v.x + this.x,v.y + this.y);
	}
	,clone: function() {
		return new openfl_geom_Point(this.x,this.y);
	}
	,copyFrom: function(sourcePoint) {
		this.x = sourcePoint.x;
		this.y = sourcePoint.y;
	}
	,equals: function(toCompare) {
		return toCompare != null && toCompare.x == this.x && toCompare.y == this.y;
	}
	,normalize: function(thickness) {
		if(this.x == 0 && this.y == 0) return; else {
			var norm = thickness / Math.sqrt(this.x * this.x + this.y * this.y);
			this.x *= norm;
			this.y *= norm;
		}
	}
	,offset: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,setTo: function(xa,ya) {
		this.x = xa;
		this.y = ya;
	}
	,subtract: function(v) {
		return new openfl_geom_Point(this.x - v.x,this.y - v.y);
	}
	,toString: function() {
		return "(x=" + this.x + ", y=" + this.y + ")";
	}
	,__toLimeVector2: function() {
		return new lime_math_Vector2(this.x,this.y);
	}
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,__class__: openfl_geom_Point
	,__properties__: {get_length:"get_length"}
};
var openfl_geom_ColorTransform = function(redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier,redOffset,greenOffset,blueOffset,alphaOffset) {
	if(alphaOffset == null) alphaOffset = 0;
	if(blueOffset == null) blueOffset = 0;
	if(greenOffset == null) greenOffset = 0;
	if(redOffset == null) redOffset = 0;
	if(alphaMultiplier == null) alphaMultiplier = 1;
	if(blueMultiplier == null) blueMultiplier = 1;
	if(greenMultiplier == null) greenMultiplier = 1;
	if(redMultiplier == null) redMultiplier = 1;
	this.redMultiplier = redMultiplier;
	this.greenMultiplier = greenMultiplier;
	this.blueMultiplier = blueMultiplier;
	this.alphaMultiplier = alphaMultiplier;
	this.redOffset = redOffset;
	this.greenOffset = greenOffset;
	this.blueOffset = blueOffset;
	this.alphaOffset = alphaOffset;
};
$hxClasses["openfl.geom.ColorTransform"] = openfl_geom_ColorTransform;
openfl_geom_ColorTransform.__name__ = ["openfl","geom","ColorTransform"];
openfl_geom_ColorTransform.prototype = {
	concat: function(second) {
		this.redMultiplier *= second.redMultiplier;
		this.greenMultiplier *= second.greenMultiplier;
		this.blueMultiplier *= second.blueMultiplier;
		this.alphaMultiplier *= second.alphaMultiplier;
		this.redOffset = second.redMultiplier * this.redOffset + second.redOffset;
		this.greenOffset = second.greenMultiplier * this.greenOffset + second.greenOffset;
		this.blueOffset = second.blueMultiplier * this.blueOffset + second.blueOffset;
		this.alphaOffset = second.alphaMultiplier * this.alphaOffset + second.alphaOffset;
	}
	,toString: function() {
		return "(redMultiplier=" + this.redMultiplier + ", greenMultiplier=" + this.greenMultiplier + ", blueMultiplier=" + this.blueMultiplier + ", alphaMultiplier=" + this.alphaMultiplier + ", redOffset=" + this.redOffset + ", greenOffset=" + this.greenOffset + ", blueOffset=" + this.blueOffset + ", alphaOffset=" + this.alphaOffset + ")";
	}
	,__clone: function() {
		return new openfl_geom_ColorTransform(this.redMultiplier,this.greenMultiplier,this.blueMultiplier,this.alphaMultiplier,this.redOffset,this.greenOffset,this.blueOffset,this.alphaOffset);
	}
	,__combine: function(ct) {
		this.redMultiplier *= ct.redMultiplier;
		this.greenMultiplier *= ct.greenMultiplier;
		this.blueMultiplier *= ct.blueMultiplier;
		this.alphaMultiplier *= ct.alphaMultiplier;
		this.redOffset += ct.redOffset;
		this.greenOffset += ct.greenOffset;
		this.blueOffset += ct.blueOffset;
		this.alphaOffset += ct.alphaOffset;
	}
	,__equals: function(ct,skipAlphaMultiplier) {
		if(skipAlphaMultiplier == null) skipAlphaMultiplier = false;
		return ct != null && this.redMultiplier == ct.redMultiplier && this.greenMultiplier == ct.greenMultiplier && this.blueMultiplier == ct.blueMultiplier && (skipAlphaMultiplier || this.alphaMultiplier == ct.alphaMultiplier) && this.redOffset == ct.redOffset && this.greenOffset == ct.greenOffset && this.blueOffset == ct.blueOffset && this.alphaOffset == ct.alphaOffset;
	}
	,__isDefault: function() {
		return this.redMultiplier == 1 && this.greenMultiplier == 1 && this.blueMultiplier == 1 && this.alphaMultiplier == 1 && this.redOffset == 0 && this.greenOffset == 0 && this.blueOffset == 0 && this.alphaOffset == 0;
	}
	,get_color: function() {
		return (this.redOffset | 0) << 16 | (this.greenOffset | 0) << 8 | (this.blueOffset | 0);
	}
	,set_color: function(value) {
		this.redOffset = value >> 16 & 255;
		this.greenOffset = value >> 8 & 255;
		this.blueOffset = value & 255;
		this.redMultiplier = 0;
		this.greenMultiplier = 0;
		this.blueMultiplier = 0;
		return this.get_color();
	}
	,__toLimeColorMatrix: function() {
		return (function($this) {
			var $r;
			var array = [$this.redMultiplier,0,0,0,$this.redOffset / 255,0,$this.greenMultiplier,0,0,$this.greenOffset / 255,0,0,$this.blueMultiplier,0,$this.blueOffset / 255,0,0,0,$this.alphaMultiplier,$this.alphaOffset / 255];
			var this1;
			if(array != null) this1 = new Float32Array(array); else this1 = null;
			$r = this1;
			return $r;
		}(this));
	}
	,__class__: openfl_geom_ColorTransform
	,__properties__: {set_color:"set_color",get_color:"get_color"}
};
var openfl_Lib = function() { };
$hxClasses["openfl.Lib"] = openfl_Lib;
openfl_Lib.__name__ = ["openfl","Lib"];
openfl_Lib.application = null;
openfl_Lib["as"] = function(v,c) {
	if(js_Boot.__instanceof(v,c)) return v; else return null;
};
openfl_Lib.attach = function(name) {
	return new openfl_display_MovieClip();
};
openfl_Lib.embed = $hx_exports.openfl.embed = function(elementName,width,height,background,assetsPrefix) {
	lime_system_System.embed(elementName,width,height,background,assetsPrefix);
};
openfl_Lib.getTimer = function() {
	return lime_system_System.getTimer();
};
openfl_Lib.getURL = function(request,target) {
	if(target == null) target = "_blank";
	window.open(request.url,target);
};
openfl_Lib.notImplemented = function(api) {
	if(!openfl_Lib.__sentWarnings.exists(api)) {
		openfl_Lib.__sentWarnings.set(api,true);
		haxe_Log.trace("Warning: " + api + " is not implemented",{ fileName : "Lib.hx", lineNumber : 113, className : "openfl.Lib", methodName : "notImplemented"});
	}
};
openfl_Lib.preventDefaultTouchMove = function() {
	window.document.addEventListener("touchmove",function(evt) {
		evt.preventDefault();
	},false);
};
openfl_Lib.trace = function(arg) {
	haxe_Log.trace(arg,{ fileName : "Lib.hx", lineNumber : 144, className : "openfl.Lib", methodName : "trace"});
};
var openfl__$Vector_Vector_$Impl_$ = {};
$hxClasses["openfl._Vector.Vector_Impl_"] = openfl__$Vector_Vector_$Impl_$;
openfl__$Vector_Vector_$Impl_$.__name__ = ["openfl","_Vector","Vector_Impl_"];
openfl__$Vector_Vector_$Impl_$.__properties__ = {set_fixed:"set_fixed",get_fixed:"get_fixed",set_length:"set_length",get_length:"get_length"}
openfl__$Vector_Vector_$Impl_$._new = function(length,fixed) {
	if(fixed == null) fixed = false;
	if(length == null) length = 0;
	var this1;
	this1 = new openfl_VectorData();
	var this2;
	this2 = new Array(length);
	this1.data = this2;
	this1.length = length;
	this1.fixed = fixed;
	return this1;
};
openfl__$Vector_Vector_$Impl_$.concat = function(this1,a) {
	var vectorData = new openfl_VectorData();
	if(a != null) vectorData.length = this1.length + a.length; else vectorData.length = this1.length;
	vectorData.fixed = false;
	var this2;
	this2 = new Array(vectorData.length);
	vectorData.data = this2;
	haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,vectorData.data,0,this1.length);
	if(a != null) haxe_ds__$Vector_Vector_$Impl_$.blit(a.data,0,vectorData.data,this1.length,a.length);
	return vectorData;
};
openfl__$Vector_Vector_$Impl_$.copy = function(this1) {
	var vectorData = new openfl_VectorData();
	vectorData.length = this1.length;
	vectorData.fixed = this1.fixed;
	var this2;
	this2 = new Array(this1.length);
	vectorData.data = this2;
	haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,vectorData.data,0,this1.length);
	return vectorData;
};
openfl__$Vector_Vector_$Impl_$.iterator = function(this1) {
	return new openfl_VectorDataIterator(this1);
};
openfl__$Vector_Vector_$Impl_$.join = function(this1,sep) {
	var output = "";
	var _g1 = 0;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(i > 0) output += sep;
		output += Std.string(this1.data[i]);
	}
	return output;
};
openfl__$Vector_Vector_$Impl_$.pop = function(this1) {
	var value = null;
	if(!this1.fixed) {
		if(this1.length > 0) {
			this1.length--;
			value = this1.data[this1.length];
		}
	}
	return value;
};
openfl__$Vector_Vector_$Impl_$.push = function(this1,x) {
	if(!this1.fixed) {
		this1.length++;
		if(this1.data.length < this1.length) {
			var data;
			var this2;
			this2 = new Array(this1.data.length + 10);
			data = this2;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
			this1.data = data;
		}
		this1.data[this1.length - 1] = x;
	}
	return this1.length;
};
openfl__$Vector_Vector_$Impl_$.reverse = function(this1) {
	var data;
	var this2;
	this2 = new Array(this1.length);
	data = this2;
	var _g1 = 0;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		data[this1.length - 1 - i] = this1.data[i];
	}
	this1.data = data;
};
openfl__$Vector_Vector_$Impl_$.shift = function(this1) {
	if(!this1.fixed && this1.length > 0) {
		this1.length--;
		var value = this1.data[0];
		haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,1,this1.data,0,this1.length);
		return value;
	}
	return null;
};
openfl__$Vector_Vector_$Impl_$.unshift = function(this1,x) {
	if(!this1.fixed) {
		this1.length++;
		if(this1.data.length < this1.length) {
			var data;
			var this2;
			this2 = new Array(this1.length + 10);
			data = this2;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,1,this1.data.length);
			this1.data = data;
		} else haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,this1.data,1,this1.length - 1);
		this1.data[0] = x;
	}
};
openfl__$Vector_Vector_$Impl_$.slice = function(this1,pos,end) {
	if(end == null) end = 0;
	if(pos == null) pos = 0;
	if(pos < 0) pos += this1.length;
	if(end <= 0) end += this1.length;
	if(end > this1.length) end = this1.length;
	var length = end - pos;
	if(length <= 0 || length > this1.length) length = this1.length;
	var vectorData = new openfl_VectorData();
	vectorData.length = end - pos;
	vectorData.fixed = true;
	var this2;
	this2 = new Array(length);
	vectorData.data = this2;
	haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,pos,vectorData.data,0,length);
	return vectorData;
};
openfl__$Vector_Vector_$Impl_$.sort = function(this1,f) {
	var array = haxe_ds__$Vector_Vector_$Impl_$.toArray(this1.data);
	array.sort(f);
	var vec;
	var this2;
	this2 = new Array(array.length);
	vec = this2;
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		vec[i] = array[i];
	}
	this1.data = vec;
};
openfl__$Vector_Vector_$Impl_$.splice = function(this1,pos,len) {
	if(pos < 0) pos += this1.length;
	if(pos + len > this1.length) len = this1.length - pos;
	if(len < 0) len = 0;
	var vectorData = new openfl_VectorData();
	vectorData.length = len;
	vectorData.fixed = false;
	var this2;
	this2 = new Array(len);
	vectorData.data = this2;
	haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,pos,vectorData.data,0,len);
	if(len > 0) {
		this1.length -= len;
		haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,pos + len,this1.data,pos,this1.length - pos);
	}
	return vectorData;
};
openfl__$Vector_Vector_$Impl_$.toString = function(this1) {
	return haxe_ds__$Vector_Vector_$Impl_$.toArray(this1.data).toString();
};
openfl__$Vector_Vector_$Impl_$.indexOf = function(this1,x,from) {
	if(from == null) from = 0;
	var value = -1;
	var _g1 = from;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(this1.data[i] == x) {
			value = i;
			break;
		}
	}
	return value;
};
openfl__$Vector_Vector_$Impl_$.lastIndexOf = function(this1,x,from) {
	if(from == null) from = 0;
	var value = -1;
	var i = this1.length - 1;
	while(i >= from) {
		if(this1.data[i] == x) {
			value = i;
			break;
		}
		i--;
	}
	return value;
};
openfl__$Vector_Vector_$Impl_$.ofArray = function(a) {
	var vectorData = new openfl_VectorData();
	vectorData.length = a.length;
	vectorData.fixed = true;
	var vec;
	var this1;
	this1 = new Array(a.length);
	vec = this1;
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		vec[i] = a[i];
	}
	vectorData.data = vec;
	return vectorData;
};
openfl__$Vector_Vector_$Impl_$.convert = function(v) {
	return v;
};
openfl__$Vector_Vector_$Impl_$.get = function(this1,index) {
	return this1.data[index];
};
openfl__$Vector_Vector_$Impl_$.set = function(this1,key,value) {
	if(!this1.fixed) {
		if(key >= this1.length) this1.length = key + 1;
		if(this1.data.length < this1.length) {
			var data;
			var this2;
			this2 = new Array(this1.data.length + 10);
			data = this2;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
			this1.data = data;
		}
	}
	return this1.data[key] = value;
};
openfl__$Vector_Vector_$Impl_$.fromArray = function(value) {
	var vectorData = new openfl_VectorData();
	vectorData.length = value.length;
	vectorData.fixed = true;
	var vec;
	var this1;
	this1 = new Array(value.length);
	vec = this1;
	var _g1 = 0;
	var _g = value.length;
	while(_g1 < _g) {
		var i = _g1++;
		vec[i] = value[i];
	}
	vectorData.data = vec;
	return vectorData;
};
openfl__$Vector_Vector_$Impl_$.toArray = function(this1) {
	var value = [];
	var _g1 = 0;
	var _g = this1.data.length;
	while(_g1 < _g) {
		var i = _g1++;
		value.push(this1.data[i]);
	}
	return value;
};
openfl__$Vector_Vector_$Impl_$.fromHaxeVector = function(value) {
	var vectorData = new openfl_VectorData();
	vectorData.length = value.length;
	vectorData.fixed = true;
	vectorData.data = value;
	return vectorData;
};
openfl__$Vector_Vector_$Impl_$.toHaxeVector = function(this1) {
	return this1.data;
};
openfl__$Vector_Vector_$Impl_$.fromVectorData = function(value) {
	return value;
};
openfl__$Vector_Vector_$Impl_$.toVectorData = function(this1) {
	return this1;
};
openfl__$Vector_Vector_$Impl_$.get_length = function(this1) {
	return this1.length;
};
openfl__$Vector_Vector_$Impl_$.set_length = function(this1,value) {
	if(!this1.fixed) {
		if(value > this1.length) {
			var data;
			var this2;
			this2 = new Array(value);
			data = this2;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,Std["int"](Math.min(this1.data.length,value)));
			this1.data = data;
		}
		this1.length = value;
	}
	return value;
};
openfl__$Vector_Vector_$Impl_$.get_fixed = function(this1) {
	return this1.fixed;
};
openfl__$Vector_Vector_$Impl_$.set_fixed = function(this1,value) {
	return this1.fixed = value;
};
var openfl_VectorData = function() {
	this.length = 0;
};
$hxClasses["openfl.VectorData"] = openfl_VectorData;
openfl_VectorData.__name__ = ["openfl","VectorData"];
openfl_VectorData.prototype = {
	__class__: openfl_VectorData
};
var openfl_VectorDataIterator = function(data) {
	this.index = 0;
	this.vectorData = data;
};
$hxClasses["openfl.VectorDataIterator"] = openfl_VectorDataIterator;
openfl_VectorDataIterator.__name__ = ["openfl","VectorDataIterator"];
openfl_VectorDataIterator.prototype = {
	hasNext: function() {
		return this.index < this.vectorData.length;
	}
	,next: function() {
		var index = this.index++;
		return this.vectorData.data[index];
	}
	,__class__: openfl_VectorDataIterator
};
var openfl__$internal_renderer_AbstractMaskManager = function(renderSession) {
	this.renderSession = renderSession;
};
$hxClasses["openfl._internal.renderer.AbstractMaskManager"] = openfl__$internal_renderer_AbstractMaskManager;
openfl__$internal_renderer_AbstractMaskManager.__name__ = ["openfl","_internal","renderer","AbstractMaskManager"];
openfl__$internal_renderer_AbstractMaskManager.prototype = {
	pushMask: function(mask) {
	}
	,pushRect: function(rect,transform) {
	}
	,popMask: function() {
	}
	,popRect: function() {
	}
	,saveState: function() {
	}
	,restoreState: function() {
	}
	,__class__: openfl__$internal_renderer_AbstractMaskManager
};
var openfl__$internal_renderer_AbstractRenderer = function(width,height) {
	this.width = width;
	this.height = height;
};
$hxClasses["openfl._internal.renderer.AbstractRenderer"] = openfl__$internal_renderer_AbstractRenderer;
openfl__$internal_renderer_AbstractRenderer.__name__ = ["openfl","_internal","renderer","AbstractRenderer"];
openfl__$internal_renderer_AbstractRenderer.prototype = {
	render: function(stage) {
	}
	,renderShape: function(shape) {
	}
	,setViewport: function(x,y,width,height) {
	}
	,resize: function(width,height) {
	}
	,__class__: openfl__$internal_renderer_AbstractRenderer
};
var openfl__$internal_renderer_DrawCommandBuffer = function() {
	this.types = [];
	this.b = [];
	this.i = [];
	this.f = [];
	this.o = [];
	this.ff = [];
	this.ii = [];
	this.ts = [];
};
$hxClasses["openfl._internal.renderer.DrawCommandBuffer"] = openfl__$internal_renderer_DrawCommandBuffer;
openfl__$internal_renderer_DrawCommandBuffer.__name__ = ["openfl","_internal","renderer","DrawCommandBuffer"];
openfl__$internal_renderer_DrawCommandBuffer.prototype = {
	append: function(other) {
		var data = new openfl__$internal_renderer_DrawCommandReader(other);
		var _g = 0;
		var _g1 = other.types;
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			switch(type[1]) {
			case 0:
				var c = data.readBeginBitmapFill();
				this.beginBitmapFill(openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_bitmap(c),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_matrix(c),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_repeat(c),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_smooth(c));
				break;
			case 1:
				var c1 = data.readBeginFill();
				this.beginFill(openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color(c1),openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_alpha(c1));
				break;
			case 2:
				var c2 = data.readBeginGradientFill();
				this.beginGradientFill(openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_type(c2),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_colors(c2),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_alphas(c2),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_ratios(c2),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_matrix(c2),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_spreadMethod(c2),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_interpolationMethod(c2),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_focalPointRatio(c2));
				break;
			case 3:
				var c3 = data.readCubicCurveTo();
				this.cubicCurveTo(openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX1(c3),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY1(c3),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX2(c3),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY2(c3),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX(c3),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorY(c3));
				break;
			case 4:
				var c4 = data.readCurveTo();
				this.curveTo(openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlX(c4),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlY(c4),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorX(c4),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorY(c4));
				break;
			case 5:
				var c5 = data.readDrawCircle();
				this.drawCircle(openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_x(c5),openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_y(c5),openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_radius(c5));
				break;
			case 6:
				var c6 = data.readDrawEllipse();
				this.drawEllipse(openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_x(c6),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_y(c6),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_width(c6),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_height(c6));
				break;
			case 7:
				var c7 = data.readDrawPath();
				this.drawPath(openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_commands(c7),openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c7),openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_winding(c7));
				break;
			case 8:
				var c8 = data.readDrawRect();
				this.drawRect(openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c8),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c8),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width(c8),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height(c8));
				break;
			case 9:
				var c9 = data.readDrawRoundRect();
				this.drawRoundRect(openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_x(c9),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_y(c9),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_width(c9),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_height(c9),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseWidth(c9),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseHeight(c9));
				break;
			case 10:
				var c10 = data.readDrawTiles();
				this.drawTiles(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet(c10),openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c10),openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_smooth(c10),openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c10),openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_shader(c10),openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_count(c10));
				break;
			case 11:
				var c11 = data.readDrawTriangles();
				this.drawTriangles(openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_vertices(c11),openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_indices(c11),openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_uvtData(c11),openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_culling(c11));
				break;
			case 12:
				var c12 = data.readEndFill();
				this.endFill();
				break;
			case 13:
				var c13 = data.readLineBitmapStyle();
				this.lineBitmapStyle(openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_bitmap(c13),openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_matrix(c13),openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_repeat(c13),openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_smooth(c13));
				break;
			case 14:
				var c14 = data.readLineGradientStyle();
				this.lineGradientStyle(openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_type(c14),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_colors(c14),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_alphas(c14),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_ratios(c14),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_matrix(c14),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_spreadMethod(c14),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_interpolationMethod(c14),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_focalPointRatio(c14));
				break;
			case 15:
				var c15 = data.readLineStyle();
				this.lineStyle(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness(c15),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_color(c15),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_alpha(c15),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_pixelHinting(c15),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_scaleMode(c15),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_caps(c15),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_joints(c15),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_miterLimit(c15));
				break;
			case 16:
				var c16 = data.readLineTo();
				this.lineTo(openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x(c16),openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y(c16));
				break;
			case 17:
				var c17 = data.readMoveTo();
				this.moveTo(openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c17),openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c17));
				break;
			case 18:
				var c18 = data.readOverrideMatrix();
				this.overrideMatrix(openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$.get_matrix(c18));
				break;
			default:
			}
		}
		data.destroy();
		return other;
	}
	,beginBitmapFill: function(bitmap,matrix,repeat,smooth) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL);
		this.o.push(bitmap);
		this.o.push(matrix);
		this.b.push(repeat);
		this.b.push(smooth);
	}
	,beginFill: function(color,alpha) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.BEGIN_FILL);
		this.i.push(color);
		this.f.push(alpha);
	}
	,beginGradientFill: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL);
		this.o.push(type);
		this.ii.push(colors);
		this.ff.push(alphas);
		this.ii.push(ratios);
		this.o.push(matrix);
		this.o.push(spreadMethod);
		this.o.push(interpolationMethod);
		this.f.push(focalPointRatio);
	}
	,clear: function() {
		this.types.splice(0,this.types.length);
		this.b.splice(0,this.b.length);
		this.i.splice(0,this.i.length);
		this.f.splice(0,this.f.length);
		this.o.splice(0,this.o.length);
		this.ff.splice(0,this.ff.length);
		this.ii.splice(0,this.ii.length);
		this.ts.splice(0,this.ts.length);
	}
	,copy: function() {
		var copy = new openfl__$internal_renderer_DrawCommandBuffer();
		copy.append(this);
		return copy;
	}
	,cubicCurveTo: function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO);
		this.f.push(controlX1);
		this.f.push(controlY1);
		this.f.push(controlX2);
		this.f.push(controlY2);
		this.f.push(anchorX);
		this.f.push(anchorY);
	}
	,curveTo: function(controlX,controlY,anchorX,anchorY) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.CURVE_TO);
		this.f.push(controlX);
		this.f.push(controlY);
		this.f.push(anchorX);
		this.f.push(anchorY);
	}
	,destroy: function() {
		this.clear();
		this.types = null;
		this.b = null;
		this.i = null;
		this.f = null;
		this.o = null;
		this.ff = null;
		this.ii = null;
		this.ts = null;
	}
	,drawCircle: function(x,y,radius) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE);
		this.f.push(x);
		this.f.push(y);
		this.f.push(radius);
	}
	,drawEllipse: function(x,y,width,height) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE);
		this.f.push(x);
		this.f.push(y);
		this.f.push(width);
		this.f.push(height);
	}
	,drawPath: function(commands,data,winding) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_PATH);
		this.o.push(commands);
		this.o.push(data);
		this.o.push(winding);
	}
	,drawRect: function(x,y,width,height) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_RECT);
		this.f.push(x);
		this.f.push(y);
		this.f.push(width);
		this.f.push(height);
	}
	,drawRoundRect: function(x,y,width,height,ellipseWidth,ellipseHeight) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT);
		this.f.push(x);
		this.f.push(y);
		this.f.push(width);
		this.f.push(height);
		this.f.push(ellipseWidth);
		this.o.push(ellipseHeight);
	}
	,drawTiles: function(sheet,tileData,smooth,flags,shader,count) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_TILES);
		this.ts.push(sheet);
		this.ff.push(tileData);
		this.b.push(smooth);
		this.i.push(flags);
		this.o.push(shader);
		this.i.push(count);
	}
	,drawTriangles: function(vertices,indices,uvtData,culling) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES);
		this.o.push(vertices);
		this.o.push(indices);
		this.o.push(uvtData);
		this.o.push(culling);
	}
	,endFill: function() {
		this.types.push(openfl__$internal_renderer_DrawCommandType.END_FILL);
	}
	,lineBitmapStyle: function(bitmap,matrix,repeat,smooth) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE);
		this.o.push(bitmap);
		this.o.push(matrix);
		this.b.push(repeat);
		this.b.push(smooth);
	}
	,lineGradientStyle: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE);
		this.o.push(type);
		this.ii.push(colors);
		this.ff.push(alphas);
		this.ii.push(ratios);
		this.o.push(matrix);
		this.o.push(spreadMethod);
		this.o.push(interpolationMethod);
		this.f.push(focalPointRatio);
	}
	,lineStyle: function(thickness,color,alpha,pixelHinting,scaleMode,caps,joints,miterLimit) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.LINE_STYLE);
		this.o.push(thickness);
		this.i.push(color);
		this.f.push(alpha);
		this.b.push(pixelHinting);
		this.o.push(scaleMode);
		this.o.push(caps);
		this.o.push(joints);
		this.f.push(miterLimit);
	}
	,lineTo: function(x,y) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.LINE_TO);
		this.f.push(x);
		this.f.push(y);
	}
	,moveTo: function(x,y) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.MOVE_TO);
		this.f.push(x);
		this.f.push(y);
	}
	,overrideMatrix: function(matrix) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX);
		this.o.push(matrix);
	}
	,get_length: function() {
		return this.types.length;
	}
	,__class__: openfl__$internal_renderer_DrawCommandBuffer
	,__properties__: {get_length:"get_length"}
};
var openfl__$internal_renderer_DrawCommandReader = function(buffer) {
	this.buffer = buffer;
	this.bPos = this.iPos = this.fPos = this.oPos = this.ffPos = this.iiPos = this.tsPos = 0;
	this.prev = openfl__$internal_renderer_DrawCommandType.UNKNOWN;
};
$hxClasses["openfl._internal.renderer.DrawCommandReader"] = openfl__$internal_renderer_DrawCommandReader;
openfl__$internal_renderer_DrawCommandReader.__name__ = ["openfl","_internal","renderer","DrawCommandReader"];
openfl__$internal_renderer_DrawCommandReader.prototype = {
	advance: function() {
		var _g = this.prev;
		switch(_g[1]) {
		case 0:
			this.oPos += 2;
			this.bPos += 2;
			break;
		case 1:
			this.iPos += 1;
			this.fPos += 1;
			break;
		case 2:
			this.oPos += 4;
			this.iiPos += 2;
			this.ffPos += 1;
			this.fPos += 1;
			break;
		case 3:
			this.fPos += 6;
			break;
		case 4:
			this.fPos += 4;
			break;
		case 5:
			this.fPos += 3;
			break;
		case 6:
			this.fPos += 4;
			break;
		case 7:
			this.oPos += 3;
			break;
		case 8:
			this.fPos += 4;
			break;
		case 9:
			this.fPos += 5;
			this.oPos += 1;
			break;
		case 10:
			this.tsPos += 1;
			this.ffPos += 1;
			this.bPos += 1;
			this.iPos += 2;
			this.oPos += 1;
			break;
		case 11:
			this.oPos += 4;
			break;
		case 12:
			break;
		case 13:
			this.oPos += 2;
			this.bPos += 2;
			break;
		case 14:
			this.oPos += 4;
			this.iiPos += 2;
			this.ffPos += 1;
			this.fPos += 1;
			break;
		case 15:
			this.oPos += 4;
			this.iPos += 1;
			this.fPos += 2;
			this.bPos += 1;
			break;
		case 16:
			this.fPos += 2;
			break;
		case 17:
			this.fPos += 2;
			break;
		case 18:
			this.oPos += 1;
			break;
		default:
		}
	}
	,bool: function(index) {
		return this.buffer.b[this.bPos + index];
	}
	,destroy: function() {
		this.buffer = null;
		this.reset();
	}
	,fArr: function(index) {
		return this.buffer.ff[this.ffPos + index];
	}
	,'float': function(index) {
		return this.buffer.f[this.fPos + index];
	}
	,iArr: function(index) {
		return this.buffer.ii[this.iiPos + index];
	}
	,'int': function(index) {
		return this.buffer.i[this.iPos + index];
	}
	,obj: function(index) {
		return this.buffer.o[this.oPos + index];
	}
	,readBeginBitmapFill: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL;
		return openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$._new(this);
	}
	,readBeginFill: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_FILL;
		return openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$._new(this);
	}
	,readBeginGradientFill: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL;
		return openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$._new(this);
	}
	,readCubicCurveTo: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO;
		return openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$._new(this);
	}
	,readCurveTo: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO;
		return openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$._new(this);
	}
	,readDrawCircle: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE;
		return openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$._new(this);
	}
	,readDrawEllipse: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE;
		return openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$._new(this);
	}
	,readDrawPath: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.DRAW_PATH;
		return openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$._new(this);
	}
	,readDrawRect: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT;
		return openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$._new(this);
	}
	,readDrawRoundRect: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT;
		return openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$._new(this);
	}
	,readDrawTiles: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.DRAW_TILES;
		return openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$._new(this);
	}
	,readDrawTriangles: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES;
		return openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$._new(this);
	}
	,readEndFill: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.END_FILL;
		return openfl__$internal_renderer__$DrawCommandReader_EndFillView_$Impl_$._new(this);
	}
	,readLineBitmapStyle: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE;
		return openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$._new(this);
	}
	,readLineGradientStyle: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE;
		return openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$._new(this);
	}
	,readLineStyle: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.LINE_STYLE;
		return openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$._new(this);
	}
	,readLineTo: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO;
		return openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$._new(this);
	}
	,readMoveTo: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO;
		return openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$._new(this);
	}
	,readOverrideMatrix: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX;
		return openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$._new(this);
	}
	,reset: function() {
		this.bPos = this.iPos = this.fPos = this.oPos = this.ffPos = this.iiPos = this.tsPos = 0;
	}
	,skip: function(type) {
		this.advance();
		this.prev = type;
	}
	,tileSheet: function(index) {
		return this.buffer.ts[this.tsPos + index];
	}
	,__class__: openfl__$internal_renderer_DrawCommandReader
};
var openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.BeginBitmapFillView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","BeginBitmapFillView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.__properties__ = {get_smooth:"get_smooth",get_repeat:"get_repeat",get_matrix:"get_matrix",get_bitmap:"get_bitmap"}
openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_bitmap = function(this1) {
	return this1.obj(0);
};
openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_matrix = function(this1) {
	return this1.obj(1);
};
openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_repeat = function(this1) {
	return this1.bool(0);
};
openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_smooth = function(this1) {
	return this1.bool(1);
};
var openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.BeginFillView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","BeginFillView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.__properties__ = {get_alpha:"get_alpha",get_color:"get_color"}
openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color = function(this1) {
	return this1["int"](0);
};
openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_alpha = function(this1) {
	return this1["float"](0);
};
var openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.BeginGradientFillView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","BeginGradientFillView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.__properties__ = {get_focalPointRatio:"get_focalPointRatio",get_interpolationMethod:"get_interpolationMethod",get_spreadMethod:"get_spreadMethod",get_matrix:"get_matrix",get_ratios:"get_ratios",get_alphas:"get_alphas",get_colors:"get_colors",get_type:"get_type"}
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_type = function(this1) {
	return this1.obj(0);
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_colors = function(this1) {
	return this1.iArr(0);
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_alphas = function(this1) {
	return this1.fArr(0);
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_ratios = function(this1) {
	return this1.iArr(1);
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_matrix = function(this1) {
	return this1.obj(1);
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_spreadMethod = function(this1) {
	return this1.obj(2);
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_interpolationMethod = function(this1) {
	return this1.obj(3);
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_focalPointRatio = function(this1) {
	return this1["float"](0);
};
var openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.CubicCurveToView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","CubicCurveToView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.__properties__ = {get_anchorY:"get_anchorY",get_anchorX:"get_anchorX",get_controlY2:"get_controlY2",get_controlX2:"get_controlX2",get_controlY1:"get_controlY1",get_controlX1:"get_controlX1"}
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX1 = function(this1) {
	return this1["float"](0);
};
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY1 = function(this1) {
	return this1["float"](1);
};
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX2 = function(this1) {
	return this1["float"](2);
};
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY2 = function(this1) {
	return this1["float"](3);
};
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX = function(this1) {
	return this1["float"](4);
};
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorY = function(this1) {
	return this1["float"](5);
};
var openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","CurveToView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.__properties__ = {get_anchorY:"get_anchorY",get_anchorX:"get_anchorX",get_controlY:"get_controlY",get_controlX:"get_controlX"}
openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlX = function(this1) {
	return this1["float"](0);
};
openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlY = function(this1) {
	return this1["float"](1);
};
openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorX = function(this1) {
	return this1["float"](2);
};
openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorY = function(this1) {
	return this1["float"](3);
};
var openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.DrawCircleView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","DrawCircleView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.__properties__ = {get_radius:"get_radius",get_y:"get_y",get_x:"get_x"}
openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_x = function(this1) {
	return this1["float"](0);
};
openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_y = function(this1) {
	return this1["float"](1);
};
openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_radius = function(this1) {
	return this1["float"](2);
};
var openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.DrawEllipseView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","DrawEllipseView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.__properties__ = {get_height:"get_height",get_width:"get_width",get_y:"get_y",get_x:"get_x"}
openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_x = function(this1) {
	return this1["float"](0);
};
openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_y = function(this1) {
	return this1["float"](1);
};
openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_width = function(this1) {
	return this1["float"](2);
};
openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_height = function(this1) {
	return this1["float"](3);
};
var openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.DrawPathView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","DrawPathView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.__properties__ = {get_winding:"get_winding",get_data:"get_data",get_commands:"get_commands"}
openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_commands = function(this1) {
	return this1.obj(0);
};
openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data = function(this1) {
	return this1.obj(1);
};
openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_winding = function(this1) {
	return this1.obj(2);
};
var openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.DrawRectView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","DrawRectView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.__properties__ = {get_height:"get_height",get_width:"get_width",get_y:"get_y",get_x:"get_x"}
openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x = function(this1) {
	return this1["float"](0);
};
openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y = function(this1) {
	return this1["float"](1);
};
openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width = function(this1) {
	return this1["float"](2);
};
openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height = function(this1) {
	return this1["float"](3);
};
var openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.DrawRoundRectView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","DrawRoundRectView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.__properties__ = {get_ellipseHeight:"get_ellipseHeight",get_ellipseWidth:"get_ellipseWidth",get_height:"get_height",get_width:"get_width",get_y:"get_y",get_x:"get_x"}
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_x = function(this1) {
	return this1["float"](0);
};
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_y = function(this1) {
	return this1["float"](1);
};
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_width = function(this1) {
	return this1["float"](2);
};
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_height = function(this1) {
	return this1["float"](3);
};
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseWidth = function(this1) {
	return this1["float"](4);
};
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseHeight = function(this1) {
	return this1.obj(0);
};
var openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.DrawTilesView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","DrawTilesView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.__properties__ = {get_count:"get_count",get_shader:"get_shader",get_flags:"get_flags",get_smooth:"get_smooth",get_tileData:"get_tileData",get_sheet:"get_sheet"}
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet = function(this1) {
	return this1.tileSheet(0);
};
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData = function(this1) {
	return this1.fArr(0);
};
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_smooth = function(this1) {
	return this1.bool(0);
};
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags = function(this1) {
	return this1["int"](0);
};
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_shader = function(this1) {
	return this1.obj(0);
};
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_count = function(this1) {
	return this1["int"](1);
};
var openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.DrawTrianglesView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","DrawTrianglesView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.__properties__ = {get_culling:"get_culling",get_uvtData:"get_uvtData",get_indices:"get_indices",get_vertices:"get_vertices"}
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_vertices = function(this1) {
	return this1.obj(0);
};
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_indices = function(this1) {
	return this1.obj(1);
};
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_uvtData = function(this1) {
	return this1.obj(2);
};
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_culling = function(this1) {
	return this1.obj(3);
};
var openfl__$internal_renderer__$DrawCommandReader_EndFillView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.EndFillView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_EndFillView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_EndFillView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","EndFillView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_EndFillView_$Impl_$._new = function(d) {
	return d;
};
var openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.LineBitmapStyleView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","LineBitmapStyleView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.__properties__ = {get_smooth:"get_smooth",get_repeat:"get_repeat",get_matrix:"get_matrix",get_bitmap:"get_bitmap"}
openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_bitmap = function(this1) {
	return this1.obj(0);
};
openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_matrix = function(this1) {
	return this1.obj(1);
};
openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_repeat = function(this1) {
	return this1.bool(0);
};
openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_smooth = function(this1) {
	return this1.bool(1);
};
var openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.LineGradientStyleView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","LineGradientStyleView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.__properties__ = {get_focalPointRatio:"get_focalPointRatio",get_interpolationMethod:"get_interpolationMethod",get_spreadMethod:"get_spreadMethod",get_matrix:"get_matrix",get_ratios:"get_ratios",get_alphas:"get_alphas",get_colors:"get_colors",get_type:"get_type"}
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_type = function(this1) {
	return this1.obj(0);
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_colors = function(this1) {
	return this1.iArr(0);
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_alphas = function(this1) {
	return this1.fArr(0);
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_ratios = function(this1) {
	return this1.iArr(1);
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_matrix = function(this1) {
	return this1.obj(1);
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_spreadMethod = function(this1) {
	return this1.obj(2);
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_interpolationMethod = function(this1) {
	return this1.obj(3);
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_focalPointRatio = function(this1) {
	return this1["float"](0);
};
var openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.LineStyleView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","LineStyleView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.__properties__ = {get_miterLimit:"get_miterLimit",get_joints:"get_joints",get_caps:"get_caps",get_scaleMode:"get_scaleMode",get_pixelHinting:"get_pixelHinting",get_alpha:"get_alpha",get_color:"get_color",get_thickness:"get_thickness"}
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness = function(this1) {
	return this1.obj(0);
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_color = function(this1) {
	return this1["int"](0);
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_alpha = function(this1) {
	return this1["float"](0);
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_pixelHinting = function(this1) {
	return this1.bool(0);
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_scaleMode = function(this1) {
	return this1.obj(1);
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_caps = function(this1) {
	return this1.obj(2);
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_joints = function(this1) {
	return this1.obj(3);
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_miterLimit = function(this1) {
	return this1["float"](1);
};
var openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.LineToView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","LineToView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.__properties__ = {get_y:"get_y",get_x:"get_x"}
openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x = function(this1) {
	return this1["float"](0);
};
openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y = function(this1) {
	return this1["float"](1);
};
var openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.MoveToView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","MoveToView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.__properties__ = {get_y:"get_y",get_x:"get_x"}
openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x = function(this1) {
	return this1["float"](0);
};
openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y = function(this1) {
	return this1["float"](1);
};
var openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.OverrideMatrixView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","OverrideMatrixView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$.__properties__ = {get_matrix:"get_matrix"}
openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$.get_matrix = function(this1) {
	return this1.obj(0);
};
var openfl__$internal_renderer_DrawCommandType = $hxClasses["openfl._internal.renderer.DrawCommandType"] = { __ename__ : ["openfl","_internal","renderer","DrawCommandType"], __constructs__ : ["BEGIN_BITMAP_FILL","BEGIN_FILL","BEGIN_GRADIENT_FILL","CUBIC_CURVE_TO","CURVE_TO","DRAW_CIRCLE","DRAW_ELLIPSE","DRAW_PATH","DRAW_RECT","DRAW_ROUND_RECT","DRAW_TILES","DRAW_TRIANGLES","END_FILL","LINE_BITMAP_STYLE","LINE_GRADIENT_STYLE","LINE_STYLE","LINE_TO","MOVE_TO","OVERRIDE_MATRIX","UNKNOWN"] };
openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL = ["BEGIN_BITMAP_FILL",0];
openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL.toString = $estr;
openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.BEGIN_FILL = ["BEGIN_FILL",1];
openfl__$internal_renderer_DrawCommandType.BEGIN_FILL.toString = $estr;
openfl__$internal_renderer_DrawCommandType.BEGIN_FILL.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL = ["BEGIN_GRADIENT_FILL",2];
openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL.toString = $estr;
openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO = ["CUBIC_CURVE_TO",3];
openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO.toString = $estr;
openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.CURVE_TO = ["CURVE_TO",4];
openfl__$internal_renderer_DrawCommandType.CURVE_TO.toString = $estr;
openfl__$internal_renderer_DrawCommandType.CURVE_TO.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE = ["DRAW_CIRCLE",5];
openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE.toString = $estr;
openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE = ["DRAW_ELLIPSE",6];
openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE.toString = $estr;
openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.DRAW_PATH = ["DRAW_PATH",7];
openfl__$internal_renderer_DrawCommandType.DRAW_PATH.toString = $estr;
openfl__$internal_renderer_DrawCommandType.DRAW_PATH.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.DRAW_RECT = ["DRAW_RECT",8];
openfl__$internal_renderer_DrawCommandType.DRAW_RECT.toString = $estr;
openfl__$internal_renderer_DrawCommandType.DRAW_RECT.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT = ["DRAW_ROUND_RECT",9];
openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT.toString = $estr;
openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.DRAW_TILES = ["DRAW_TILES",10];
openfl__$internal_renderer_DrawCommandType.DRAW_TILES.toString = $estr;
openfl__$internal_renderer_DrawCommandType.DRAW_TILES.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES = ["DRAW_TRIANGLES",11];
openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES.toString = $estr;
openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.END_FILL = ["END_FILL",12];
openfl__$internal_renderer_DrawCommandType.END_FILL.toString = $estr;
openfl__$internal_renderer_DrawCommandType.END_FILL.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE = ["LINE_BITMAP_STYLE",13];
openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE.toString = $estr;
openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE = ["LINE_GRADIENT_STYLE",14];
openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE.toString = $estr;
openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.LINE_STYLE = ["LINE_STYLE",15];
openfl__$internal_renderer_DrawCommandType.LINE_STYLE.toString = $estr;
openfl__$internal_renderer_DrawCommandType.LINE_STYLE.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.LINE_TO = ["LINE_TO",16];
openfl__$internal_renderer_DrawCommandType.LINE_TO.toString = $estr;
openfl__$internal_renderer_DrawCommandType.LINE_TO.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.MOVE_TO = ["MOVE_TO",17];
openfl__$internal_renderer_DrawCommandType.MOVE_TO.toString = $estr;
openfl__$internal_renderer_DrawCommandType.MOVE_TO.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX = ["OVERRIDE_MATRIX",18];
openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX.toString = $estr;
openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.UNKNOWN = ["UNKNOWN",19];
openfl__$internal_renderer_DrawCommandType.UNKNOWN.toString = $estr;
openfl__$internal_renderer_DrawCommandType.UNKNOWN.__enum__ = openfl__$internal_renderer_DrawCommandType;
var openfl__$internal_renderer_GraphicsPaths = function() { };
$hxClasses["openfl._internal.renderer.GraphicsPaths"] = openfl__$internal_renderer_GraphicsPaths;
openfl__$internal_renderer_GraphicsPaths.__name__ = ["openfl","_internal","renderer","GraphicsPaths"];
openfl__$internal_renderer_GraphicsPaths.ellipse = function(points,x,y,rx,ry,segmentCount) {
	var seg = Math.PI * 2 / segmentCount;
	var _g1 = 0;
	var _g = segmentCount + 1;
	while(_g1 < _g) {
		var i = _g1++;
		points.push(x + Math.sin(seg * i) * rx);
		points.push(y + Math.cos(seg * i) * ry);
	}
};
openfl__$internal_renderer_GraphicsPaths.cubicCurveTo = function(points,cx,cy,cx2,cy2,x,y) {
	var n = 20;
	var dt = 0;
	var dt2 = 0;
	var dt3 = 0;
	var t2 = 0;
	var t3 = 0;
	var fromX = points[points.length - 2];
	var fromY = points[points.length - 1];
	var px = 0;
	var py = 0;
	var tmp = 0;
	var _g1 = 1;
	var _g = n + 1;
	while(_g1 < _g) {
		var i = _g1++;
		tmp = i / n;
		dt = 1 - tmp;
		dt2 = dt * dt;
		dt3 = dt2 * dt;
		t2 = tmp * tmp;
		t3 = t2 * tmp;
		px = dt3 * fromX + 3 * dt2 * tmp * cx + 3 * dt * t2 * cx2 + t3 * x;
		py = dt3 * fromY + 3 * dt2 * tmp * cy + 3 * dt * t2 * cy2 + t3 * y;
		points.push(px);
		points.push(py);
	}
};
openfl__$internal_renderer_GraphicsPaths.curveTo = function(points,cx,cy,x,y) {
	var xa = 0;
	var ya = 0;
	var n = 20;
	var fromX = points[points.length - 2];
	var fromY = points[points.length - 1];
	var px = 0;
	var py = 0;
	var tmp = 0;
	var _g1 = 1;
	var _g = n + 1;
	while(_g1 < _g) {
		var i = _g1++;
		tmp = i / n;
		xa = fromX + (cx - fromX) * tmp;
		ya = fromY + (cy - fromY) * tmp;
		px = xa + (cx + (x - cx) * tmp - xa) * tmp;
		py = ya + (cy + (y - cy) * tmp - ya) * tmp;
		points.push(px);
		points.push(py);
	}
};
openfl__$internal_renderer_GraphicsPaths.roundRectangle = function(points,x,y,width,height,rx,ry) {
	var xe = x + width;
	var ye = y + height;
	var cx1 = -rx + rx * openfl__$internal_renderer_GraphicsPaths.SIN45;
	var cx2 = -rx + rx * openfl__$internal_renderer_GraphicsPaths.TAN22;
	var cy1 = -ry + ry * openfl__$internal_renderer_GraphicsPaths.SIN45;
	var cy2 = -ry + ry * openfl__$internal_renderer_GraphicsPaths.TAN22;
	points.push(xe);
	points.push(ye - ry);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,xe,ye + cy2,xe + cx1,ye + cy1);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,xe + cx2,ye,xe - rx,ye);
	points.push(x + rx);
	points.push(ye);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,x - cx2,ye,x - cx1,ye + cy1);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,x,ye + cy2,x,ye - ry);
	points.push(x);
	points.push(y + ry);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,x,y - cy2,x - cx1,y - cy1);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,x - cx2,y,x + rx,y);
	points.push(xe - rx);
	points.push(y);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,xe + cx2,y,xe + cx1,y - cy1);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,xe,y - cy2,xe,y + ry);
	points.push(xe);
	points.push(ye - ry);
};
var openfl__$internal_renderer_PolyK = function() { };
$hxClasses["openfl._internal.renderer.PolyK"] = openfl__$internal_renderer_PolyK;
openfl__$internal_renderer_PolyK.__name__ = ["openfl","_internal","renderer","PolyK"];
openfl__$internal_renderer_PolyK.triangulate = function(tgs,p) {
	var sign = true;
	var n = p.length >> 1;
	if(n < 3) return [];
	var avl;
	var _g = [];
	var _g1 = 0;
	while(_g1 < n) {
		var i1 = _g1++;
		_g.push(i1);
	}
	avl = _g;
	var i = 0;
	var al = n;
	var earFound = false;
	while(al > 3) {
		var i0 = avl[i % al];
		var i11 = avl[(i + 1) % al];
		var i2 = avl[(i + 2) % al];
		var ax = p[2 * i0];
		var ay = p[2 * i0 + 1];
		var bx = p[2 * i11];
		var by = p[2 * i11 + 1];
		var cx = p[2 * i2];
		var cy = p[2 * i2 + 1];
		earFound = false;
		if(openfl__$internal_renderer_PolyK._convex(ax,ay,bx,by,cx,cy,sign)) {
			earFound = true;
			var _g11 = 0;
			while(_g11 < al) {
				var j = _g11++;
				var vi = avl[j];
				if(vi == i0 || vi == i11 || vi == i2) continue;
				if(openfl__$internal_renderer_PolyK._PointInTriangle(p[2 * vi],p[2 * vi + 1],ax,ay,bx,by,cx,cy)) {
					earFound = false;
					break;
				}
			}
		}
		if(earFound) {
			tgs.push(i0);
			tgs.push(i11);
			tgs.push(i2);
			avl.splice((i + 1) % al,1);
			al--;
			i = 0;
		} else if(i++ > 3 * al) {
			if(sign) {
				tgs = [];
				var _g12 = [];
				var _g2 = 0;
				while(_g2 < n) {
					var k = _g2++;
					_g12.push(k);
				}
				avl = _g12;
				i = 0;
				al = n;
				sign = false;
			} else {
				haxe_Log.trace("Warning: shape too complex to fill",{ fileName : "PolyK.hx", lineNumber : 104, className : "openfl._internal.renderer.PolyK", methodName : "triangulate"});
				return [];
			}
		}
	}
	tgs.push(avl[0]);
	tgs.push(avl[1]);
	tgs.push(avl[2]);
	return tgs;
};
openfl__$internal_renderer_PolyK._PointInTriangle = function(px,py,ax,ay,bx,by,cx,cy) {
	var v0x = cx - ax | 0;
	var v0y = cy - ay | 0;
	var v1x = bx - ax | 0;
	var v1y = by - ay | 0;
	var v2x = px - ax | 0;
	var v2y = py - ay | 0;
	var dot00 = v0x * v0x + v0y * v0y;
	var dot01 = v0x * v1x + v0y * v1y;
	var dot02 = v0x * v2x + v0y * v2y;
	var dot11 = v1x * v1x + v1y * v1y;
	var dot12 = v1x * v2x + v1y * v2y;
	var invDenom = 1 / (dot00 * dot11 - dot01 * dot01);
	var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
	var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
	return u >= 0 && v >= 0 && u + v < 1;
};
openfl__$internal_renderer_PolyK._convex = function(ax,ay,bx,by,cx,cy,sign) {
	return (ay - by) * (cx - bx) + (bx - ax) * (cy - by) >= 0 == sign;
};
var openfl__$internal_renderer_RenderSession = function() {
	this.activeTextures = 0;
};
$hxClasses["openfl._internal.renderer.RenderSession"] = openfl__$internal_renderer_RenderSession;
openfl__$internal_renderer_RenderSession.__name__ = ["openfl","_internal","renderer","RenderSession"];
openfl__$internal_renderer_RenderSession.prototype = {
	__class__: openfl__$internal_renderer_RenderSession
};
var openfl__$internal_renderer_cairo_CairoBitmap = function() { };
$hxClasses["openfl._internal.renderer.cairo.CairoBitmap"] = openfl__$internal_renderer_cairo_CairoBitmap;
openfl__$internal_renderer_cairo_CairoBitmap.__name__ = ["openfl","_internal","renderer","cairo","CairoBitmap"];
openfl__$internal_renderer_cairo_CairoBitmap.render = function(bitmap,renderSession) {
	if(!bitmap.__renderable || bitmap.__worldAlpha <= 0) return;
	var cairo = renderSession.cairo;
	if(bitmap.bitmapData != null && bitmap.bitmapData.__isValid) {
		if(bitmap.__mask != null) renderSession.maskManager.pushMask(bitmap.__mask);
		var transform = bitmap.__renderTransform;
		var scrollRect = bitmap.get_scrollRect();
		if(renderSession.roundPixels) {
			var matrix = transform.__toMatrix3();
			matrix.tx = Math.round(matrix.tx);
			matrix.ty = Math.round(matrix.ty);
			cairo.set_matrix(matrix);
		} else cairo.set_matrix(transform.__toMatrix3());
		var surface = bitmap.bitmapData.getSurface();
		if(surface != null) {
			var pattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createForSurface(surface);
			lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_filter(pattern,bitmap.smoothing?1:3);
			if(scrollRect != null) {
				cairo.pushGroup();
				cairo.set_source(pattern);
				cairo.newPath();
				cairo.rectangle(scrollRect.x,scrollRect.y,scrollRect.width,scrollRect.height);
				cairo.fill();
				cairo.popGroupToSource();
			} else cairo.set_source(pattern);
			if(bitmap.__worldAlpha == 1) cairo.paint(); else cairo.paintWithAlpha(bitmap.__worldAlpha);
		}
		if(bitmap.__mask != null) renderSession.maskManager.popMask();
	}
};
var openfl__$internal_renderer_cairo_CairoGraphics = function() { };
$hxClasses["openfl._internal.renderer.cairo.CairoGraphics"] = openfl__$internal_renderer_cairo_CairoGraphics;
openfl__$internal_renderer_cairo_CairoGraphics.__name__ = ["openfl","_internal","renderer","cairo","CairoGraphics"];
openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill = null;
openfl__$internal_renderer_cairo_CairoGraphics.bitmapRepeat = null;
openfl__$internal_renderer_cairo_CairoGraphics.bounds = null;
openfl__$internal_renderer_cairo_CairoGraphics.cairo = null;
openfl__$internal_renderer_cairo_CairoGraphics.fillPattern = null;
openfl__$internal_renderer_cairo_CairoGraphics.fillPatternMatrix = null;
openfl__$internal_renderer_cairo_CairoGraphics.graphics = null;
openfl__$internal_renderer_cairo_CairoGraphics.hasFill = null;
openfl__$internal_renderer_cairo_CairoGraphics.hasStroke = null;
openfl__$internal_renderer_cairo_CairoGraphics.hitTesting = null;
openfl__$internal_renderer_cairo_CairoGraphics.inversePendingMatrix = null;
openfl__$internal_renderer_cairo_CairoGraphics.pendingMatrix = null;
openfl__$internal_renderer_cairo_CairoGraphics.strokePattern = null;
openfl__$internal_renderer_cairo_CairoGraphics.closePath = function() {
	if(openfl__$internal_renderer_cairo_CairoGraphics.strokePattern == null) return;
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.closePath();
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_source(openfl__$internal_renderer_cairo_CairoGraphics.strokePattern);
	if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.strokePreserve();
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.newPath();
};
openfl__$internal_renderer_cairo_CairoGraphics.createGradientPattern = function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
	var pattern = null;
	switch(type) {
	case 1:
		if(matrix == null) matrix = new openfl_geom_Matrix();
		var point = matrix.transformPoint(new openfl_geom_Point(1638.4,0));
		var x = matrix.tx + openfl__$internal_renderer_cairo_CairoGraphics.graphics.__bounds.x;
		var y = matrix.ty + openfl__$internal_renderer_cairo_CairoGraphics.graphics.__bounds.y;
		pattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createRadial(x,y,0,x,y,(point.x - matrix.tx) / 2);
		break;
	case 0:
		if(matrix == null) matrix = new openfl_geom_Matrix();
		var point1 = matrix.transformPoint(new openfl_geom_Point(-819.2,0));
		var point2 = matrix.transformPoint(new openfl_geom_Point(819.2,0));
		point1.x += openfl__$internal_renderer_cairo_CairoGraphics.graphics.__bounds.x;
		point2.x += openfl__$internal_renderer_cairo_CairoGraphics.graphics.__bounds.x;
		point1.y += openfl__$internal_renderer_cairo_CairoGraphics.graphics.__bounds.y;
		point2.y += openfl__$internal_renderer_cairo_CairoGraphics.graphics.__bounds.y;
		pattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createLinear(point1.x,point1.y,point2.x,point2.y);
		break;
	}
	var _g1 = 0;
	var _g = colors.length;
	while(_g1 < _g) {
		var i = _g1++;
		var rgb = colors[i];
		var alpha = alphas[i];
		var r = ((rgb & 16711680) >>> 16) / 255;
		var g = ((rgb & 65280) >>> 8) / 255;
		var b = (rgb & 255) / 255;
		var ratio = ratios[i] / 255;
		if(ratio < 0) ratio = 0;
		if(ratio > 1) ratio = 1;
		lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.addColorStopRGBA(pattern,ratio,r,g,b,alpha);
	}
	var mat = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.get_matrix(pattern);
	mat.tx = openfl__$internal_renderer_cairo_CairoGraphics.bounds.x;
	mat.ty = openfl__$internal_renderer_cairo_CairoGraphics.bounds.y;
	lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_matrix(pattern,mat);
	return pattern;
};
openfl__$internal_renderer_cairo_CairoGraphics.createImagePattern = function(bitmapFill,matrix,bitmapRepeat) {
	var pattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createForSurface(bitmapFill.getSurface());
	if(bitmapRepeat) lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_extend(pattern,1);
	openfl__$internal_renderer_cairo_CairoGraphics.fillPatternMatrix = matrix;
	return pattern;
};
openfl__$internal_renderer_cairo_CairoGraphics.drawRoundRect = function(x,y,width,height,ellipseWidth,ellipseHeight) {
	if(ellipseHeight == null) ellipseHeight = ellipseWidth;
	ellipseWidth *= 0.5;
	ellipseHeight *= 0.5;
	if(ellipseWidth > width / 2) ellipseWidth = width / 2;
	if(ellipseHeight > height / 2) ellipseHeight = height / 2;
	var xe = x + width;
	var ye = y + height;
	var cx1 = -ellipseWidth + ellipseWidth * openfl__$internal_renderer_cairo_CairoGraphics.SIN45;
	var cx2 = -ellipseWidth + ellipseWidth * openfl__$internal_renderer_cairo_CairoGraphics.TAN22;
	var cy1 = -ellipseHeight + ellipseHeight * openfl__$internal_renderer_cairo_CairoGraphics.SIN45;
	var cy2 = -ellipseHeight + ellipseHeight * openfl__$internal_renderer_cairo_CairoGraphics.TAN22;
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(xe,ye - ellipseHeight);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(xe,ye + cy2,xe + cx1,ye + cy1);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(xe + cx2,ye,xe - ellipseWidth,ye);
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(x + ellipseWidth,ye);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(x - cx2,ye,x - cx1,ye + cy1);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(x,ye + cy2,x,ye - ellipseHeight);
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(x,y + ellipseHeight);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(x,y - cy2,x - cx1,y - cy1);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(x - cx2,y,x + ellipseWidth,y);
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(xe - ellipseWidth,y);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(xe + cx2,y,xe + cx1,y - cy1);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(xe,y - cy2,xe,y + ellipseHeight);
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(xe,ye - ellipseHeight);
};
openfl__$internal_renderer_cairo_CairoGraphics.endFill = function() {
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.newPath();
	openfl__$internal_renderer_cairo_CairoGraphics.playCommands(openfl__$internal_renderer_cairo_CairoGraphics.fillCommands,false);
	openfl__$internal_renderer_cairo_CairoGraphics.fillCommands.clear();
};
openfl__$internal_renderer_cairo_CairoGraphics.endStroke = function() {
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.newPath();
	openfl__$internal_renderer_cairo_CairoGraphics.playCommands(openfl__$internal_renderer_cairo_CairoGraphics.strokeCommands,true);
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.closePath();
	openfl__$internal_renderer_cairo_CairoGraphics.strokeCommands.clear();
};
openfl__$internal_renderer_cairo_CairoGraphics.hitTest = function(graphics,x,y) {
	return false;
};
openfl__$internal_renderer_cairo_CairoGraphics.isCCW = function(x1,y1,x2,y2,x3,y3) {
	return (x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1) < 0;
};
openfl__$internal_renderer_cairo_CairoGraphics.normalizeUVT = function(uvt,skipT) {
	if(skipT == null) skipT = false;
	var max = -Infinity;
	var tmp = -Infinity;
	var len = uvt.length;
	var _g1 = 1;
	var _g = len + 1;
	while(_g1 < _g) {
		var t = _g1++;
		if(skipT && t % 3 == 0) continue;
		tmp = uvt.data[t - 1];
		if(max < tmp) max = tmp;
	}
	var result;
	var this1;
	this1 = new openfl_VectorData();
	var this2;
	this2 = new Array(0);
	this1.data = this2;
	this1.length = 0;
	this1.fixed = false;
	result = this1;
	var _g11 = 1;
	var _g2 = len + 1;
	while(_g11 < _g2) {
		var t1 = _g11++;
		if(skipT && t1 % 3 == 0) continue;
		if(!result.fixed) {
			result.length++;
			if(result.data.length < result.length) {
				var data;
				var this3;
				this3 = new Array(result.data.length + 10);
				data = this3;
				haxe_ds__$Vector_Vector_$Impl_$.blit(result.data,0,data,0,result.data.length);
				result.data = data;
			}
			result.data[result.length - 1] = uvt.data[t1 - 1] / max;
		}
		result.length;
	}
	return { max : max, uvt : result};
};
openfl__$internal_renderer_cairo_CairoGraphics.playCommands = function(commands,stroke) {
	if(stroke == null) stroke = false;
	if(commands.get_length() == 0) return;
	openfl__$internal_renderer_cairo_CairoGraphics.bounds = openfl__$internal_renderer_cairo_CairoGraphics.graphics.__bounds;
	var offsetX = openfl__$internal_renderer_cairo_CairoGraphics.bounds.x;
	var offsetY = openfl__$internal_renderer_cairo_CairoGraphics.bounds.y;
	var positionX = 0.0;
	var positionY = 0.0;
	var closeGap = false;
	var startX = 0.0;
	var startY = 0.0;
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_fillRule(1);
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_antialias(3);
	var hasPath = false;
	var data = new openfl__$internal_renderer_DrawCommandReader(commands);
	var _g = 0;
	var _g1 = commands.types;
	try {
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			switch(type[1]) {
			case 3:
				var c = data.readCubicCurveTo();
				hasPath = true;
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.curveTo(openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX1(c) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY1(c) - offsetY,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX2(c) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY2(c) - offsetY,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX(c) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorY(c) - offsetY);
				break;
			case 4:
				var c1 = data.readCurveTo();
				hasPath = true;
				openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlX(c1) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlY(c1) - offsetY,openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorX(c1) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorY(c1) - offsetY);
				break;
			case 5:
				var c2 = data.readDrawCircle();
				hasPath = true;
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_x(c2) - offsetX + openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_radius(c2),openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_y(c2) - offsetY);
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.arc(openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_x(c2) - offsetX,openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_y(c2) - offsetY,openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_radius(c2),0,Math.PI * 2);
				break;
			case 8:
				var c3 = data.readDrawRect();
				hasPath = true;
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.rectangle(openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c3) - offsetX,openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c3) - offsetY,openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width(c3),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height(c3));
				break;
			case 6:
				var c4 = data.readDrawEllipse();
				hasPath = true;
				var x = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_x(c4);
				var y = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_y(c4);
				var width = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_width(c4);
				var height = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_height(c4);
				x -= offsetX;
				y -= offsetY;
				var kappa = .5522848;
				var ox = width / 2 * kappa;
				var oy = height / 2 * kappa;
				var xe = x + width;
				var ye = y + height;
				var xm = x + width / 2;
				var ym = y + height / 2;
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(x,ym);
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.curveTo(x,ym - oy,xm - ox,y,xm,y);
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.curveTo(xm + ox,y,xe,ym - oy,xe,ym);
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.curveTo(xe,ym + oy,xm + ox,ye,xm,ye);
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.curveTo(xm - ox,ye,x,ym + oy,x,ym);
				break;
			case 9:
				var c5 = data.readDrawRoundRect();
				hasPath = true;
				openfl__$internal_renderer_cairo_CairoGraphics.drawRoundRect(openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_x(c5) - offsetX,openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_y(c5) - offsetY,openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_width(c5),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_height(c5),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseWidth(c5),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseHeight(c5));
				break;
			case 16:
				var c6 = data.readLineTo();
				hasPath = true;
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x(c6) - offsetX,openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y(c6) - offsetY);
				positionX = openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x(c6);
				positionY = openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y(c6);
				break;
			case 17:
				var c7 = data.readMoveTo();
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c7) - offsetX,openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c7) - offsetY);
				positionX = openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c7);
				positionY = openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c7);
				closeGap = true;
				startX = openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c7);
				startY = openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c7);
				break;
			case 15:
				var c8 = data.readLineStyle();
				if(stroke && openfl__$internal_renderer_cairo_CairoGraphics.hasStroke) openfl__$internal_renderer_cairo_CairoGraphics.closePath();
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(positionX - offsetX,positionY - offsetY);
				if(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness(c8) == null) openfl__$internal_renderer_cairo_CairoGraphics.hasStroke = false; else {
					openfl__$internal_renderer_cairo_CairoGraphics.hasStroke = true;
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_lineWidth(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness(c8) > 0?openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness(c8):1);
					if(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_joints(c8) == null) openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_lineJoin(1); else openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_lineJoin((function($this) {
						var $r;
						var _g2 = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_joints(c8);
						$r = (function($this) {
							var $r;
							switch(_g2) {
							case 1:
								$r = 0;
								break;
							case 0:
								$r = 2;
								break;
							default:
								$r = 1;
							}
							return $r;
						}($this));
						return $r;
					}(this)));
					if(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_caps(c8) == null) openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_lineCap(1); else openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_lineCap((function($this) {
						var $r;
						var _g21 = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_caps(c8);
						$r = (function($this) {
							var $r;
							switch(_g21) {
							case 0:
								$r = 0;
								break;
							case 2:
								$r = 2;
								break;
							default:
								$r = 1;
							}
							return $r;
						}($this));
						return $r;
					}(this)));
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_miterLimit(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_miterLimit(c8));
					var r = ((openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_color(c8) & 16711680) >>> 16) / 255;
					var g = ((openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_color(c8) & 65280) >>> 8) / 255;
					var b = (openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_color(c8) & 255) / 255;
					if(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_alpha(c8) == 1) openfl__$internal_renderer_cairo_CairoGraphics.strokePattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createRGB(r,g,b); else openfl__$internal_renderer_cairo_CairoGraphics.strokePattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createRGBA(r,g,b,openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_alpha(c8));
				}
				break;
			case 14:
				var c9 = data.readLineGradientStyle();
				if(stroke && openfl__$internal_renderer_cairo_CairoGraphics.hasStroke) openfl__$internal_renderer_cairo_CairoGraphics.closePath();
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(positionX - offsetX,positionY - offsetY);
				openfl__$internal_renderer_cairo_CairoGraphics.strokePattern = openfl__$internal_renderer_cairo_CairoGraphics.createGradientPattern(openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_type(c9),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_colors(c9),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_alphas(c9),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_ratios(c9),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_matrix(c9),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_spreadMethod(c9),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_interpolationMethod(c9),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_focalPointRatio(c9));
				openfl__$internal_renderer_cairo_CairoGraphics.hasStroke = true;
				break;
			case 13:
				var c10 = data.readLineBitmapStyle();
				if(stroke && openfl__$internal_renderer_cairo_CairoGraphics.hasStroke) openfl__$internal_renderer_cairo_CairoGraphics.closePath();
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(positionX - offsetX,positionY - offsetY);
				openfl__$internal_renderer_cairo_CairoGraphics.strokePattern = openfl__$internal_renderer_cairo_CairoGraphics.createImagePattern(openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_bitmap(c10),openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_matrix(c10),openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_repeat(c10));
				openfl__$internal_renderer_cairo_CairoGraphics.hasStroke = true;
				break;
			case 0:
				var c11 = data.readBeginBitmapFill();
				openfl__$internal_renderer_cairo_CairoGraphics.fillPattern = openfl__$internal_renderer_cairo_CairoGraphics.createImagePattern(openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_bitmap(c11),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_matrix(c11),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_repeat(c11));
				openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill = openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_bitmap(c11);
				openfl__$internal_renderer_cairo_CairoGraphics.bitmapRepeat = openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_repeat(c11);
				openfl__$internal_renderer_cairo_CairoGraphics.hasFill = true;
				break;
			case 1:
				var c12 = data.readBeginFill();
				if(openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_alpha(c12) < 0.005) openfl__$internal_renderer_cairo_CairoGraphics.hasFill = false; else {
					if(openfl__$internal_renderer_cairo_CairoGraphics.fillPattern != null) openfl__$internal_renderer_cairo_CairoGraphics.fillPatternMatrix = null;
					openfl__$internal_renderer_cairo_CairoGraphics.fillPattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createRGBA(((openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color(c12) & 16711680) >>> 16) / 255,((openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color(c12) & 65280) >>> 8) / 255,(openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color(c12) & 255) / 255,openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_alpha(c12));
					openfl__$internal_renderer_cairo_CairoGraphics.hasFill = true;
				}
				openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill = null;
				break;
			case 2:
				var c13 = data.readBeginGradientFill();
				if(openfl__$internal_renderer_cairo_CairoGraphics.fillPattern != null) openfl__$internal_renderer_cairo_CairoGraphics.fillPatternMatrix = null;
				openfl__$internal_renderer_cairo_CairoGraphics.fillPattern = openfl__$internal_renderer_cairo_CairoGraphics.createGradientPattern(openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_type(c13),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_colors(c13),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_alphas(c13),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_ratios(c13),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_matrix(c13),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_spreadMethod(c13),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_interpolationMethod(c13),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_focalPointRatio(c13));
				openfl__$internal_renderer_cairo_CairoGraphics.hasFill = true;
				openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill = null;
				break;
			case 11:
				var c14 = data.readDrawTriangles();
				var v = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_vertices(c14);
				var ind = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_indices(c14);
				var uvt = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_uvtData(c14);
				var colorFill = openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill == null;
				if(colorFill && uvt != null) throw "__break__";
				var width1 = 0;
				var height1 = 0;
				if(!colorFill) {
					if(uvt == null) {
						var this1;
						this1 = new openfl_VectorData();
						var this2;
						this2 = new Array(0);
						this1.data = this2;
						this1.length = 0;
						this1.fixed = false;
						uvt = this1;
						var _g3 = 0;
						var _g22 = v.length / 2 | 0;
						while(_g3 < _g22) {
							var i1 = _g3++;
							if(!uvt.fixed) {
								uvt.length++;
								if(uvt.data.length < uvt.length) {
									var data1;
									var this3;
									this3 = new Array(uvt.data.length + 10);
									data1 = this3;
									haxe_ds__$Vector_Vector_$Impl_$.blit(uvt.data,0,data1,0,uvt.data.length);
									uvt.data = data1;
								}
								uvt.data[uvt.length - 1] = v.data[i1 * 2] / openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill.width;
							}
							uvt.length;
							if(!uvt.fixed) {
								uvt.length++;
								if(uvt.data.length < uvt.length) {
									var data2;
									var this4;
									this4 = new Array(uvt.data.length + 10);
									data2 = this4;
									haxe_ds__$Vector_Vector_$Impl_$.blit(uvt.data,0,data2,0,uvt.data.length);
									uvt.data = data2;
								}
								uvt.data[uvt.length - 1] = v.data[i1 * 2 + 1] / openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill.height;
							}
							uvt.length;
						}
					}
					var skipT;
					skipT = (function($this) {
						var $r;
						var this5 = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_uvtData(c14);
						$r = this5.length;
						return $r;
					}(this)) != v.length;
					var normalizedUVT = openfl__$internal_renderer_cairo_CairoGraphics.normalizeUVT(uvt,skipT);
					var maxUVT = normalizedUVT.max;
					uvt = normalizedUVT.uvt;
					if(maxUVT > 1) {
						width1 = openfl__$internal_renderer_cairo_CairoGraphics.bounds.width | 0;
						height1 = openfl__$internal_renderer_cairo_CairoGraphics.bounds.height | 0;
					} else {
						width1 = openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill.width;
						height1 = openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill.height;
					}
				}
				var i = 0;
				var l = ind.length;
				var a_;
				var b_;
				var c_;
				var iax;
				var iay;
				var ibx;
				var iby;
				var icx;
				var icy;
				var x1;
				var y1;
				var x2;
				var y2;
				var x3;
				var y3;
				var uvx1;
				var uvy1;
				var uvx2;
				var uvy2;
				var uvx3;
				var uvy3;
				var denom;
				var t1;
				var t2;
				var t3;
				var t4;
				var dx;
				var dy;
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_antialias(1);
				while(i < l) {
					a_ = i;
					b_ = i + 1;
					c_ = i + 2;
					iax = ind.data[a_] * 2;
					iay = ind.data[a_] * 2 + 1;
					ibx = ind.data[b_] * 2;
					iby = ind.data[b_] * 2 + 1;
					icx = ind.data[c_] * 2;
					icy = ind.data[c_] * 2 + 1;
					x1 = v.data[iax];
					y1 = v.data[iay];
					x2 = v.data[ibx];
					y2 = v.data[iby];
					x3 = v.data[icx];
					y3 = v.data[icy];
					var _g23 = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_culling(c14);
					switch(_g23) {
					case 2:
						if(!((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1) < 0)) {
							i += 3;
							continue;
						}
						break;
					case 0:
						if((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1) < 0) {
							i += 3;
							continue;
						}
						break;
					default:
					}
					if(colorFill) {
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.newPath();
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(x1,y1);
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(x2,y2);
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(x3,y3);
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.closePath();
						if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.fillPreserve();
						i += 3;
						continue;
					}
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.identityMatrix();
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.newPath();
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(x1,y1);
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(x2,y2);
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(x3,y3);
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.closePath();
					uvx1 = uvt.data[iax] * width1;
					uvx2 = uvt.data[ibx] * width1;
					uvx3 = uvt.data[icx] * width1;
					uvy1 = uvt.data[iay] * height1;
					uvy2 = uvt.data[iby] * height1;
					uvy3 = uvt.data[icy] * height1;
					denom = uvx1 * (uvy3 - uvy2) - uvx2 * uvy3 + uvx3 * uvy2 + (uvx2 - uvx3) * uvy1;
					if(denom == 0) {
						i += 3;
						continue;
					}
					t1 = -(uvy1 * (x3 - x2) - uvy2 * x3 + uvy3 * x2 + (uvy2 - uvy3) * x1) / denom;
					t2 = (uvy2 * y3 + uvy1 * (y2 - y3) - uvy3 * y2 + (uvy3 - uvy2) * y1) / denom;
					t3 = (uvx1 * (x3 - x2) - uvx2 * x3 + uvx3 * x2 + (uvx2 - uvx3) * x1) / denom;
					t4 = -(uvx2 * y3 + uvx1 * (y2 - y3) - uvx3 * y2 + (uvx3 - uvx2) * y1) / denom;
					dx = (uvx1 * (uvy3 * x2 - uvy2 * x3) + uvy1 * (uvx2 * x3 - uvx3 * x2) + (uvx3 * uvy2 - uvx2 * uvy3) * x1) / denom;
					dy = (uvx1 * (uvy3 * y2 - uvy2 * y3) + uvy1 * (uvx2 * y3 - uvx3 * y2) + (uvx3 * uvy2 - uvx2 * uvy3) * y1) / denom;
					var matrix = new lime_math_Matrix3(t1,t2,t3,t4,dx,dy);
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_matrix(matrix);
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_source(openfl__$internal_renderer_cairo_CairoGraphics.fillPattern);
					if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.fill();
					i += 3;
				}
				break;
			case 10:
				var c15 = data.readDrawTiles();
				var useScale = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 1) > 0;
				var useRotation = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 2) > 0;
				var offsetX1 = openfl__$internal_renderer_cairo_CairoGraphics.bounds.x;
				var offsetY1 = openfl__$internal_renderer_cairo_CairoGraphics.bounds.y;
				var useTransform = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 16) > 0;
				var useRGB = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 4) > 0;
				var useAlpha = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 8) > 0;
				var useRect = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 32) > 0;
				var useOrigin = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 64) > 0;
				var useBlendAdd = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 65536) > 0;
				var useBlendOverlay = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 4194304) > 0;
				if(useTransform) {
					useScale = false;
					useRotation = false;
				}
				var scaleIndex = 0;
				var rotationIndex = 0;
				var rgbIndex = 0;
				var alphaIndex = 0;
				var transformIndex = 0;
				var numValues = 3;
				if(useRect) if(useOrigin) numValues = 8; else numValues = 6;
				if(useScale) {
					scaleIndex = numValues;
					numValues++;
				}
				if(useRotation) {
					rotationIndex = numValues;
					numValues++;
				}
				if(useTransform) {
					transformIndex = numValues;
					numValues += 4;
				}
				if(useRGB) {
					rgbIndex = numValues;
					numValues += 3;
				}
				if(useAlpha) {
					alphaIndex = numValues;
					numValues++;
				}
				var totalCount = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15).length;
				if(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_count(c15) >= 0 && totalCount > openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_count(c15)) totalCount = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_count(c15);
				var itemCount = totalCount / numValues | 0;
				var index = 0;
				var rect = null;
				var center = null;
				var previousTileID = -1;
				var surface;
				openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet(c15).__bitmap.__sync();
				surface = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet(c15).__bitmap.getSurface();
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.save();
				if(useBlendAdd) openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_operator(12);
				if(useBlendOverlay) openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_operator(16);
				while(index < totalCount) {
					var i2 = Std["int"](openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 2]);
					var tileID;
					if(!useRect) tileID = i2; else tileID = -1;
					if(!useRect && tileID != previousTileID) {
						rect = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet(c15).__tileRects[tileID];
						center = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet(c15).__centerPoints[tileID];
						previousTileID = tileID;
					} else if(useRect) {
						rect = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet(c15).__rectTile;
						rect.setTo(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 2],openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 3],openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 4],openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 5]);
						center = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet(c15).__point;
						if(useOrigin) center.setTo(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 6],openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 7]); else center.setTo(0,0);
					}
					if(rect != null && rect.width > 0 && rect.height > 0 && center != null) {
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.identityMatrix();
						if(useTransform) {
							var matrix1 = new lime_math_Matrix3(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + transformIndex],openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + transformIndex + 1],openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + transformIndex + 2],openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + transformIndex + 3],0,0);
							openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_matrix(matrix1);
						}
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.translate(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index] - offsetX1,openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 1] - offsetY1);
						if(useRotation) openfl__$internal_renderer_cairo_CairoGraphics.cairo.rotate(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + rotationIndex]);
						if(useScale) {
							var scale = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + scaleIndex];
							openfl__$internal_renderer_cairo_CairoGraphics.cairo.scale(scale,scale);
						}
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.setSourceSurface(surface,0,0);
						if(useAlpha) {
							if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.paintWithAlpha(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + alphaIndex]);
						} else if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.paint();
					}
					index += numValues;
				}
				if(useBlendAdd || useBlendOverlay) openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_operator(2);
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.restore();
				break;
			default:
				data.skip(type);
			}
		}
	} catch( e ) { if( e != "__break__" ) throw e; }
	data.destroy();
	if(hasPath) {
		if(stroke && openfl__$internal_renderer_cairo_CairoGraphics.hasStroke) {
			if(openfl__$internal_renderer_cairo_CairoGraphics.hasFill && closeGap) openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(startX - offsetX,startY - offsetY); else if(closeGap && positionX == startX && positionY == startY) openfl__$internal_renderer_cairo_CairoGraphics.cairo.closePath();
			openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_source(openfl__$internal_renderer_cairo_CairoGraphics.strokePattern);
			if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.strokePreserve();
		}
		if(!stroke && openfl__$internal_renderer_cairo_CairoGraphics.hasFill) {
			openfl__$internal_renderer_cairo_CairoGraphics.cairo.translate(-openfl__$internal_renderer_cairo_CairoGraphics.bounds.x,-openfl__$internal_renderer_cairo_CairoGraphics.bounds.y);
			if(openfl__$internal_renderer_cairo_CairoGraphics.fillPatternMatrix != null) {
				var matrix2 = openfl__$internal_renderer_cairo_CairoGraphics.fillPatternMatrix.clone();
				matrix2.invert();
				if(openfl__$internal_renderer_cairo_CairoGraphics.pendingMatrix != null) matrix2.concat(openfl__$internal_renderer_cairo_CairoGraphics.pendingMatrix);
				lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_matrix(openfl__$internal_renderer_cairo_CairoGraphics.fillPattern,matrix2.__toMatrix3());
			}
			openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_source(openfl__$internal_renderer_cairo_CairoGraphics.fillPattern);
			if(openfl__$internal_renderer_cairo_CairoGraphics.pendingMatrix != null) {
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.transform(openfl__$internal_renderer_cairo_CairoGraphics.pendingMatrix.__toMatrix3());
				if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.fillPreserve();
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.transform(openfl__$internal_renderer_cairo_CairoGraphics.inversePendingMatrix.__toMatrix3());
			} else if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.fillPreserve();
			openfl__$internal_renderer_cairo_CairoGraphics.cairo.translate(openfl__$internal_renderer_cairo_CairoGraphics.bounds.x,openfl__$internal_renderer_cairo_CairoGraphics.bounds.y);
			openfl__$internal_renderer_cairo_CairoGraphics.cairo.closePath();
		}
	}
};
openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo = function(cx,cy,x,y) {
	var current = null;
	if(!openfl__$internal_renderer_cairo_CairoGraphics.cairo.get_hasCurrentPoint()) {
		openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(cx,cy);
		current = new lime_math_Vector2(cx,cy);
	} else current = openfl__$internal_renderer_cairo_CairoGraphics.cairo.get_currentPoint();
	var cx1 = current.x + 0.66666666666666663 * (cx - current.x);
	var cy1 = current.y + 0.66666666666666663 * (cy - current.y);
	var cx2 = x + 0.66666666666666663 * (cx - x);
	var cy2 = y + 0.66666666666666663 * (cy - y);
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.curveTo(cx1,cy1,cx2,cy2,x,y);
};
openfl__$internal_renderer_cairo_CairoGraphics.render = function(graphics,renderSession) {
};
openfl__$internal_renderer_cairo_CairoGraphics.renderMask = function(graphics,renderSession) {
	if(graphics.__commands.get_length() != 0) {
		var cairo = renderSession.cairo;
		var positionX = 0.0;
		var positionY = 0.0;
		var offsetX = 0;
		var offsetY = 0;
		var data = new openfl__$internal_renderer_DrawCommandReader(graphics.__commands);
		var _g = 0;
		var _g1 = graphics.__commands.types;
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			switch(type[1]) {
			case 3:
				var c = data.readCubicCurveTo();
				cairo.curveTo(openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX1(c) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY1(c) - offsetY,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX2(c) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY2(c) - offsetY,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX(c) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorY(c) - offsetY);
				positionX = openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX(c);
				positionY = openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX(c);
				break;
			case 4:
				var c1 = data.readCurveTo();
				openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlX(c1) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlY(c1) - offsetY,openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorX(c1) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorY(c1) - offsetY);
				positionX = openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorX(c1);
				positionY = openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorY(c1);
				break;
			case 5:
				var c2 = data.readDrawCircle();
				cairo.arc(openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_x(c2) - offsetX,openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_y(c2) - offsetY,openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_radius(c2),0,Math.PI * 2);
				break;
			case 6:
				var c3 = data.readDrawEllipse();
				var x = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_x(c3);
				var y = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_y(c3);
				var width = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_width(c3);
				var height = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_height(c3);
				x -= offsetX;
				y -= offsetY;
				var kappa = .5522848;
				var ox = width / 2 * kappa;
				var oy = height / 2 * kappa;
				var xe = x + width;
				var ye = y + height;
				var xm = x + width / 2;
				var ym = y + height / 2;
				cairo.moveTo(x,ym);
				cairo.curveTo(x,ym - oy,xm - ox,y,xm,y);
				cairo.curveTo(xm + ox,y,xe,ym - oy,xe,ym);
				cairo.curveTo(xe,ym + oy,xm + ox,ye,xm,ye);
				cairo.curveTo(xm - ox,ye,x,ym + oy,x,ym);
				break;
			case 8:
				var c4 = data.readDrawRect();
				cairo.rectangle(openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c4) - offsetX,openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c4) - offsetY,openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width(c4),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height(c4));
				break;
			case 9:
				var c5 = data.readDrawRoundRect();
				openfl__$internal_renderer_cairo_CairoGraphics.drawRoundRect(openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_x(c5) - offsetX,openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_y(c5) - offsetY,openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_width(c5),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_height(c5),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseWidth(c5),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseHeight(c5));
				break;
			case 16:
				var c6 = data.readLineTo();
				cairo.lineTo(openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x(c6) - offsetX,openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y(c6) - offsetY);
				positionX = openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x(c6);
				positionY = openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y(c6);
				break;
			case 17:
				var c7 = data.readMoveTo();
				cairo.moveTo(openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c7) - offsetX,openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c7) - offsetY);
				positionX = openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c7);
				positionY = openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c7);
				break;
			default:
				data.skip(type);
			}
		}
		data.destroy();
	}
};
var openfl__$internal_renderer_cairo_CairoMaskManager = function(renderSession) {
	openfl__$internal_renderer_AbstractMaskManager.call(this,renderSession);
};
$hxClasses["openfl._internal.renderer.cairo.CairoMaskManager"] = openfl__$internal_renderer_cairo_CairoMaskManager;
openfl__$internal_renderer_cairo_CairoMaskManager.__name__ = ["openfl","_internal","renderer","cairo","CairoMaskManager"];
openfl__$internal_renderer_cairo_CairoMaskManager.__super__ = openfl__$internal_renderer_AbstractMaskManager;
openfl__$internal_renderer_cairo_CairoMaskManager.prototype = $extend(openfl__$internal_renderer_AbstractMaskManager.prototype,{
	pushMask: function(mask) {
		var cairo = this.renderSession.cairo;
		cairo.save();
		var transform = mask.__getWorldTransform();
		cairo.set_matrix(transform.__toMatrix3());
		cairo.newPath();
		mask.__renderCairoMask(this.renderSession);
		cairo.clip();
	}
	,pushRect: function(rect,transform) {
		var cairo = this.renderSession.cairo;
		cairo.save();
		cairo.set_matrix(new lime_math_Matrix3(transform.a,transform.c,transform.b,transform.d,transform.tx,transform.ty));
		cairo.newPath();
		cairo.rectangle(rect.x,rect.y,rect.width,rect.height);
		cairo.clip();
	}
	,popMask: function() {
		this.renderSession.cairo.restore();
	}
	,popRect: function() {
		this.renderSession.cairo.restore();
	}
	,__class__: openfl__$internal_renderer_cairo_CairoMaskManager
});
var openfl__$internal_renderer_cairo_CairoRenderer = function(width,height,cairo) {
	openfl__$internal_renderer_AbstractRenderer.call(this,width,height);
	this.cairo = cairo;
	this.renderSession = new openfl__$internal_renderer_RenderSession();
	this.renderSession.cairo = cairo;
	this.renderSession.roundPixels = true;
	this.renderSession.renderer = this;
	this.renderSession.maskManager = new openfl__$internal_renderer_cairo_CairoMaskManager(this.renderSession);
};
$hxClasses["openfl._internal.renderer.cairo.CairoRenderer"] = openfl__$internal_renderer_cairo_CairoRenderer;
openfl__$internal_renderer_cairo_CairoRenderer.__name__ = ["openfl","_internal","renderer","cairo","CairoRenderer"];
openfl__$internal_renderer_cairo_CairoRenderer.__super__ = openfl__$internal_renderer_AbstractRenderer;
openfl__$internal_renderer_cairo_CairoRenderer.prototype = $extend(openfl__$internal_renderer_AbstractRenderer.prototype,{
	render: function(stage) {
		this.cairo.identityMatrix();
		if(stage.__clearBeforeRender) {
			this.cairo.setSourceRGB(stage.__colorSplit[0],stage.__colorSplit[1],stage.__colorSplit[2]);
			this.cairo.paint();
		}
		stage.__renderCairo(this.renderSession);
	}
	,renderDisplayObject: function(object) {
		this.cairo.identityMatrix();
		object.__renderCairo(this.renderSession);
	}
	,__class__: openfl__$internal_renderer_cairo_CairoRenderer
});
var openfl__$internal_renderer_cairo_CairoShape = function() { };
$hxClasses["openfl._internal.renderer.cairo.CairoShape"] = openfl__$internal_renderer_cairo_CairoShape;
openfl__$internal_renderer_cairo_CairoShape.__name__ = ["openfl","_internal","renderer","cairo","CairoShape"];
openfl__$internal_renderer_cairo_CairoShape.render = function(shape,renderSession) {
};
var openfl__$internal_renderer_cairo_CairoTextField = function() { };
$hxClasses["openfl._internal.renderer.cairo.CairoTextField"] = openfl__$internal_renderer_cairo_CairoTextField;
openfl__$internal_renderer_cairo_CairoTextField.__name__ = ["openfl","_internal","renderer","cairo","CairoTextField"];
openfl__$internal_renderer_cairo_CairoTextField.render = function(textField,renderSession) {
};
var openfl__$internal_renderer_canvas_CanvasBitmap = function() { };
$hxClasses["openfl._internal.renderer.canvas.CanvasBitmap"] = openfl__$internal_renderer_canvas_CanvasBitmap;
openfl__$internal_renderer_canvas_CanvasBitmap.__name__ = ["openfl","_internal","renderer","canvas","CanvasBitmap"];
openfl__$internal_renderer_canvas_CanvasBitmap.render = function(bitmap,renderSession) {
	if(!bitmap.__renderable || bitmap.__worldAlpha <= 0) return;
	var context = renderSession.context;
	if(bitmap.bitmapData != null && bitmap.bitmapData.__isValid) {
		if(bitmap.__mask != null) renderSession.maskManager.pushMask(bitmap.__mask);
		bitmap.bitmapData.__sync();
		context.globalAlpha = bitmap.__worldAlpha;
		var transform = bitmap.__renderTransform;
		var scrollRect = bitmap.get_scrollRect();
		if(renderSession.roundPixels) context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx | 0,transform.ty | 0); else context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);
		if(!bitmap.smoothing) {
			context.mozImageSmoothingEnabled = false;
			context.msImageSmoothingEnabled = false;
			context.imageSmoothingEnabled = false;
		}
		if(scrollRect == null) context.drawImage(bitmap.bitmapData.image.get_src(),0,0); else context.drawImage(bitmap.bitmapData.image.get_src(),scrollRect.x,scrollRect.y,scrollRect.width,scrollRect.height,scrollRect.x,scrollRect.y,scrollRect.width,scrollRect.height);
		if(!bitmap.smoothing) {
			context.mozImageSmoothingEnabled = true;
			context.msImageSmoothingEnabled = true;
			context.imageSmoothingEnabled = true;
		}
		if(bitmap.__mask != null) renderSession.maskManager.popMask();
	}
};
var openfl__$internal_renderer_canvas_CanvasGraphics = function() { };
$hxClasses["openfl._internal.renderer.canvas.CanvasGraphics"] = openfl__$internal_renderer_canvas_CanvasGraphics;
openfl__$internal_renderer_canvas_CanvasGraphics.__name__ = ["openfl","_internal","renderer","canvas","CanvasGraphics"];
openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
openfl__$internal_renderer_canvas_CanvasGraphics.bitmapStroke = null;
openfl__$internal_renderer_canvas_CanvasGraphics.bitmapRepeat = null;
openfl__$internal_renderer_canvas_CanvasGraphics.bounds = null;
openfl__$internal_renderer_canvas_CanvasGraphics.graphics = null;
openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = null;
openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = null;
openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting = null;
openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix = null;
openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix = null;
openfl__$internal_renderer_canvas_CanvasGraphics.context = null;
openfl__$internal_renderer_canvas_CanvasGraphics.closePath = function() {
	if(openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle == null) return;
	openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath();
	openfl__$internal_renderer_canvas_CanvasGraphics.context.stroke();
	openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath();
};
openfl__$internal_renderer_canvas_CanvasGraphics.createBitmapFill = function(bitmap,bitmapRepeat) {
	bitmap.__sync();
	return openfl__$internal_renderer_canvas_CanvasGraphics.context.createPattern(bitmap.image.get_src(),bitmapRepeat?"repeat":"no-repeat");
};
openfl__$internal_renderer_canvas_CanvasGraphics.createGradientPattern = function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
	var gradientFill = null;
	switch(type) {
	case 1:
		if(matrix == null) matrix = new openfl_geom_Matrix();
		var point = matrix.transformPoint(new openfl_geom_Point(1638.4,0));
		gradientFill = openfl__$internal_renderer_canvas_CanvasGraphics.context.createRadialGradient(matrix.tx,matrix.ty,0,matrix.tx,matrix.ty,(point.x - matrix.tx) / 2);
		break;
	case 0:
		var matrix1;
		if(matrix != null) matrix1 = matrix; else matrix1 = new openfl_geom_Matrix();
		var point1 = matrix1.transformPoint(new openfl_geom_Point(-819.2,0));
		var point2 = matrix1.transformPoint(new openfl_geom_Point(819.2,0));
		gradientFill = openfl__$internal_renderer_canvas_CanvasGraphics.context.createLinearGradient(point1.x,point1.y,point2.x,point2.y);
		break;
	}
	var _g1 = 0;
	var _g = colors.length;
	while(_g1 < _g) {
		var i = _g1++;
		var rgb = colors[i];
		var alpha = alphas[i];
		var r = (rgb & 16711680) >>> 16;
		var g = (rgb & 65280) >>> 8;
		var b = rgb & 255;
		var ratio = ratios[i] / 255;
		if(ratio < 0) ratio = 0;
		if(ratio > 1) ratio = 1;
		gradientFill.addColorStop(ratio,"rgba(" + r + ", " + g + ", " + b + ", " + alpha + ")");
	}
	return gradientFill;
};
openfl__$internal_renderer_canvas_CanvasGraphics.createTempPatternCanvas = function(bitmap,repeat,width,height) {
	var canvas = window.document.createElement("canvas");
	var context = canvas.getContext("2d");
	canvas.width = width;
	canvas.height = height;
	context.fillStyle = context.createPattern(bitmap.image.get_src(),repeat?"repeat":"no-repeat");
	context.beginPath();
	context.moveTo(0,0);
	context.lineTo(0,height);
	context.lineTo(width,height);
	context.lineTo(width,0);
	context.lineTo(0,0);
	context.closePath();
	if(!openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) context.fill();
	return canvas;
};
openfl__$internal_renderer_canvas_CanvasGraphics.drawRoundRect = function(x,y,width,height,ellipseWidth,ellipseHeight) {
	if(ellipseHeight == null) ellipseHeight = ellipseWidth;
	ellipseWidth *= 0.5;
	ellipseHeight *= 0.5;
	if(ellipseWidth > width / 2) ellipseWidth = width / 2;
	if(ellipseHeight > height / 2) ellipseHeight = height / 2;
	var xe = x + width;
	var ye = y + height;
	var cx1 = -ellipseWidth + ellipseWidth * openfl__$internal_renderer_canvas_CanvasGraphics.SIN45;
	var cx2 = -ellipseWidth + ellipseWidth * openfl__$internal_renderer_canvas_CanvasGraphics.TAN22;
	var cy1 = -ellipseHeight + ellipseHeight * openfl__$internal_renderer_canvas_CanvasGraphics.SIN45;
	var cy2 = -ellipseHeight + ellipseHeight * openfl__$internal_renderer_canvas_CanvasGraphics.TAN22;
	openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(xe,ye - ellipseHeight);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(xe,ye + cy2,xe + cx1,ye + cy1);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(xe + cx2,ye,xe - ellipseWidth,ye);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(x + ellipseWidth,ye);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(x - cx2,ye,x - cx1,ye + cy1);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(x,ye + cy2,x,ye - ellipseHeight);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(x,y + ellipseHeight);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(x,y - cy2,x - cx1,y - cy1);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(x - cx2,y,x + ellipseWidth,y);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(xe - ellipseWidth,y);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(xe + cx2,y,xe + cx1,y - cy1);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(xe,y - cy2,xe,y + ellipseHeight);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(xe,ye - ellipseHeight);
};
openfl__$internal_renderer_canvas_CanvasGraphics.endFill = function() {
	openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath();
	openfl__$internal_renderer_canvas_CanvasGraphics.playCommands(openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands,false);
	openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.clear();
};
openfl__$internal_renderer_canvas_CanvasGraphics.endStroke = function() {
	openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath();
	openfl__$internal_renderer_canvas_CanvasGraphics.playCommands(openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands,true);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath();
	openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.clear();
};
openfl__$internal_renderer_canvas_CanvasGraphics.hitTest = function(graphics,x,y) {
	if(graphics.__commands.get_length() == 0 || openfl__$internal_renderer_canvas_CanvasGraphics.bounds == null || openfl__$internal_renderer_canvas_CanvasGraphics.bounds.width <= 0 || openfl__$internal_renderer_canvas_CanvasGraphics.bounds.height <= 0) return false; else {
		openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting = true;
		x -= openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x;
		y -= openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y;
		if(graphics.__canvas == null) {
			graphics.__canvas = window.document.createElement("canvas");
			graphics.__context = graphics.__canvas.getContext("2d");
		}
		openfl__$internal_renderer_canvas_CanvasGraphics.context = graphics.__context;
		openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.clear();
		openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.clear();
		openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = false;
		openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = false;
		openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
		openfl__$internal_renderer_canvas_CanvasGraphics.bitmapRepeat = false;
		openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath();
		var data = new openfl__$internal_renderer_DrawCommandReader(graphics.__commands);
		var _g = 0;
		var _g1 = graphics.__commands.types;
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			switch(type[1]) {
			case 3:
				var c = data.readCubicCurveTo();
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.cubicCurveTo(openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX1(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY1(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX2(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY2(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorY(c));
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.cubicCurveTo(openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX1(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY1(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX2(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY2(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorY(c));
				break;
			case 4:
				var c1 = data.readCurveTo();
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.curveTo(openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlX(c1),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlY(c1),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorX(c1),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorY(c1));
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.curveTo(openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlX(c1),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlY(c1),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorX(c1),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorY(c1));
				break;
			case 16:
				var c2 = data.readLineTo();
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.lineTo(openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x(c2),openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y(c2));
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineTo(openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x(c2),openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y(c2));
				break;
			case 17:
				var c3 = data.readMoveTo();
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.moveTo(openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c3),openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c3));
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.moveTo(openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c3),openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c3));
				break;
			case 14:
				var c4 = data.readLineGradientStyle();
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineGradientStyle(openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_type(c4),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_colors(c4),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_alphas(c4),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_ratios(c4),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_matrix(c4),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_spreadMethod(c4),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_interpolationMethod(c4),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_focalPointRatio(c4));
				break;
			case 13:
				var c5 = data.readLineBitmapStyle();
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineBitmapStyle(openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_bitmap(c5),openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_matrix(c5),openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_repeat(c5),openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_smooth(c5));
				break;
			case 15:
				var c6 = data.readLineStyle();
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineStyle(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness(c6),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_color(c6),1,openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_pixelHinting(c6),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_scaleMode(c6),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_caps(c6),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_joints(c6),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_miterLimit(c6));
				break;
			case 12:
				data.readEndFill();
				openfl__$internal_renderer_canvas_CanvasGraphics.endFill();
				openfl__$internal_renderer_canvas_CanvasGraphics.endStroke();
				if(openfl__$internal_renderer_canvas_CanvasGraphics.hasFill && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInPath(x,y)) {
					data.destroy();
					return true;
				}
				if(openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInStroke(x,y)) {
					data.destroy();
					return true;
				}
				openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = false;
				openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
				break;
			case 0:case 1:case 2:
				openfl__$internal_renderer_canvas_CanvasGraphics.endFill();
				openfl__$internal_renderer_canvas_CanvasGraphics.endStroke();
				if(openfl__$internal_renderer_canvas_CanvasGraphics.hasFill && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInPath(x,y)) {
					data.destroy();
					return true;
				}
				if(openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInStroke(x,y)) {
					data.destroy();
					return true;
				}
				if(type == openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL) {
					var c7 = data.readBeginBitmapFill();
					openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginBitmapFill(openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_bitmap(c7),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_matrix(c7),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_repeat(c7),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_smooth(c7));
					openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginBitmapFill(openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_bitmap(c7),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_matrix(c7),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_repeat(c7),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_smooth(c7));
				} else if(type == openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL) {
					var c8 = data.readBeginGradientFill();
					openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginGradientFill(openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_type(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_colors(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_alphas(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_ratios(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_matrix(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_spreadMethod(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_interpolationMethod(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_focalPointRatio(c8));
					openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginGradientFill(openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_type(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_colors(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_alphas(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_ratios(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_matrix(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_spreadMethod(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_interpolationMethod(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_focalPointRatio(c8));
				} else {
					var c9 = data.readBeginFill();
					openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginFill(openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color(c9),1);
					openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginFill(openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color(c9),1);
				}
				break;
			case 5:
				var c10 = data.readDrawCircle();
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawCircle(openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_x(c10),openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_y(c10),openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_radius(c10));
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawCircle(openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_x(c10),openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_y(c10),openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_radius(c10));
				break;
			case 6:
				var c11 = data.readDrawEllipse();
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawEllipse(openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_x(c11),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_y(c11),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_width(c11),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_height(c11));
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawEllipse(openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_x(c11),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_y(c11),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_width(c11),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_height(c11));
				break;
			case 8:
				var c12 = data.readDrawRect();
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawRect(openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c12),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c12),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width(c12),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height(c12));
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawRect(openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c12),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c12),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width(c12),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height(c12));
				break;
			case 9:
				var c13 = data.readDrawRoundRect();
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawRoundRect(openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_x(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_y(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_width(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_height(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseWidth(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseHeight(c13));
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawRoundRect(openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_x(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_y(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_width(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_height(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseWidth(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseHeight(c13));
				break;
			default:
				data.skip(type);
			}
		}
		if(openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.get_length() > 0) openfl__$internal_renderer_canvas_CanvasGraphics.endFill();
		if(openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.get_length() > 0) openfl__$internal_renderer_canvas_CanvasGraphics.endStroke();
		data.destroy();
		if(openfl__$internal_renderer_canvas_CanvasGraphics.hasFill && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInPath(x,y)) return true;
		if(openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInStroke(x,y)) return true;
	}
	return false;
};
openfl__$internal_renderer_canvas_CanvasGraphics.isCCW = function(x1,y1,x2,y2,x3,y3) {
	return (x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1) < 0;
};
openfl__$internal_renderer_canvas_CanvasGraphics.normalizeUVT = function(uvt,skipT) {
	if(skipT == null) skipT = false;
	var max = -Infinity;
	var tmp = -Infinity;
	var len = uvt.length;
	var _g1 = 1;
	var _g = len + 1;
	while(_g1 < _g) {
		var t = _g1++;
		if(skipT && t % 3 == 0) continue;
		tmp = uvt.data[t - 1];
		if(max < tmp) max = tmp;
	}
	var result;
	var this1;
	this1 = new openfl_VectorData();
	var this2;
	this2 = new Array(0);
	this1.data = this2;
	this1.length = 0;
	this1.fixed = false;
	result = this1;
	var _g11 = 1;
	var _g2 = len + 1;
	while(_g11 < _g2) {
		var t1 = _g11++;
		if(skipT && t1 % 3 == 0) continue;
		if(!result.fixed) {
			result.length++;
			if(result.data.length < result.length) {
				var data;
				var this3;
				this3 = new Array(result.data.length + 10);
				data = this3;
				haxe_ds__$Vector_Vector_$Impl_$.blit(result.data,0,data,0,result.data.length);
				result.data = data;
			}
			result.data[result.length - 1] = uvt.data[t1 - 1] / max;
		}
		result.length;
	}
	return { max : max, uvt : result};
};
openfl__$internal_renderer_canvas_CanvasGraphics.playCommands = function(commands,stroke) {
	if(stroke == null) stroke = false;
	openfl__$internal_renderer_canvas_CanvasGraphics.bounds = openfl__$internal_renderer_canvas_CanvasGraphics.graphics.__bounds;
	var offsetX = openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x;
	var offsetY = openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y;
	var positionX = 0.0;
	var positionY = 0.0;
	var closeGap = false;
	var startX = 0.0;
	var startY = 0.0;
	var data = new openfl__$internal_renderer_DrawCommandReader(commands);
	var _g = 0;
	var _g1 = commands.types;
	while(_g < _g1.length) {
		var type = _g1[_g];
		++_g;
		switch(type[1]) {
		case 3:
			var c = data.readCubicCurveTo();
			openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX1(c) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY1(c) - offsetY,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX2(c) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY2(c) - offsetY,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX(c) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorY(c) - offsetY);
			break;
		case 4:
			var c1 = data.readCurveTo();
			openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlX(c1) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlY(c1) - offsetY,openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorX(c1) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorY(c1) - offsetY);
			break;
		case 5:
			var c2 = data.readDrawCircle();
			openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_x(c2) - offsetX + openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_radius(c2),openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_y(c2) - offsetY);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.arc(openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_x(c2) - offsetX,openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_y(c2) - offsetY,openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_radius(c2),0,Math.PI * 2,true);
			break;
		case 6:
			var c3 = data.readDrawEllipse();
			var x = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_x(c3);
			var y = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_y(c3);
			var width = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_width(c3);
			var height = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_height(c3);
			x -= offsetX;
			y -= offsetY;
			var kappa = .5522848;
			var ox = width / 2 * kappa;
			var oy = height / 2 * kappa;
			var xe = x + width;
			var ye = y + height;
			var xm = x + width / 2;
			var ym = y + height / 2;
			openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(x,ym);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(x,ym - oy,xm - ox,y,xm,y);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(xm + ox,y,xe,ym - oy,xe,ym);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(xe,ym + oy,xm + ox,ye,xm,ye);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(xm - ox,ye,x,ym + oy,x,ym);
			break;
		case 9:
			var c4 = data.readDrawRoundRect();
			openfl__$internal_renderer_canvas_CanvasGraphics.drawRoundRect(openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_x(c4) - offsetX,openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_y(c4) - offsetY,openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_width(c4),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_height(c4),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseWidth(c4),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseHeight(c4));
			break;
		case 16:
			var c5 = data.readLineTo();
			openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x(c5) - offsetX,openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y(c5) - offsetY);
			positionX = openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x(c5);
			positionY = openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y(c5);
			break;
		case 17:
			var c6 = data.readMoveTo();
			openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c6) - offsetX,openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c6) - offsetY);
			positionX = openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c6);
			positionY = openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c6);
			closeGap = true;
			startX = openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c6);
			startY = openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c6);
			break;
		case 15:
			var c7 = data.readLineStyle();
			if(stroke && openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke) {
				openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath();
				if(!openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) openfl__$internal_renderer_canvas_CanvasGraphics.context.stroke();
				openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath();
			}
			openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(positionX - offsetX,positionY - offsetY);
			if(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness(c7) == null) openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = false; else {
				if(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness(c7) > 0) openfl__$internal_renderer_canvas_CanvasGraphics.context.lineWidth = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness(c7); else openfl__$internal_renderer_canvas_CanvasGraphics.context.lineWidth = 1;
				if(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_joints(c7) == null) openfl__$internal_renderer_canvas_CanvasGraphics.context.lineJoin = "round"; else openfl__$internal_renderer_canvas_CanvasGraphics.context.lineJoin = openfl_display__$JointStyle_JointStyle_$Impl_$.toString(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_joints(c7)).toLowerCase();
				if(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_caps(c7) == null) openfl__$internal_renderer_canvas_CanvasGraphics.context.lineCap = "round"; else {
					var _g2 = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_caps(c7);
					switch(_g2) {
					case 0:
						openfl__$internal_renderer_canvas_CanvasGraphics.context.lineCap = "butt";
						break;
					default:
						openfl__$internal_renderer_canvas_CanvasGraphics.context.lineCap = openfl_display__$CapsStyle_CapsStyle_$Impl_$.toString(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_caps(c7)).toLowerCase();
					}
				}
				openfl__$internal_renderer_canvas_CanvasGraphics.context.miterLimit = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_miterLimit(c7);
				if(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_alpha(c7) == 1) openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle = "#" + StringTools.hex(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_color(c7) & 16777215,6); else {
					var r = (openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_color(c7) & 16711680) >>> 16;
					var g = (openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_color(c7) & 65280) >>> 8;
					var b = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_color(c7) & 255;
					openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle = "rgba(" + r + ", " + g + ", " + b + ", " + openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_alpha(c7) + ")";
				}
				openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = true;
			}
			break;
		case 14:
			var c8 = data.readLineGradientStyle();
			if(stroke && openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke) openfl__$internal_renderer_canvas_CanvasGraphics.closePath();
			openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(positionX - offsetX,positionY - offsetY);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle = openfl__$internal_renderer_canvas_CanvasGraphics.createGradientPattern(openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_type(c8),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_colors(c8),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_alphas(c8),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_ratios(c8),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_matrix(c8),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_spreadMethod(c8),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_interpolationMethod(c8),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_focalPointRatio(c8));
			openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = true;
			break;
		case 13:
			var c9 = data.readLineBitmapStyle();
			if(stroke && openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke) openfl__$internal_renderer_canvas_CanvasGraphics.closePath();
			openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(positionX - offsetX,positionY - offsetY);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle = openfl__$internal_renderer_canvas_CanvasGraphics.createBitmapFill(openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_bitmap(c9),openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_repeat(c9));
			openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = true;
			break;
		case 0:
			var c10 = data.readBeginBitmapFill();
			openfl__$internal_renderer_canvas_CanvasGraphics.context.fillStyle = openfl__$internal_renderer_canvas_CanvasGraphics.createBitmapFill(openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_bitmap(c10),true);
			openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = true;
			if(openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_matrix(c10) != null) {
				openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix = openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_matrix(c10);
				openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix = openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_matrix(c10).clone();
				openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.invert();
			} else {
				openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix = null;
				openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix = null;
			}
			break;
		case 1:
			var c11 = data.readBeginFill();
			if(openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_alpha(c11) < 0.005) openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = false; else {
				if(openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_alpha(c11) == 1) openfl__$internal_renderer_canvas_CanvasGraphics.context.fillStyle = "#" + StringTools.hex(openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color(c11),6); else {
					var r1 = (openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color(c11) & 16711680) >>> 16;
					var g1 = (openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color(c11) & 65280) >>> 8;
					var b1 = openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color(c11) & 255;
					openfl__$internal_renderer_canvas_CanvasGraphics.context.fillStyle = "rgba(" + r1 + ", " + g1 + ", " + b1 + ", " + openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_alpha(c11) + ")";
				}
				openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
				openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = true;
			}
			break;
		case 2:
			var c12 = data.readBeginGradientFill();
			openfl__$internal_renderer_canvas_CanvasGraphics.context.fillStyle = openfl__$internal_renderer_canvas_CanvasGraphics.createGradientPattern(openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_type(c12),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_colors(c12),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_alphas(c12),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_ratios(c12),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_matrix(c12),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_spreadMethod(c12),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_interpolationMethod(c12),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_focalPointRatio(c12));
			openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
			openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = true;
			break;
		case 8:
			var c13 = data.readDrawRect();
			var optimizationUsed = false;
			if(openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill != null) {
				var st = 0;
				var sr = 0;
				var sb = 0;
				var sl = 0;
				var canOptimizeMatrix = true;
				if(openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix != null) {
					if(openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.b != 0 || openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.c != 0) canOptimizeMatrix = false; else {
						var stl = openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.transformPoint(new openfl_geom_Point(openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c13)));
						var sbr = openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.transformPoint(new openfl_geom_Point(openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c13) + openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c13) + openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height(c13)));
						st = stl.y;
						sl = stl.x;
						sb = sbr.y;
						sr = sbr.x;
					}
				} else {
					st = openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c13);
					sl = openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c13);
					sb = openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c13) + openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height(c13);
					sr = openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c13) + openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width(c13);
				}
				if(canOptimizeMatrix && st >= 0 && sl >= 0 && sr <= openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.width && sb <= openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.height) {
					optimizationUsed = true;
					if(!openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) openfl__$internal_renderer_canvas_CanvasGraphics.context.drawImage(openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.image.get_src(),sl,st,sr - sl,sb - st,openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c13) - offsetX,openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c13) - offsetY,openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height(c13));
				}
			}
			if(!optimizationUsed) openfl__$internal_renderer_canvas_CanvasGraphics.context.rect(openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c13) - offsetX,openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c13) - offsetY,openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height(c13));
			break;
		default:
			data.skip(type);
		}
	}
	data.destroy();
	if(stroke && openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke) {
		if(openfl__$internal_renderer_canvas_CanvasGraphics.hasFill && closeGap) openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(startX - offsetX,startY - offsetY); else if(closeGap && positionX == startX && positionY == startY) openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath();
		if(!openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) openfl__$internal_renderer_canvas_CanvasGraphics.context.stroke();
	}
	if(!stroke) {
		if(openfl__$internal_renderer_canvas_CanvasGraphics.hasFill || openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill != null) {
			openfl__$internal_renderer_canvas_CanvasGraphics.context.translate(-openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x,-openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y);
			if(openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix != null) {
				openfl__$internal_renderer_canvas_CanvasGraphics.context.transform(openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.a,openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.b,openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.c,openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.d,openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.tx,openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.ty);
				if(!openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) openfl__$internal_renderer_canvas_CanvasGraphics.context.fill();
				openfl__$internal_renderer_canvas_CanvasGraphics.context.transform(openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.a,openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.b,openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.c,openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.d,openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.tx,openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.ty);
			} else if(!openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) openfl__$internal_renderer_canvas_CanvasGraphics.context.fill();
			openfl__$internal_renderer_canvas_CanvasGraphics.context.translate(openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x,openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath();
		}
	}
};
openfl__$internal_renderer_canvas_CanvasGraphics.render = function(graphics,renderSession) {
	var directRender = false;
	if(graphics.__dirty || directRender) {
		openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting = false;
		openfl__$internal_renderer_canvas_CanvasGraphics.graphics = graphics;
		openfl__$internal_renderer_canvas_CanvasGraphics.bounds = graphics.__bounds;
		if(!graphics.__visible || graphics.__commands.get_length() == 0 || openfl__$internal_renderer_canvas_CanvasGraphics.bounds == null || openfl__$internal_renderer_canvas_CanvasGraphics.bounds.width <= 0 || openfl__$internal_renderer_canvas_CanvasGraphics.bounds.height <= 0) {
			graphics.__canvas = null;
			graphics.__context = null;
			graphics.__bitmap = null;
		} else {
			if(directRender) {
				openfl__$internal_renderer_canvas_CanvasGraphics.context = renderSession.context;
				openfl__$internal_renderer_canvas_CanvasGraphics.bounds.setTo(0,0,openfl__$internal_renderer_canvas_CanvasGraphics.context.canvas.width,openfl__$internal_renderer_canvas_CanvasGraphics.context.canvas.width);
			} else {
				if(graphics.__canvas == null) {
					graphics.__canvas = window.document.createElement("canvas");
					graphics.__context = graphics.__canvas.getContext("2d");
				}
				openfl__$internal_renderer_canvas_CanvasGraphics.context = graphics.__context;
				graphics.__canvas.width = Math.ceil(openfl__$internal_renderer_canvas_CanvasGraphics.bounds.width);
				graphics.__canvas.height = Math.ceil(openfl__$internal_renderer_canvas_CanvasGraphics.bounds.height);
			}
			openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.clear();
			openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.clear();
			openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = false;
			openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = false;
			openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
			openfl__$internal_renderer_canvas_CanvasGraphics.bitmapRepeat = false;
			var data = new openfl__$internal_renderer_DrawCommandReader(graphics.__commands);
			var _g = 0;
			var _g1 = graphics.__commands.types;
			try {
				while(_g < _g1.length) {
					var type = _g1[_g];
					++_g;
					switch(type[1]) {
					case 3:
						var c = data.readCubicCurveTo();
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.cubicCurveTo(openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX1(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY1(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX2(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY2(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorY(c));
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.cubicCurveTo(openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX1(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY1(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX2(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY2(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX(c),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorY(c));
						break;
					case 4:
						var c1 = data.readCurveTo();
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.curveTo(openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlX(c1),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlY(c1),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorX(c1),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorY(c1));
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.curveTo(openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlX(c1),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlY(c1),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorX(c1),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorY(c1));
						break;
					case 16:
						var c2 = data.readLineTo();
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.lineTo(openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x(c2),openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y(c2));
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineTo(openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x(c2),openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y(c2));
						break;
					case 17:
						var c3 = data.readMoveTo();
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.moveTo(openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c3),openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c3));
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.moveTo(openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c3),openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c3));
						break;
					case 12:
						data.readEndFill();
						openfl__$internal_renderer_canvas_CanvasGraphics.endFill();
						openfl__$internal_renderer_canvas_CanvasGraphics.endStroke();
						openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = false;
						openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
						break;
					case 15:
						var c4 = data.readLineStyle();
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineStyle(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness(c4),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_color(c4),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_alpha(c4),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_pixelHinting(c4),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_scaleMode(c4),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_caps(c4),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_joints(c4),openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_miterLimit(c4));
						break;
					case 14:
						var c5 = data.readLineGradientStyle();
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineGradientStyle(openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_type(c5),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_colors(c5),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_alphas(c5),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_ratios(c5),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_matrix(c5),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_spreadMethod(c5),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_interpolationMethod(c5),openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_focalPointRatio(c5));
						break;
					case 13:
						var c6 = data.readLineBitmapStyle();
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineBitmapStyle(openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_bitmap(c6),openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_matrix(c6),openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_repeat(c6),openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_smooth(c6));
						break;
					case 0:case 1:case 2:
						openfl__$internal_renderer_canvas_CanvasGraphics.endFill();
						openfl__$internal_renderer_canvas_CanvasGraphics.endStroke();
						if(type == openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL) {
							var c7 = data.readBeginBitmapFill();
							openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginBitmapFill(openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_bitmap(c7),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_matrix(c7),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_repeat(c7),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_smooth(c7));
							openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginBitmapFill(openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_bitmap(c7),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_matrix(c7),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_repeat(c7),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_smooth(c7));
						} else if(type == openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL) {
							var c8 = data.readBeginGradientFill();
							openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginGradientFill(openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_type(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_colors(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_alphas(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_ratios(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_matrix(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_spreadMethod(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_interpolationMethod(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_focalPointRatio(c8));
							openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginGradientFill(openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_type(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_colors(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_alphas(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_ratios(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_matrix(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_spreadMethod(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_interpolationMethod(c8),openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_focalPointRatio(c8));
						} else {
							var c9 = data.readBeginFill();
							openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginFill(openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color(c9),openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_alpha(c9));
							openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginFill(openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color(c9),openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_alpha(c9));
						}
						break;
					case 5:
						var c10 = data.readDrawCircle();
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawCircle(openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_x(c10),openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_y(c10),openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_radius(c10));
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawCircle(openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_x(c10),openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_y(c10),openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_radius(c10));
						break;
					case 6:
						var c11 = data.readDrawEllipse();
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawEllipse(openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_x(c11),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_y(c11),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_width(c11),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_height(c11));
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawEllipse(openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_x(c11),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_y(c11),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_width(c11),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_height(c11));
						break;
					case 8:
						var c12 = data.readDrawRect();
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawRect(openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c12),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c12),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width(c12),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height(c12));
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawRect(openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c12),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c12),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width(c12),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height(c12));
						break;
					case 9:
						var c13 = data.readDrawRoundRect();
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawRoundRect(openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_x(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_y(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_width(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_height(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseWidth(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseHeight(c13));
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawRoundRect(openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_x(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_y(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_width(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_height(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseWidth(c13),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseHeight(c13));
						break;
					case 11:
						openfl__$internal_renderer_canvas_CanvasGraphics.endFill();
						openfl__$internal_renderer_canvas_CanvasGraphics.endStroke();
						var c14 = data.readDrawTriangles();
						var v = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_vertices(c14);
						var ind = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_indices(c14);
						var uvt = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_uvtData(c14);
						var pattern = null;
						var colorFill = openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill == null;
						if(colorFill && uvt != null) throw "__break__";
						if(!colorFill) {
							if(uvt == null) {
								var this1;
								this1 = new openfl_VectorData();
								var this2;
								this2 = new Array(0);
								this1.data = this2;
								this1.length = 0;
								this1.fixed = false;
								uvt = this1;
								var _g3 = 0;
								var _g2 = v.length / 2 | 0;
								while(_g3 < _g2) {
									var i1 = _g3++;
									if(!uvt.fixed) {
										uvt.length++;
										if(uvt.data.length < uvt.length) {
											var data1;
											var this3;
											this3 = new Array(uvt.data.length + 10);
											data1 = this3;
											haxe_ds__$Vector_Vector_$Impl_$.blit(uvt.data,0,data1,0,uvt.data.length);
											uvt.data = data1;
										}
										uvt.data[uvt.length - 1] = v.data[i1 * 2] / openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.width;
									}
									uvt.length;
									if(!uvt.fixed) {
										uvt.length++;
										if(uvt.data.length < uvt.length) {
											var data2;
											var this4;
											this4 = new Array(uvt.data.length + 10);
											data2 = this4;
											haxe_ds__$Vector_Vector_$Impl_$.blit(uvt.data,0,data2,0,uvt.data.length);
											uvt.data = data2;
										}
										uvt.data[uvt.length - 1] = v.data[i1 * 2 + 1] / openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.height;
									}
									uvt.length;
								}
							}
							var skipT = uvt.length != v.length;
							var normalizedUVT = openfl__$internal_renderer_canvas_CanvasGraphics.normalizeUVT(uvt,skipT);
							var maxUVT = normalizedUVT.max;
							uvt = normalizedUVT.uvt;
							if(maxUVT > 1) pattern = openfl__$internal_renderer_canvas_CanvasGraphics.createTempPatternCanvas(openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill,openfl__$internal_renderer_canvas_CanvasGraphics.bitmapRepeat,openfl__$internal_renderer_canvas_CanvasGraphics.bounds.width | 0,openfl__$internal_renderer_canvas_CanvasGraphics.bounds.height | 0); else pattern = openfl__$internal_renderer_canvas_CanvasGraphics.createTempPatternCanvas(openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill,openfl__$internal_renderer_canvas_CanvasGraphics.bitmapRepeat,openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.width,openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.height);
						}
						var i = 0;
						var l = ind.length;
						var a_;
						var b_;
						var c_;
						var iax;
						var iay;
						var ibx;
						var iby;
						var icx;
						var icy;
						var x1;
						var y1;
						var x2;
						var y2;
						var x3;
						var y3;
						var uvx1;
						var uvy1;
						var uvx2;
						var uvy2;
						var uvx3;
						var uvy3;
						var denom;
						var t1;
						var t2;
						var t3;
						var t4;
						var dx;
						var dy;
						while(i < l) {
							a_ = i;
							b_ = i + 1;
							c_ = i + 2;
							iax = ind.data[a_] * 2;
							iay = ind.data[a_] * 2 + 1;
							ibx = ind.data[b_] * 2;
							iby = ind.data[b_] * 2 + 1;
							icx = ind.data[c_] * 2;
							icy = ind.data[c_] * 2 + 1;
							x1 = v.data[iax];
							y1 = v.data[iay];
							x2 = v.data[ibx];
							y2 = v.data[iby];
							x3 = v.data[icx];
							y3 = v.data[icy];
							var _g21 = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_culling(c14);
							switch(_g21) {
							case 2:
								if(!((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1) < 0)) {
									i += 3;
									continue;
								}
								break;
							case 0:
								if((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1) < 0) {
									i += 3;
									continue;
								}
								break;
							default:
							}
							if(colorFill) {
								openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath();
								openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(x1,y1);
								openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(x2,y2);
								openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(x3,y3);
								openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath();
								if(!openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) openfl__$internal_renderer_canvas_CanvasGraphics.context.fill();
								i += 3;
								continue;
							}
							openfl__$internal_renderer_canvas_CanvasGraphics.context.save();
							openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath();
							openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(x1,y1);
							openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(x2,y2);
							openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(x3,y3);
							openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath();
							openfl__$internal_renderer_canvas_CanvasGraphics.context.clip();
							uvx1 = uvt.data[iax] * pattern.width;
							uvx2 = uvt.data[ibx] * pattern.width;
							uvx3 = uvt.data[icx] * pattern.width;
							uvy1 = uvt.data[iay] * pattern.height;
							uvy2 = uvt.data[iby] * pattern.height;
							uvy3 = uvt.data[icy] * pattern.height;
							denom = uvx1 * (uvy3 - uvy2) - uvx2 * uvy3 + uvx3 * uvy2 + (uvx2 - uvx3) * uvy1;
							if(denom == 0) {
								i += 3;
								continue;
							}
							t1 = -(uvy1 * (x3 - x2) - uvy2 * x3 + uvy3 * x2 + (uvy2 - uvy3) * x1) / denom;
							t2 = (uvy2 * y3 + uvy1 * (y2 - y3) - uvy3 * y2 + (uvy3 - uvy2) * y1) / denom;
							t3 = (uvx1 * (x3 - x2) - uvx2 * x3 + uvx3 * x2 + (uvx2 - uvx3) * x1) / denom;
							t4 = -(uvx2 * y3 + uvx1 * (y2 - y3) - uvx3 * y2 + (uvx3 - uvx2) * y1) / denom;
							dx = (uvx1 * (uvy3 * x2 - uvy2 * x3) + uvy1 * (uvx2 * x3 - uvx3 * x2) + (uvx3 * uvy2 - uvx2 * uvy3) * x1) / denom;
							dy = (uvx1 * (uvy3 * y2 - uvy2 * y3) + uvy1 * (uvx2 * y3 - uvx3 * y2) + (uvx3 * uvy2 - uvx2 * uvy3) * y1) / denom;
							openfl__$internal_renderer_canvas_CanvasGraphics.context.transform(t1,t2,t3,t4,dx,dy);
							openfl__$internal_renderer_canvas_CanvasGraphics.context.drawImage(pattern,0,0);
							openfl__$internal_renderer_canvas_CanvasGraphics.context.restore();
							i += 3;
						}
						break;
					case 10:
						var c15 = data.readDrawTiles();
						var useScale = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 1) > 0;
						var offsetX = openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x;
						var offsetY = openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y;
						var useRotation = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 2) > 0;
						var useTransform = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 16) > 0;
						var useRGB = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 4) > 0;
						var useAlpha = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 8) > 0;
						var useRect = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 32) > 0;
						var useOrigin = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 64) > 0;
						var useBlendAdd = (openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c15) & 65536) > 0;
						if(useTransform) {
							useScale = false;
							useRotation = false;
						}
						var scaleIndex = 0;
						var rotationIndex = 0;
						var rgbIndex = 0;
						var alphaIndex = 0;
						var transformIndex = 0;
						var numValues = 3;
						if(useRect) if(useOrigin) numValues = 8; else numValues = 6;
						if(useScale) {
							scaleIndex = numValues;
							numValues++;
						}
						if(useRotation) {
							rotationIndex = numValues;
							numValues++;
						}
						if(useTransform) {
							transformIndex = numValues;
							numValues += 4;
						}
						if(useRGB) {
							rgbIndex = numValues;
							numValues += 3;
						}
						if(useAlpha) {
							alphaIndex = numValues;
							numValues++;
						}
						var totalCount = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15).length;
						if(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_count(c15) >= 0 && totalCount > openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_count(c15)) totalCount = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_count(c15);
						var itemCount = totalCount / numValues | 0;
						var index = 0;
						var rect = null;
						var center = null;
						var previousTileID = -1;
						var surface;
						openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet(c15).__bitmap.__sync();
						surface = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet(c15).__bitmap.image.get_src();
						if(useBlendAdd) openfl__$internal_renderer_canvas_CanvasGraphics.context.globalCompositeOperation = "lighter";
						while(index < totalCount) {
							var tileID;
							if(!useRect) tileID = Std["int"](openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 2]); else tileID = -1;
							if(!useRect && tileID != previousTileID) {
								rect = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet(c15).__tileRects[tileID];
								center = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet(c15).__centerPoints[tileID];
								previousTileID = tileID;
							} else if(useRect) {
								rect = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet(c15).__rectTile;
								rect.setTo(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 2],openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 3],openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 4],openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 5]);
								center = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet(c15).__point;
								if(useOrigin) center.setTo(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 6],openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 7]); else center.setTo(0,0);
							}
							if(rect != null && rect.width > 0 && rect.height > 0 && center != null) {
								openfl__$internal_renderer_canvas_CanvasGraphics.context.save();
								openfl__$internal_renderer_canvas_CanvasGraphics.context.translate(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index] - offsetX,openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + 1] - offsetY);
								if(useRotation) openfl__$internal_renderer_canvas_CanvasGraphics.context.rotate(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + rotationIndex]);
								var scale = 1.0;
								if(useScale) scale = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + scaleIndex];
								if(useTransform) openfl__$internal_renderer_canvas_CanvasGraphics.context.transform(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + transformIndex],openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + transformIndex + 1],openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + transformIndex + 2],openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + transformIndex + 3],0,0);
								if(useAlpha) openfl__$internal_renderer_canvas_CanvasGraphics.context.globalAlpha = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c15)[index + alphaIndex];
								openfl__$internal_renderer_canvas_CanvasGraphics.context.imageSmoothingEnabled = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_smooth(c15);
								openfl__$internal_renderer_canvas_CanvasGraphics.context.drawImage(surface,rect.x,rect.y,rect.width,rect.height,-center.x * scale,-center.y * scale,rect.width * scale,rect.height * scale);
								openfl__$internal_renderer_canvas_CanvasGraphics.context.restore();
							}
							index += numValues;
						}
						if(useBlendAdd) openfl__$internal_renderer_canvas_CanvasGraphics.context.globalCompositeOperation = "source-over";
						break;
					default:
						data.skip(type);
					}
				}
			} catch( e ) { if( e != "__break__" ) throw e; }
			if(openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.get_length() > 0) openfl__$internal_renderer_canvas_CanvasGraphics.endFill();
			if(openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.get_length() > 0) openfl__$internal_renderer_canvas_CanvasGraphics.endStroke();
			data.destroy();
			graphics.__bitmap = openfl_display_BitmapData.fromCanvas(graphics.__canvas);
		}
		graphics.set___dirty(false);
	}
};
openfl__$internal_renderer_canvas_CanvasGraphics.renderMask = function(graphics,renderSession) {
	if(graphics.__commands.get_length() != 0) {
		openfl__$internal_renderer_canvas_CanvasGraphics.context = renderSession.context;
		var positionX = 0.0;
		var positionY = 0.0;
		var offsetX = 0;
		var offsetY = 0;
		var data = new openfl__$internal_renderer_DrawCommandReader(graphics.__commands);
		var _g = 0;
		var _g1 = graphics.__commands.types;
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			switch(type[1]) {
			case 3:
				var c = data.readCubicCurveTo();
				openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX1(c) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY1(c) - offsetY,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX2(c) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY2(c) - offsetY,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX(c) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorY(c) - offsetY);
				positionX = openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX(c);
				positionY = openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorY(c);
				break;
			case 4:
				var c1 = data.readCurveTo();
				openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlX(c1) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlY(c1) - offsetY,openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorX(c1) - offsetX,openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorY(c1) - offsetY);
				positionX = openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorX(c1);
				positionY = openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorY(c1);
				break;
			case 5:
				var c2 = data.readDrawCircle();
				openfl__$internal_renderer_canvas_CanvasGraphics.context.arc(openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_x(c2) - offsetX,openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_y(c2) - offsetY,openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_radius(c2),0,Math.PI * 2,true);
				break;
			case 6:
				var c3 = data.readDrawEllipse();
				var x = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_x(c3);
				var y = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_y(c3);
				var width = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_width(c3);
				var height = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_height(c3);
				x -= offsetX;
				y -= offsetY;
				var kappa = .5522848;
				var ox = width / 2 * kappa;
				var oy = height / 2 * kappa;
				var xe = x + width;
				var ye = y + height;
				var xm = x + width / 2;
				var ym = y + height / 2;
				openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(x,ym);
				openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(x,ym - oy,xm - ox,y,xm,y);
				openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(xm + ox,y,xe,ym - oy,xe,ym);
				openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(xe,ym + oy,xm + ox,ye,xm,ye);
				openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(xm - ox,ye,x,ym + oy,x,ym);
				break;
			case 8:
				var c4 = data.readDrawRect();
				openfl__$internal_renderer_canvas_CanvasGraphics.context.rect(openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c4) - offsetX,openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c4) - offsetY,openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width(c4),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height(c4));
				break;
			case 9:
				var c5 = data.readDrawRoundRect();
				openfl__$internal_renderer_canvas_CanvasGraphics.drawRoundRect(openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_x(c5) - offsetX,openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_y(c5) - offsetY,openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_width(c5),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_height(c5),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseWidth(c5),openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseHeight(c5));
				break;
			case 16:
				var c6 = data.readLineTo();
				openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x(c6) - offsetX,openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y(c6) - offsetY);
				positionX = openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x(c6);
				positionY = openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y(c6);
				break;
			case 17:
				var c7 = data.readMoveTo();
				openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c7) - offsetX,openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c7) - offsetY);
				positionX = openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c7);
				positionY = openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c7);
				break;
			default:
				data.skip(type);
			}
		}
		data.destroy();
	}
};
var openfl__$internal_renderer_canvas_CanvasMaskManager = function(renderSession) {
	openfl__$internal_renderer_AbstractMaskManager.call(this,renderSession);
};
$hxClasses["openfl._internal.renderer.canvas.CanvasMaskManager"] = openfl__$internal_renderer_canvas_CanvasMaskManager;
openfl__$internal_renderer_canvas_CanvasMaskManager.__name__ = ["openfl","_internal","renderer","canvas","CanvasMaskManager"];
openfl__$internal_renderer_canvas_CanvasMaskManager.__super__ = openfl__$internal_renderer_AbstractMaskManager;
openfl__$internal_renderer_canvas_CanvasMaskManager.prototype = $extend(openfl__$internal_renderer_AbstractMaskManager.prototype,{
	pushMask: function(mask) {
		var context = this.renderSession.context;
		context.save();
		var transform = mask.__getWorldTransform();
		context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);
		context.beginPath();
		mask.__renderCanvasMask(this.renderSession);
		context.clip();
	}
	,pushRect: function(rect,transform) {
		var context = this.renderSession.context;
		context.save();
		context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);
		context.beginPath();
		context.rect(rect.x,rect.y,rect.width,rect.height);
		context.clip();
	}
	,popMask: function() {
		this.renderSession.context.restore();
	}
	,popRect: function() {
		this.renderSession.context.restore();
	}
	,__class__: openfl__$internal_renderer_canvas_CanvasMaskManager
});
var openfl__$internal_renderer_canvas_CanvasRenderer = function(width,height,context) {
	openfl__$internal_renderer_AbstractRenderer.call(this,width,height);
	this.context = context;
	this.renderSession = new openfl__$internal_renderer_RenderSession();
	this.renderSession.context = context;
	this.renderSession.roundPixels = true;
	this.renderSession.renderer = this;
	this.renderSession.maskManager = new openfl__$internal_renderer_canvas_CanvasMaskManager(this.renderSession);
};
$hxClasses["openfl._internal.renderer.canvas.CanvasRenderer"] = openfl__$internal_renderer_canvas_CanvasRenderer;
openfl__$internal_renderer_canvas_CanvasRenderer.__name__ = ["openfl","_internal","renderer","canvas","CanvasRenderer"];
openfl__$internal_renderer_canvas_CanvasRenderer.__super__ = openfl__$internal_renderer_AbstractRenderer;
openfl__$internal_renderer_canvas_CanvasRenderer.prototype = $extend(openfl__$internal_renderer_AbstractRenderer.prototype,{
	render: function(stage) {
		this.context.setTransform(1,0,0,1,0,0);
		this.context.globalAlpha = 1;
		if(!stage.__transparent && stage.__clearBeforeRender) {
			this.context.fillStyle = stage.__colorString;
			this.context.fillRect(0,0,stage.stageWidth,stage.stageHeight);
		} else if(stage.__transparent && stage.__clearBeforeRender) this.context.clearRect(0,0,stage.stageWidth,stage.stageHeight);
		stage.__renderCanvas(this.renderSession);
	}
	,__class__: openfl__$internal_renderer_canvas_CanvasRenderer
});
var openfl__$internal_renderer_canvas_CanvasShape = function() { };
$hxClasses["openfl._internal.renderer.canvas.CanvasShape"] = openfl__$internal_renderer_canvas_CanvasShape;
openfl__$internal_renderer_canvas_CanvasShape.__name__ = ["openfl","_internal","renderer","canvas","CanvasShape"];
openfl__$internal_renderer_canvas_CanvasShape.render = function(shape,renderSession) {
	if(!shape.__renderable || shape.__worldAlpha <= 0) return;
	var graphics = shape.__graphics;
	if(graphics != null) {
		openfl__$internal_renderer_canvas_CanvasGraphics.render(graphics,renderSession);
		if(graphics.__canvas != null) {
			var context = renderSession.context;
			var scrollRect = shape.get_scrollRect();
			if(graphics.__bounds.width > 0 && graphics.__bounds.height > 0 && (scrollRect == null || scrollRect.width > 0 && scrollRect.height > 0)) {
				if(shape.__mask != null) renderSession.maskManager.pushMask(shape.__mask);
				context.globalAlpha = shape.__worldAlpha;
				var transform = shape.__renderTransform;
				if(renderSession.roundPixels) context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx | 0,transform.ty | 0); else context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);
				if(scrollRect == null) context.drawImage(graphics.__canvas,graphics.__bounds.x,graphics.__bounds.y); else context.drawImage(graphics.__canvas,Math.ceil(graphics.__bounds.x + scrollRect.x),Math.ceil(graphics.__bounds.y + scrollRect.y),scrollRect.width,scrollRect.height,Math.ceil(graphics.__bounds.x + scrollRect.x),Math.ceil(graphics.__bounds.y + scrollRect.y),scrollRect.width,scrollRect.height);
				if(shape.__mask != null) renderSession.maskManager.popMask();
			}
		}
	}
};
var openfl__$internal_renderer_canvas_CanvasTextField = function() { };
$hxClasses["openfl._internal.renderer.canvas.CanvasTextField"] = openfl__$internal_renderer_canvas_CanvasTextField;
openfl__$internal_renderer_canvas_CanvasTextField.__name__ = ["openfl","_internal","renderer","canvas","CanvasTextField"];
openfl__$internal_renderer_canvas_CanvasTextField.context = null;
openfl__$internal_renderer_canvas_CanvasTextField.disableInputMode = function(textEngine) {
};
openfl__$internal_renderer_canvas_CanvasTextField.enableInputMode = function(textEngine) {
	textEngine.__cursorPosition = -1;
	if(textEngine.__hiddenInput == null) {
		textEngine.__hiddenInput = window.document.createElement("input");
		var hiddenInput = textEngine.__hiddenInput;
		hiddenInput.type = "text";
		hiddenInput.style.position = "absolute";
		hiddenInput.style.opacity = "0";
		hiddenInput.style.color = "transparent";
		hiddenInput.style.left = "0px";
		hiddenInput.style.top = "50%";
		if(new EReg("(iPad|iPhone|iPod).*OS 8_","gi").match(window.navigator.userAgent)) {
			hiddenInput.style.fontSize = "0px";
			hiddenInput.style.width = "0px";
			hiddenInput.style.height = "0px";
		} else {
			hiddenInput.style.width = "1px";
			hiddenInput.style.height = "1px";
		}
		hiddenInput.style.pointerEvents = "none";
		hiddenInput.style.zIndex = "-10000000";
		if(textEngine.maxChars > 0) hiddenInput.maxLength = textEngine.maxChars;
		window.document.body.appendChild(hiddenInput);
		hiddenInput.value = textEngine.text;
	}
};
openfl__$internal_renderer_canvas_CanvasTextField.render = function(textField,renderSession) {
	if(textField.__dirty) {
		var textEngine = textField.__textEngine;
		textField.__updateLayout();
		if((textEngine.text == null || textEngine.text == "") && !textEngine.background && !textEngine.border && !textEngine.__hasFocus || (textEngine.width <= 0 || textEngine.height <= 0) && textEngine.autoSize != 2) {
			textField.__graphics.__canvas = null;
			textField.__graphics.__context = null;
			textField.__graphics.set___dirty(false);
			textField.__dirty = false;
		} else {
			var bounds = textEngine.bounds;
			if(textField.__graphics == null || textField.__graphics.__canvas == null) {
				if(textField.__graphics == null) textField.__graphics = new openfl_display_Graphics();
				textField.__graphics.__canvas = window.document.createElement("canvas");
				textField.__graphics.__context = textField.__graphics.__canvas.getContext("2d");
				textField.__graphics.__bounds = new openfl_geom_Rectangle(0,0,bounds.width,bounds.height);
			}
			var graphics = textField.__graphics;
			openfl__$internal_renderer_canvas_CanvasTextField.context = graphics.__context;
			if(textEngine.text != null && textEngine.text != "" || textEngine.__hasFocus) {
				var text = textEngine.text;
				if(textEngine.displayAsPassword) {
					var length = text.length;
					var mask = "";
					var _g = 0;
					while(_g < length) {
						var i = _g++;
						mask += "*";
					}
					text = mask;
				}
				graphics.__canvas.width = Math.ceil(bounds.width);
				graphics.__canvas.height = Math.ceil(bounds.height);
				if(textEngine.antiAliasType != 0 || textEngine.gridFitType != 1) {
					graphics.__context.mozImageSmoothingEnabled = true;
					graphics.__context.msImageSmoothingEnabled = true;
					graphics.__context.imageSmoothingEnabled = true;
				} else {
					graphics.__context.mozImageSmoothingEnabled = false;
					graphics.__context.msImageSmoothingEnabled = false;
					graphics.__context.imageSmoothingEnabled = false;
				}
				if(textEngine.border || textEngine.background) {
					openfl__$internal_renderer_canvas_CanvasTextField.context.rect(0.5,0.5,bounds.width - 1,bounds.height - 1);
					if(textEngine.background) {
						openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#" + StringTools.hex(textEngine.backgroundColor,6);
						openfl__$internal_renderer_canvas_CanvasTextField.context.fill();
					}
					if(textEngine.border) {
						openfl__$internal_renderer_canvas_CanvasTextField.context.lineWidth = 1;
						openfl__$internal_renderer_canvas_CanvasTextField.context.strokeStyle = "#" + StringTools.hex(textEngine.borderColor,6);
						openfl__$internal_renderer_canvas_CanvasTextField.context.stroke();
					}
				}
				openfl__$internal_renderer_canvas_CanvasTextField.context.textBaseline = "top";
				openfl__$internal_renderer_canvas_CanvasTextField.context.textAlign = "start";
				var scrollX = -textField.get_scrollH();
				var scrollY = 0.0;
				var _g1 = 0;
				var _g2 = textField.get_scrollV() - 1;
				while(_g1 < _g2) {
					var i1 = _g1++;
					scrollY -= textEngine.lineHeights[i1];
				}
				var advance;
				var offsetY = 0.0;
				var applyHack = new EReg("(iPad|iPhone|iPod|Firefox)","g").match(window.navigator.userAgent);
				var _g3 = 0;
				var _g11 = textEngine.layoutGroups;
				while(_g3 < _g11.length) {
					var group = _g11[_g3];
					++_g3;
					if(group.lineIndex < textField.get_scrollV() - 1) continue;
					if(group.lineIndex > textField.get_scrollV() + textEngine.bottomScrollV - 2) break;
					openfl__$internal_renderer_canvas_CanvasTextField.context.font = openfl__$internal_text_TextEngine.getFont(group.format);
					openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#" + StringTools.hex(group.format.color,6);
					if(applyHack) offsetY = group.format.size * 0.185;
					openfl__$internal_renderer_canvas_CanvasTextField.context.fillText(text.substring(group.startIndex,group.endIndex),group.offsetX + scrollX,group.offsetY + offsetY + scrollY);
					if(textField.__caretIndex > -1 && textEngine.selectable) {
						if(textField.__selectionIndex == textField.__caretIndex) {
							if(textField.__showCursor && group.startIndex <= textField.__caretIndex && group.endIndex >= textField.__caretIndex) {
								advance = 0.0;
								var _g31 = 0;
								var _g21 = textField.__caretIndex - group.startIndex;
								while(_g31 < _g21) {
									var i2 = _g31++;
									if(group.advances.length <= i2) break;
									advance += group.advances[i2];
								}
								openfl__$internal_renderer_canvas_CanvasTextField.context.fillRect(group.offsetX + advance,group.offsetY,1,group.height);
							}
						} else if(group.startIndex <= textField.__caretIndex && group.endIndex >= textField.__caretIndex || group.startIndex <= textField.__selectionIndex && group.endIndex >= textField.__selectionIndex) {
							var selectionStart = Std["int"](Math.min(textField.__selectionIndex,textField.__caretIndex));
							var selectionEnd = Std["int"](Math.max(textField.__selectionIndex,textField.__caretIndex));
							if(group.startIndex > selectionStart) selectionStart = group.startIndex;
							if(group.endIndex < selectionEnd) selectionEnd = group.endIndex;
							var start;
							var end;
							start = textField.getCharBoundaries(selectionStart);
							if(selectionEnd >= textEngine.text.length) {
								end = textField.getCharBoundaries(textEngine.text.length - 1);
								end.x += end.width + 2;
							} else end = textField.getCharBoundaries(selectionEnd);
							if(start != null && end != null) {
								openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#000000";
								openfl__$internal_renderer_canvas_CanvasTextField.context.fillRect(start.x,start.y,end.x - start.x,group.height);
								openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#FFFFFF";
								openfl__$internal_renderer_canvas_CanvasTextField.context.fillText(text.substring(selectionStart,selectionEnd),scrollX + start.x,group.offsetY + offsetY + scrollY);
							}
						}
					}
				}
			} else {
				graphics.__canvas.width = Math.ceil(bounds.width);
				graphics.__canvas.height = Math.ceil(bounds.height);
				if(textEngine.border || textEngine.background) {
					if(textEngine.border) openfl__$internal_renderer_canvas_CanvasTextField.context.rect(0.5,0.5,bounds.width - 1,bounds.height - 1); else openfl__$internal_renderer_canvas_CanvasTextField.context.rect(0,0,bounds.width,bounds.height);
					if(textEngine.background) {
						openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#" + StringTools.hex(textEngine.backgroundColor,6);
						openfl__$internal_renderer_canvas_CanvasTextField.context.fill();
					}
					if(textEngine.border) {
						openfl__$internal_renderer_canvas_CanvasTextField.context.lineWidth = 1;
						openfl__$internal_renderer_canvas_CanvasTextField.context.lineCap = "square";
						openfl__$internal_renderer_canvas_CanvasTextField.context.strokeStyle = "#" + StringTools.hex(textEngine.borderColor,6);
						openfl__$internal_renderer_canvas_CanvasTextField.context.stroke();
					}
				}
			}
			graphics.__bitmap = openfl_display_BitmapData.fromCanvas(textField.__graphics.__canvas);
			textField.__dirty = false;
			graphics.set___dirty(false);
		}
	}
};
var openfl__$internal_renderer_console_ConsoleRenderer = function(width,height,ctx) {
	openfl__$internal_renderer_AbstractRenderer.call(this,width,height);
	throw new js__$Boot_HaxeError("ConsoleRenderer not supported");
};
$hxClasses["openfl._internal.renderer.console.ConsoleRenderer"] = openfl__$internal_renderer_console_ConsoleRenderer;
openfl__$internal_renderer_console_ConsoleRenderer.__name__ = ["openfl","_internal","renderer","console","ConsoleRenderer"];
openfl__$internal_renderer_console_ConsoleRenderer.__super__ = openfl__$internal_renderer_AbstractRenderer;
openfl__$internal_renderer_console_ConsoleRenderer.prototype = $extend(openfl__$internal_renderer_AbstractRenderer.prototype,{
	render: function(stage) {
	}
	,__class__: openfl__$internal_renderer_console_ConsoleRenderer
});
var openfl__$internal_renderer_dom_DOMBitmap = function() { };
$hxClasses["openfl._internal.renderer.dom.DOMBitmap"] = openfl__$internal_renderer_dom_DOMBitmap;
openfl__$internal_renderer_dom_DOMBitmap.__name__ = ["openfl","_internal","renderer","dom","DOMBitmap"];
openfl__$internal_renderer_dom_DOMBitmap.render = function(bitmap,renderSession) {
	if(bitmap.stage != null && bitmap.__worldVisible && bitmap.__renderable && bitmap.bitmapData != null && bitmap.bitmapData.__isValid) {
		if(bitmap.bitmapData.image.buffer.__srcImage != null) openfl__$internal_renderer_dom_DOMBitmap.renderImage(bitmap,renderSession); else openfl__$internal_renderer_dom_DOMBitmap.renderCanvas(bitmap,renderSession);
	} else {
		if(bitmap.__image != null) {
			renderSession.element.removeChild(bitmap.__image);
			bitmap.__image = null;
			bitmap.__style = null;
		}
		if(bitmap.__canvas != null) {
			renderSession.element.removeChild(bitmap.__canvas);
			bitmap.__canvas = null;
			bitmap.__style = null;
		}
	}
};
openfl__$internal_renderer_dom_DOMBitmap.renderCanvas = function(bitmap,renderSession) {
	if(bitmap.__image != null) {
		renderSession.element.removeChild(bitmap.__image);
		bitmap.__image = null;
	}
	if(bitmap.__canvas == null) {
		bitmap.__canvas = window.document.createElement("canvas");
		bitmap.__context = bitmap.__canvas.getContext("2d");
		if(!bitmap.smoothing) {
			bitmap.__context.mozImageSmoothingEnabled = false;
			bitmap.__context.msImageSmoothingEnabled = false;
			bitmap.__context.imageSmoothingEnabled = false;
		}
		openfl__$internal_renderer_dom_DOMRenderer.initializeElement(bitmap,bitmap.__canvas,renderSession);
	}
	bitmap.bitmapData.__sync();
	bitmap.__canvas.width = bitmap.bitmapData.width;
	bitmap.__canvas.height = bitmap.bitmapData.height;
	bitmap.__context.globalAlpha = bitmap.__worldAlpha;
	bitmap.__context.drawImage(bitmap.bitmapData.image.buffer.__srcCanvas,0,0);
	openfl__$internal_renderer_dom_DOMRenderer.applyStyle(bitmap,renderSession,true,false,true);
};
openfl__$internal_renderer_dom_DOMBitmap.renderImage = function(bitmap,renderSession) {
	if(bitmap.__canvas != null) {
		renderSession.element.removeChild(bitmap.__canvas);
		bitmap.__canvas = null;
	}
	if(bitmap.__image == null) {
		bitmap.__image = window.document.createElement("img");
		bitmap.__image.src = bitmap.bitmapData.image.buffer.__srcImage.src;
		openfl__$internal_renderer_dom_DOMRenderer.initializeElement(bitmap,bitmap.__image,renderSession);
	}
	openfl__$internal_renderer_dom_DOMRenderer.applyStyle(bitmap,renderSession,true,true,true);
};
var openfl__$internal_renderer_dom_DOMMaskManager = function(renderSession) {
	openfl__$internal_renderer_AbstractMaskManager.call(this,renderSession);
};
$hxClasses["openfl._internal.renderer.dom.DOMMaskManager"] = openfl__$internal_renderer_dom_DOMMaskManager;
openfl__$internal_renderer_dom_DOMMaskManager.__name__ = ["openfl","_internal","renderer","dom","DOMMaskManager"];
openfl__$internal_renderer_dom_DOMMaskManager.__super__ = openfl__$internal_renderer_AbstractMaskManager;
openfl__$internal_renderer_dom_DOMMaskManager.prototype = $extend(openfl__$internal_renderer_AbstractMaskManager.prototype,{
	pushMask: function(mask) {
	}
	,pushRect: function(rect,transform) {
	}
	,popMask: function() {
	}
	,__class__: openfl__$internal_renderer_dom_DOMMaskManager
});
var openfl__$internal_renderer_dom_DOMRenderer = function(width,height,element) {
	openfl__$internal_renderer_AbstractRenderer.call(this,width,height);
	this.element = element;
	this.renderSession = new openfl__$internal_renderer_RenderSession();
	this.renderSession.element = element;
	this.renderSession.roundPixels = true;
	var prefix = (function () {
		  var styles = window.getComputedStyle(document.documentElement, ''),
			pre = (Array.prototype.slice
			  .call(styles)
			  .join('') 
			  .match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o'])
			)[1],
			dom = ('WebKit|Moz|MS|O').match(new RegExp('(' + pre + ')', 'i'))[1];
		  return {
			dom: dom,
			lowercase: pre,
			css: '-' + pre + '-',
			js: pre[0].toUpperCase() + pre.substr(1)
		  };
		})();
	this.renderSession.vendorPrefix = prefix.lowercase;
	if(prefix.lowercase == "webkit") this.renderSession.transformProperty = "-webkit-transform"; else this.renderSession.transformProperty = "transform";
	if(prefix.lowercase == "webkit") this.renderSession.transformOriginProperty = "-webkit-transform-origin"; else this.renderSession.transformOriginProperty = "transform-origin";
	this.renderSession.maskManager = new openfl__$internal_renderer_dom_DOMMaskManager(this.renderSession);
	this.renderSession.renderer = this;
};
$hxClasses["openfl._internal.renderer.dom.DOMRenderer"] = openfl__$internal_renderer_dom_DOMRenderer;
openfl__$internal_renderer_dom_DOMRenderer.__name__ = ["openfl","_internal","renderer","dom","DOMRenderer"];
openfl__$internal_renderer_dom_DOMRenderer.applyStyle = function(displayObject,renderSession,setTransform,setAlpha,setClip) {
	var style = displayObject.__style;
	if(setTransform && displayObject.__worldTransformChanged) style.setProperty(renderSession.transformProperty,displayObject.__worldTransform.to3DString(renderSession.roundPixels),null);
	if(displayObject.__worldZ != ++renderSession.z) {
		displayObject.__worldZ = renderSession.z;
		style.setProperty("z-index",displayObject.__worldZ == null?"null":"" + displayObject.__worldZ,null);
	}
	if(setAlpha && displayObject.__worldAlphaChanged) {
		if(displayObject.__worldAlpha < 1) style.setProperty("opacity",displayObject.__worldAlpha == null?"null":"" + displayObject.__worldAlpha,null); else style.removeProperty("opacity");
	}
	if(setClip && displayObject.__worldClipChanged) {
		if(displayObject.__worldClip == null) style.removeProperty("clip"); else {
			var clip = openfl_geom_Rectangle.__temp;
			var matrix = openfl_geom_Matrix.__temp;
			matrix.copyFrom(displayObject.__worldTransform);
			matrix.invert();
			displayObject.__worldClip.__transform(clip,matrix);
			style.setProperty("clip","rect(" + clip.y + "px, " + clip.get_right() + "px, " + clip.get_bottom() + "px, " + clip.x + "px)",null);
		}
	}
};
openfl__$internal_renderer_dom_DOMRenderer.initializeElement = function(displayObject,element,renderSession) {
	var style = displayObject.__style = element.style;
	style.setProperty("position","absolute",null);
	style.setProperty("top","0",null);
	style.setProperty("left","0",null);
	style.setProperty(renderSession.transformOriginProperty,"0 0 0",null);
	renderSession.element.appendChild(element);
	displayObject.__worldAlphaChanged = true;
	displayObject.__worldClipChanged = true;
	displayObject.__worldTransformChanged = true;
	displayObject.__worldVisibleChanged = true;
	displayObject.__worldZ = -1;
};
openfl__$internal_renderer_dom_DOMRenderer.__super__ = openfl__$internal_renderer_AbstractRenderer;
openfl__$internal_renderer_dom_DOMRenderer.prototype = $extend(openfl__$internal_renderer_AbstractRenderer.prototype,{
	render: function(stage) {
		this.element.style.background = stage.__colorString;
		this.renderSession.z = 1;
		stage.__renderDOM(this.renderSession);
	}
	,__class__: openfl__$internal_renderer_dom_DOMRenderer
});
var openfl__$internal_renderer_dom_DOMShape = function() { };
$hxClasses["openfl._internal.renderer.dom.DOMShape"] = openfl__$internal_renderer_dom_DOMShape;
openfl__$internal_renderer_dom_DOMShape.__name__ = ["openfl","_internal","renderer","dom","DOMShape"];
openfl__$internal_renderer_dom_DOMShape.render = function(shape,renderSession) {
	var graphics = shape.__graphics;
	if(shape.stage != null && shape.__worldVisible && shape.__renderable && graphics != null) {
		if(graphics.__dirty || shape.__worldAlphaChanged || shape.__canvas == null && graphics.__canvas != null) {
			openfl__$internal_renderer_canvas_CanvasGraphics.render(graphics,renderSession);
			if(graphics.__canvas != null) {
				if(shape.__canvas == null) {
					shape.__canvas = window.document.createElement("canvas");
					shape.__context = shape.__canvas.getContext("2d");
					openfl__$internal_renderer_dom_DOMRenderer.initializeElement(shape,shape.__canvas,renderSession);
				}
				shape.__canvas.width = graphics.__canvas.width;
				shape.__canvas.height = graphics.__canvas.height;
				shape.__context.globalAlpha = shape.__worldAlpha;
				shape.__context.drawImage(graphics.__canvas,0,0);
			} else if(shape.__canvas != null) {
				renderSession.element.removeChild(shape.__canvas);
				shape.__canvas = null;
				shape.__style = null;
			}
		}
		if(shape.__canvas != null) {
			if(shape.__worldTransformChanged || graphics.__transformDirty) {
				graphics.__transformDirty = false;
				var transform = openfl_geom_Matrix.__temp;
				transform.identity();
				transform.translate(graphics.__bounds.x,graphics.__bounds.y);
				transform.concat(shape.__worldTransform);
				shape.__style.setProperty(renderSession.transformProperty,renderSession.roundPixels?"matrix3d(" + transform.a + ", " + transform.b + ", 0, 0, " + transform.c + ", " + transform.d + ", 0, 0, 0, 0, 1, 0, " + (transform.tx | 0) + ", " + (transform.ty | 0) + ", 0, 1)":"matrix3d(" + transform.a + ", " + transform.b + ", 0, 0, " + transform.c + ", " + transform.d + ", 0, 0, 0, 0, 1, 0, " + transform.tx + ", " + transform.ty + ", 0, 1)",null);
			}
			openfl__$internal_renderer_dom_DOMRenderer.applyStyle(shape,renderSession,false,false,true);
		}
	} else if(shape.__canvas != null) {
		renderSession.element.removeChild(shape.__canvas);
		shape.__canvas = null;
		shape.__style = null;
	}
};
var openfl__$internal_renderer_dom_DOMTextField = function() { };
$hxClasses["openfl._internal.renderer.dom.DOMTextField"] = openfl__$internal_renderer_dom_DOMTextField;
openfl__$internal_renderer_dom_DOMTextField.__name__ = ["openfl","_internal","renderer","dom","DOMTextField"];
openfl__$internal_renderer_dom_DOMTextField.measureText = function(textField) {
	var textEngine = textField.__textEngine;
	var div = textField.__div;
	if(div == null) {
		div = window.document.createElement("div");
		div.innerHTML = new EReg("\n","g").replace(textEngine.text,"<br>");
		div.style.setProperty("font",openfl__$internal_text_TextEngine.getFont(textField.__textFormat),null);
		div.style.setProperty("pointer-events","none",null);
		div.style.position = "absolute";
		div.style.top = "110%";
		window.document.body.appendChild(div);
	}
	textEngine.__measuredWidth = div.clientWidth;
	if(textField.__div == null) div.style.width = Std.string(textEngine.width - 4) + "px";
	textEngine.__measuredHeight = div.clientHeight;
	if(textField.__div == null) window.document.body.removeChild(div);
};
openfl__$internal_renderer_dom_DOMTextField.render = function(textField,renderSession) {
	var textEngine = textField.__textEngine;
	if(textField.stage != null && textField.__worldVisible && textField.__renderable) {
		if(textField.__dirty || textField.__div == null) {
			if(textEngine.text != "" || textEngine.background || textEngine.border || textEngine.type == 1) {
				if(textField.__div == null) {
					textField.__div = window.document.createElement("div");
					openfl__$internal_renderer_dom_DOMRenderer.initializeElement(textField,textField.__div,renderSession);
					textField.__style.setProperty("outline","none",null);
					textField.__div.addEventListener("input",function(event) {
						event.preventDefault();
						if(textField.get_htmlText() != textField.__div.innerHTML) {
							textField.set_htmlText(textField.__div.innerHTML);
							textField.__dirty = false;
						}
					},true);
				}
				if(textEngine.selectable) textField.__style.setProperty("cursor","text",null); else textField.__style.setProperty("cursor","inherit",null);
				textField.__div.contentEditable = textEngine.type == 1;
				var style = textField.__style;
				textField.__div.innerHTML = textEngine.text;
				if(textEngine.background) style.setProperty("background-color","#" + StringTools.hex(textEngine.backgroundColor,6),null); else style.removeProperty("background-color");
				if(textEngine.border) style.setProperty("border","solid 1px #" + StringTools.hex(textEngine.borderColor,6),null); else style.removeProperty("border");
				style.setProperty("font",openfl__$internal_text_TextEngine.getFont(textField.__textFormat),null);
				style.setProperty("color","#" + StringTools.hex(textField.__textFormat.color,6),null);
				if(textEngine.autoSize != 2) style.setProperty("width","auto",null); else style.setProperty("width",textEngine.width + "px",null);
				style.setProperty("height",textEngine.height + "px",null);
				var _g = textField.__textFormat.align;
				switch(_g) {
				case 0:
					style.setProperty("text-align","center",null);
					break;
				case 4:
					style.setProperty("text-align","right",null);
					break;
				default:
					style.setProperty("text-align","left",null);
				}
				textField.__dirty = false;
			} else if(textField.__div != null) {
				renderSession.element.removeChild(textField.__div);
				textField.__div = null;
			}
		}
		if(textField.__div != null) openfl__$internal_renderer_dom_DOMRenderer.applyStyle(textField,renderSession,true,true,false);
	} else if(textField.__div != null) {
		renderSession.element.removeChild(textField.__div);
		textField.__div = null;
		textField.__style = null;
	}
};
var openfl__$internal_renderer_opengl_GLBitmap = function() { };
$hxClasses["openfl._internal.renderer.opengl.GLBitmap"] = openfl__$internal_renderer_opengl_GLBitmap;
openfl__$internal_renderer_opengl_GLBitmap.__name__ = ["openfl","_internal","renderer","opengl","GLBitmap"];
openfl__$internal_renderer_opengl_GLBitmap.render = function(bitmap,renderSession) {
	if(!bitmap.__renderable || bitmap.__worldAlpha <= 0 || bitmap.bitmapData == null || !bitmap.bitmapData.__isValid) return;
	renderSession.spriteBatch.renderBitmapData(bitmap.bitmapData,bitmap.smoothing,bitmap.__renderTransform,bitmap.__worldColorTransform,bitmap.__worldAlpha,bitmap.__blendMode,bitmap.__shader,bitmap.pixelSnapping);
};
openfl__$internal_renderer_opengl_GLBitmap.pushFramebuffer = function(renderSession,texture,viewPort,smoothing,transparent,clearBuffer,powerOfTwo) {
	if(powerOfTwo == null) powerOfTwo = true;
	if(clearBuffer == null) clearBuffer = false;
	if(transparent == null) transparent = true;
	var gl = renderSession.gl;
	if(gl == null) return null;
	var renderer = renderSession.renderer;
	var spritebatch = renderSession.spriteBatch;
	var x = viewPort.x | 0;
	var y = viewPort.y | 0;
	var width = viewPort.width | 0;
	var height = viewPort.height | 0;
	spritebatch.finish();
	if(openfl__$internal_renderer_opengl_GLBitmap.fbData.length <= 0) openfl__$internal_renderer_opengl_GLBitmap.fbData.push({ texture : null, viewPort : null, transparent : renderer.transparent});
	if(texture == null) texture = new openfl__$internal_renderer_opengl_utils_PingPongTexture(gl,width,height,smoothing,powerOfTwo);
	texture.resize(width,height);
	renderer.transparent = transparent;
	renderSession.maskManager.saveState();
	gl.bindFramebuffer(gl.FRAMEBUFFER,(texture.__swapped?texture.__texture1:texture.__texture0).frameBuffer);
	renderer.setViewport(x,y,width,height);
	gl.colorMask(true,true,true,true);
	renderSession.blendModeManager.setBlendMode(10);
	if(clearBuffer) (texture.__swapped?texture.__texture1:texture.__texture0).clear(0,0,0,0,null);
	openfl__$internal_renderer_opengl_GLBitmap.fbData.push({ texture : texture, viewPort : viewPort, transparent : transparent});
	return texture;
};
openfl__$internal_renderer_opengl_GLBitmap.drawBitmapDrawable = function(renderSession,target,source,matrix,colorTransform,blendMode,clipRect) {
	var data = openfl__$internal_renderer_opengl_GLBitmap.fbData[openfl__$internal_renderer_opengl_GLBitmap.fbData.length - 1];
	if(data == null) throw new js__$Boot_HaxeError("No data to draw to");
	var gl = renderSession.gl;
	if(gl == null) return;
	var viewPort = data.viewPort;
	var renderer = renderSession.renderer;
	var spritebatch = renderSession.spriteBatch;
	var drawTarget = target != null;
	var tmpRect;
	if(clipRect == null) tmpRect = new openfl_geom_Rectangle(viewPort.x,viewPort.y,viewPort.width,viewPort.height); else tmpRect = clipRect.clone();
	spritebatch.begin(renderSession,drawTarget?null:tmpRect);
	if(drawTarget) {
		target.__worldTransform.identity();
		openfl__$internal_renderer_opengl_GLBitmap.flipMatrix(target.__worldTransform,viewPort.height);
		target.__renderGL(renderSession);
		spritebatch.stop();
		if(target.__texture != null) gl.deleteTexture(target.__texture);
		target.__texture = null;
		spritebatch.start(tmpRect);
	}
	var ctCache = source.__worldColorTransform;
	var blendModeCache = source.__blendMode;
	var cached = source.__cacheAsBitmap;
	var m;
	if(matrix != null) m = matrix.clone(); else m = new openfl_geom_Matrix();
	openfl__$internal_renderer_opengl_GLBitmap.flipMatrix(m,viewPort.height);
	if(colorTransform != null) source.__worldColorTransform = colorTransform; else source.__worldColorTransform = new openfl_geom_ColorTransform();
	source.__blendMode = blendMode;
	openfl_display_DisplayObject.__cacheAsBitmapMode = true;
	source.__updateTransforms(m);
	source.__updateChildren(false);
	source.__cacheAsBitmap = false;
	source.__renderGL(renderSession);
	source.__cacheAsBitmap = cached;
	source.__worldColorTransform = ctCache;
	source.__blendMode = blendModeCache;
	openfl_display_DisplayObject.__cacheAsBitmapMode = false;
	source.__updateTransforms();
	source.__updateChildren(false);
};
openfl__$internal_renderer_opengl_GLBitmap.popFramebuffer = function(renderSession,image) {
	var gl = renderSession.gl;
	if(gl == null) return;
	renderSession.spriteBatch.finish();
	openfl__$internal_renderer_opengl_GLBitmap.fbData.pop();
	var data = openfl__$internal_renderer_opengl_GLBitmap.fbData[openfl__$internal_renderer_opengl_GLBitmap.fbData.length - 1];
	if(data == null) throw new js__$Boot_HaxeError("oh");
	var x;
	var y;
	var width;
	var height;
	if(data.viewPort == null) {
		x = y = 0;
		width = renderSession.renderer.width;
		height = renderSession.renderer.height;
	} else {
		x = Math.floor(data.viewPort.x);
		y = Math.floor(data.viewPort.y);
		width = Math.ceil(data.viewPort.width);
		height = Math.ceil(data.viewPort.height);
	}
	if(image != null) {
		if(image.width != width || image.height != height) image.resize(width,height);
		gl.readPixels(x,y,width,height,gl.RGBA,gl.UNSIGNED_BYTE,image.buffer.data);
		image.dirty = false;
		image.set_premultiplied(true);
	}
	gl.bindFramebuffer(gl.FRAMEBUFFER,data.texture == null?renderSession.defaultFramebuffer:data.texture.get_framebuffer());
	renderSession.renderer.setViewport(x,y,width,height);
	renderSession.renderer.transparent = data.transparent;
	renderSession.maskManager.restoreState();
};
openfl__$internal_renderer_opengl_GLBitmap.flipMatrix = function(m,height) {
	var tx = m.tx;
	var ty = m.ty;
	m.tx = 0;
	m.ty = 0;
	m.scale(1,-1);
	m.translate(0,height);
	m.tx += tx;
	m.ty -= ty;
};
var openfl__$internal_renderer_opengl_GLRenderer = function(width,height,gl,transparent,antialias,preserveDrawingBuffer) {
	if(preserveDrawingBuffer == null) preserveDrawingBuffer = false;
	if(antialias == null) antialias = false;
	if(transparent == null) transparent = false;
	if(height == null) height = 600;
	if(width == null) width = 800;
	this.vpHeight = 0;
	this.vpWidth = 0;
	this.vpY = 0;
	this.vpX = 0;
	openfl__$internal_renderer_AbstractRenderer.call(this,width,height);
	this.transparent = transparent;
	this.preserveDrawingBuffer = preserveDrawingBuffer;
	this.width = width;
	this.height = height;
	this.viewport = new openfl_geom_Rectangle();
	this.options = { alpha : transparent, antialias : antialias, premultipliedAlpha : transparent, stencil : true, preserveDrawingBuffer : preserveDrawingBuffer};
	this._glContextId = openfl__$internal_renderer_opengl_GLRenderer.glContextId++;
	this.gl = gl;
	this.defaultFramebuffer = null;
	openfl__$internal_renderer_opengl_GLRenderer.glContexts[this._glContextId] = gl;
	this.projectionMatrix = new openfl_geom_Matrix();
	this.projection = new openfl_geom_Point();
	this.projection.x = this.width / 2;
	this.projection.y = -this.height / 2;
	this.offset = new openfl_geom_Point(0,0);
	this.resize(this.width,this.height);
	this.contextLost = false;
	this.shaderManager = new openfl__$internal_renderer_opengl_utils_ShaderManager(gl);
	this.spriteBatch = new openfl__$internal_renderer_opengl_utils_SpriteBatch(gl);
	this.filterManager = new openfl__$internal_renderer_opengl_utils_FilterManager(gl,this.transparent);
	this.stencilManager = new openfl__$internal_renderer_opengl_utils_StencilManager(gl);
	this.blendModeManager = new openfl__$internal_renderer_opengl_utils_BlendModeManager(gl);
	this.renderSession = new openfl__$internal_renderer_RenderSession();
	this.renderSession.gl = this.gl;
	this.renderSession.drawCount = 0;
	this.renderSession.shaderManager = this.shaderManager;
	this.renderSession.filterManager = this.filterManager;
	this.renderSession.blendModeManager = this.blendModeManager;
	this.renderSession.spriteBatch = this.spriteBatch;
	this.renderSession.stencilManager = this.stencilManager;
	this.renderSession.renderer = this;
	this.renderSession.defaultFramebuffer = this.defaultFramebuffer;
	this.renderSession.projectionMatrix = this.projectionMatrix;
	this.maskManager = new openfl__$internal_renderer_opengl_utils_GLMaskManager(this.renderSession);
	this.renderSession.maskManager = this.maskManager;
	this.shaderManager.setShader(this.shaderManager.defaultShader);
	gl.disable(gl.DEPTH_TEST);
	gl.disable(gl.CULL_FACE);
	gl.enable(gl.BLEND);
	gl.colorMask(true,true,true,this.transparent);
};
$hxClasses["openfl._internal.renderer.opengl.GLRenderer"] = openfl__$internal_renderer_opengl_GLRenderer;
openfl__$internal_renderer_opengl_GLRenderer.__name__ = ["openfl","_internal","renderer","opengl","GLRenderer"];
openfl__$internal_renderer_opengl_GLRenderer.renderBitmap = function(shape,renderSession,smooth) {
	if(smooth == null) smooth = true;
	if(!shape.__renderable || shape.__worldAlpha <= 0) return;
	if(shape.__graphics == null || shape.__graphics.__bitmap == null) return;
	var rect = openfl_geom_Rectangle.__temp;
	var matrix = openfl_geom_Matrix.__temp;
	rect.setEmpty();
	matrix.identity();
	shape.__getBounds(rect,matrix);
	var bitmap = shape.__graphics.__bitmap;
	matrix.translate(shape.__graphics.__bounds.x,shape.__graphics.__bounds.y);
	matrix.concat(shape.__renderTransform);
	renderSession.spriteBatch.renderBitmapData(bitmap,smooth,matrix,shape.__worldColorTransform,shape.__worldAlpha,shape.__blendMode,null,0);
};
openfl__$internal_renderer_opengl_GLRenderer.__super__ = openfl__$internal_renderer_AbstractRenderer;
openfl__$internal_renderer_opengl_GLRenderer.prototype = $extend(openfl__$internal_renderer_AbstractRenderer.prototype,{
	destroy: function() {
		openfl__$internal_renderer_opengl_GLRenderer.glContexts[this._glContextId] = null;
		this.projection = null;
		this.offset = null;
		this.shaderManager.destroy();
		this.spriteBatch.destroy();
		this.maskManager.destroy();
		this.filterManager.destroy();
		this.shaderManager = null;
		this.spriteBatch = null;
		this.maskManager = null;
		this.filterManager = null;
		this.gl = null;
		this.renderSession = null;
	}
	,setViewport: function(x,y,width,height) {
		if(!(this.vpX == x && this.vpY == y && this.vpWidth == width && this.vpHeight == height)) {
			this.vpX = x;
			this.vpY = y;
			this.vpWidth = width;
			this.vpHeight = height;
			this.gl.viewport(x,y,width,height);
			this.setOrtho(x,y,width,height);
			this.viewport.setTo(x,y,width,height);
		}
	}
	,setOrtho: function(x,y,width,height) {
		var o = this.projectionMatrix;
		o.identity();
		o.a = 1 / width * 2;
		o.d = -1 / height * 2;
		o.tx = -1 - x * o.a;
		o.ty = 1 - y * o.d;
	}
	,handleContextLost: function(event) {
		event.preventDefault();
		this.contextLost = true;
	}
	,handleContextRestored: function() {
		var gl = this.gl;
		openfl__$internal_renderer_opengl_GLRenderer.glContextId++;
		this.shaderManager.setContext(gl);
		this.spriteBatch.setContext(gl);
		this.maskManager.setContext(gl);
		this.filterManager.setContext(gl);
		this.renderSession.gl = gl;
		this.defaultFramebuffer = null;
		gl.disable(gl.DEPTH_TEST);
		gl.disable(gl.CULL_FACE);
		gl.enable(gl.BLEND);
		gl.colorMask(true,true,true,this.transparent);
		this.setViewport(0,0,this.width,this.height);
		this.contextLost = false;
	}
	,render: function(stage) {
		if(this.contextLost) return;
		var gl = this.gl;
		this.setViewport(0,0,this.width,this.height);
		gl.bindFramebuffer(gl.FRAMEBUFFER,this.defaultFramebuffer);
		if(this.transparent) gl.clearColor(0,0,0,0); else gl.clearColor(stage.__colorSplit[0],stage.__colorSplit[1],stage.__colorSplit[2],1);
		gl.clear(gl.COLOR_BUFFER_BIT);
		this.renderDisplayObject(stage,this.projection);
	}
	,renderDisplayObject: function(displayObject,projection,buffer) {
		this.renderSession.blendModeManager.setBlendMode(10);
		this.renderSession.drawCount = 0;
		this.renderSession.currentBlendMode = null;
		this.spriteBatch.begin(this.renderSession);
		this.filterManager.begin(this.renderSession,buffer);
		displayObject.__renderGL(this.renderSession);
		this.spriteBatch.finish();
	}
	,resize: function(width,height) {
		this.width = width;
		this.height = height;
		openfl__$internal_renderer_AbstractRenderer.prototype.resize.call(this,width,height);
		this.setViewport(0,0,width,height);
		this.projection.x = width / 2;
		this.projection.y = -height / 2;
	}
	,__class__: openfl__$internal_renderer_opengl_GLRenderer
});
var openfl__$internal_renderer_opengl_shaders2_Shader = function(gl) {
	this.wrapT = 33071;
	this.wrapS = 33071;
	this.compiled = false;
	this.uniforms = new haxe_ds_StringMap();
	this.attributes = new haxe_ds_StringMap();
	this.ID = openfl__$internal_renderer_opengl_shaders2_Shader.UID++;
	this.gl = gl;
	this.program = null;
};
$hxClasses["openfl._internal.renderer.opengl.shaders2.Shader"] = openfl__$internal_renderer_opengl_shaders2_Shader;
openfl__$internal_renderer_opengl_shaders2_Shader.__name__ = ["openfl","_internal","renderer","opengl","shaders2","Shader"];
openfl__$internal_renderer_opengl_shaders2_Shader.compileProgram = function(gl,vertexSrc,fragmentSrc) {
	var cache = openfl__$internal_renderer_opengl_utils_ShaderManager.compiledShadersCache;
	var key = haxe_crypto_Md5.encode(vertexSrc + fragmentSrc);
	if(__map_reserved[key] != null?cache.existsReserved(key):cache.h.hasOwnProperty(key)) return __map_reserved[key] != null?cache.getReserved(key):cache.h[key];
	var vertexShader = openfl__$internal_renderer_opengl_shaders2_Shader.compileShader(gl,vertexSrc,gl.VERTEX_SHADER);
	var fragmentShader = openfl__$internal_renderer_opengl_shaders2_Shader.compileShader(gl,fragmentSrc,gl.FRAGMENT_SHADER);
	var program = gl.createProgram();
	if(vertexShader != null && fragmentShader != null) {
		gl.attachShader(program,vertexShader);
		gl.attachShader(program,fragmentShader);
		gl.linkProgram(program);
		gl.deleteShader(vertexShader);
		gl.deleteShader(fragmentShader);
		if(gl.getProgramParameter(program,gl.LINK_STATUS) == 0) {
			haxe_Log.trace("Could not compile the program:\n\t" + gl.getProgramInfoLog(program),{ fileName : "Shader.hx", lineNumber : 226, className : "openfl._internal.renderer.opengl.shaders2.Shader", methodName : "compileProgram"});
			haxe_Log.trace("VERTEX:\n" + vertexSrc + "\nFRAGMENT:\n" + fragmentSrc,{ fileName : "Shader.hx", lineNumber : 227, className : "openfl._internal.renderer.opengl.shaders2.Shader", methodName : "compileProgram"});
			return null;
		}
	}
	if(__map_reserved[key] != null) cache.setReserved(key,program); else cache.h[key] = program;
	return program;
};
openfl__$internal_renderer_opengl_shaders2_Shader.compileShader = function(gl,shaderSrc,type) {
	var src = shaderSrc;
	var shader = gl.createShader(type);
	gl.shaderSource(shader,src);
	gl.compileShader(shader);
	if(gl.getShaderParameter(shader,gl.COMPILE_STATUS) == 0) {
		haxe_Log.trace("Could not compile the shader:\n\t" + gl.getShaderInfoLog(shader),{ fileName : "Shader.hx", lineNumber : 244, className : "openfl._internal.renderer.opengl.shaders2.Shader", methodName : "compileShader"});
		haxe_Log.trace(shaderSrc,{ fileName : "Shader.hx", lineNumber : 245, className : "openfl._internal.renderer.opengl.shaders2.Shader", methodName : "compileShader"});
		return null;
	}
	return shader;
};
openfl__$internal_renderer_opengl_shaders2_Shader.prototype = {
	init: function(force) {
		if(force == null) force = false;
		if(this.compiled && !force) return;
		if(this.vertexSrc != null) this.vertexString = this.vertexSrc.join("\n");
		if(this.fragmentSrc != null) this.fragmentString = this.fragmentSrc.join("\n");
		if(this.vertexString == null || this.fragmentString == null) throw new js__$Boot_HaxeError("No vertex or fragment source provided");
		this.program = openfl__$internal_renderer_opengl_shaders2_Shader.compileProgram(this.gl,this.vertexString,this.fragmentString);
		if(this.program != null) this.compiled = true;
	}
	,destroy: function() {
		if(this.program != null) this.gl.deleteProgram(this.program);
		this.compiled = false;
		this.attributes = null;
	}
	,applyData: function(shaderData,renderSession) {
		if(shaderData == null) return;
		var param;
		var u;
		var v;
		var bd;
		var $it0 = shaderData.keys();
		while( $it0.hasNext() ) {
			var key = $it0.next();
			u = this.getUniformLocation(key);
			param = __map_reserved[key] != null?shaderData.getReserved(key):shaderData.h[key];
			if(param == null) continue;
			v = param.value;
			bd = param.bitmap;
			if(v == null && bd == null) continue;
			var _g = param.internalType;
			switch(_g) {
			case 1:
				var _g1 = param.size;
				switch(_g1) {
				case 1:
					this.gl.uniform1i(u,v[0] | 0);
					break;
				case 2:
					this.gl.uniform2i(u,v[0] | 0,v[1] | 0);
					break;
				case 3:
					this.gl.uniform3i(u,v[0] | 0,v[1] | 0,v[2] | 0);
					break;
				case 4:
					this.gl.uniform4i(u,v[0] | 0,v[1] | 0,v[2] | 0,v[3] | 0);
					break;
				}
				break;
			case 2:
				var _g11 = param.size;
				switch(_g11) {
				case 1:
					this.gl.uniform1f(u,v[0]);
					break;
				case 2:
					this.gl.uniform2f(u,v[0],v[1]);
					break;
				case 3:
					this.gl.uniform3f(u,v[0],v[1],v[2]);
					break;
				case 4:
					this.gl.uniform4f(u,v[0],v[1],v[2],v[3]);
					break;
				}
				break;
			case 3:
				var _g12 = param.size;
				switch(_g12) {
				case 2:
					this.gl.uniformMatrix2fv(u,param.transpose,(function($this) {
						var $r;
						var array = param.value;
						var this1;
						if(array != null) this1 = new Float32Array(array); else this1 = null;
						$r = this1;
						return $r;
					}(this)));
					break;
				case 3:
					this.gl.uniformMatrix3fv(u,param.transpose,(function($this) {
						var $r;
						var array1 = param.value;
						var this2;
						if(array1 != null) this2 = new Float32Array(array1); else this2 = null;
						$r = this2;
						return $r;
					}(this)));
					break;
				case 4:
					this.gl.uniformMatrix4fv(u,param.transpose,(function($this) {
						var $r;
						var array2 = param.value;
						var this3;
						if(array2 != null) this3 = new Float32Array(array2); else this3 = null;
						$r = this3;
						return $r;
					}(this)));
					break;
				}
				break;
			case 4:
				if(bd == null || !bd.__isValid) continue;
				this.gl.activeTexture(this.gl.TEXTURE0 + renderSession.activeTextures);
				this.gl.bindTexture(this.gl.TEXTURE_2D,bd.getTexture(this.gl));
				this.gl.uniform1i(u,renderSession.activeTextures);
				this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,param.smooth?this.gl.LINEAR:this.gl.NEAREST);
				this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,param.smooth?this.gl.LINEAR:this.gl.NEAREST);
				this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,param.repeatX);
				this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,param.repeatY);
				renderSession.activeTextures++;
				break;
			default:
			}
		}
	}
	,getAttribLocation: function(attribute) {
		if(this.program == null) throw new js__$Boot_HaxeError("Shader isn't initialized");
		if(this.attributes.exists(attribute)) return this.attributes.get(attribute); else {
			var location = this.gl.getAttribLocation(this.program,attribute);
			this.attributes.set(attribute,location);
			return location;
		}
	}
	,getUniformLocation: function(uniform) {
		if(this.program == null) throw new js__$Boot_HaxeError("Shader isn't initialized");
		if(this.uniforms.exists(uniform)) return this.uniforms.get(uniform); else {
			var location = this.gl.getUniformLocation(this.program,uniform);
			this.uniforms.set(uniform,location);
			return location;
		}
	}
	,enableVertexAttribute: function(attribute,stride,offset) {
		var location = this.getAttribLocation(attribute.name);
		this.gl.enableVertexAttribArray(location);
		this.gl.vertexAttribPointer(location,attribute.components,attribute.type,attribute.normalized,stride,offset * 4);
	}
	,disableVertexAttribute: function(attribute,setDefault) {
		if(setDefault == null) setDefault = true;
		var location = this.getAttribLocation(attribute.name);
		this.gl.disableVertexAttribArray(location);
		if(setDefault) {
			var _g = attribute.components;
			switch(_g) {
			case 1:
				this.gl.vertexAttrib1fv(location,attribute.defaultValue.subarray(0,1));
				break;
			case 2:
				this.gl.vertexAttrib2fv(location,attribute.defaultValue.subarray(0,2));
				break;
			case 3:
				this.gl.vertexAttrib3fv(location,attribute.defaultValue.subarray(0,3));
				break;
			default:
				this.gl.vertexAttrib4fv(location,attribute.defaultValue.subarray(0,4));
			}
		}
	}
	,bindVertexArray: function(va) {
		var offset = 0;
		var stride = va.get_stride();
		var _g = 0;
		var _g1 = va.attributes;
		while(_g < _g1.length) {
			var attribute = _g1[_g];
			++_g;
			if(attribute.enabled) {
				this.enableVertexAttribute(attribute,stride,offset);
				offset += Math.floor(attribute.components * attribute.getElementsBytes() / 4);
			} else this.disableVertexAttribute(attribute,true);
		}
	}
	,unbindVertexArray: function(va) {
		var _g = 0;
		var _g1 = va.attributes;
		while(_g < _g1.length) {
			var attribute = _g1[_g];
			++_g;
			this.disableVertexAttribute(attribute,false);
		}
	}
	,__class__: openfl__$internal_renderer_opengl_shaders2_Shader
};
var openfl__$internal_renderer_opengl_shaders2_DefaultShader = function(gl) {
	openfl__$internal_renderer_opengl_shaders2_Shader.call(this,gl);
	this.vertexSrc = openfl__$internal_renderer_opengl_shaders2_DefaultShader.VERTEX_SRC;
	this.fragmentSrc = ["#ifdef GL_ES","precision lowp float;","#endif","uniform sampler2D " + "openfl_uSampler0" + ";","uniform vec4 " + "openfl_uColorMultiplier" + ";","uniform vec4 " + "openfl_uColorOffset" + ";","uniform bool " + "openfl_uUseColorTransform" + ";","varying vec2 " + "openfl_vTexCoord" + ";","varying vec4 " + "openfl_vColor" + ";","vec4 colorTransform(const vec4 color, const vec4 tint, const vec4 multiplier, const vec4 offset) {","\tif(!" + "openfl_uUseColorTransform" + ") {","\t\treturn color * tint;","\t}","\tvec4 unmultiply;","\tif (color.a == 0.0) {","\t\tunmultiply = vec4(0.0, 0.0, 0.0, 0.0);","\t} else {","   \tunmultiply = vec4(color.rgb / color.a, color.a);","\t}","   vec4 result = unmultiply * tint * multiplier;","   result = result + offset;","   result = clamp(result, 0., 1.);","   result = vec4(result.rgb * result.a, result.a);","   return result;","}","void main(void) {","   vec4 tc = texture2D(" + "openfl_uSampler0" + ", " + "openfl_vTexCoord" + ");","   gl_FragColor = colorTransform(tc, " + "openfl_vColor" + ", " + "openfl_uColorMultiplier" + ", " + "openfl_uColorOffset" + ");","}"];
	this.init();
};
$hxClasses["openfl._internal.renderer.opengl.shaders2.DefaultShader"] = openfl__$internal_renderer_opengl_shaders2_DefaultShader;
openfl__$internal_renderer_opengl_shaders2_DefaultShader.__name__ = ["openfl","_internal","renderer","opengl","shaders2","DefaultShader"];
openfl__$internal_renderer_opengl_shaders2_DefaultShader.__super__ = openfl__$internal_renderer_opengl_shaders2_Shader;
openfl__$internal_renderer_opengl_shaders2_DefaultShader.prototype = $extend(openfl__$internal_renderer_opengl_shaders2_Shader.prototype,{
	init: function(force) {
		if(force == null) force = false;
		openfl__$internal_renderer_opengl_shaders2_Shader.prototype.init.call(this,force);
		this.getAttribLocation("openfl_aPosition");
		this.getAttribLocation("openfl_aTexCoord0");
		this.getAttribLocation("openfl_aColor");
		this.getUniformLocation("openfl_uProjectionMatrix");
		this.getUniformLocation("openfl_uSampler0");
		this.getUniformLocation("openfl_uColorMultiplier");
		this.getUniformLocation("openfl_uColorOffset");
		this.getUniformLocation("openfl_uUseColorTransform");
	}
	,__class__: openfl__$internal_renderer_opengl_shaders2_DefaultShader
});
var openfl__$internal_renderer_opengl_shaders2_DrawTrianglesShader = function(gl) {
	openfl__$internal_renderer_opengl_shaders2_Shader.call(this,gl);
	this.vertexSrc = ["attribute vec2 " + "openfl_aPosition" + ";","attribute vec2 " + "openfl_aTexCoord0" + ";","attribute vec4 " + "openfl_aColor" + ";","uniform mat3 " + "openfl_uProjectionMatrix" + ";","varying vec2 vTexCoord;","varying vec4 vColor;","void main(void) {","   gl_Position = vec4((" + "openfl_uProjectionMatrix" + " * vec3(" + "openfl_aPosition" + ", 1.0)).xy, 0.0, 1.0);","   vTexCoord = " + "openfl_aTexCoord0" + ";","   vColor = " + "openfl_aColor" + ".bgra;","}"];
	this.fragmentSrc = ["#ifdef GL_ES","precision lowp float;","#endif","uniform sampler2D " + "openfl_uSampler0" + ";","uniform vec3 " + "openfl_uColor" + ";","uniform bool " + "openfl_uUseTexture" + ";","uniform float " + "openfl_uAlpha" + ";","uniform vec4 " + "openfl_uColorMultiplier" + ";","uniform vec4 " + "openfl_uColorOffset" + ";","varying vec2 vTexCoord;","varying vec4 vColor;","vec4 tmp;","vec4 colorTransform(const vec4 color, const vec4 tint, const vec4 multiplier, const vec4 offset) {","   vec4 unmultiply = vec4(color.rgb / color.a, color.a);","   vec4 result = unmultiply * tint * multiplier;","   result = result + offset;","   result = clamp(result, 0., 1.);","   result = vec4(result.rgb * result.a, result.a);","   return result;","}","void main(void) {","   if(" + "openfl_uUseTexture" + ") {","       tmp = texture2D(" + "openfl_uSampler0" + ", vTexCoord);","   } else {","       tmp = vec4(" + "openfl_uColor" + ", 1.);","   }","   gl_FragColor = colorTransform(tmp, vColor, " + "openfl_uColorMultiplier" + ", " + "openfl_uColorOffset" + ");","}"];
	this.init();
};
$hxClasses["openfl._internal.renderer.opengl.shaders2.DrawTrianglesShader"] = openfl__$internal_renderer_opengl_shaders2_DrawTrianglesShader;
openfl__$internal_renderer_opengl_shaders2_DrawTrianglesShader.__name__ = ["openfl","_internal","renderer","opengl","shaders2","DrawTrianglesShader"];
openfl__$internal_renderer_opengl_shaders2_DrawTrianglesShader.__super__ = openfl__$internal_renderer_opengl_shaders2_Shader;
openfl__$internal_renderer_opengl_shaders2_DrawTrianglesShader.prototype = $extend(openfl__$internal_renderer_opengl_shaders2_Shader.prototype,{
	init: function(force) {
		if(force == null) force = false;
		openfl__$internal_renderer_opengl_shaders2_Shader.prototype.init.call(this,force);
		this.getAttribLocation("openfl_aPosition");
		this.getAttribLocation("openfl_aTexCoord0");
		this.getAttribLocation("openfl_aColor");
		this.getUniformLocation("openfl_uSampler0");
		this.getUniformLocation("openfl_uProjectionMatrix");
		this.getUniformLocation("openfl_uColor");
		this.getUniformLocation("openfl_uAlpha");
		this.getUniformLocation("openfl_uUseTexture");
		this.getUniformLocation("openfl_uColorMultiplier");
		this.getUniformLocation("openfl_uColorOffset");
	}
	,__class__: openfl__$internal_renderer_opengl_shaders2_DrawTrianglesShader
});
var openfl__$internal_renderer_opengl_shaders2_FillShader = function(gl) {
	openfl__$internal_renderer_opengl_shaders2_Shader.call(this,gl);
	this.vertexSrc = ["attribute vec2 " + "openfl_aPosition" + ";","uniform mat3 " + "openfl_uTranslationMatrix" + ";","uniform mat3 " + "openfl_uProjectionMatrix" + ";","uniform vec4 " + "openfl_uColor" + ";","uniform float " + "openfl_uAlpha" + ";","uniform vec4 " + "openfl_uColorMultiplier" + ";","uniform vec4 " + "openfl_uColorOffset" + ";","varying vec4 vColor;","vec4 colorTransform(const vec4 color, const float alpha, const vec4 multiplier, const vec4 offset) {","   vec4 result = color * multiplier;","   result.a *= alpha;","   result = result + offset;","   result = clamp(result, 0., 1.);","   result = vec4(result.rgb * result.a, result.a);","   return result;","}","void main(void) {","   gl_Position = vec4((" + "openfl_uProjectionMatrix" + " * " + "openfl_uTranslationMatrix" + " * vec3(" + "openfl_aPosition" + ", 1.0)).xy, 0.0, 1.0);","   vColor = colorTransform(" + "openfl_uColor" + ", " + "openfl_uAlpha" + ", " + "openfl_uColorMultiplier" + ", " + "openfl_uColorOffset" + ");","}"];
	this.fragmentSrc = ["#ifdef GL_ES","precision lowp float;","#endif","varying vec4 vColor;","void main(void) {","   gl_FragColor = vColor;","}"];
	this.init();
};
$hxClasses["openfl._internal.renderer.opengl.shaders2.FillShader"] = openfl__$internal_renderer_opengl_shaders2_FillShader;
openfl__$internal_renderer_opengl_shaders2_FillShader.__name__ = ["openfl","_internal","renderer","opengl","shaders2","FillShader"];
openfl__$internal_renderer_opengl_shaders2_FillShader.__super__ = openfl__$internal_renderer_opengl_shaders2_Shader;
openfl__$internal_renderer_opengl_shaders2_FillShader.prototype = $extend(openfl__$internal_renderer_opengl_shaders2_Shader.prototype,{
	init: function(force) {
		if(force == null) force = false;
		openfl__$internal_renderer_opengl_shaders2_Shader.prototype.init.call(this,force);
		this.getAttribLocation("openfl_aPosition");
		this.getUniformLocation("openfl_uTranslationMatrix");
		this.getUniformLocation("openfl_uProjectionMatrix");
		this.getUniformLocation("openfl_uColor");
		this.getUniformLocation("openfl_uColorMultiplier");
		this.getUniformLocation("openfl_uColorOffset");
	}
	,__class__: openfl__$internal_renderer_opengl_shaders2_FillShader
});
var openfl__$internal_renderer_opengl_shaders2_PatternFillShader = function(gl) {
	openfl__$internal_renderer_opengl_shaders2_Shader.call(this,gl);
	this.vertexSrc = ["attribute vec2 " + "openfl_aPosition" + ";","uniform mat3 " + "openfl_uTranslationMatrix" + ";","uniform mat3 " + "openfl_uProjectionMatrix" + ";","uniform mat3 " + "openfl_uPatternMatrix" + ";","varying vec2 vPosition;","void main(void) {","   gl_Position = vec4((" + "openfl_uProjectionMatrix" + " * " + "openfl_uTranslationMatrix" + " * vec3(" + "openfl_aPosition" + ", 1.0)).xy, 0.0, 1.0);","   vPosition = (" + "openfl_uPatternMatrix" + " * vec3(" + "openfl_aPosition" + ", 1)).xy;","}"];
	this.fragmentSrc = ["#ifdef GL_ES","precision lowp float;","#endif","uniform float " + "openfl_uAlpha" + ";","uniform vec2 " + "openfl_uPatternTL" + ";","uniform vec2 " + "openfl_uPatternBR" + ";","uniform sampler2D " + "openfl_uSampler0" + ";","uniform vec4 " + "openfl_uColorMultiplier" + ";","uniform vec4 " + "openfl_uColorOffset" + ";","varying vec2 vPosition;","vec4 colorTransform(const vec4 color, const float alpha, const vec4 multiplier, const vec4 offset) {","   vec4 unmultiply = vec4(color.rgb / color.a, color.a);","   vec4 result = unmultiply * multiplier;","   result.a *= alpha;","   result = result + offset;","   result = clamp(result, 0., 1.);","   result = vec4(result.rgb * result.a, result.a);","   return result;","}","void main(void) {","   vec2 pos = mix(" + "openfl_uPatternTL" + ", " + "openfl_uPatternBR" + ", vPosition);","   vec4 tcol = texture2D(" + "openfl_uSampler0" + ", pos);","   gl_FragColor = colorTransform(tcol, " + "openfl_uAlpha" + ", " + "openfl_uColorMultiplier" + ", " + "openfl_uColorOffset" + ");","}"];
	this.init();
};
$hxClasses["openfl._internal.renderer.opengl.shaders2.PatternFillShader"] = openfl__$internal_renderer_opengl_shaders2_PatternFillShader;
openfl__$internal_renderer_opengl_shaders2_PatternFillShader.__name__ = ["openfl","_internal","renderer","opengl","shaders2","PatternFillShader"];
openfl__$internal_renderer_opengl_shaders2_PatternFillShader.__super__ = openfl__$internal_renderer_opengl_shaders2_Shader;
openfl__$internal_renderer_opengl_shaders2_PatternFillShader.prototype = $extend(openfl__$internal_renderer_opengl_shaders2_Shader.prototype,{
	init: function(force) {
		if(force == null) force = false;
		openfl__$internal_renderer_opengl_shaders2_Shader.prototype.init.call(this,force);
		this.getAttribLocation("openfl_aPosition");
		this.getUniformLocation("openfl_uTranslationMatrix");
		this.getUniformLocation("openfl_uPatternMatrix");
		this.getUniformLocation("openfl_uProjectionMatrix");
		this.getUniformLocation("openfl_uSampler0");
		this.getUniformLocation("openfl_uPatternTL");
		this.getUniformLocation("openfl_uPatternBR");
		this.getUniformLocation("openfl_uAlpha");
		this.getUniformLocation("openfl_uColorMultiplier");
		this.getUniformLocation("openfl_uColorOffset");
	}
	,__class__: openfl__$internal_renderer_opengl_shaders2_PatternFillShader
});
var openfl__$internal_renderer_opengl_shaders2_PrimitiveShader = function(gl) {
	openfl__$internal_renderer_opengl_shaders2_Shader.call(this,gl);
	this.vertexSrc = ["attribute vec2 " + "openfl_aPosition" + ";","attribute vec4 " + "openfl_aColor" + ";","uniform mat3 " + "openfl_uTranslationMatrix" + ";","uniform mat3 " + "openfl_uProjectionMatrix" + ";","uniform vec4 " + "openfl_uColorMultiplier" + ";","uniform vec4 " + "openfl_uColorOffset" + ";","uniform float " + "openfl_uAlpha" + ";","varying vec4 vColor;","vec4 colorTransform(const vec4 color, const float alpha, const vec4 multiplier, const vec4 offset) {","   vec4 result = color * multiplier;","   result.a *= alpha;","   result = result + offset;","   result = clamp(result, 0., 1.);","   result = vec4(result.rgb * result.a, result.a);","   return result;","}","void main(void) {","   gl_Position = vec4((" + "openfl_uProjectionMatrix" + " * " + "openfl_uTranslationMatrix" + " * vec3(" + "openfl_aPosition" + ", 1.0)).xy, 0.0, 1.0);","   vColor = colorTransform(" + "openfl_aColor" + ", " + "openfl_uAlpha" + ", " + "openfl_uColorMultiplier" + ", " + "openfl_uColorOffset" + ");","}"];
	this.fragmentSrc = ["#ifdef GL_ES","precision lowp float;","#endif","varying vec4 vColor;","void main(void) {","   gl_FragColor = vColor;","}"];
	this.init();
};
$hxClasses["openfl._internal.renderer.opengl.shaders2.PrimitiveShader"] = openfl__$internal_renderer_opengl_shaders2_PrimitiveShader;
openfl__$internal_renderer_opengl_shaders2_PrimitiveShader.__name__ = ["openfl","_internal","renderer","opengl","shaders2","PrimitiveShader"];
openfl__$internal_renderer_opengl_shaders2_PrimitiveShader.__super__ = openfl__$internal_renderer_opengl_shaders2_Shader;
openfl__$internal_renderer_opengl_shaders2_PrimitiveShader.prototype = $extend(openfl__$internal_renderer_opengl_shaders2_Shader.prototype,{
	init: function(force) {
		if(force == null) force = false;
		openfl__$internal_renderer_opengl_shaders2_Shader.prototype.init.call(this,force);
		this.getAttribLocation("openfl_aPosition");
		this.getAttribLocation("openfl_aColor");
		this.getUniformLocation("openfl_uTranslationMatrix");
		this.getUniformLocation("openfl_uProjectionMatrix");
		this.getUniformLocation("openfl_uAlpha");
		this.getUniformLocation("openfl_uColorMultiplier");
		this.getUniformLocation("openfl_uColorOffset");
	}
	,__class__: openfl__$internal_renderer_opengl_shaders2_PrimitiveShader
});
var openfl__$internal_renderer_opengl_utils_BlendModeManager = function(gl) {
	this.gl = gl;
	this.currentBlendMode = null;
};
$hxClasses["openfl._internal.renderer.opengl.utils.BlendModeManager"] = openfl__$internal_renderer_opengl_utils_BlendModeManager;
openfl__$internal_renderer_opengl_utils_BlendModeManager.__name__ = ["openfl","_internal","renderer","opengl","utils","BlendModeManager"];
openfl__$internal_renderer_opengl_utils_BlendModeManager.prototype = {
	destroy: function() {
		this.gl = null;
	}
	,setBlendMode: function(blendMode,force) {
		if(force == null) force = false;
		if(blendMode == null) {
			blendMode = 10;
			force = true;
		}
		if(!force && this.currentBlendMode == blendMode) return false;
		this.currentBlendMode = blendMode;
		switch(blendMode) {
		case 0:
			this.gl.blendEquation(32774);
			this.gl.blendFunc(1,1);
			break;
		case 9:
			this.gl.blendEquation(32774);
			this.gl.blendFunc(774,771);
			break;
		case 12:
			this.gl.blendEquation(32774);
			this.gl.blendFunc(1,769);
			break;
		case 14:
			this.gl.blendEquation(32779);
			this.gl.blendFunc(1,1);
			break;
		default:
			this.gl.blendEquation(32774);
			this.gl.blendFunc(1,771);
		}
		return true;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_BlendModeManager
};
var openfl__$internal_renderer_opengl_utils_DrawPath = function(makeArray) {
	if(makeArray == null) makeArray = true;
	this.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
	this.points = null;
	this.winding = 0;
	this.isRemovable = true;
	this.fillIndex = 0;
	this.line = new openfl__$internal_renderer_opengl_utils_LineStyle();
	this.fill = openfl__$internal_renderer_opengl_utils_FillType.None;
	if(makeArray) this.points = [];
};
$hxClasses["openfl._internal.renderer.opengl.utils.DrawPath"] = openfl__$internal_renderer_opengl_utils_DrawPath;
openfl__$internal_renderer_opengl_utils_DrawPath.__name__ = ["openfl","_internal","renderer","opengl","utils","DrawPath"];
openfl__$internal_renderer_opengl_utils_DrawPath.getStack = function(graphics,gl) {
	return openfl__$internal_renderer_opengl_utils_PathBuiler.build(graphics,gl);
};
openfl__$internal_renderer_opengl_utils_DrawPath.prototype = {
	update: function(line,fill,fillIndex,winding) {
		this.updateLine(line);
		this.fill = fill;
		this.fillIndex = fillIndex;
		this.winding = winding;
	}
	,updateLine: function(line) {
		this.line.width = line.width;
		this.line.color = line.color;
		if(line.alpha == null) this.line.alpha = 1; else this.line.alpha = line.alpha;
		if(line.scaleMode == null) this.line.scaleMode = 2; else this.line.scaleMode = line.scaleMode;
		if(line.caps == null) this.line.caps = 1; else this.line.caps = line.caps;
		if(line.joints == null) this.line.joints = 2; else this.line.joints = line.joints;
		this.line.miterLimit = line.miterLimit;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_DrawPath
};
var openfl__$internal_renderer_opengl_utils_PathBuiler = function() { };
$hxClasses["openfl._internal.renderer.opengl.utils.PathBuiler"] = openfl__$internal_renderer_opengl_utils_PathBuiler;
openfl__$internal_renderer_opengl_utils_PathBuiler.__name__ = ["openfl","_internal","renderer","opengl","utils","PathBuiler"];
openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = null;
openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths = null;
openfl__$internal_renderer_opengl_utils_PathBuiler.__line = null;
openfl__$internal_renderer_opengl_utils_PathBuiler.__fill = null;
openfl__$internal_renderer_opengl_utils_PathBuiler.closePath = function() {
	var l;
	if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null) l = 0; else l = openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length;
	if(l <= 0) return;
	if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type == openfl__$internal_renderer_opengl_utils_GraphicType.Polygon && openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.fill != openfl__$internal_renderer_opengl_utils_FillType.None) {
		var sx = openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points[0];
		var sy = openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points[1];
		var ex = openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points[l - 2];
		var ey = openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points[l - 1];
		if(!(sx == ex && sy == ey)) openfl__$internal_renderer_opengl_utils_PathBuiler.lineTo(sx,sy);
	}
};
openfl__$internal_renderer_opengl_utils_PathBuiler.endFill = function() {
	openfl__$internal_renderer_opengl_utils_PathBuiler.__fill = openfl__$internal_renderer_opengl_utils_FillType.None;
	openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex++;
};
openfl__$internal_renderer_opengl_utils_PathBuiler.moveTo = function(x,y) {
	if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
	openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
	openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
	openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
	openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(x);
	openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(y);
	openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
};
openfl__$internal_renderer_opengl_utils_PathBuiler.lineTo = function(x,y) {
	var points = openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points;
	var push_point = true;
	if(points.length > 1) {
		var lastX = points[points.length - 2];
		var lastY = points[points.length - 1];
		if(lastX == x && lastY == y) push_point = false;
	}
	if(push_point == true) {
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(x);
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(y);
	}
};
openfl__$internal_renderer_opengl_utils_PathBuiler.curveTo = function(cx,cy,x,y) {
	if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0) {
		if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
		openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
	}
	openfl__$internal_renderer_GraphicsPaths.curveTo(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points,cx,cy,x,y);
};
openfl__$internal_renderer_opengl_utils_PathBuiler.cubicCurveTo = function(cx,cy,cx2,cy2,x,y) {
	if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0) {
		if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
		openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
	}
	openfl__$internal_renderer_GraphicsPaths.cubicCurveTo(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points,cx,cy,cx2,cy2,x,y);
};
openfl__$internal_renderer_opengl_utils_PathBuiler.graphicDataPop = function() {
	if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
};
openfl__$internal_renderer_opengl_utils_PathBuiler.build = function(graphics,gl) {
	var glStack = null;
	var bounds = graphics.__bounds;
	openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths = [];
	openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
	openfl__$internal_renderer_opengl_utils_PathBuiler.__line = new openfl__$internal_renderer_opengl_utils_LineStyle();
	openfl__$internal_renderer_opengl_utils_PathBuiler.__fill = openfl__$internal_renderer_opengl_utils_FillType.None;
	openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex = 0;
	glStack = graphics.__glStack[openfl__$internal_renderer_opengl_GLRenderer.glContextId];
	if(glStack == null) glStack = graphics.__glStack[openfl__$internal_renderer_opengl_GLRenderer.glContextId] = new openfl__$internal_renderer_opengl_utils_GLStack(gl);
	if(!graphics.__visible || graphics.__commands.get_length() == 0 || bounds == null || bounds.width == 0 || bounds.height == 0) {
	} else {
		var data = new openfl__$internal_renderer_DrawCommandReader(graphics.__commands);
		var _g = 0;
		var _g1 = graphics.__commands.types;
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			switch(type[1]) {
			case 0:
				var c = data.readBeginBitmapFill();
				openfl__$internal_renderer_opengl_utils_PathBuiler.endFill();
				if(openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_bitmap(c) != null) openfl__$internal_renderer_opengl_utils_PathBuiler.__fill = openfl__$internal_renderer_opengl_utils_FillType.Texture(openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_bitmap(c),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_matrix(c),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_repeat(c),openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_smooth(c)); else openfl__$internal_renderer_opengl_utils_PathBuiler.__fill = openfl__$internal_renderer_opengl_utils_FillType.None;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0) {
					if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points = [];
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
					openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				}
				break;
			case 1:
				var c1 = data.readBeginFill();
				openfl__$internal_renderer_opengl_utils_PathBuiler.endFill();
				if(openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_alpha(c1) > 0) openfl__$internal_renderer_opengl_utils_PathBuiler.__fill = openfl__$internal_renderer_opengl_utils_FillType.Color(openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color(c1) & 16777215,openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_alpha(c1)); else openfl__$internal_renderer_opengl_utils_PathBuiler.__fill = openfl__$internal_renderer_opengl_utils_FillType.None;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0) {
					if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points = [];
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
					openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				}
				break;
			case 3:
				var c2 = data.readCubicCurveTo();
				openfl__$internal_renderer_opengl_utils_PathBuiler.cubicCurveTo(openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX1(c2),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY1(c2),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX2(c2),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY2(c2),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX(c2),openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorY(c2));
				break;
			case 4:
				var c3 = data.readCurveTo();
				openfl__$internal_renderer_opengl_utils_PathBuiler.curveTo(openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlX(c3),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlY(c3),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorX(c3),openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorY(c3));
				break;
			case 5:
				var c4 = data.readDrawCircle();
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Circle;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points = [openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_x(c4),openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_y(c4),openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_radius(c4)];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 6:
				var c5 = data.readDrawEllipse();
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Ellipse;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points = [openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_x(c5),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_y(c5),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_width(c5),openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_height(c5)];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 8:
				var c6 = data.readDrawRect();
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Rectangle(false);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points = [openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x(c6),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y(c6),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width(c6),openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height(c6)];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 9:
				var c7 = data.readDrawRoundRect();
				var x = openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_x(c7);
				var y = openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_y(c7);
				var width = openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_width(c7);
				var height = openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_height(c7);
				var rx = openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseWidth(c7);
				var ry = openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ellipseHeight(c7);
				if(ry == null) ry = rx;
				rx *= 0.5;
				ry *= 0.5;
				if(rx > width / 2) rx = width / 2;
				if(ry > height / 2) ry = height / 2;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Rectangle(true);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points = [x,y,width,height,rx,ry];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 12:
				var c8 = data.readEndFill();
				openfl__$internal_renderer_opengl_utils_PathBuiler.endFill();
				break;
			case 15:
				var c9 = data.readLineStyle();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__line = new openfl__$internal_renderer_opengl_utils_LineStyle();
				if(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness(c9) == null || (function($this) {
					var $r;
					var f = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness(c9);
					$r = isNaN(f);
					return $r;
				}(this)) || openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness(c9) < 0) openfl__$internal_renderer_opengl_utils_PathBuiler.__line.width = 0; else if(openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness(c9) == 0) openfl__$internal_renderer_opengl_utils_PathBuiler.__line.width = 1; else openfl__$internal_renderer_opengl_utils_PathBuiler.__line.width = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness(c9);
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__line.color = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_color(c9);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__line.alpha = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_alpha(c9);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__line.scaleMode = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_scaleMode(c9);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__line.caps = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_caps(c9);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__line.joints = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_joints(c9);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__line.miterLimit = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_miterLimit(c9);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points = [];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 16:
				var c10 = data.readLineTo();
				openfl__$internal_renderer_opengl_utils_PathBuiler.lineTo(openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x(c10),openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y(c10));
				break;
			case 17:
				var c11 = data.readMoveTo();
				openfl__$internal_renderer_opengl_utils_PathBuiler.moveTo(openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x(c11),openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y(c11));
				break;
			case 11:
				var c12 = data.readDrawTriangles();
				var uvtData = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_uvtData(c12);
				var vertices = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_vertices(c12);
				var indices = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_indices(c12);
				var culling = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_culling(c12);
				var isColor;
				{
					var _g2 = openfl__$internal_renderer_opengl_utils_PathBuiler.__fill;
					switch(_g2[1]) {
					case 1:
						isColor = true;
						break;
					default:
						isColor = false;
					}
				}
				if(isColor && uvtData != null) continue;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				if(uvtData == null) {
					var this1;
					this1 = new openfl_VectorData();
					var this2;
					this2 = new Array(0);
					this1.data = this2;
					this1.length = 0;
					this1.fixed = false;
					uvtData = this1;
					{
						var _g21 = openfl__$internal_renderer_opengl_utils_PathBuiler.__fill;
						switch(_g21[1]) {
						case 2:
							var b = _g21[2];
							var _g4 = 0;
							var _g3 = vertices.length / 2 | 0;
							while(_g4 < _g3) {
								var i = _g4++;
								if(!uvtData.fixed) {
									uvtData.length++;
									if(uvtData.data.length < uvtData.length) {
										var data1;
										var this3;
										this3 = new Array(uvtData.data.length + 10);
										data1 = this3;
										haxe_ds__$Vector_Vector_$Impl_$.blit(uvtData.data,0,data1,0,uvtData.data.length);
										uvtData.data = data1;
									}
									uvtData.data[uvtData.length - 1] = vertices.data[i * 2] / b.width;
								}
								uvtData.length;
								if(!uvtData.fixed) {
									uvtData.length++;
									if(uvtData.data.length < uvtData.length) {
										var data2;
										var this4;
										this4 = new Array(uvtData.data.length + 10);
										data2 = this4;
										haxe_ds__$Vector_Vector_$Impl_$.blit(uvtData.data,0,data2,0,uvtData.data.length);
										uvtData.data = data2;
									}
									uvtData.data[uvtData.length - 1] = vertices.data[i * 2 + 1] / b.height;
								}
								uvtData.length;
							}
							break;
						default:
						}
					}
				}
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.DrawTriangles(vertices,indices,uvtData,culling,null,0);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable = false;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 10:
				var c13 = data.readDrawTiles();
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex++;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath(false);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.DrawTiles(openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet(c13),openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData(c13),openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_smooth(c13),openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags(c13),openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_shader(c13),openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_count(c13));
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable = false;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 7:
				var c14 = data.readDrawPath();
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				var _g22 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_winding(c14);
				switch(_g22) {
				case "evenOdd":
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding = 0;
					break;
				case "nonZero":
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding = 1;
					break;
				default:
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding = 0;
				}
				var command;
				var cx;
				var cy;
				var cx2;
				var cy2;
				var ax;
				var ay;
				var idx = 0;
				var _g31 = 0;
				var _g23;
				var this5 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_commands(c14);
				_g23 = this5.length;
				while(_g31 < _g23) {
					var i1 = _g31++;
					var this6 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_commands(c14);
					command = this6.data[i1];
					switch(command) {
					case 1:
						var this7 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						ax = this7.data[idx];
						var this8 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						ay = this8.data[idx + 1];
						idx += 2;
						if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(ax);
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(ay);
						openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
						break;
					case 4:
						var this9 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						ax = this9.data[idx + 2];
						var this10 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						ay = this10.data[idx + 3];
						idx += 4;
						if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(ax);
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(ay);
						openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
						break;
					case 2:
						var this11 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						ax = this11.data[idx];
						var this12 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						ay = this12.data[idx + 1];
						idx += 2;
						openfl__$internal_renderer_opengl_utils_PathBuiler.lineTo(ax,ay);
						break;
					case 5:
						var this13 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						ax = this13.data[idx + 2];
						var this14 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						ay = this14.data[idx + 3];
						idx += 4;
						openfl__$internal_renderer_opengl_utils_PathBuiler.lineTo(ax,ay);
						break;
					case 3:
						var this15 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						cx = this15.data[idx];
						var this16 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						cy = this16.data[idx + 1];
						var this17 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						ax = this17.data[idx + 2];
						var this18 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						ay = this18.data[idx + 3];
						idx += 4;
						if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0) {
							if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
							openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
						}
						openfl__$internal_renderer_GraphicsPaths.curveTo(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points,cx,cy,ax,ay);
						break;
					case 6:
						var this19 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						cx = this19.data[idx];
						var this20 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						cy = this20.data[idx + 1];
						var this21 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						cx2 = this21.data[idx + 2];
						var this22 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						cy2 = this22.data[idx + 3];
						var this23 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						ax = this23.data[idx + 4];
						var this24 = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data(c14);
						ay = this24.data[idx + 5];
						idx += 6;
						if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0) {
							if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
							openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
						}
						openfl__$internal_renderer_GraphicsPaths.cubicCurveTo(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points,cx,cy,cx2,cy2,ax,ay);
						break;
					default:
					}
				}
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding = 0;
				break;
			case 18:
				var c15 = data.readOverrideMatrix();
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.OverrideMatrix(openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$.get_matrix(c15));
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable = false;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			default:
				data.skip(type);
			}
		}
		openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
		data.destroy();
	}
	graphics.__drawPaths = openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths;
	return glStack;
};
var openfl__$internal_renderer_opengl_utils_LineStyle = function() {
	this.width = 0;
	this.color = 0;
	this.alpha = 1;
	this.scaleMode = 2;
	this.caps = 1;
	this.joints = 2;
	this.miterLimit = 3;
};
$hxClasses["openfl._internal.renderer.opengl.utils.LineStyle"] = openfl__$internal_renderer_opengl_utils_LineStyle;
openfl__$internal_renderer_opengl_utils_LineStyle.__name__ = ["openfl","_internal","renderer","opengl","utils","LineStyle"];
openfl__$internal_renderer_opengl_utils_LineStyle.prototype = {
	__class__: openfl__$internal_renderer_opengl_utils_LineStyle
};
var openfl__$internal_renderer_opengl_utils_FillType = $hxClasses["openfl._internal.renderer.opengl.utils.FillType"] = { __ename__ : ["openfl","_internal","renderer","opengl","utils","FillType"], __constructs__ : ["None","Color","Texture","Gradient"] };
openfl__$internal_renderer_opengl_utils_FillType.None = ["None",0];
openfl__$internal_renderer_opengl_utils_FillType.None.toString = $estr;
openfl__$internal_renderer_opengl_utils_FillType.None.__enum__ = openfl__$internal_renderer_opengl_utils_FillType;
openfl__$internal_renderer_opengl_utils_FillType.Color = function(color,alpha) { var $x = ["Color",1,color,alpha]; $x.__enum__ = openfl__$internal_renderer_opengl_utils_FillType; $x.toString = $estr; return $x; };
openfl__$internal_renderer_opengl_utils_FillType.Texture = function(bitmap,matrix,repeat,smooth) { var $x = ["Texture",2,bitmap,matrix,repeat,smooth]; $x.__enum__ = openfl__$internal_renderer_opengl_utils_FillType; $x.toString = $estr; return $x; };
openfl__$internal_renderer_opengl_utils_FillType.Gradient = ["Gradient",3];
openfl__$internal_renderer_opengl_utils_FillType.Gradient.toString = $estr;
openfl__$internal_renderer_opengl_utils_FillType.Gradient.__enum__ = openfl__$internal_renderer_opengl_utils_FillType;
var openfl__$internal_renderer_opengl_utils_FilterManager = function(gl,transparent) {
	this.transparent = transparent;
	this.filterStack = [];
	this.offsetX = 0;
	this.offsetY = 0;
	this.setContext(gl);
};
$hxClasses["openfl._internal.renderer.opengl.utils.FilterManager"] = openfl__$internal_renderer_opengl_utils_FilterManager;
openfl__$internal_renderer_opengl_utils_FilterManager.__name__ = ["openfl","_internal","renderer","opengl","utils","FilterManager"];
openfl__$internal_renderer_opengl_utils_FilterManager.prototype = {
	applyFilterPass: function(filter,filterArea,width,height) {
	}
	,begin: function(renderSession,buffer) {
		this.renderSession = renderSession;
		this.defaultShader = renderSession.shaderManager.defaultShader;
		this.width = 0;
		this.height = 0;
		this.buffer = buffer;
	}
	,destroy: function() {
		var gl = this.gl;
		this.filterStack = null;
		this.offsetX = 0;
		this.offsetY = 0;
		var _g = 0;
		var _g1 = this.texturePool;
		while(_g < _g1.length) {
			var texture = _g1[_g];
			++_g;
			texture.destroy();
		}
		this.texturePool = null;
		gl.deleteBuffer(this.vertexBuffer);
		gl.deleteBuffer(this.uvBuffer);
		gl.deleteBuffer(this.colorBuffer);
		gl.deleteBuffer(this.indexBuffer);
	}
	,initShaderBuffers: function() {
		var gl = this.gl;
		this.vertexBuffer = gl.createBuffer();
		this.uvBuffer = gl.createBuffer();
		this.colorBuffer = gl.createBuffer();
		this.indexBuffer = gl.createBuffer();
		var array = [0.0,0.0,1.0,0.0,0.0,1.0,1.0,1.0];
		var this1;
		if(array != null) this1 = new Float32Array(array); else this1 = null;
		this.vertexArray = this1;
		gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffer);
		gl.bufferData(gl.ARRAY_BUFFER,this.vertexArray,gl.STATIC_DRAW);
		var array1 = [0.0,0.0,1.0,0.0,0.0,1.0,1.0,1.0];
		var this2;
		if(array1 != null) this2 = new Float32Array(array1); else this2 = null;
		this.uvArray = this2;
		gl.bindBuffer(gl.ARRAY_BUFFER,this.uvBuffer);
		gl.bufferData(gl.ARRAY_BUFFER,this.uvArray,gl.STATIC_DRAW);
		var array2 = [1.0,16777215,1.0,16777215,1.0,16777215,1.0,16777215];
		var this3;
		if(array2 != null) this3 = new Float32Array(array2); else this3 = null;
		this.colorArray = this3;
		gl.bindBuffer(gl.ARRAY_BUFFER,this.colorBuffer);
		gl.bufferData(gl.ARRAY_BUFFER,this.colorArray,gl.STATIC_DRAW);
		gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);
		gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,(function($this) {
			var $r;
			var array3 = [0,1,2,1,3,2];
			var this4;
			if(array3 != null) this4 = new Uint16Array(array3); else this4 = null;
			$r = this4;
			return $r;
		}(this)),gl.STATIC_DRAW);
	}
	,popFilter: function() {
	}
	,pushFilter: function(filterBlock) {
	}
	,setContext: function(gl) {
		this.gl = gl;
		this.texturePool = [];
		this.initShaderBuffers();
	}
	,__class__: openfl__$internal_renderer_opengl_utils_FilterManager
};
var openfl__$internal_renderer_opengl_utils_GLMaskManager = function(renderSession) {
	openfl__$internal_renderer_AbstractMaskManager.call(this,renderSession);
	this.setContext(renderSession.gl);
	this.clips = [];
};
$hxClasses["openfl._internal.renderer.opengl.utils.GLMaskManager"] = openfl__$internal_renderer_opengl_utils_GLMaskManager;
openfl__$internal_renderer_opengl_utils_GLMaskManager.__name__ = ["openfl","_internal","renderer","opengl","utils","GLMaskManager"];
openfl__$internal_renderer_opengl_utils_GLMaskManager.__super__ = openfl__$internal_renderer_AbstractMaskManager;
openfl__$internal_renderer_opengl_utils_GLMaskManager.prototype = $extend(openfl__$internal_renderer_AbstractMaskManager.prototype,{
	destroy: function() {
		this.gl = null;
	}
	,pushRect: function(rect,transform) {
		if(rect == null) return;
		var m = transform.clone();
		openfl__$internal_renderer_opengl_GLBitmap.flipMatrix(m,this.renderSession.renderer.viewport.height);
		var clip = rect.clone();
		clip.__transform(clip,m);
		if(this.currentClip != null) clip = this.currentClip.intersection(clip);
		var restartBatch = this.currentClip == null || clip.isEmpty() || this.currentClip.containsRect(clip);
		this.clips.push(clip);
		this.currentClip = clip;
		if(restartBatch) {
			this.renderSession.spriteBatch.stop();
			this.renderSession.spriteBatch.start(this.currentClip);
		}
	}
	,pushMask: function(mask) {
		this.renderSession.spriteBatch.stop();
		this.renderSession.stencilManager.pushMask(mask,this.renderSession);
		this.renderSession.spriteBatch.start(this.currentClip);
	}
	,popMask: function() {
		this.renderSession.spriteBatch.stop();
		this.renderSession.stencilManager.popMask(null,this.renderSession);
		this.renderSession.spriteBatch.start(this.currentClip);
	}
	,popRect: function() {
		this.renderSession.spriteBatch.stop();
		this.clips.pop();
		this.currentClip = this.clips[this.clips.length - 1];
		this.renderSession.spriteBatch.start(this.currentClip);
	}
	,saveState: function() {
		this.savedClip = this.currentClip;
		this.currentClip = null;
	}
	,restoreState: function() {
		this.currentClip = this.savedClip;
		this.savedClip = null;
	}
	,setContext: function(gl) {
		if(this.renderSession != null) this.renderSession.gl = gl;
		this.gl = gl;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_GLMaskManager
});
var openfl__$internal_renderer_opengl_utils_VertexAttribute = function(components,type,normalized,name,defaultValue) {
	if(normalized == null) normalized = false;
	this.enabled = true;
	this.normalized = false;
	this.components = components;
	this.type = type;
	this.normalized = normalized;
	this.name = name;
	if(defaultValue == null) {
		var this1;
		if(components != null) this1 = new Float32Array(components); else this1 = null;
		this.defaultValue = this1;
	} else this.defaultValue = defaultValue;
};
$hxClasses["openfl._internal.renderer.opengl.utils.VertexAttribute"] = openfl__$internal_renderer_opengl_utils_VertexAttribute;
openfl__$internal_renderer_opengl_utils_VertexAttribute.__name__ = ["openfl","_internal","renderer","opengl","utils","VertexAttribute"];
openfl__$internal_renderer_opengl_utils_VertexAttribute.prototype = {
	copy: function() {
		return new openfl__$internal_renderer_opengl_utils_VertexAttribute(this.components,this.type,this.normalized,this.name,this.defaultValue);
	}
	,getElementsBytes: function() {
		var _g = this.type;
		switch(_g) {
		case 5120:case 5121:
			return 1;
		case 5122:case 5123:
			return 2;
		default:
			return 4;
		}
	}
	,get_elements: function() {
		return Math.floor(this.components * this.getElementsBytes() / 4);
	}
	,__class__: openfl__$internal_renderer_opengl_utils_VertexAttribute
	,__properties__: {get_elements:"get_elements"}
};
var openfl_geom_Rectangle = function(x,y,width,height) {
	if(height == null) height = 0;
	if(width == null) width = 0;
	if(y == null) y = 0;
	if(x == null) x = 0;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
};
$hxClasses["openfl.geom.Rectangle"] = openfl_geom_Rectangle;
openfl_geom_Rectangle.__name__ = ["openfl","geom","Rectangle"];
openfl_geom_Rectangle.prototype = {
	clone: function() {
		return new openfl_geom_Rectangle(this.x,this.y,this.width,this.height);
	}
	,contains: function(x,y) {
		return x >= this.x && y >= this.y && x < this.get_right() && y < this.get_bottom();
	}
	,containsPoint: function(point) {
		return this.contains(point.x,point.y);
	}
	,containsRect: function(rect) {
		if(rect.width <= 0 || rect.height <= 0) return rect.x > this.x && rect.y > this.y && rect.get_right() < this.get_right() && rect.get_bottom() < this.get_bottom(); else return rect.x >= this.x && rect.y >= this.y && rect.get_right() <= this.get_right() && rect.get_bottom() <= this.get_bottom();
	}
	,copyFrom: function(sourceRect) {
		this.x = sourceRect.x;
		this.y = sourceRect.y;
		this.width = sourceRect.width;
		this.height = sourceRect.height;
	}
	,equals: function(toCompare) {
		return toCompare != null && this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height;
	}
	,inflate: function(dx,dy) {
		this.x -= dx;
		this.width += dx * 2;
		this.y -= dy;
		this.height += dy * 2;
	}
	,inflatePoint: function(point) {
		this.inflate(point.x,point.y);
	}
	,intersection: function(toIntersect) {
		var x0;
		if(this.x < toIntersect.x) x0 = toIntersect.x; else x0 = this.x;
		var x1;
		if(this.get_right() > toIntersect.get_right()) x1 = toIntersect.get_right(); else x1 = this.get_right();
		if(x1 <= x0) return new openfl_geom_Rectangle();
		var y0;
		if(this.y < toIntersect.y) y0 = toIntersect.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() > toIntersect.get_bottom()) y1 = toIntersect.get_bottom(); else y1 = this.get_bottom();
		if(y1 <= y0) return new openfl_geom_Rectangle();
		return new openfl_geom_Rectangle(x0,y0,x1 - x0,y1 - y0);
	}
	,intersects: function(toIntersect) {
		var x0;
		if(this.x < toIntersect.x) x0 = toIntersect.x; else x0 = this.x;
		var x1;
		if(this.get_right() > toIntersect.get_right()) x1 = toIntersect.get_right(); else x1 = this.get_right();
		if(x1 <= x0) return false;
		var y0;
		if(this.y < toIntersect.y) y0 = toIntersect.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() > toIntersect.get_bottom()) y1 = toIntersect.get_bottom(); else y1 = this.get_bottom();
		return y1 > y0;
	}
	,isEmpty: function() {
		return this.width <= 0 || this.height <= 0;
	}
	,offset: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,offsetPoint: function(point) {
		this.x += point.x;
		this.y += point.y;
	}
	,setEmpty: function() {
		this.x = this.y = this.width = this.height = 0;
	}
	,setTo: function(xa,ya,widtha,heighta) {
		this.x = xa;
		this.y = ya;
		this.width = widtha;
		this.height = heighta;
	}
	,toString: function() {
		return "(x=" + this.x + ", y=" + this.y + ", width=" + this.width + ", height=" + this.height + ")";
	}
	,union: function(toUnion) {
		if(this.width == 0 || this.height == 0) return toUnion.clone(); else if(toUnion.width == 0 || toUnion.height == 0) return this.clone();
		var x0;
		if(this.x > toUnion.x) x0 = toUnion.x; else x0 = this.x;
		var x1;
		if(this.get_right() < toUnion.get_right()) x1 = toUnion.get_right(); else x1 = this.get_right();
		var y0;
		if(this.y > toUnion.y) y0 = toUnion.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() < toUnion.get_bottom()) y1 = toUnion.get_bottom(); else y1 = this.get_bottom();
		return new openfl_geom_Rectangle(x0,y0,x1 - x0,y1 - y0);
	}
	,__contract: function(x,y,width,height) {
		if(this.width == 0 && this.height == 0) return;
		var cacheRight = this.get_right();
		var cacheBottom = this.get_bottom();
		if(this.x < x) this.x = x;
		if(this.y < y) this.y = y;
		if(this.get_right() > x + width) this.width = x + width - this.x;
		if(this.get_bottom() > y + height) this.height = y + height - this.y;
	}
	,__expand: function(x,y,width,height) {
		if(this.width == 0 && this.height == 0) {
			this.x = x;
			this.y = y;
			this.width = width;
			this.height = height;
			return;
		}
		var cacheRight = this.get_right();
		var cacheBottom = this.get_bottom();
		if(this.x > x) {
			this.x = x;
			this.width = cacheRight - x;
		}
		if(this.y > y) {
			this.y = y;
			this.height = cacheBottom - y;
		}
		if(cacheRight < x + width) this.width = x + width - this.x;
		if(cacheBottom < y + height) this.height = y + height - this.y;
	}
	,__toLimeRectangle: function() {
		return new lime_math_Rectangle(this.x,this.y,this.width,this.height);
	}
	,__transform: function(rect,m) {
		var tx0 = m.a * this.x + m.c * this.y;
		var tx1 = tx0;
		var ty0 = m.b * this.x + m.d * this.y;
		var ty1 = ty0;
		var tx = m.a * (this.x + this.width) + m.c * this.y;
		var ty = m.b * (this.x + this.width) + m.d * this.y;
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		tx = m.a * (this.x + this.width) + m.c * (this.y + this.height);
		ty = m.b * (this.x + this.width) + m.d * (this.y + this.height);
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		tx = m.a * this.x + m.c * (this.y + this.height);
		ty = m.b * this.x + m.d * (this.y + this.height);
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		rect.setTo(tx0 + m.tx,ty0 + m.ty,tx1 - tx0,ty1 - ty0);
	}
	,get_bottom: function() {
		return this.y + this.height;
	}
	,set_bottom: function(b) {
		this.height = b - this.y;
		return b;
	}
	,get_bottomRight: function() {
		return new openfl_geom_Point(this.x + this.width,this.y + this.height);
	}
	,set_bottomRight: function(p) {
		this.width = p.x - this.x;
		this.height = p.y - this.y;
		return p.clone();
	}
	,get_left: function() {
		return this.x;
	}
	,set_left: function(l) {
		this.width -= l - this.x;
		this.x = l;
		return l;
	}
	,get_right: function() {
		return this.x + this.width;
	}
	,set_right: function(r) {
		this.width = r - this.x;
		return r;
	}
	,get_size: function() {
		return new openfl_geom_Point(this.width,this.height);
	}
	,set_size: function(p) {
		this.width = p.x;
		this.height = p.y;
		return p.clone();
	}
	,get_top: function() {
		return this.y;
	}
	,set_top: function(t) {
		this.height -= t - this.y;
		this.y = t;
		return t;
	}
	,get_topLeft: function() {
		return new openfl_geom_Point(this.x,this.y);
	}
	,set_topLeft: function(p) {
		this.x = p.x;
		this.y = p.y;
		return p.clone();
	}
	,__class__: openfl_geom_Rectangle
	,__properties__: {set_topLeft:"set_topLeft",get_topLeft:"get_topLeft",set_top:"set_top",get_top:"get_top",set_size:"set_size",get_size:"get_size",set_right:"set_right",get_right:"get_right",set_left:"set_left",get_left:"get_left",set_bottomRight:"set_bottomRight",get_bottomRight:"get_bottomRight",set_bottom:"set_bottom",get_bottom:"get_bottom"}
};
var openfl__$internal_renderer_opengl_utils_GraphicsRenderer = function() { };
$hxClasses["openfl._internal.renderer.opengl.utils.GraphicsRenderer"] = openfl__$internal_renderer_opengl_utils_GraphicsRenderer;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.__name__ = ["openfl","_internal","renderer","opengl","utils","GraphicsRenderer"];
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.lastVertsBuffer = null;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.lastBucketMode = null;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.lastTexture = null;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.lastTextureRepeat = null;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.lastTextureSmooth = null;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.overrideMatrix = null;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildCircle = function(path,glStack,localCoords) {
	if(localCoords == null) localCoords = false;
	var rectData = path.points;
	var x = rectData[0];
	var y = rectData[1];
	var rx = rectData[2];
	var ry;
	if(rectData.length == 3) ry = rx; else ry = rectData[3];
	if(path.type == openfl__$internal_renderer_opengl_utils_GraphicType.Ellipse) {
		rx /= 2;
		ry /= 2;
		x += rx;
		y += ry;
	}
	if(localCoords) {
		x -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
		y -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
	}
	var totalSegs = 40;
	var seg = Math.PI * 2 / totalSegs;
	var bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
	var fill = bucket.getData(openfl__$internal_renderer_opengl_utils_BucketDataType.Fill);
	if(fill != null) {
		var verts = fill.verts;
		var indices = fill.indices;
		var vertPos = verts.length / 2 | 0;
		indices.push(vertPos);
		var _g1 = 0;
		var _g = totalSegs + 1;
		while(_g1 < _g) {
			var i = _g1++;
			verts.push(x);
			verts.push(y);
			verts.push(x + Math.sin(seg * i) * rx);
			verts.push(y + Math.cos(seg * i) * ry);
			indices.push(vertPos++);
			indices.push(vertPos++);
		}
		indices.push(vertPos - 1);
	}
	if(path.line.width > 0) {
		var tempPoints = path.points;
		path.points = [];
		openfl__$internal_renderer_GraphicsPaths.ellipse(path.points,x,y,rx,ry,totalSegs);
		openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildLine(path,bucket);
		path.points = tempPoints;
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildComplexPoly = function(path,glStack,localCoords) {
	if(localCoords == null) localCoords = false;
	var bucket = null;
	if(path.points.length >= 6) {
		var points = path.points.slice();
		if(localCoords) {
			var _g1 = 0;
			var _g = points.length / 2 | 0;
			while(_g1 < _g) {
				var i = _g1++;
				points[i * 2] -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
				points[i * 2 + 1] -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
			}
		}
		bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
		var fill = bucket.getData(openfl__$internal_renderer_opengl_utils_BucketDataType.Fill);
		fill.drawMode = glStack.gl.TRIANGLE_FAN;
		fill.verts = points;
		var indices = fill.indices;
		var length = points.length / 2 | 0;
		var _g2 = 0;
		while(_g2 < length) {
			var i1 = _g2++;
			indices.push(i1);
		}
	}
	if(path.line.width > 0) {
		if(bucket == null) bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
		openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildLine(path,bucket,localCoords);
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildLine = function(path,bucket,localCoords) {
	if(localCoords == null) localCoords = false;
	var points = path.points;
	if(points.length == 0) return;
	var line = bucket.getData(openfl__$internal_renderer_opengl_utils_BucketDataType.Line);
	if(localCoords) {
		var _g1 = 0;
		var _g = points.length / 2 | 0;
		while(_g1 < _g) {
			var i = _g1++;
			points[i * 2] -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
			points[i * 2 + 1] -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
		}
	}
	var firstPoint = new openfl_geom_Point(points[0],points[1]);
	var lastPoint = new openfl_geom_Point(points[points.length - 2 | 0],points[points.length - 1 | 0]);
	if(firstPoint.x == lastPoint.x && firstPoint.y == lastPoint.y) {
		points = points.slice();
		points.pop();
		points.pop();
		lastPoint = new openfl_geom_Point(points[points.length - 2 | 0],points[points.length - 1 | 0]);
		var midPointX = lastPoint.x + (firstPoint.x - lastPoint.x) * 0.5;
		var midPointY = lastPoint.y + (firstPoint.y - lastPoint.y) * 0.5;
		points.unshift(midPointY);
		points.unshift(midPointX);
		points.push(midPointX);
		points.push(midPointY);
	}
	var verts = line.verts;
	var indices = line.indices;
	var length = points.length / 2 | 0;
	var indexCount = points.length;
	var indexStart = verts.length / 6 | 0;
	var width = path.line.width / 2;
	var color = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.hex2rgb(path.line.color);
	var alpha = path.line.alpha;
	var r = color[0];
	var g = color[1];
	var b = color[2];
	var px;
	var py;
	var p1x;
	var p1y;
	var p2x;
	var p2y;
	var p3x;
	var p3y;
	var perpx;
	var perpy;
	var perp2x;
	var perp2y;
	var perp3x;
	var perp3y;
	var a1;
	var b1;
	var c1;
	var a2;
	var b2;
	var c2;
	var denom;
	var pdist;
	var dist;
	p1x = points[0];
	p1y = points[1];
	p2x = points[2];
	p2y = points[3];
	perpx = -(p1y - p2y);
	perpy = p1x - p2x;
	dist = Math.sqrt(Math.abs(perpx * perpx + perpy * perpy));
	perpx = perpx / dist;
	perpy = perpy / dist;
	perpx = perpx * width;
	perpy = perpy * width;
	verts.push(p1x - perpx);
	verts.push(p1y - perpy);
	verts.push(r);
	verts.push(g);
	verts.push(b);
	verts.push(alpha);
	verts.push(p1x + perpx);
	verts.push(p1y + perpy);
	verts.push(r);
	verts.push(g);
	verts.push(b);
	verts.push(alpha);
	var _g11 = 1;
	var _g2 = length - 1;
	while(_g11 < _g2) {
		var i1 = _g11++;
		p1x = points[(i1 - 1) * 2];
		p1y = points[(i1 - 1) * 2 + 1];
		p2x = points[i1 * 2];
		p2y = points[i1 * 2 + 1];
		p3x = points[(i1 + 1) * 2];
		p3y = points[(i1 + 1) * 2 + 1];
		perpx = -(p1y - p2y);
		perpy = p1x - p2x;
		dist = Math.sqrt(Math.abs(perpx * perpx + perpy * perpy));
		perpx = perpx / dist;
		perpy = perpy / dist;
		perpx = perpx * width;
		perpy = perpy * width;
		perp2x = -(p2y - p3y);
		perp2y = p2x - p3x;
		dist = Math.sqrt(Math.abs(perp2x * perp2x + perp2y * perp2y));
		perp2x = perp2x / dist;
		perp2y = perp2y / dist;
		perp2x = perp2x * width;
		perp2y = perp2y * width;
		a1 = -perpy + p1y - (-perpy + p2y);
		b1 = -perpx + p2x - (-perpx + p1x);
		c1 = (-perpx + p1x) * (-perpy + p2y) - (-perpx + p2x) * (-perpy + p1y);
		a2 = -perp2y + p3y - (-perp2y + p2y);
		b2 = -perp2x + p2x - (-perp2x + p3x);
		c2 = (-perp2x + p3x) * (-perp2y + p2y) - (-perp2x + p2x) * (-perp2y + p3y);
		denom = a1 * b2 - a2 * b1;
		if(Math.abs(denom) < 0.1) {
			denom += 10.1;
			verts.push(p2x - perpx);
			verts.push(p2y - perpy);
			verts.push(r);
			verts.push(g);
			verts.push(b);
			verts.push(alpha);
			verts.push(p2x + perpx);
			verts.push(p2y + perpy);
			verts.push(r);
			verts.push(g);
			verts.push(b);
			verts.push(alpha);
			continue;
		}
		px = (b1 * c2 - b2 * c1) / denom;
		py = (a2 * c1 - a1 * c2) / denom;
		pdist = (px - p2x) * (px - p2x) + (py - p2y) + (py - p2y);
		if(pdist > 19600) {
			perp3x = perpx - perp2x;
			perp3y = perpy - perp2y;
			dist = Math.sqrt(Math.abs(perp3x * perp3x + perp3y * perp3y));
			perp3x = perp3x / dist;
			perp3y = perp3y / dist;
			perp3x = perp3x * width;
			perp3y = perp3y * width;
			verts.push(p2x - perp3x);
			verts.push(p2y - perp3y);
			verts.push(r);
			verts.push(g);
			verts.push(b);
			verts.push(alpha);
			verts.push(p2x + perp3x);
			verts.push(p2y + perp3y);
			verts.push(r);
			verts.push(g);
			verts.push(b);
			verts.push(alpha);
			verts.push(p2x - perp3x);
			verts.push(p2y - perp3y);
			verts.push(r);
			verts.push(g);
			verts.push(b);
			verts.push(alpha);
			indexCount++;
		} else {
			verts.push(px);
			verts.push(py);
			verts.push(r);
			verts.push(g);
			verts.push(b);
			verts.push(alpha);
			verts.push(p2x - (px - p2x));
			verts.push(p2y - (py - p2y));
			verts.push(r);
			verts.push(g);
			verts.push(b);
			verts.push(alpha);
		}
	}
	p1x = points[(length - 2) * 2];
	p1y = points[(length - 2) * 2 + 1];
	p2x = points[(length - 1) * 2];
	p2y = points[(length - 1) * 2 + 1];
	perpx = -(p1y - p2y);
	perpy = p1x - p2x;
	dist = Math.sqrt(Math.abs(perpx * perpx + perpy * perpy));
	if(!isFinite(dist)) haxe_Log.trace(perpx * perpx + perpy * perpy,{ fileName : "GraphicsRenderer.hx", lineNumber : 407, className : "openfl._internal.renderer.opengl.utils.GraphicsRenderer", methodName : "buildLine"});
	perpx = perpx / dist;
	perpy = perpy / dist;
	perpx = perpx * width;
	perpy = perpy * width;
	verts.push(p2x - perpx);
	verts.push(p2y - perpy);
	verts.push(r);
	verts.push(g);
	verts.push(b);
	verts.push(alpha);
	verts.push(p2x + perpx);
	verts.push(p2y + perpy);
	verts.push(r);
	verts.push(g);
	verts.push(b);
	verts.push(alpha);
	indices.push(indexStart);
	var _g3 = 0;
	while(_g3 < indexCount) {
		var i2 = _g3++;
		indices.push(indexStart++);
	}
	indices.push(indexStart - 1);
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildPoly = function(path,glStack) {
	if(path.points.length < 6) return;
	var points = path.points;
	var l = points.length;
	var sx = points[0];
	var sy = points[1];
	var ex = points[l - 2];
	var ey = points[l - 1];
	if(sx != ex || sy != ey) {
		points.push(sx);
		points.push(sy);
	}
	var length = points.length / 2 | 0;
	var bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
	var fill = bucket.getData(openfl__$internal_renderer_opengl_utils_BucketDataType.Fill);
	var verts = fill.verts;
	var indices = fill.indices;
	if(fill != null) {
		var triangles = [];
		openfl__$internal_renderer_PolyK.triangulate(triangles,points);
		var vertPos = verts.length / 2;
		var i = 0;
		while(i < triangles.length) {
			indices.push(triangles[i] + vertPos | 0);
			indices.push(triangles[i] + vertPos | 0);
			indices.push(triangles[i + 1] + vertPos | 0);
			indices.push(triangles[i + 2] + vertPos | 0);
			indices.push(triangles[i + 2] + vertPos | 0);
			i += 3;
		}
		var _g = 0;
		while(_g < length) {
			var i1 = _g++;
			verts.push(points[i1 * 2]);
			verts.push(points[i1 * 2 + 1]);
		}
	}
	if(path.line.width > 0) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildLine(path,bucket);
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildRectangle = function(path,glStack,localCoords) {
	if(localCoords == null) localCoords = false;
	var rectData = path.points;
	var x = rectData[0];
	var y = rectData[1];
	var width = rectData[2];
	var height = rectData[3];
	if(localCoords) {
		x -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
		y -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
	}
	var bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
	var fill = bucket.getData(openfl__$internal_renderer_opengl_utils_BucketDataType.Fill);
	if(fill != null) {
		var verts = fill.verts;
		var indices = fill.indices;
		var vertPos = verts.length / 2 | 0;
		verts.push(x);
		verts.push(y);
		verts.push(x + width);
		verts.push(y);
		verts.push(x);
		verts.push(y + height);
		verts.push(x + width);
		verts.push(y + height);
		indices.push(vertPos);
		indices.push(vertPos);
		indices.push(vertPos + 1);
		indices.push(vertPos + 2);
		indices.push(vertPos + 3);
		indices.push(vertPos + 3);
	}
	if(path.line.width > 0) {
		var tempPoints = path.points;
		path.points = [x,y,x + width,y,x + width,y + height,x,y + height,x,y];
		openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildLine(path,bucket);
		path.points = tempPoints;
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildRoundedRectangle = function(path,glStack,localCoords) {
	if(localCoords == null) localCoords = false;
	var points = path.points.slice();
	var x = points[0];
	var y = points[1];
	var width = points[2];
	var height = points[3];
	var rx = points[4];
	var ry = points[5];
	if(localCoords) {
		x -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
		y -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
	}
	var recPoints = [];
	openfl__$internal_renderer_GraphicsPaths.roundRectangle(recPoints,x,y,width,height,rx,ry);
	var bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
	var fill = bucket.getData(openfl__$internal_renderer_opengl_utils_BucketDataType.Fill);
	if(fill != null) {
		var verts = fill.verts;
		var indices = fill.indices;
		var vecPos = verts.length / 2;
		var triangles = [];
		openfl__$internal_renderer_PolyK.triangulate(triangles,recPoints);
		var i = 0;
		while(i < triangles.length) {
			indices.push(triangles[i] + vecPos | 0);
			indices.push(triangles[i] + vecPos | 0);
			indices.push(triangles[i + 1] + vecPos | 0);
			indices.push(triangles[i + 2] + vecPos | 0);
			indices.push(triangles[i + 2] + vecPos | 0);
			i += 3;
		}
		i = 0;
		while(i < recPoints.length) {
			verts.push(recPoints[i]);
			verts.push(recPoints[++i]);
			i++;
		}
	}
	if(path.line.width > 0) {
		var tempPoints = path.points;
		path.points = recPoints;
		openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildLine(path,bucket);
		path.points = tempPoints;
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildDrawTriangles = function(path,object,glStack,localCoords) {
	if(localCoords == null) localCoords = false;
	var args = path.type.slice(2);
	var vertices = args[0];
	var indices = args[1];
	var uvtData = args[2];
	var culling = args[3];
	var colors = args[4];
	var blendMode = args[5];
	var a;
	var b;
	var c;
	var d;
	var tx;
	var ty;
	if(localCoords) {
		a = 1.0;
		b = 0.0;
		c = 0.0;
		d = 1.0;
		tx = 0.0;
		ty = 0.0;
	} else {
		a = object.__worldTransform.a;
		b = object.__worldTransform.b;
		c = object.__worldTransform.c;
		d = object.__worldTransform.d;
		tx = object.__worldTransform.tx;
		ty = object.__worldTransform.ty;
	}
	var hasColors = colors != null && colors.length > 0;
	var bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
	var fill = bucket.getData(openfl__$internal_renderer_opengl_utils_BucketDataType.Fill);
	var colorAttrib = fill.vertexArray.attributes[2];
	colorAttrib.enabled = hasColors;
	var array = [1,1,1,1];
	var this1;
	if(array != null) this1 = new Float32Array(array); else this1 = null;
	colorAttrib.defaultValue = this1;
	fill.rawVerts = true;
	fill.glLength = indices.length;
	fill.stride = Std["int"](fill.vertexArray.get_stride() / 4);
	var vertsLength = fill.glLength * fill.stride;
	var verts;
	if(fill.glVerts == null || fill.glVerts.length < vertsLength) {
		var this2;
		if(vertsLength != null) this2 = new Float32Array(vertsLength); else this2 = null;
		verts = this2;
		fill.glVerts = verts;
	} else verts = fill.glVerts;
	var glColors;
	var buffer = verts.buffer;
	var this3;
	if(buffer != null) this3 = new Uint32Array(buffer,0); else this3 = null;
	glColors = this3;
	var v0 = 0;
	var v1 = 0;
	var v2 = 0;
	var i0 = 0;
	var i1 = 0;
	var i2 = 0;
	var x0 = 0.0;
	var y0 = 0.0;
	var x1 = 0.0;
	var y1 = 0.0;
	var x2 = 0.0;
	var y2 = 0.0;
	var idx = 0;
	var _g1 = 0;
	var _g = indices.length / 3 | 0;
	while(_g1 < _g) {
		var i = _g1++;
		i0 = indices.data[i * 3];
		i1 = indices.data[i * 3 + 1];
		i2 = indices.data[i * 3 + 2];
		v0 = i0 * 2;
		v1 = i1 * 2;
		v2 = i2 * 2;
		x0 = vertices.data[v0];
		y0 = vertices.data[v0 + 1];
		x1 = vertices.data[v1];
		y1 = vertices.data[v1 + 1];
		x2 = vertices.data[v2];
		y2 = vertices.data[v2 + 1];
		if(localCoords) {
			x0 -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
			y0 -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
			x1 -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
			y1 -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
			x2 -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
			y2 -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
		}
		switch(culling) {
		case 2:
			if(!((x1 - x0) * (y2 - y0) - (y1 - y0) * (x2 - x0) < 0)) continue;
			break;
		case 0:
			if((x1 - x0) * (y2 - y0) - (y1 - y0) * (x2 - x0) < 0) continue;
			break;
		default:
		}
		var idx1 = idx++;
		verts[idx1] = a * x0 + c * y0 + tx;
		var idx2 = idx++;
		verts[idx2] = b * x0 + d * y0 + ty;
		var idx3 = idx++;
		verts[idx3] = uvtData.data[v0];
		var idx4 = idx++;
		verts[idx4] = uvtData.data[v0 + 1];
		if(hasColors) {
			var idx5 = idx++;
			glColors[idx5] = colors.data[i0];
		}
		var idx6 = idx++;
		verts[idx6] = a * x1 + c * y1 + tx;
		var idx7 = idx++;
		verts[idx7] = b * x1 + d * y1 + ty;
		var idx8 = idx++;
		verts[idx8] = uvtData.data[v1];
		var idx9 = idx++;
		verts[idx9] = uvtData.data[v1 + 1];
		if(hasColors) {
			var idx10 = idx++;
			glColors[idx10] = colors.data[i1];
		}
		var idx11 = idx++;
		verts[idx11] = a * x2 + c * y2 + tx;
		var idx12 = idx++;
		verts[idx12] = b * x2 + d * y2 + ty;
		var idx13 = idx++;
		verts[idx13] = uvtData.data[v2];
		var idx14 = idx++;
		verts[idx14] = uvtData.data[v2 + 1];
		if(hasColors) {
			var idx15 = idx++;
			glColors[idx15] = colors.data[i2];
		}
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildDrawTiles = function(path,glStack) {
	openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.quadraticBezierCurve = function(fromX,fromY,cpX,cpY,toX,toY) {
	var xa;
	var ya;
	var xb;
	var yb;
	var x;
	var y;
	var n = 20;
	var points = [];
	var getPt = function(n1,n2,perc) {
		var diff = n2 - n1;
		return n1 + diff * perc;
	};
	var j = 0.0;
	var _g1 = 0;
	var _g = n + 1;
	while(_g1 < _g) {
		var i = _g1++;
		j = i / n;
		xa = getPt(fromX,cpX,j);
		ya = getPt(fromY,cpY,j);
		xb = getPt(cpX,toX,j);
		yb = getPt(cpY,toY,j);
		x = getPt(xa,xb,j);
		y = getPt(ya,yb,j);
		points.push(x);
		points.push(y);
	}
	return points;
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.render = function(object,renderSession) {
	var graphics = object.__graphics;
	var bounds = graphics.__bounds;
	var spritebatch = renderSession.spriteBatch;
	var dirty = graphics.__dirty;
	if(!graphics.__visible || graphics.__commands.get_length() == 0 || bounds == null || bounds.width == 0 || bounds.height == 0) {
		graphics.__glStack.splice(0,graphics.__glStack.length);
		return;
	}
	if(dirty) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.updateGraphics(object,object.__graphics,renderSession.gl,object.get_cacheAsBitmap());
	openfl__$internal_renderer_opengl_utils_GraphicsRenderer.renderGraphics(object,renderSession,false);
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.renderGraphics = function(object,renderSession,localCoords) {
	if(localCoords == null) localCoords = false;
	var graphics = object.__graphics;
	var gl = renderSession.gl;
	var glStack = graphics.__glStack[openfl__$internal_renderer_opengl_GLRenderer.glContextId];
	if(glStack == null) return;
	var bucket;
	var translationMatrix;
	if(localCoords) translationMatrix = openfl_geom_Matrix.__identity; else translationMatrix = object.__worldTransform;
	var clipRect = renderSession.spriteBatch.clipRect;
	var batchDrawing = renderSession.spriteBatch.drawing;
	batchDrawing = renderSession.spriteBatch.drawing;
	var _g1 = 0;
	var _g = glStack.buckets.length;
	while(_g1 < _g) {
		var i = _g1++;
		batchDrawing = renderSession.spriteBatch.drawing;
		if(batchDrawing && !localCoords) renderSession.spriteBatch.finish();
		renderSession.blendModeManager.setBlendMode(object.__blendMode);
		if(clipRect != null) {
			gl.enable(gl.SCISSOR_TEST);
			gl.scissor(Math.floor(clipRect.x),Math.floor(clipRect.y),Math.floor(clipRect.width),Math.floor(clipRect.height));
		}
		bucket = glStack.buckets[i];
		var _g2 = bucket.mode;
		switch(_g2[1]) {
		case 1:case 2:
			renderSession.stencilManager.pushBucket(bucket,renderSession,translationMatrix.toArray(true));
			var shader = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareShader(bucket,renderSession,object,translationMatrix.toArray(true));
			openfl__$internal_renderer_opengl_utils_GraphicsRenderer.renderFill(bucket,shader,renderSession);
			renderSession.stencilManager.popBucket(object,bucket,renderSession);
			break;
		case 5:
			var shader1 = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareShader(bucket,renderSession,object,null);
			openfl__$internal_renderer_opengl_utils_GraphicsRenderer.renderDrawTriangles(bucket,shader1,renderSession);
			break;
		case 6:
			if(!batchDrawing) renderSession.spriteBatch.begin(renderSession,clipRect);
			var args = bucket.graphicType.slice(2);
			renderSession.spriteBatch.renderTiles(object,args[0],args[1],args[2],args[3],args[4],args[5]);
			renderSession.spriteBatch.finish();
			break;
		default:
		}
		var ct = object.__worldColorTransform;
		var _g21 = 0;
		var _g3 = bucket.lines;
		while(_g21 < _g3.length) {
			var line = _g3[_g21];
			++_g21;
			if(line != null && line.verts.length > 0) {
				var shader2 = renderSession.shaderManager.primitiveShader;
				renderSession.shaderManager.setShader(shader2);
				gl.uniformMatrix3fv(shader2.getUniformLocation("openfl_uTranslationMatrix"),false,translationMatrix.toArray(true));
				gl.uniformMatrix3fv(shader2.getUniformLocation("openfl_uProjectionMatrix"),false,renderSession.projectionMatrix.toArray(true));
				gl.uniform1f(shader2.getUniformLocation("openfl_uAlpha"),1);
				gl.uniform4f(shader2.getUniformLocation("openfl_uColorMultiplier"),ct.redMultiplier,ct.greenMultiplier,ct.blueMultiplier,ct.alphaMultiplier);
				gl.uniform4f(shader2.getUniformLocation("openfl_uColorOffset"),ct.redOffset / 255,ct.greenOffset / 255,ct.blueOffset / 255,ct.alphaOffset / 255);
				line.vertexArray.bind();
				shader2.bindVertexArray(line.vertexArray);
				gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,line.indexBuffer);
				gl.drawElements(gl.TRIANGLE_STRIP,line.indices.length,gl.UNSIGNED_SHORT,0);
			}
		}
		if(clipRect != null) gl.disable(gl.SCISSOR_TEST);
		batchDrawing = renderSession.spriteBatch.drawing;
		if(!batchDrawing && !localCoords) renderSession.spriteBatch.begin(renderSession,clipRect);
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.updateGraphics = function(object,graphics,gl,localCoords) {
	if(localCoords == null) localCoords = false;
	openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectPosition.setTo(object.get_x(),object.get_y());
	if(graphics.__bounds == null) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds = new openfl_geom_Rectangle(); else openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.copyFrom(graphics.__bounds);
	var glStack = null;
	if(graphics.__dirty) glStack = openfl__$internal_renderer_opengl_utils_DrawPath.getStack(graphics,gl);
	graphics.set___dirty(false);
	var _g = 0;
	var _g1 = glStack.buckets;
	while(_g < _g1.length) {
		var data = _g1[_g];
		++_g;
		data.reset();
		openfl__$internal_renderer_opengl_utils_GraphicsRenderer.bucketPool.push(data);
	}
	glStack.reset();
	var _g11 = glStack.lastIndex;
	var _g2 = graphics.__drawPaths.length;
	while(_g11 < _g2) {
		var i = _g11++;
		var path = graphics.__drawPaths[i];
		{
			var _g21 = path.type;
			switch(_g21[1]) {
			case 0:
				openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildComplexPoly(path,glStack,localCoords);
				break;
			case 1:
				var rounded = _g21[2];
				if(rounded) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildRoundedRectangle(path,glStack,localCoords); else openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildRectangle(path,glStack,localCoords);
				break;
			case 2:case 3:
				openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildCircle(path,glStack,localCoords);
				break;
			case 4:
				openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildDrawTriangles(path,object,glStack,localCoords);
				break;
			case 5:
				openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
				break;
			case 6:
				var m = _g21[2];
				openfl__$internal_renderer_opengl_utils_GraphicsRenderer.overrideMatrix = m;
				break;
			}
		}
		glStack.lastIndex++;
	}
	var _g3 = 0;
	var _g12 = glStack.buckets;
	while(_g3 < _g12.length) {
		var bucket = _g12[_g3];
		++_g3;
		if(bucket.uploadTileBuffer) bucket.uploadTile(Math.ceil(openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.get_left()),Math.ceil(openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.get_top()),Math.floor(openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.get_right()),Math.floor(openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.get_bottom()));
		bucket.optimize();
	}
	glStack.upload();
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket = function(path,glStack) {
	var bucket = null;
	{
		var _g = path.fill;
		switch(_g[1]) {
		case 1:
			var a = _g[3];
			var c = _g[2];
			bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.switchBucket(path.fillIndex,glStack,openfl__$internal_renderer_opengl_utils_BucketMode.Fill);
			if(c == null) bucket.color = [1,1,1]; else bucket.color = [(c >> 16 & 255) / 255,(c >> 8 & 255) / 255,(c & 255) / 255];
			bucket.color[3] = a;
			bucket.uploadTileBuffer = true;
			break;
		case 2:
			var s = _g[5];
			var r = _g[4];
			var m = _g[3];
			var b = _g[2];
			bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.switchBucket(path.fillIndex,glStack,openfl__$internal_renderer_opengl_utils_BucketMode.PatternFill);
			bucket.bitmap = b;
			bucket.textureRepeat = r;
			bucket.textureSmooth = s;
			bucket.texture = b.getTexture(glStack.gl);
			bucket.uploadTileBuffer = true;
			var pMatrix;
			if(m == null) pMatrix = new openfl_geom_Matrix(); else pMatrix = m.clone();
			pMatrix.invert();
			pMatrix.scale(1 / b.width,1 / b.height);
			var tx = pMatrix.tx;
			var ty = pMatrix.ty;
			pMatrix.tx = 0;
			pMatrix.ty = 0;
			bucket.textureTL.x = tx;
			bucket.textureTL.y = ty;
			bucket.textureBR.x = tx + 1;
			bucket.textureBR.y = ty + 1;
			bucket.textureMatrix = pMatrix;
			break;
		default:
			bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.switchBucket(path.fillIndex,glStack,openfl__$internal_renderer_opengl_utils_BucketMode.Line);
			bucket.uploadTileBuffer = false;
		}
	}
	{
		var _g1 = path.type;
		switch(_g1[1]) {
		case 4:
			bucket.mode = openfl__$internal_renderer_opengl_utils_BucketMode.DrawTriangles;
			bucket.uploadTileBuffer = false;
			break;
		case 5:
			bucket.mode = openfl__$internal_renderer_opengl_utils_BucketMode.DrawTiles;
			bucket.uploadTileBuffer = false;
			break;
		default:
		}
	}
	bucket.graphicType = path.type;
	bucket.overrideMatrix = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.overrideMatrix;
	return bucket;
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.getBucket = function(glStack,mode) {
	var b = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.bucketPool.pop();
	if(b == null) b = new openfl__$internal_renderer_opengl_utils_GLBucket(glStack.gl);
	b.mode = mode;
	glStack.buckets.push(b);
	return b;
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.switchBucket = function(fillIndex,glStack,mode) {
	var bucket = null;
	var _g = 0;
	var _g1 = glStack.buckets;
	while(_g < _g1.length) {
		var b = _g1[_g];
		++_g;
		if(b.fillIndex == fillIndex) {
			bucket = b;
			break;
		}
	}
	if(bucket == null) bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.getBucket(glStack,mode);
	bucket.dirty = true;
	bucket.fillIndex = fillIndex;
	return bucket;
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareShader = function(bucket,renderSession,object,translationMatrix) {
	var gl = renderSession.gl;
	var shader = null;
	var _g = bucket.mode;
	switch(_g[1]) {
	case 1:
		shader = renderSession.shaderManager.fillShader;
		break;
	case 2:
		shader = renderSession.shaderManager.patternFillShader;
		break;
	case 5:
		shader = renderSession.shaderManager.drawTrianglesShader;
		break;
	default:
		shader = null;
	}
	if(shader == null) return null;
	var newShader = renderSession.shaderManager.setShader(shader);
	gl.uniform1f(shader.getUniformLocation("openfl_uAlpha"),object.__worldAlpha);
	gl.uniformMatrix3fv(shader.getUniformLocation("openfl_uProjectionMatrix"),false,renderSession.projectionMatrix.toArray(true));
	var ct = object.__worldColorTransform;
	gl.uniform4f(shader.getUniformLocation("openfl_uColorMultiplier"),ct.redMultiplier,ct.greenMultiplier,ct.blueMultiplier,ct.alphaMultiplier);
	gl.uniform4f(shader.getUniformLocation("openfl_uColorOffset"),ct.redOffset / 255,ct.greenOffset / 255,ct.blueOffset / 255,ct.alphaOffset / 255);
	var _g1 = bucket.mode;
	switch(_g1[1]) {
	case 1:
		gl.uniformMatrix3fv(shader.getUniformLocation("openfl_uTranslationMatrix"),false,translationMatrix);
		gl.uniform4fv(shader.getUniformLocation("openfl_uColor"),(function($this) {
			var $r;
			var array = bucket.color;
			var this1;
			if(array != null) this1 = new Float32Array(array); else this1 = null;
			$r = this1;
			return $r;
		}(this)));
		break;
	case 2:
		gl.uniformMatrix3fv(shader.getUniformLocation("openfl_uTranslationMatrix"),false,translationMatrix);
		gl.uniform2f(shader.getUniformLocation("openfl_uPatternTL"),bucket.textureTL.x,bucket.textureTL.y);
		gl.uniform2f(shader.getUniformLocation("openfl_uPatternBR"),bucket.textureBR.x,bucket.textureBR.y);
		gl.uniformMatrix3fv(shader.getUniformLocation("openfl_uPatternMatrix"),false,bucket.textureMatrix.toArray(true));
		break;
	case 5:
		if(bucket.texture != null) gl.uniform1i(shader.getUniformLocation("openfl_uUseTexture"),1); else {
			gl.uniform1i(shader.getUniformLocation("openfl_uUseTexture"),0);
			gl.uniform4fv(shader.getUniformLocation("openfl_uColor"),(function($this) {
				var $r;
				var array1 = bucket.color;
				var this2;
				if(array1 != null) this2 = new Float32Array(array1); else this2 = null;
				$r = this2;
				return $r;
			}(this)));
		}
		break;
	default:
	}
	return shader;
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.renderFill = function(bucket,shader,renderSession) {
	var gl = renderSession.gl;
	if(bucket.mode == openfl__$internal_renderer_opengl_utils_BucketMode.PatternFill && bucket.texture != null) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.bindTexture(gl,bucket);
	gl.bindBuffer(gl.ARRAY_BUFFER,bucket.tileBuffer);
	gl.vertexAttribPointer(shader.getAttribLocation("openfl_aPosition"),4,gl.SHORT,false,0,0);
	gl.drawArrays(gl.TRIANGLE_STRIP,0,4);
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.renderDrawTriangles = function(bucket,shader,renderSession) {
	var gl = renderSession.gl;
	var _g = 0;
	var _g1 = bucket.fills;
	while(_g < _g1.length) {
		var fill = _g1[_g];
		++_g;
		if(fill.available) continue;
		openfl__$internal_renderer_opengl_utils_GraphicsRenderer.bindTexture(gl,bucket);
		fill.vertexArray.bind();
		shader.bindVertexArray(fill.vertexArray);
		gl.drawArrays(gl.TRIANGLES,fill.glStart,fill.glLength);
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.bindTexture = function(gl,bucket) {
	gl.bindTexture(gl.TEXTURE_2D,bucket.texture);
	if(bucket.textureRepeat && bucket.bitmap.image.get_powerOfTwo()) {
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT);
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.REPEAT);
	} else {
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);
	}
	if(bucket.textureSmooth) {
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);
	} else {
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.isCCW = function(x1,y1,x2,y2,x3,y3) {
	return (x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1) < 0;
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.hex2rgb = function(hex) {
	if(hex == null) return [1,1,1]; else return [(hex >> 16 & 255) / 255,(hex >> 8 & 255) / 255,(hex & 255) / 255];
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.hex2rgba = function(hex) {
	if(hex == null) return [1,1,1,1]; else return [(hex >> 16 & 255) / 255,(hex >> 8 & 255) / 255,(hex & 255) / 255,(hex >> 24 & 255) / 255];
};
var openfl__$internal_renderer_opengl_utils_GLStack = function(gl) {
	this.lastIndex = 0;
	this.gl = gl;
	this.buckets = [];
	this.lastIndex = 0;
};
$hxClasses["openfl._internal.renderer.opengl.utils.GLStack"] = openfl__$internal_renderer_opengl_utils_GLStack;
openfl__$internal_renderer_opengl_utils_GLStack.__name__ = ["openfl","_internal","renderer","opengl","utils","GLStack"];
openfl__$internal_renderer_opengl_utils_GLStack.prototype = {
	reset: function() {
		this.buckets = [];
		this.lastIndex = 0;
	}
	,upload: function() {
		var _g = 0;
		var _g1 = this.buckets;
		while(_g < _g1.length) {
			var bucket = _g1[_g];
			++_g;
			if(bucket.dirty) bucket.upload();
		}
	}
	,__class__: openfl__$internal_renderer_opengl_utils_GLStack
};
var openfl__$internal_renderer_opengl_utils_GLBucket = function(gl) {
	this.uploadTileBuffer = true;
	this.textureSmooth = true;
	this.textureRepeat = false;
	this.lines = [];
	this.fills = [];
	this.fillIndex = -1;
	this.gl = gl;
	this.color = [0,0,0];
	this.lastIndex = 0;
	this.alpha = 1;
	this.dirty = true;
	this.mode = openfl__$internal_renderer_opengl_utils_BucketMode.Fill;
	this.textureMatrix = new openfl_geom_Matrix();
	this.textureTL = new openfl_geom_Point();
	this.textureBR = new openfl_geom_Point(1,1);
};
$hxClasses["openfl._internal.renderer.opengl.utils.GLBucket"] = openfl__$internal_renderer_opengl_utils_GLBucket;
openfl__$internal_renderer_opengl_utils_GLBucket.__name__ = ["openfl","_internal","renderer","opengl","utils","GLBucket"];
openfl__$internal_renderer_opengl_utils_GLBucket.prototype = {
	getData: function(type) {
		var data;
		switch(type[1]) {
		case 1:
			data = this.fills;
			break;
		default:
			data = this.lines;
		}
		var result = null;
		var remove = false;
		var _g = 0;
		while(_g < data.length) {
			var d = data[_g];
			++_g;
			if(d.available) {
				result = d;
				remove = true;
				break;
			}
		}
		if(result == null) result = new openfl__$internal_renderer_opengl_utils_GLBucketData(this.gl);
		result.available = false;
		result.parent = this;
		result.type = type;
		if(remove) HxOverrides.remove(data,result);
		data.push(result);
		switch(type[1]) {
		case 1:
			var _g1 = this.mode;
			switch(_g1[1]) {
			case 1:case 2:
				result.vertexArray.attributes = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.fillVertexAttributes;
				break;
			case 5:
				result.vertexArray.attributes = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.drawTrianglesVertexAttributes.slice();
				result.vertexArray.attributes[2] = result.vertexArray.attributes[2].copy();
				break;
			default:
			}
			break;
		case 0:
			result.vertexArray.attributes = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.primitiveVertexAttributes;
			break;
		}
		return result;
	}
	,optimize: function() {
		var _g = this;
		var data = this.lines;
		if(data.length > 1) {
			var result = [];
			var tmp = null;
			var last = null;
			var idx = 0;
			var vi = 0;
			var ii = 0;
			var before = data.length;
			var _g1 = 0;
			while(_g1 < data.length) {
				var d = data[_g1];
				++_g1;
				if(d.available || d.rawVerts || d.rawIndices) {
					if(tmp != null) {
						result.push(tmp);
						tmp = null;
					}
					result.push(d);
					last = d;
					continue;
				}
				if(last == null || last.drawMode == d.drawMode) {
					if(tmp == null) tmp = d; else {
						vi = tmp.verts.length;
						ii = tmp.indices.length;
						var _g2 = 0;
						var _g11 = d.verts.length;
						while(_g2 < _g11) {
							var j = _g2++;
							tmp.verts[j + vi] = d.verts[j];
						}
						var _g21 = 0;
						var _g12 = d.indices.length;
						while(_g21 < _g12) {
							var j1 = _g21++;
							tmp.indices[j1 + ii] = d.indices[j1] + idx;
						}
					}
					idx = tmp.indices[tmp.indices.length - 1] + 1;
					last = d;
				} else {
					if(tmp != null) {
						result.push(tmp);
						tmp = null;
					}
					result.push(d);
					last = d;
					continue;
				}
			}
			if(result.length == 0 && tmp != null) result.push(tmp);
			if(result.length > 0) switch(openfl__$internal_renderer_opengl_utils_BucketDataType.Line[1]) {
			case 1:
				_g.fills = result;
				break;
			default:
				_g.lines = result;
			}
		}
	}
	,reset: function() {
		var _g = 0;
		var _g1 = this.fills;
		while(_g < _g1.length) {
			var fill = _g1[_g];
			++_g;
			fill.reset();
		}
		var _g2 = 0;
		var _g11 = this.lines;
		while(_g2 < _g11.length) {
			var line = _g11[_g2];
			++_g2;
			line.reset();
		}
		this.fillIndex = -1;
		this.uploadTileBuffer = true;
		this.graphicType = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
	}
	,uploadTile: function(x,y,w,h) {
		if(this.tileBuffer == null) this.tileBuffer = this.gl.createBuffer();
		this.tile = [x,y,0,0,w,y,1,0,x,h,0,1,w,h,1,1];
		var array = this.tile;
		var this1;
		if(array != null) this1 = new Int16Array(array); else this1 = null;
		this.glTile = this1;
		this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.tileBuffer);
		this.gl.bufferData(this.gl.ARRAY_BUFFER,this.glTile,this.gl.STATIC_DRAW);
	}
	,upload: function() {
		if(this.mode != openfl__$internal_renderer_opengl_utils_BucketMode.Line) {
			var _g = 0;
			var _g1 = this.fills;
			while(_g < _g1.length) {
				var fill = _g1[_g];
				++_g;
				if(!fill.available) fill.upload();
			}
		}
		var _g2 = 0;
		var _g11 = this.lines;
		while(_g2 < _g11.length) {
			var line = _g11[_g2];
			++_g2;
			if(!line.available) line.upload();
		}
		this.dirty = false;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_GLBucket
};
var openfl__$internal_renderer_opengl_utils_GLBucketData = function(gl) {
	this.available = false;
	this.rawIndices = false;
	this.stride = 0;
	this.rawVerts = false;
	this.lastVertsSize = 0;
	this.glStart = 0;
	this.glLength = 0;
	this.gl = gl;
	this.drawMode = gl.TRIANGLE_STRIP;
	this.verts = [];
	this.indices = [];
	this.vertexArray = new openfl__$internal_renderer_opengl_utils_VertexArray([]);
};
$hxClasses["openfl._internal.renderer.opengl.utils.GLBucketData"] = openfl__$internal_renderer_opengl_utils_GLBucketData;
openfl__$internal_renderer_opengl_utils_GLBucketData.__name__ = ["openfl","_internal","renderer","opengl","utils","GLBucketData"];
openfl__$internal_renderer_opengl_utils_GLBucketData.prototype = {
	reset: function() {
		this.available = true;
		this.verts = [];
		this.indices = [];
		this.glLength = 0;
		this.glStart = 0;
		this.stride = 0;
		this.rawVerts = false;
		this.rawIndices = false;
		this.drawMode = this.gl.TRIANGLE_STRIP;
	}
	,upload: function() {
		if(this.rawVerts && this.glVerts != null && this.glVerts.length > 0 || this.verts.length > 0) {
			if(!this.rawVerts) {
				var array = this.verts;
				var this1;
				if(array != null) this1 = new Float32Array(array); else this1 = null;
				this.glVerts = this1;
			}
			this.vertexArray.buffer = this.glVerts.buffer;
			if(this.glVerts.length <= this.lastVertsSize) {
				this.vertexArray.bind();
				var end = this.glLength * this.stride;
				if(this.glLength > 0 && this.lastVertsSize > end) {
					var view = this.glVerts.subarray(0,end);
					this.vertexArray.upload(view);
				} else this.vertexArray.upload(this.glVerts);
			} else {
				this.vertexArray.setContext(this.gl,this.glVerts);
				this.lastVertsSize = this.glVerts.length;
			}
		}
		if(this.glLength == 0 && (this.rawIndices && this.glIndices != null && this.glIndices.length > 0 || this.indices.length > 0)) {
			if(this.indexBuffer == null) this.indexBuffer = this.gl.createBuffer();
			if(!this.rawIndices) {
				var array1 = this.indices;
				var this2;
				if(array1 != null) this2 = new Uint16Array(array1); else this2 = null;
				this.glIndices = this2;
			}
			this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);
			this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,this.glIndices,this.gl.STREAM_DRAW);
		}
	}
	,__class__: openfl__$internal_renderer_opengl_utils_GLBucketData
};
var openfl__$internal_renderer_opengl_utils_BucketMode = $hxClasses["openfl._internal.renderer.opengl.utils.BucketMode"] = { __ename__ : ["openfl","_internal","renderer","opengl","utils","BucketMode"], __constructs__ : ["None","Fill","PatternFill","Line","PatternLine","DrawTriangles","DrawTiles"] };
openfl__$internal_renderer_opengl_utils_BucketMode.None = ["None",0];
openfl__$internal_renderer_opengl_utils_BucketMode.None.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketMode.None.__enum__ = openfl__$internal_renderer_opengl_utils_BucketMode;
openfl__$internal_renderer_opengl_utils_BucketMode.Fill = ["Fill",1];
openfl__$internal_renderer_opengl_utils_BucketMode.Fill.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketMode.Fill.__enum__ = openfl__$internal_renderer_opengl_utils_BucketMode;
openfl__$internal_renderer_opengl_utils_BucketMode.PatternFill = ["PatternFill",2];
openfl__$internal_renderer_opengl_utils_BucketMode.PatternFill.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketMode.PatternFill.__enum__ = openfl__$internal_renderer_opengl_utils_BucketMode;
openfl__$internal_renderer_opengl_utils_BucketMode.Line = ["Line",3];
openfl__$internal_renderer_opengl_utils_BucketMode.Line.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketMode.Line.__enum__ = openfl__$internal_renderer_opengl_utils_BucketMode;
openfl__$internal_renderer_opengl_utils_BucketMode.PatternLine = ["PatternLine",4];
openfl__$internal_renderer_opengl_utils_BucketMode.PatternLine.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketMode.PatternLine.__enum__ = openfl__$internal_renderer_opengl_utils_BucketMode;
openfl__$internal_renderer_opengl_utils_BucketMode.DrawTriangles = ["DrawTriangles",5];
openfl__$internal_renderer_opengl_utils_BucketMode.DrawTriangles.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketMode.DrawTriangles.__enum__ = openfl__$internal_renderer_opengl_utils_BucketMode;
openfl__$internal_renderer_opengl_utils_BucketMode.DrawTiles = ["DrawTiles",6];
openfl__$internal_renderer_opengl_utils_BucketMode.DrawTiles.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketMode.DrawTiles.__enum__ = openfl__$internal_renderer_opengl_utils_BucketMode;
var openfl__$internal_renderer_opengl_utils_BucketDataType = $hxClasses["openfl._internal.renderer.opengl.utils.BucketDataType"] = { __ename__ : ["openfl","_internal","renderer","opengl","utils","BucketDataType"], __constructs__ : ["Line","Fill"] };
openfl__$internal_renderer_opengl_utils_BucketDataType.Line = ["Line",0];
openfl__$internal_renderer_opengl_utils_BucketDataType.Line.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketDataType.Line.__enum__ = openfl__$internal_renderer_opengl_utils_BucketDataType;
openfl__$internal_renderer_opengl_utils_BucketDataType.Fill = ["Fill",1];
openfl__$internal_renderer_opengl_utils_BucketDataType.Fill.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketDataType.Fill.__enum__ = openfl__$internal_renderer_opengl_utils_BucketDataType;
var openfl__$internal_renderer_opengl_utils_GLGraphicsData = function(gl) {
	this.indices = [];
	this.data = [];
	this.lastIndex = 0;
	this.mode = 0;
	this.dirty = true;
	this.alpha = 1.0;
	this.tint = [1.0,1.0,1.0];
	this.gl = gl;
	this.dataBuffer = gl.createBuffer();
	this.indexBuffer = gl.createBuffer();
};
$hxClasses["openfl._internal.renderer.opengl.utils.GLGraphicsData"] = openfl__$internal_renderer_opengl_utils_GLGraphicsData;
openfl__$internal_renderer_opengl_utils_GLGraphicsData.__name__ = ["openfl","_internal","renderer","opengl","utils","GLGraphicsData"];
openfl__$internal_renderer_opengl_utils_GLGraphicsData.prototype = {
	reset: function() {
		this.data = [];
		this.indices = [];
		this.lastIndex = 0;
	}
	,upload: function() {
		var elements = this.data;
		var this1;
		if(elements != null) this1 = new Float32Array(elements); else this1 = null;
		this.glData = this1;
		this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.dataBuffer);
		this.gl.bufferData(this.gl.ARRAY_BUFFER,this.glData,this.gl.STATIC_DRAW);
		var elements1 = this.indices;
		var this2;
		if(elements1 != null) this2 = new Uint16Array(elements1); else this2 = null;
		this.glIndices = this2;
		this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);
		this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,this.glIndices,this.gl.STATIC_DRAW);
		this.dirty = false;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_GLGraphicsData
};
var openfl__$internal_renderer_opengl_utils_GraphicType = $hxClasses["openfl._internal.renderer.opengl.utils.GraphicType"] = { __ename__ : ["openfl","_internal","renderer","opengl","utils","GraphicType"], __constructs__ : ["Polygon","Rectangle","Circle","Ellipse","DrawTriangles","DrawTiles","OverrideMatrix"] };
openfl__$internal_renderer_opengl_utils_GraphicType.Polygon = ["Polygon",0];
openfl__$internal_renderer_opengl_utils_GraphicType.Polygon.toString = $estr;
openfl__$internal_renderer_opengl_utils_GraphicType.Polygon.__enum__ = openfl__$internal_renderer_opengl_utils_GraphicType;
openfl__$internal_renderer_opengl_utils_GraphicType.Rectangle = function(rounded) { var $x = ["Rectangle",1,rounded]; $x.__enum__ = openfl__$internal_renderer_opengl_utils_GraphicType; $x.toString = $estr; return $x; };
openfl__$internal_renderer_opengl_utils_GraphicType.Circle = ["Circle",2];
openfl__$internal_renderer_opengl_utils_GraphicType.Circle.toString = $estr;
openfl__$internal_renderer_opengl_utils_GraphicType.Circle.__enum__ = openfl__$internal_renderer_opengl_utils_GraphicType;
openfl__$internal_renderer_opengl_utils_GraphicType.Ellipse = ["Ellipse",3];
openfl__$internal_renderer_opengl_utils_GraphicType.Ellipse.toString = $estr;
openfl__$internal_renderer_opengl_utils_GraphicType.Ellipse.__enum__ = openfl__$internal_renderer_opengl_utils_GraphicType;
openfl__$internal_renderer_opengl_utils_GraphicType.DrawTriangles = function(vertices,indices,uvtData,culling,colors,blendMode) { var $x = ["DrawTriangles",4,vertices,indices,uvtData,culling,colors,blendMode]; $x.__enum__ = openfl__$internal_renderer_opengl_utils_GraphicType; $x.toString = $estr; return $x; };
openfl__$internal_renderer_opengl_utils_GraphicType.DrawTiles = function(sheet,tileData,smooth,flags,shader,count) { var $x = ["DrawTiles",5,sheet,tileData,smooth,flags,shader,count]; $x.__enum__ = openfl__$internal_renderer_opengl_utils_GraphicType; $x.toString = $estr; return $x; };
openfl__$internal_renderer_opengl_utils_GraphicType.OverrideMatrix = function(matrix) { var $x = ["OverrideMatrix",6,matrix]; $x.__enum__ = openfl__$internal_renderer_opengl_utils_GraphicType; $x.toString = $estr; return $x; };
var openfl__$internal_renderer_opengl_utils_PingPongTexture = function(gl,width,height,smoothing,powerOfTwo) {
	if(powerOfTwo == null) powerOfTwo = true;
	if(smoothing == null) smoothing = true;
	this.__swapped = false;
	this.powerOfTwo = true;
	this.useOldTexture = false;
	this.gl = gl;
	this.width = width;
	this.height = height;
	this.smoothing = smoothing;
	this.powerOfTwo = powerOfTwo;
	this.set_renderTexture(new openfl__$internal_renderer_opengl_utils_RenderTexture(gl,width,height,smoothing,powerOfTwo));
};
$hxClasses["openfl._internal.renderer.opengl.utils.PingPongTexture"] = openfl__$internal_renderer_opengl_utils_PingPongTexture;
openfl__$internal_renderer_opengl_utils_PingPongTexture.__name__ = ["openfl","_internal","renderer","opengl","utils","PingPongTexture"];
openfl__$internal_renderer_opengl_utils_PingPongTexture.prototype = {
	swap: function() {
		this.__swapped = !this.__swapped;
		if((this.__swapped?this.__texture1:this.__texture0) == null) this.set_renderTexture(new openfl__$internal_renderer_opengl_utils_RenderTexture(this.gl,this.width,this.height,this.smoothing,this.powerOfTwo));
	}
	,clear: function(r,g,b,a,mask) {
		if(a == null) a = 0;
		if(b == null) b = 0;
		if(g == null) g = 0;
		if(r == null) r = 0;
		(this.__swapped?this.__texture1:this.__texture0).clear(r,g,b,a,mask);
	}
	,resize: function(width,height) {
		this.width = width;
		this.height = height;
		(this.__swapped?this.__texture1:this.__texture0).resize(width,height);
	}
	,destroy: function() {
		if(this.__texture0 != null) {
			this.__texture0.destroy();
			this.__texture0 = null;
		}
		if(this.__texture1 != null) {
			this.__texture1.destroy();
			this.__texture1 = null;
		}
		this.__swapped = false;
	}
	,get_renderTexture: function() {
		if(this.__swapped) return this.__texture1; else return this.__texture0;
	}
	,set_renderTexture: function(v) {
		if(this.__swapped) return this.__texture1 = v; else return this.__texture0 = v;
	}
	,get_oldRenderTexture: function() {
		if(this.__swapped) return this.__texture0; else return this.__texture1;
	}
	,set_oldRenderTexture: function(v) {
		if(this.__swapped) return this.__texture0 = v; else return this.__texture1 = v;
	}
	,get_framebuffer: function() {
		return (this.__swapped?this.__texture1:this.__texture0).frameBuffer;
	}
	,get_texture: function() {
		if(this.useOldTexture) return (this.__swapped?this.__texture0:this.__texture1).texture; else return (this.__swapped?this.__texture1:this.__texture0).texture;
	}
	,get___otherTexture: function() {
		if(this.__swapped) return this.__texture0; else return this.__texture1;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_PingPongTexture
	,__properties__: {get___otherTexture:"get___otherTexture",get_texture:"get_texture",get_framebuffer:"get_framebuffer",set_oldRenderTexture:"set_oldRenderTexture",get_oldRenderTexture:"get_oldRenderTexture",set_renderTexture:"set_renderTexture",get_renderTexture:"get_renderTexture"}
};
var openfl__$internal_renderer_opengl_utils_RenderTexture = function(gl,width,height,smoothing,powerOfTwo) {
	if(powerOfTwo == null) powerOfTwo = true;
	if(smoothing == null) smoothing = true;
	this.powerOfTwo = true;
	this.gl = gl;
	this.powerOfTwo = powerOfTwo;
	this.frameBuffer = gl.createFramebuffer();
	this.texture = gl.createTexture();
	gl.bindTexture(gl.TEXTURE_2D,this.texture);
	gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,smoothing?gl.LINEAR:gl.NEAREST);
	gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,smoothing?gl.LINEAR:gl.NEAREST);
	gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);
	gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);
	gl.bindFramebuffer(gl.FRAMEBUFFER,this.frameBuffer);
	gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,this.texture,0);
	this.renderBuffer = gl.createRenderbuffer();
	gl.bindRenderbuffer(gl.RENDERBUFFER,this.renderBuffer);
	gl.framebufferRenderbuffer(gl.FRAMEBUFFER,gl.DEPTH_STENCIL_ATTACHMENT,gl.RENDERBUFFER,this.renderBuffer);
	this.resize(width,height);
};
$hxClasses["openfl._internal.renderer.opengl.utils.RenderTexture"] = openfl__$internal_renderer_opengl_utils_RenderTexture;
openfl__$internal_renderer_opengl_utils_RenderTexture.__name__ = ["openfl","_internal","renderer","opengl","utils","RenderTexture"];
openfl__$internal_renderer_opengl_utils_RenderTexture.prototype = {
	clear: function(r,g,b,a,mask) {
		if(a == null) a = 0;
		if(b == null) b = 0;
		if(g == null) g = 0;
		if(r == null) r = 0;
		this.gl.clearColor(r,g,b,a);
		this.gl.clear(mask == null?this.gl.COLOR_BUFFER_BIT:mask);
	}
	,destroy: function() {
		if(this.frameBuffer != null) this.gl.deleteFramebuffer(this.frameBuffer);
		if(this.texture != null) this.gl.deleteTexture(this.texture);
		this.frameBuffer = null;
		this.texture = null;
	}
	,resize: function(width,height) {
		if(this.width == width && this.height == height) return;
		this.width = width;
		this.height = height;
		var pow2W = width;
		var pow2H = height;
		if(this.powerOfTwo) {
			pow2W = this.powOfTwo(width);
			pow2H = this.powOfTwo(height);
		}
		var lastW = this.__width;
		var lastH = this.__height;
		this.__width = pow2W;
		this.__height = pow2H;
		this.createUVs();
		if(lastW == pow2W && lastH == pow2H) return;
		this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture);
		this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.__width,this.__height,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null);
		this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,this.renderBuffer);
		this.gl.renderbufferStorage(this.gl.RENDERBUFFER,this.gl.DEPTH_STENCIL,this.__width,this.__height);
	}
	,createUVs: function() {
		if(this.__uvData == null) this.__uvData = new openfl_display_TextureUvs();
		var w = this.width / this.__width;
		var h = this.height / this.__height;
		this.__uvData.x0 = 0;
		this.__uvData.y0 = 0;
		this.__uvData.x1 = w;
		this.__uvData.y1 = 0;
		this.__uvData.x2 = w;
		this.__uvData.y2 = h;
		this.__uvData.x3 = 0;
		this.__uvData.y3 = h;
	}
	,powOfTwo: function(value) {
		var n = 1;
		while(n < value) n <<= 1;
		return n;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_RenderTexture
};
var openfl__$internal_renderer_opengl_utils_ShaderManager = function(gl) {
	this.setContext(gl);
};
$hxClasses["openfl._internal.renderer.opengl.utils.ShaderManager"] = openfl__$internal_renderer_opengl_utils_ShaderManager;
openfl__$internal_renderer_opengl_utils_ShaderManager.__name__ = ["openfl","_internal","renderer","opengl","utils","ShaderManager"];
openfl__$internal_renderer_opengl_utils_ShaderManager.prototype = {
	setContext: function(gl) {
		this.gl = gl;
		this.defaultShader = new openfl__$internal_renderer_opengl_shaders2_DefaultShader(gl);
		this.fillShader = new openfl__$internal_renderer_opengl_shaders2_FillShader(gl);
		this.patternFillShader = new openfl__$internal_renderer_opengl_shaders2_PatternFillShader(gl);
		this.drawTrianglesShader = new openfl__$internal_renderer_opengl_shaders2_DrawTrianglesShader(gl);
		this.primitiveShader = new openfl__$internal_renderer_opengl_shaders2_PrimitiveShader(gl);
		this.setShader(this.defaultShader,true);
	}
	,destroy: function() {
		this.defaultShader.destroy();
		this.fillShader.destroy();
		this.patternFillShader.destroy();
		this.drawTrianglesShader.destroy();
		this.primitiveShader.destroy();
		this.gl = null;
	}
	,setShader: function(shader,force) {
		if(force == null) force = false;
		if(shader == null) {
			this.currentShader = null;
			this.gl.useProgram(null);
			return true;
		}
		if(this.currentShader != null && !force && this.currentShader.ID == shader.ID) return false;
		this.currentShader = shader;
		this.gl.useProgram(shader.program);
		return true;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_ShaderManager
};
var openfl__$internal_renderer_opengl_utils_SpriteBatch = function(gl,maxSprites) {
	if(maxSprites == null) maxSprites = 2000;
	this.colorTransform = new openfl_geom_ColorTransform();
	this.uvs = new openfl_display_TextureUvs();
	this.matrix = new openfl_geom_Matrix();
	this.lastEnableColor = true;
	this.enableColor = true;
	this.attributes = [];
	this.writtenVertexBytes = 0;
	this.drawing = false;
	this.dirty = true;
	this.states = [];
	this.maxSprites = maxSprites;
	this.attributes.push(new openfl__$internal_renderer_opengl_utils_VertexAttribute(2,5126,false,"openfl_aPosition"));
	this.attributes.push(new openfl__$internal_renderer_opengl_utils_VertexAttribute(2,5126,false,"openfl_aTexCoord0"));
	this.attributes.push(new openfl__$internal_renderer_opengl_utils_VertexAttribute(4,5121,true,"openfl_aColor"));
	var array = [1,1,1,1];
	var this1;
	if(array != null) this1 = new Float32Array(array); else this1 = null;
	this.attributes[2].defaultValue = this1;
	this.maxElementsPerVertex = 0;
	var _g = 0;
	var _g1 = this.attributes;
	while(_g < _g1.length) {
		var a = _g1[_g];
		++_g;
		this.maxElementsPerVertex += Math.floor(a.components * a.getElementsBytes() / 4);
	}
	this.vertexArraySize = maxSprites * this.maxElementsPerVertex * 4 * 4;
	this.indexArraySize = maxSprites * 6;
	this.vertexArray = new openfl__$internal_renderer_opengl_utils_VertexArray(this.attributes,this.vertexArraySize,false);
	var buffer = this.vertexArray.buffer;
	var this2;
	if(buffer != null) this2 = new Float32Array(buffer,0); else this2 = null;
	this.positions = this2;
	var buffer1 = this.vertexArray.buffer;
	var this3;
	if(buffer1 != null) this3 = new Uint32Array(buffer1,0); else this3 = null;
	this.colors = this3;
	var elements = this.indexArraySize;
	var this4;
	if(elements != null) this4 = new Uint16Array(elements); else this4 = null;
	this.indices = this4;
	var i = 0;
	var j = 0;
	while(i < this.indexArraySize) {
		this.indices[i] = j;
		this.indices[i + 1] = j + 1;
		this.indices[i + 2] = j + 2;
		this.indices[i + 3] = j;
		this.indices[i + 4] = j + 2;
		this.indices[i + 5] = j + 3;
		i += 6;
		j += 4;
	}
	this.currentState = new openfl__$internal_renderer_opengl_utils__$SpriteBatch_State();
	this.dirty = true;
	this.drawing = false;
	this.batchedSprites = 0;
	this.setContext(gl);
};
$hxClasses["openfl._internal.renderer.opengl.utils.SpriteBatch"] = openfl__$internal_renderer_opengl_utils_SpriteBatch;
openfl__$internal_renderer_opengl_utils_SpriteBatch.__name__ = ["openfl","_internal","renderer","opengl","utils","SpriteBatch"];
openfl__$internal_renderer_opengl_utils_SpriteBatch.prototype = {
	destroy: function() {
		this.vertexArray.destroy();
		this.vertexArray = null;
		this.indices = null;
		this.gl.deleteBuffer(this.indexBuffer);
		this.currentState.destroy();
		var _g = 0;
		var _g1 = this.states;
		while(_g < _g1.length) {
			var state = _g1[_g];
			++_g;
			state.destroy();
		}
		this.colorTransform = null;
		this.gl = null;
	}
	,begin: function(renderSession,clipRect) {
		this.renderSession = renderSession;
		this.shader = renderSession.shaderManager.defaultShader;
		this.drawing = true;
		this.start(clipRect);
	}
	,finish: function() {
		this.stop();
		this.clipRect = null;
		this.drawing = false;
	}
	,start: function(clipRect) {
		if(!this.drawing) this.stop();
		this.dirty = true;
		this.clipRect = clipRect;
	}
	,stop: function() {
		this.flush();
	}
	,renderBitmapData: function(bitmapData,smoothing,matrix,ct,alpha,blendMode,flashShader,pixelSnapping,bgra) {
		if(bgra == null) bgra = false;
		if(alpha == null) alpha = 1;
		if(bitmapData == null) return;
		var texture = bitmapData.getTexture(this.gl);
		if(this.batchedSprites >= this.maxSprites) this.flush();
		var uvs = bitmapData.__uvData;
		if(uvs == null) return;
		this.prepareShader(flashShader,bitmapData);
		var color = ((alpha * 255 | 0) & 255) << 24 | 16777215;
		this.enableColor = true;
		if(this.enableColor != this.lastEnableColor) {
			this.flush();
			this.lastEnableColor = this.enableColor;
		}
		this.attributes[2].enabled = this.lastEnableColor;
		this.elementsPerVertex = this.getElementsPerVertex();
		var index = this.batchedSprites * 4 * this.elementsPerVertex;
		this.fillVertices(index,bitmapData.width,bitmapData.height,matrix,uvs,color,pixelSnapping);
		this.setState(this.batchedSprites,texture,smoothing,blendMode,ct,flashShader,true);
		this.batchedSprites++;
	}
	,renderTiles: function(object,sheet,tileData,smooth,flags,flashShader,count) {
		if(count == null) count = -1;
		if(flags == null) flags = 0;
		if(smooth == null) smooth = false;
		var texture = sheet.__bitmap.getTexture(this.gl);
		if(texture == null) return;
		var useScale = (flags & 1) > 0;
		var useRotation = (flags & 2) > 0;
		var useTransform = (flags & 16) > 0;
		var useRGB = (flags & 4) > 0;
		var useAlpha = (flags & 8) > 0;
		var useRect = (flags & 32) > 0;
		var useOrigin = (flags & 64) > 0;
		var useRGBOffset = (flags & 128) > 0;
		var blendMode;
		var _g = flags & 983040;
		switch(_g) {
		case 65536:
			blendMode = 0;
			break;
		case 131072:
			blendMode = 9;
			break;
		case 262144:
			blendMode = 12;
			break;
		case 524288:
			blendMode = 14;
			break;
		default:
			var _g1 = flags & 15728640;
			switch(_g1) {
			case 1048576:
				blendMode = 2;
				break;
			case 2097152:
				blendMode = 8;
				break;
			case 4194304:
				blendMode = 11;
				break;
			case 8388608:
				blendMode = 5;
				break;
			default:
				var _g2 = flags & 251658240;
				switch(_g2) {
				case 16777216:
					blendMode = 3;
					break;
				case 33554432:
					blendMode = 6;
					break;
				default:
					blendMode = 10;
				}
			}
		}
		if(useTransform) {
			useScale = false;
			useRotation = false;
		}
		var scaleIndex = 0;
		var rotationIndex = 0;
		var rgbIndex = 0;
		var rgbOffsetIndex = 0;
		var alphaIndex = 0;
		var transformIndex = 0;
		var numValues = 3;
		if(useRect) if(useOrigin) numValues = 8; else numValues = 6;
		if(useScale) {
			scaleIndex = numValues;
			numValues++;
		}
		if(useRotation) {
			rotationIndex = numValues;
			numValues++;
		}
		if(useTransform) {
			transformIndex = numValues;
			numValues += 4;
		}
		if(useRGB) {
			rgbIndex = numValues;
			numValues += 3;
		}
		if(useAlpha) {
			alphaIndex = numValues;
			numValues++;
		}
		if(useRGBOffset) {
			rgbOffsetIndex = numValues;
			numValues += 4;
		}
		var totalCount = tileData.length;
		if(count >= 0 && totalCount > count) totalCount = count;
		var itemCount = Math.ceil(totalCount / numValues);
		var iIndex = 0;
		var tileID = -1;
		var rect = sheet.__rectTile;
		var tileUV = sheet.__rectUV;
		var center = sheet.__point;
		var x = 0.0;
		var y = 0.0;
		var alpha = 1.0;
		var tint = 16777215;
		var color = -1;
		var scale = 1.0;
		var rotation = 0.0;
		var cosTheta = 1.0;
		var sinTheta = 0.0;
		var a = 0.0;
		var b = 0.0;
		var c = 0.0;
		var d = 0.0;
		var tx = 0.0;
		var ty = 0.0;
		var ox = 0.0;
		var oy = 0.0;
		var oMatrix = object.__worldTransform;
		var bIndex = 0;
		var tMa = 1.0;
		var tMb = 0.0;
		var tMc = 0.0;
		var tMd = 1.0;
		var tMtx = 0.0;
		var tMty = 0.0;
		var oMa = oMatrix.a;
		var oMb = oMatrix.b;
		var oMc = oMatrix.c;
		var oMd = oMatrix.d;
		var oMtx = oMatrix.tx;
		var oMty = oMatrix.ty;
		var rx = 0.0;
		var ry = 0.0;
		var rw = 0.0;
		var rh = 0.0;
		var tuvx = 0.0;
		var tuvy = 0.0;
		var tuvw = 0.0;
		var tuvh = 0.0;
		this.enableColor = true;
		if(this.enableColor != this.lastEnableColor) {
			this.flush();
			this.lastEnableColor = this.enableColor;
		}
		this.attributes[2].enabled = this.lastEnableColor;
		this.elementsPerVertex = this.getElementsPerVertex();
		this.prepareShader(flashShader,null);
		while(iIndex < totalCount) {
			if(this.batchedSprites >= this.maxSprites) this.flush();
			x = tileData[iIndex];
			y = tileData[iIndex + 1];
			if(useRect) {
				tileID = -1;
				rect.x = tileData[iIndex + 2];
				rect.y = tileData[iIndex + 3];
				rect.width = tileData[iIndex + 4];
				rect.height = tileData[iIndex + 5];
				if(useOrigin) {
					center.x = tileData[iIndex + 6];
					center.y = tileData[iIndex + 7];
				} else center.setTo(0,0);
				rw = rect.width;
				rh = rect.height;
				tuvx = rect.get_left() / sheet.__bitmap.width;
				tuvy = rect.get_top() / sheet.__bitmap.height;
				tuvw = rect.get_right() / sheet.__bitmap.width;
				tuvh = rect.get_bottom() / sheet.__bitmap.height;
			} else {
				tileID = (tileData[iIndex + 2] == null?0:tileData[iIndex + 2]) | 0;
				rect = sheet.__tileRects[tileID];
				center = sheet.__centerPoints[tileID];
				tileUV = sheet.__tileUVs[tileID];
				if(rect != null) {
					rw = rect.width;
					rh = rect.height;
					tuvx = tileUV.x;
					tuvy = tileUV.y;
					tuvw = tileUV.width;
					tuvh = tileUV.height;
				}
			}
			if(rect != null && rect.width > 0 && rect.height > 0 && center != null) {
				alpha = 1;
				tint = 16777215;
				scale = 1.0;
				rotation = 0.0;
				cosTheta = 1.0;
				sinTheta = 0.0;
				if(useAlpha) alpha = tileData[iIndex + alphaIndex] * object.__worldAlpha; else alpha = object.__worldAlpha;
				if(useRGB) tint = (tileData[iIndex + rgbIndex] * 255 | 0) << 16 | (tileData[iIndex + rgbIndex + 1] * 255 | 0) << 8 | (tileData[iIndex + rgbIndex + 2] * 255 | 0);
				var wct = object.__worldColorTransform;
				this.colorTransform.redMultiplier = wct.redMultiplier;
				this.colorTransform.greenMultiplier = wct.greenMultiplier;
				this.colorTransform.blueMultiplier = wct.blueMultiplier;
				this.colorTransform.alphaMultiplier = wct.alphaMultiplier;
				this.colorTransform.redOffset = wct.redOffset;
				this.colorTransform.greenOffset = wct.greenOffset;
				this.colorTransform.blueOffset = wct.blueOffset;
				this.colorTransform.alphaOffset = wct.alphaOffset;
				if(useRGBOffset) {
					this.colorTransform.redOffset += tileData[iIndex + rgbOffsetIndex];
					this.colorTransform.greenOffset += tileData[iIndex + rgbOffsetIndex + 1];
					this.colorTransform.blueOffset += tileData[iIndex + rgbOffsetIndex + 2];
					this.colorTransform.alphaOffset += tileData[iIndex + rgbOffsetIndex + 3];
				}
				if(useScale) scale = tileData[iIndex + scaleIndex];
				if(useRotation) {
					rotation = tileData[iIndex + rotationIndex];
					cosTheta = Math.cos(rotation);
					sinTheta = Math.sin(rotation);
				}
				if(useTransform) {
					a = tileData[iIndex + transformIndex];
					b = tileData[iIndex + transformIndex + 1];
					c = tileData[iIndex + transformIndex + 2];
					d = tileData[iIndex + transformIndex + 3];
				} else {
					a = scale * cosTheta;
					b = scale * sinTheta;
					c = -b;
					d = a;
				}
				ox = center.x * a + center.y * c;
				oy = center.x * b + center.y * d;
				tx = x - ox;
				ty = y - oy;
				tMa = (a * oMa + b * oMc) * rw;
				tMb = (a * oMb + b * oMd) * rw;
				tMc = (c * oMa + d * oMc) * rh;
				tMd = (c * oMb + d * oMd) * rh;
				tMtx = tx * oMa + ty * oMc + oMtx;
				tMty = tx * oMb + ty * oMd + oMty;
				bIndex = this.batchedSprites * 4 * this.elementsPerVertex;
				this.positions[bIndex] = tMtx;
				this.positions[bIndex + 1] = tMty;
				this.positions[bIndex + 5] = tMa + tMtx;
				this.positions[bIndex + 6] = tMb + tMty;
				this.positions[bIndex + 10] = tMa + tMc + tMtx;
				this.positions[bIndex + 11] = tMd + tMb + tMty;
				this.positions[bIndex + 15] = tMc + tMtx;
				this.positions[bIndex + 16] = tMd + tMty;
				var val;
				var val1;
				var val2 = this.colors[bIndex + 19] = ((alpha * 255 | 0) & 255) << 24 | tint;
				val1 = this.colors[bIndex + 14] = val2;
				val = this.colors[bIndex + 9] = val1;
				this.colors[bIndex + 4] = val;
				this.positions[bIndex + 2] = tuvx;
				this.positions[bIndex + 3] = tuvy;
				this.positions[bIndex + 7] = tuvw;
				this.positions[bIndex + 8] = tuvy;
				this.positions[bIndex + 12] = tuvw;
				this.positions[bIndex + 13] = tuvh;
				this.positions[bIndex + 17] = tuvx;
				this.positions[bIndex + 18] = tuvh;
				this.writtenVertexBytes = bIndex + 20;
				this.setState(this.batchedSprites,texture,smooth,blendMode,this.colorTransform,flashShader,false);
				this.batchedSprites++;
			}
			iIndex += numValues;
		}
	}
	,fillVertices: function(index,width,height,matrix,uvs,color,pixelSnapping) {
		if(color == null) color = -1;
		var a = matrix.a;
		var b = matrix.b;
		var c = matrix.c;
		var d = matrix.d;
		var tx = matrix.tx;
		var ty = matrix.ty;
		if(pixelSnapping == null || pixelSnapping == 2) {
			this.positions[index] = tx;
			this.positions[index + 1] = ty;
			this.positions[index + 5] = a * width + tx;
			this.positions[index + 6] = b * width + ty;
			this.positions[index + 10] = a * width + c * height + tx;
			this.positions[index + 11] = d * height + b * width + ty;
			this.positions[index + 15] = c * height + tx;
			this.positions[index + 16] = d * height + ty;
		} else {
			var val = Math.round(tx);
			this.positions[index] = val;
			var val1 = Math.round(ty);
			this.positions[index + 1] = val1;
			var val2 = Math.round(a * width + tx);
			this.positions[index + 5] = val2;
			var val3 = Math.round(b * width + ty);
			this.positions[index + 6] = val3;
			var val4 = Math.round(a * width + c * height + tx);
			this.positions[index + 10] = val4;
			var val5 = Math.round(d * height + b * width + ty);
			this.positions[index + 11] = val5;
			var val6 = Math.round(c * height + tx);
			this.positions[index + 15] = val6;
			var val7 = Math.round(d * height + ty);
			this.positions[index + 16] = val7;
		}
		if(this.enableColor) {
			var val8;
			var val9;
			var val10 = this.colors[index + 19] = color;
			val9 = this.colors[index + 14] = val10;
			val8 = this.colors[index + 9] = val9;
			this.colors[index + 4] = val8;
		}
		this.positions[index + 2] = uvs.x0;
		this.positions[index + 3] = uvs.y0;
		this.positions[index + 7] = uvs.x1;
		this.positions[index + 8] = uvs.y1;
		this.positions[index + 12] = uvs.x2;
		this.positions[index + 13] = uvs.y2;
		this.positions[index + 17] = uvs.x3;
		this.positions[index + 18] = uvs.y3;
		this.writtenVertexBytes = index + 20;
	}
	,enableAttributes: function(color) {
		if(color == null) color = -1;
		this.enableColor = color != -1;
		if(this.enableColor != this.lastEnableColor) {
			this.flush();
			this.lastEnableColor = this.enableColor;
		}
		this.attributes[2].enabled = this.lastEnableColor;
		this.elementsPerVertex = this.getElementsPerVertex();
	}
	,flush: function() {
		if(this.batchedSprites == 0) return;
		if(this.clipRect != null) {
			this.gl.enable(this.gl.SCISSOR_TEST);
			this.gl.scissor(Math.floor(this.clipRect.x),Math.floor(this.clipRect.y),Math.ceil(this.clipRect.width),Math.ceil(this.clipRect.height));
		}
		if(this.dirty) {
			this.dirty = false;
			this.renderSession.activeTextures = 1;
			this.vertexArray.bind();
			this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);
		}
		if(this.writtenVertexBytes > this.vertexArraySize * 0.5) this.vertexArray.upload(this.positions); else {
			var view = this.positions.subarray(0,this.writtenVertexBytes);
			this.vertexArray.upload(view);
		}
		var nextState;
		var batchSize = 0;
		var start = 0;
		this.currentState.shader = null;
		this.currentState.shaderData = null;
		this.currentState.texture = null;
		this.currentState.textureSmooth = false;
		this.currentState.blendMode = this.renderSession.blendModeManager.currentBlendMode;
		this.currentState.colorTransform = null;
		this.currentState.skipColorTransformAlpha = false;
		var _g1 = 0;
		var _g = this.batchedSprites;
		while(_g1 < _g) {
			var i = _g1++;
			nextState = this.states[i];
			this.currentState.skipColorTransformAlpha = nextState.skipColorTransformAlpha;
			if(!nextState.equals(this.currentState)) {
				this.renderBatch(this.currentState,batchSize,start);
				start = i;
				batchSize = 0;
				this.currentState.shader = nextState.shader;
				this.currentState.shaderData = nextState.shaderData;
				this.currentState.texture = nextState.texture;
				this.currentState.textureSmooth = nextState.textureSmooth;
				this.currentState.blendMode = nextState.blendMode;
				this.currentState.skipColorTransform = nextState.skipColorTransform;
				if(this.currentState.skipColorTransform) this.currentState.colorTransform = null; else this.currentState.colorTransform = nextState.colorTransform;
			}
			batchSize++;
		}
		this.renderBatch(this.currentState,batchSize,start);
		this.batchedSprites = 0;
		this.writtenVertexBytes = 0;
		if(this.clipRect != null) this.gl.disable(this.gl.SCISSOR_TEST);
	}
	,renderBatch: function(state,size,start) {
		if(size == 0 || state.texture == null) return;
		var shader;
		if(state.shader == null) shader = this.renderSession.shaderManager.defaultShader; else shader = state.shader;
		this.renderSession.shaderManager.setShader(shader);
		shader.bindVertexArray(this.vertexArray);
		this.renderSession.blendModeManager.setBlendMode(shader.blendMode != null?shader.blendMode:state.blendMode);
		this.gl.uniformMatrix3fv(shader.getUniformLocation("openfl_uProjectionMatrix"),false,this.renderSession.projectionMatrix.toArray(true));
		if(state.colorTransform != null) {
			this.gl.uniform1i(shader.getUniformLocation("openfl_uUseColorTransform"),1);
			var ct = state.colorTransform;
			this.gl.uniform4f(shader.getUniformLocation("openfl_uColorMultiplier"),ct.redMultiplier,ct.greenMultiplier,ct.blueMultiplier,state.skipColorTransformAlpha?1:ct.alphaMultiplier);
			this.gl.uniform4f(shader.getUniformLocation("openfl_uColorOffset"),ct.redOffset / 255.,ct.greenOffset / 255.,ct.blueOffset / 255.,ct.alphaOffset / 255.);
		} else {
			this.gl.uniform1i(shader.getUniformLocation("openfl_uUseColorTransform"),0);
			this.gl.uniform4f(shader.getUniformLocation("openfl_uColorMultiplier"),1,1,1,1);
			this.gl.uniform4f(shader.getUniformLocation("openfl_uColorOffset"),0,0,0,0);
		}
		this.gl.activeTexture(this.gl.TEXTURE0);
		this.gl.bindTexture(this.gl.TEXTURE_2D,state.texture);
		this.gl.uniform1i(shader.getUniformLocation("openfl_uSampler0"),0);
		if(shader.smooth != null && shader.smooth || state.textureSmooth) {
			this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR);
			this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR);
		} else {
			this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST);
			this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST);
		}
		this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,shader.wrapS);
		this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,shader.wrapT);
		shader.applyData(state.shaderData,this.renderSession);
		this.gl.drawElements(this.gl.TRIANGLES,size * 6,this.gl.UNSIGNED_SHORT,start * 6 * 2);
		this.renderSession.drawCount++;
	}
	,setState: function(index,texture,smooth,blendMode,colorTransform,shader,skipAlpha) {
		if(skipAlpha == null) skipAlpha = false;
		if(smooth == null) smooth = false;
		var state = this.states[index];
		if(state == null) state = this.states[index] = new openfl__$internal_renderer_opengl_utils__$SpriteBatch_State();
		state.texture = texture;
		state.textureSmooth = smooth;
		state.blendMode = blendMode;
		state.skipColorTransform = colorTransform != null && colorTransform.__isDefault();
		if(!state.skipColorTransform) {
			state.colorTransform.redMultiplier = colorTransform.redMultiplier;
			state.colorTransform.greenMultiplier = colorTransform.greenMultiplier;
			state.colorTransform.blueMultiplier = colorTransform.blueMultiplier;
			state.colorTransform.alphaMultiplier = colorTransform.alphaMultiplier;
			state.colorTransform.redOffset = colorTransform.redOffset;
			state.colorTransform.greenOffset = colorTransform.greenOffset;
			state.colorTransform.blueOffset = colorTransform.blueOffset;
			state.colorTransform.alphaOffset = colorTransform.alphaOffset;
		}
		state.skipColorTransformAlpha = skipAlpha;
		if(shader == null) {
			state.shader = null;
			state.shaderData = null;
		} else {
			state.shader = shader.__shader;
			state.shaderData = shader.data;
		}
	}
	,setContext: function(gl) {
		this.gl = gl;
		this.vertexArray.setContext(gl,this.positions);
		this.indexBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);
		gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,this.indices,gl.STATIC_DRAW);
	}
	,prepareShader: function(flashShader,bd) {
		if(flashShader != null) {
			flashShader.__init(this.gl);
			flashShader.__shader.wrapS = flashShader.repeatX;
			flashShader.__shader.wrapT = flashShader.repeatY;
			flashShader.__shader.smooth = flashShader.smooth;
			flashShader.__shader.blendMode = flashShader.blendMode;
			var objSize = flashShader.data.get(openfl_display_Shader.uObjectSize);
			var texSize = flashShader.data.get(openfl_display_Shader.uTextureSize);
			if(bd != null) {
				objSize.value[0] = bd.width;
				objSize.value[1] = bd.height;
				if(bd.__pingPongTexture != null) {
					texSize.value[0] = bd.__pingPongTexture.get_renderTexture().__width;
					texSize.value[1] = bd.__pingPongTexture.get_renderTexture().__height;
				} else {
					texSize.value[0] = bd.width;
					texSize.value[1] = bd.height;
				}
			} else {
				objSize.value[0] = 0;
				objSize.value[1] = 0;
				texSize.value[0] = 0;
				texSize.value[1] = 0;
			}
		}
	}
	,getElementsPerVertex: function() {
		var r = 0;
		var _g = 0;
		var _g1 = this.attributes;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.enabled) r += Math.floor(a.components * a.getElementsBytes() / 4);
		}
		return r;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_SpriteBatch
};
var openfl__$internal_renderer_opengl_utils__$SpriteBatch_State = function() {
	this.skipColorTransformAlpha = false;
	this.skipColorTransform = false;
	this.colorTransform = new openfl_geom_ColorTransform();
	this.textureSmooth = true;
};
$hxClasses["openfl._internal.renderer.opengl.utils._SpriteBatch.State"] = openfl__$internal_renderer_opengl_utils__$SpriteBatch_State;
openfl__$internal_renderer_opengl_utils__$SpriteBatch_State.__name__ = ["openfl","_internal","renderer","opengl","utils","_SpriteBatch","State"];
openfl__$internal_renderer_opengl_utils__$SpriteBatch_State.prototype = {
	equals: function(other) {
		return (this.shader == null && other.shader == null || this.shader != null && other.shader != null && this.shader.ID == other.shader.ID) && this.texture == other.texture && this.textureSmooth == other.textureSmooth && this.blendMode == other.blendMode && (this.skipColorTransform && other.skipColorTransform || !this.skipColorTransform && !other.skipColorTransform && this.colorTransform.__equals(other.colorTransform,this.skipColorTransformAlpha));
	}
	,destroy: function() {
		this.texture = null;
		this.colorTransform = null;
	}
	,__class__: openfl__$internal_renderer_opengl_utils__$SpriteBatch_State
};
var openfl__$internal_renderer_opengl_utils_StencilManager = function(gl) {
	this.stencilMask = 0;
	this.stencilStack = [];
	this.setContext(gl);
	this.reverse = true;
	this.count = 0;
};
$hxClasses["openfl._internal.renderer.opengl.utils.StencilManager"] = openfl__$internal_renderer_opengl_utils_StencilManager;
openfl__$internal_renderer_opengl_utils_StencilManager.__name__ = ["openfl","_internal","renderer","opengl","utils","StencilManager"];
openfl__$internal_renderer_opengl_utils_StencilManager.prototype = {
	prepareGraphics: function(fill,renderSession,translationMatrix) {
		var shader = renderSession.shaderManager.fillShader;
		renderSession.shaderManager.setShader(shader);
		this.gl.uniformMatrix3fv(shader.getUniformLocation("openfl_uTranslationMatrix"),false,translationMatrix);
		this.gl.uniformMatrix3fv(shader.getUniformLocation("openfl_uProjectionMatrix"),false,renderSession.projectionMatrix.toArray(true));
		fill.vertexArray.bind();
		shader.bindVertexArray(fill.vertexArray);
		this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,fill.indexBuffer);
	}
	,pushBucket: function(bucket,renderSession,translationMatrix,isMask) {
		if(isMask == null) isMask = false;
		if(!isMask) {
			this.gl.enable(this.gl.STENCIL_TEST);
			this.gl.clear(this.gl.STENCIL_BUFFER_BIT);
			this.gl.stencilMask(255);
			this.gl.colorMask(false,false,false,false);
			this.gl.stencilFunc(this.gl.NEVER,1,255);
			this.gl.stencilOp(this.gl.INVERT,this.gl.KEEP,this.gl.KEEP);
			this.gl.clear(this.gl.STENCIL_BUFFER_BIT);
		}
		var _g = 0;
		var _g1 = bucket.fills;
		while(_g < _g1.length) {
			var fill = _g1[_g];
			++_g;
			if(fill.available) continue;
			this.prepareGraphics(fill,renderSession,translationMatrix);
			this.gl.drawElements(fill.drawMode,fill.glIndices.length,this.gl.UNSIGNED_SHORT,0);
		}
		if(!isMask) {
			this.gl.colorMask(true,true,true,renderSession.renderer.transparent);
			this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.KEEP);
			this.gl.stencilFunc(this.gl.EQUAL,255,255);
		}
	}
	,popBucket: function(object,bucket,renderSession) {
		this.gl.disable(this.gl.STENCIL_TEST);
	}
	,pushMask: function(object,renderSession) {
		var maskGraphics = object.__maskGraphics;
		if(maskGraphics == null || maskGraphics.__commands.get_length() <= 0) return;
		if(this.stencilMask == 0) {
			this.gl.enable(this.gl.STENCIL_TEST);
			this.gl.clear(this.gl.STENCIL_BUFFER_BIT);
		}
		this.stencilMask++;
		if(maskGraphics.__dirty) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.updateGraphics(object,maskGraphics,renderSession.gl);
		var func;
		if(this.stencilMask == 1) func = this.gl.NEVER; else func = this.gl.EQUAL;
		var ref = this.stencilMask;
		var mask = 255 - this.stencilMask;
		this.gl.stencilMask(255);
		this.gl.colorMask(false,false,false,false);
		this.gl.stencilFunc(func,ref,mask);
		this.gl.stencilOp(this.gl.REPLACE,this.gl.KEEP,this.gl.KEEP);
		var glStack = maskGraphics.__glStack[openfl__$internal_renderer_opengl_GLRenderer.glContextId];
		var bucket;
		var translationMatrix = object.__worldTransform;
		var _g1 = 0;
		var _g = glStack.buckets.length;
		while(_g1 < _g) {
			var i = _g1++;
			bucket = glStack.buckets[i];
			if(bucket.overrideMatrix != null) translationMatrix = bucket.overrideMatrix; else translationMatrix = object.__worldTransform;
			var _g2 = bucket.mode;
			switch(_g2[1]) {
			case 1:case 2:
				this.pushBucket(bucket,renderSession,translationMatrix.toArray(true),true);
				break;
			default:
			}
		}
		this.gl.colorMask(true,true,true,renderSession.renderer.transparent);
		this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.KEEP);
		this.gl.stencilFunc(this.gl.EQUAL,this.stencilMask,255);
	}
	,popMask: function(object,renderSession) {
		this.stencilMask--;
		if(this.stencilMask <= 0) {
			this.gl.disable(this.gl.STENCIL_TEST);
			this.stencilMask = 0;
		}
	}
	,bindGraphics: function(object,glData,renderSession) {
	}
	,destroy: function() {
		this.stencilStack = null;
		this.gl = null;
	}
	,popStencil: function(object,glData,renderSession) {
		this.stencilStack.pop();
		this.count--;
		if(this.stencilStack.length == 0) this.gl.disable(this.gl.STENCIL_TEST); else {
			var level = this.count;
			this.bindGraphics(object,glData,renderSession);
			this.gl.colorMask(false,false,false,false);
			if(glData.mode == 1) {
				this.reverse = !this.reverse;
				if(this.reverse) {
					this.gl.stencilFunc(this.gl.EQUAL,255 - (level + 1),255);
					this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.INCR);
				} else {
					this.gl.stencilFunc(this.gl.EQUAL,level + 1,255);
					this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.DECR);
				}
				this.gl.drawElements(this.gl.TRIANGLE_FAN,4,this.gl.UNSIGNED_SHORT,(glData.indices.length - 4) * 2);
				this.gl.stencilFunc(this.gl.ALWAYS,0,255);
				this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.INVERT);
				this.gl.drawElements(this.gl.TRIANGLE_FAN,glData.indices.length - 4,this.gl.UNSIGNED_SHORT,0);
				if(!this.reverse) this.gl.stencilFunc(this.gl.EQUAL,255 - level,255); else this.gl.stencilFunc(this.gl.EQUAL,level,255);
			} else {
				if(!this.reverse) {
					this.gl.stencilFunc(this.gl.EQUAL,255 - (level + 1),255);
					this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.INCR);
				} else {
					this.gl.stencilFunc(this.gl.EQUAL,level + 1,255);
					this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.DECR);
				}
				this.gl.drawElements(this.gl.TRIANGLE_STRIP,glData.indices.length,this.gl.UNSIGNED_SHORT,0);
				if(!this.reverse) this.gl.stencilFunc(this.gl.EQUAL,255 - level,255); else this.gl.stencilFunc(this.gl.EQUAL,level,255);
			}
			this.gl.colorMask(true,true,true,true);
			this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.KEEP);
		}
	}
	,pushStencil: function(object,glData,renderSession) {
		this.bindGraphics(object,glData,renderSession);
		if(this.stencilStack.length == 0) {
			this.gl.enable(this.gl.STENCIL_TEST);
			this.gl.clear(this.gl.STENCIL_BUFFER_BIT);
			this.reverse = true;
			this.count = 0;
		}
		this.stencilStack.push(glData);
		var level = this.count;
		this.gl.colorMask(false,false,false,false);
		this.gl.stencilFunc(this.gl.ALWAYS,0,255);
		this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.INVERT);
		if(glData.mode == 1) {
			this.gl.drawElements(this.gl.TRIANGLE_FAN,glData.indices.length - 4,this.gl.UNSIGNED_SHORT,0);
			if(this.reverse) {
				this.gl.stencilFunc(this.gl.EQUAL,255 - level,255);
				this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.DECR);
			} else {
				this.gl.stencilFunc(this.gl.EQUAL,level,255);
				this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.INCR);
			}
			this.gl.drawElements(this.gl.TRIANGLE_FAN,4,this.gl.UNSIGNED_SHORT,(glData.indices.length - 4) * 2);
			if(this.reverse) this.gl.stencilFunc(this.gl.EQUAL,255 - (level + 1),255); else this.gl.stencilFunc(this.gl.EQUAL,level + 1,255);
			this.reverse = !this.reverse;
		} else {
			if(!this.reverse) {
				this.gl.stencilFunc(this.gl.EQUAL,255 - level,255);
				this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.DECR);
			} else {
				this.gl.stencilFunc(this.gl.EQUAL,level,255);
				this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.INCR);
			}
			this.gl.drawElements(this.gl.TRIANGLE_STRIP,glData.indices.length,this.gl.UNSIGNED_SHORT,0);
			if(!this.reverse) this.gl.stencilFunc(this.gl.EQUAL,255 - (level + 1),255); else this.gl.stencilFunc(this.gl.EQUAL,level + 1,255);
		}
		this.gl.colorMask(true,true,true,true);
		this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.KEEP);
		this.count++;
	}
	,setContext: function(gl) {
		this.gl = gl;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_StencilManager
};
var openfl__$internal_renderer_opengl_utils_VertexArray = function(attributes,size,isStatic) {
	if(isStatic == null) isStatic = false;
	if(size == null) size = 0;
	this.isStatic = false;
	this.size = 0;
	this.attributes = [];
	this.size = size;
	this.attributes = attributes;
	if(size > 0) this.buffer = new ArrayBuffer(size);
	this.isStatic = isStatic;
};
$hxClasses["openfl._internal.renderer.opengl.utils.VertexArray"] = openfl__$internal_renderer_opengl_utils_VertexArray;
openfl__$internal_renderer_opengl_utils_VertexArray.__name__ = ["openfl","_internal","renderer","opengl","utils","VertexArray"];
openfl__$internal_renderer_opengl_utils_VertexArray.prototype = {
	bind: function() {
		this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.glBuffer);
	}
	,unbind: function() {
		this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);
	}
	,upload: function(view) {
		this.gl.bufferSubData(this.gl.ARRAY_BUFFER,0,view);
	}
	,destroy: function() {
		this.gl.deleteBuffer(this.glBuffer);
		this.buffer = null;
	}
	,setContext: function(gl,view) {
		this.gl = gl;
		this.glBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ARRAY_BUFFER,this.glBuffer);
		gl.bufferData(gl.ARRAY_BUFFER,view,this.isStatic?gl.STATIC_DRAW:gl.DYNAMIC_DRAW);
	}
	,get_stride: function() {
		var s = 0;
		var _g = 0;
		var _g1 = this.attributes;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.enabled) s += Math.floor(a.components * a.getElementsBytes() / 4) * 4;
		}
		return s;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_VertexArray
	,__properties__: {get_stride:"get_stride"}
};
var openfl__$internal_text_TextEngine = function(textField) {
	this.textField = textField;
	this.width = 100;
	this.height = 100;
	this.text = "";
	this.bounds = new openfl_geom_Rectangle(0,0,0,0);
	this.type = 0;
	this.autoSize = 2;
	this.displayAsPassword = false;
	this.embedFonts = false;
	this.selectable = true;
	this.borderColor = 0;
	this.border = false;
	this.backgroundColor = 16777215;
	this.background = false;
	this.gridFitType = 1;
	this.maxChars = 0;
	this.multiline = false;
	this.sharpness = 0;
	this.scrollH = 0;
	this.scrollV = 1;
	this.wordWrap = false;
	this.lineAscents = [];
	this.lineBreaks = [];
	this.lineDescents = [];
	this.lineLeadings = [];
	this.lineHeights = [];
	this.lineWidths = [];
	this.layoutGroups = [];
	this.textFormatRanges = [];
	openfl__$internal_text_TextEngine.__canvas = window.document.createElement("canvas");
	openfl__$internal_text_TextEngine.__context = openfl__$internal_text_TextEngine.__canvas.getContext("2d");
};
$hxClasses["openfl._internal.text.TextEngine"] = openfl__$internal_text_TextEngine;
openfl__$internal_text_TextEngine.__name__ = ["openfl","_internal","text","TextEngine"];
openfl__$internal_text_TextEngine.__canvas = null;
openfl__$internal_text_TextEngine.__context = null;
openfl__$internal_text_TextEngine.findFont = function(name) {
	return null;
};
openfl__$internal_text_TextEngine.getFont = function(format) {
	var font;
	if(format.italic) font = "italic "; else font = "normal ";
	font += "normal ";
	if(format.bold) font += "bold "; else font += "normal ";
	font += format.size + "px";
	font += "/" + (format.size + format.leading + 6) + "px ";
	font += "" + (function($this) {
		var $r;
		var _g = format.font;
		$r = (function($this) {
			var $r;
			switch(_g) {
			case "_sans":
				$r = "sans-serif";
				break;
			case "_serif":
				$r = "serif";
				break;
			case "_typewriter":
				$r = "monospace";
				break;
			default:
				$r = "'" + format.font + "'";
			}
			return $r;
		}($this));
		return $r;
	}(this));
	return font;
};
openfl__$internal_text_TextEngine.getFontInstance = function(format) {
	return null;
};
openfl__$internal_text_TextEngine.prototype = {
	getBounds: function() {
		var padding;
		if(this.border) padding = 1; else padding = 0;
		this.bounds.width = this.width + padding;
		this.bounds.height = this.height + padding;
	}
	,getLine: function(index) {
		if(index < 0 || index > this.lineBreaks.length + 1) return null;
		if(this.lineBreaks.length == 0) return this.text; else return this.text.substring(index > 0?this.lineBreaks[index - 1]:0,this.lineBreaks[index]);
	}
	,getLineMeasurements: function() {
		this.lineAscents.splice(0,this.lineAscents.length);
		this.lineDescents.splice(0,this.lineDescents.length);
		this.lineLeadings.splice(0,this.lineLeadings.length);
		this.lineHeights.splice(0,this.lineHeights.length);
		this.lineWidths.splice(0,this.lineWidths.length);
		var currentLineAscent = 0.0;
		var currentLineDescent = 0.0;
		var currentLineLeading = null;
		var currentLineHeight = 0.0;
		var currentLineWidth = 0.0;
		this.textWidth = 0;
		this.textHeight = 0;
		this.numLines = 1;
		this.bottomScrollV = 0;
		this.maxScrollH = 0;
		var _g = 0;
		var _g1 = this.layoutGroups;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			while(group.lineIndex > this.numLines - 1) {
				this.lineAscents.push(currentLineAscent);
				this.lineDescents.push(currentLineDescent);
				this.lineLeadings.push(currentLineLeading != null?currentLineLeading:0);
				this.lineHeights.push(currentLineHeight);
				this.lineWidths.push(currentLineWidth);
				currentLineAscent = 0;
				currentLineDescent = 0;
				currentLineLeading = null;
				currentLineHeight = 0;
				currentLineWidth = 0;
				this.numLines++;
				if(this.textHeight <= this.height - 2) this.bottomScrollV++;
			}
			currentLineAscent = Math.max(currentLineAscent,group.ascent);
			currentLineDescent = Math.max(currentLineDescent,group.descent);
			if(currentLineLeading == null) currentLineLeading = group.leading; else currentLineLeading = Std["int"](Math.max(currentLineLeading,group.leading));
			currentLineHeight = Math.max(currentLineHeight,group.height);
			currentLineWidth = group.offsetX - 2 + group.width;
			if(currentLineWidth > this.textWidth) this.textWidth = currentLineWidth;
			this.textHeight = group.offsetY - 2 + group.ascent + group.descent;
		}
		this.lineAscents.push(currentLineAscent);
		this.lineDescents.push(currentLineDescent);
		this.lineLeadings.push(currentLineLeading != null?currentLineLeading:0);
		this.lineHeights.push(currentLineHeight);
		this.lineWidths.push(currentLineWidth);
		if(this.numLines == 1) {
			this.bottomScrollV = 1;
			if(currentLineLeading > 0) this.textHeight += currentLineLeading;
		} else if(this.textHeight <= this.height - 2) this.bottomScrollV++;
		if(this.textWidth > this.width - 4) this.maxScrollH = this.textWidth - this.width + 4 | 0; else this.maxScrollH = 0;
		this.maxScrollV = this.numLines - this.bottomScrollV + 1;
	}
	,getLayoutGroups: function() {
		var _g = this;
		this.layoutGroups.splice(0,this.layoutGroups.length);
		var rangeIndex = -1;
		var formatRange = null;
		var font = null;
		var currentFormat = openfl_text_TextField.__defaultTextFormat.clone();
		var leading = 0;
		var ascent = 0.0;
		var descent = 0.0;
		var layoutGroup;
		var advances;
		var widthValue;
		var heightValue = 0.0;
		var spaceWidth = 0.0;
		var previousSpaceIndex = 0;
		var spaceIndex = this.text.indexOf(" ");
		var breakIndex = this.text.indexOf("\n");
		var marginRight = 0.0;
		var offsetX = 2.0;
		var offsetY = 2.0;
		var textIndex = 0;
		var lineIndex = 0;
		var lineFormat = null;
		if(rangeIndex < _g.textFormatRanges.length - 1) {
			rangeIndex++;
			formatRange = _g.textFormatRanges[rangeIndex];
			currentFormat.__merge(formatRange.format);
			openfl__$internal_text_TextEngine.__context.font = openfl__$internal_text_TextEngine.getFont(currentFormat);
			ascent = currentFormat.size;
			descent = currentFormat.size * 0.185;
			leading = currentFormat.leading;
			heightValue = ascent + descent + leading;
			if(spaceIndex > -1) spaceWidth = openfl__$internal_text_TextEngine.__context.measureText(" ").width;
		}
		lineFormat = formatRange.format;
		var wrap;
		while(textIndex < this.text.length) if(breakIndex > -1 && (spaceIndex == -1 || breakIndex < spaceIndex) && formatRange.end >= breakIndex) {
			layoutGroup = new openfl__$internal_text_TextLayoutGroup(formatRange.format,textIndex,breakIndex);
			var text = this.text;
			var advances1 = [];
			var _g1 = textIndex;
			while(_g1 < breakIndex) {
				var i = _g1++;
				advances1.push(openfl__$internal_text_TextEngine.__context.measureText(text.charAt(i)).width);
			}
			layoutGroup.advances = advances1;
			layoutGroup.offsetX = offsetX;
			layoutGroup.ascent = ascent;
			layoutGroup.descent = descent;
			layoutGroup.leading = leading;
			layoutGroup.lineIndex = lineIndex;
			layoutGroup.offsetY = offsetY;
			var advances2 = layoutGroup.advances;
			var width = 0.0;
			var _g2 = 0;
			while(_g2 < advances2.length) {
				var advance = advances2[_g2];
				++_g2;
				width += advance;
			}
			layoutGroup.width = width;
			layoutGroup.height = heightValue;
			this.layoutGroups.push(layoutGroup);
			offsetY += heightValue;
			offsetX = 2;
			if(this.wordWrap && layoutGroup.offsetX + layoutGroup.width > this.width - 2) {
				layoutGroup.offsetY = offsetY;
				layoutGroup.offsetX = offsetX;
				offsetY += heightValue;
				lineIndex++;
			}
			textIndex = breakIndex + 1;
			breakIndex = this.text.indexOf("\n",textIndex);
			lineIndex++;
			if(formatRange.end == breakIndex) {
				if(rangeIndex < _g.textFormatRanges.length - 1) {
					rangeIndex++;
					formatRange = _g.textFormatRanges[rangeIndex];
					currentFormat.__merge(formatRange.format);
					openfl__$internal_text_TextEngine.__context.font = openfl__$internal_text_TextEngine.getFont(currentFormat);
					ascent = currentFormat.size;
					descent = currentFormat.size * 0.185;
					leading = currentFormat.leading;
					heightValue = ascent + descent + leading;
					if(spaceIndex > -1) spaceWidth = openfl__$internal_text_TextEngine.__context.measureText(" ").width;
				}
				lineFormat = formatRange.format;
			}
		} else if(formatRange.end >= spaceIndex && spaceIndex > -1) {
			layoutGroup = null;
			wrap = false;
			while(true) {
				if(spaceIndex == -1) spaceIndex = formatRange.end;
				var text1 = this.text;
				var advances3 = [];
				var _g3 = textIndex;
				while(_g3 < spaceIndex) {
					var i1 = _g3++;
					advances3.push(openfl__$internal_text_TextEngine.__context.measureText(text1.charAt(i1)).width);
				}
				advances = advances3;
				var width1 = 0.0;
				var _g4 = 0;
				while(_g4 < advances.length) {
					var advance1 = advances[_g4];
					++_g4;
					width1 += advance1;
				}
				widthValue = width1;
				if(this.wordWrap) {
					if(offsetX + widthValue > this.width - 2) wrap = true;
				}
				if(wrap) {
					offsetY += heightValue;
					var i2 = this.layoutGroups.length - 1;
					var offsetCount = 0;
					while(true) {
						layoutGroup = this.layoutGroups[i2];
						if(i2 > 0 && layoutGroup.startIndex > previousSpaceIndex) offsetCount++; else break;
						i2--;
					}
					lineIndex++;
					offsetX = 2;
					if(offsetCount > 0) {
						var bumpX = this.layoutGroups[this.layoutGroups.length - offsetCount].offsetX;
						var _g11 = this.layoutGroups.length - offsetCount;
						var _g5 = this.layoutGroups.length;
						while(_g11 < _g5) {
							var i3 = _g11++;
							layoutGroup = this.layoutGroups[i3];
							layoutGroup.offsetX -= bumpX;
							layoutGroup.offsetY = offsetY;
							layoutGroup.lineIndex = lineIndex;
							offsetX += layoutGroup.width;
						}
					}
					layoutGroup = new openfl__$internal_text_TextLayoutGroup(formatRange.format,textIndex,spaceIndex);
					layoutGroup.advances = advances;
					layoutGroup.offsetX = offsetX;
					layoutGroup.ascent = ascent;
					layoutGroup.descent = descent;
					layoutGroup.leading = leading;
					layoutGroup.lineIndex = lineIndex;
					layoutGroup.offsetY = offsetY;
					layoutGroup.width = widthValue;
					layoutGroup.height = heightValue;
					this.layoutGroups.push(layoutGroup);
					offsetX = widthValue + spaceWidth;
					marginRight = spaceWidth;
					wrap = false;
				} else {
					if(layoutGroup != null && textIndex == spaceIndex) {
						if(formatRange.format.align != 2) layoutGroup.endIndex = spaceIndex;
						layoutGroup.advances.push(spaceWidth);
						marginRight += spaceWidth;
					} else if(layoutGroup == null || lineFormat.align == 2) {
						layoutGroup = new openfl__$internal_text_TextLayoutGroup(formatRange.format,textIndex,spaceIndex);
						layoutGroup.advances = advances;
						layoutGroup.offsetX = offsetX;
						layoutGroup.ascent = ascent;
						layoutGroup.descent = descent;
						layoutGroup.leading = leading;
						layoutGroup.lineIndex = lineIndex;
						layoutGroup.offsetY = offsetY;
						layoutGroup.width = widthValue;
						layoutGroup.height = heightValue;
						this.layoutGroups.push(layoutGroup);
						layoutGroup.advances.push(spaceWidth);
						marginRight = spaceWidth;
					} else {
						layoutGroup.endIndex = spaceIndex;
						layoutGroup.advances = layoutGroup.advances.concat(advances);
						layoutGroup.width += marginRight + widthValue;
						layoutGroup.advances.push(spaceWidth);
						marginRight = spaceWidth;
					}
					offsetX += widthValue + spaceWidth;
				}
				textIndex = spaceIndex + 1;
				previousSpaceIndex = spaceIndex;
				spaceIndex = this.text.indexOf(" ",previousSpaceIndex + 1);
				if(formatRange.end <= previousSpaceIndex) {
					layoutGroup = null;
					if(rangeIndex < _g.textFormatRanges.length - 1) {
						rangeIndex++;
						formatRange = _g.textFormatRanges[rangeIndex];
						currentFormat.__merge(formatRange.format);
						openfl__$internal_text_TextEngine.__context.font = openfl__$internal_text_TextEngine.getFont(currentFormat);
						ascent = currentFormat.size;
						descent = currentFormat.size * 0.185;
						leading = currentFormat.leading;
						heightValue = ascent + descent + leading;
						if(spaceIndex > -1) spaceWidth = openfl__$internal_text_TextEngine.__context.measureText(" ").width;
					}
				}
				if(spaceIndex > breakIndex && breakIndex > -1 || textIndex > this.text.length || spaceIndex > formatRange.end || spaceIndex == -1 && breakIndex > -1) break;
			}
		} else {
			if(textIndex >= formatRange.end) break;
			layoutGroup = new openfl__$internal_text_TextLayoutGroup(formatRange.format,textIndex,formatRange.end);
			var text2 = this.text;
			var advances4 = [];
			var _g6 = textIndex;
			while(_g6 < formatRange.end) {
				var i4 = _g6++;
				advances4.push(openfl__$internal_text_TextEngine.__context.measureText(text2.charAt(i4)).width);
			}
			layoutGroup.advances = advances4;
			layoutGroup.offsetX = offsetX;
			layoutGroup.ascent = ascent;
			layoutGroup.descent = descent;
			layoutGroup.leading = leading;
			layoutGroup.lineIndex = lineIndex;
			layoutGroup.offsetY = offsetY;
			var advances5 = layoutGroup.advances;
			var width2 = 0.0;
			var _g7 = 0;
			while(_g7 < advances5.length) {
				var advance2 = advances5[_g7];
				++_g7;
				width2 += advance2;
			}
			layoutGroup.width = width2;
			layoutGroup.height = heightValue;
			this.layoutGroups.push(layoutGroup);
			offsetX += layoutGroup.width;
			textIndex = formatRange.end;
			if(rangeIndex < _g.textFormatRanges.length - 1) {
				rangeIndex++;
				formatRange = _g.textFormatRanges[rangeIndex];
				currentFormat.__merge(formatRange.format);
				openfl__$internal_text_TextEngine.__context.font = openfl__$internal_text_TextEngine.getFont(currentFormat);
				ascent = currentFormat.size;
				descent = currentFormat.size * 0.185;
				leading = currentFormat.leading;
				heightValue = ascent + descent + leading;
				if(spaceIndex > -1) spaceWidth = openfl__$internal_text_TextEngine.__context.measureText(" ").width;
			}
		}
	}
	,setTextAlignment: function() {
		var lineIndex = -1;
		var offsetX = 0.0;
		var group;
		var lineLength;
		var _g1 = 0;
		var _g = this.layoutGroups.length;
		while(_g1 < _g) {
			var i = _g1++;
			group = this.layoutGroups[i];
			if(group.lineIndex != lineIndex) {
				lineIndex = group.lineIndex;
				var _g2 = group.format.align;
				switch(_g2) {
				case 0:
					if(this.lineWidths[lineIndex] < this.width - 4) offsetX = Math.round((this.width - 4 - this.lineWidths[lineIndex]) / 2); else offsetX = 0;
					break;
				case 4:
					if(this.lineWidths[lineIndex] < this.width - 4) offsetX = Math.round(this.width - 4 - this.lineWidths[lineIndex]); else offsetX = 0;
					break;
				case 2:
					if(this.lineWidths[lineIndex] < this.width - 4) {
						lineLength = 1;
						var _g4 = i + 1;
						var _g3 = this.layoutGroups.length;
						while(_g4 < _g3) {
							var j = _g4++;
							if(this.layoutGroups[j].lineIndex == lineIndex) lineLength++; else break;
						}
						if(lineLength > 1) {
							group = this.layoutGroups[i + lineLength - 1];
							if(group.endIndex < this.text.length && this.text.charAt(group.endIndex) != "\n") {
								offsetX = (this.width - 4 - this.lineWidths[lineIndex]) / (lineLength - 1);
								var _g31 = 1;
								while(_g31 < lineLength) {
									var j1 = _g31++;
									this.layoutGroups[i + j1].offsetX += offsetX * j1;
								}
							}
						}
					}
					offsetX = 0;
					break;
				default:
					offsetX = 0;
				}
			}
			if(offsetX > 0) group.offsetX += offsetX;
		}
	}
	,update: function() {
		if(this.text == null || StringTools.trim(this.text) == "" || this.textFormatRanges.length == 0) {
			this.lineAscents.splice(0,this.lineAscents.length);
			this.lineBreaks.splice(0,this.lineBreaks.length);
			this.lineDescents.splice(0,this.lineDescents.length);
			this.lineLeadings.splice(0,this.lineLeadings.length);
			this.lineHeights.splice(0,this.lineHeights.length);
			this.lineWidths.splice(0,this.lineWidths.length);
			this.layoutGroups.splice(0,this.layoutGroups.length);
			this.textWidth = 0;
			this.textHeight = 0;
			this.numLines = 1;
			this.maxScrollH = 0;
			this.maxScrollV = 1;
			this.bottomScrollV = 1;
		} else {
			this.getLayoutGroups();
			this.getLineMeasurements();
			this.setTextAlignment();
		}
		this.getBounds();
	}
	,__class__: openfl__$internal_text_TextEngine
};
var openfl__$internal_text_TextFormatRange = function(format,start,end) {
	this.format = format;
	this.start = start;
	this.end = end;
};
$hxClasses["openfl._internal.text.TextFormatRange"] = openfl__$internal_text_TextFormatRange;
openfl__$internal_text_TextFormatRange.__name__ = ["openfl","_internal","text","TextFormatRange"];
openfl__$internal_text_TextFormatRange.prototype = {
	__class__: openfl__$internal_text_TextFormatRange
};
var openfl__$internal_text_TextLayoutGroup = function(format,startIndex,endIndex) {
	this.format = format;
	this.startIndex = startIndex;
	this.endIndex = endIndex;
};
$hxClasses["openfl._internal.text.TextLayoutGroup"] = openfl__$internal_text_TextLayoutGroup;
openfl__$internal_text_TextLayoutGroup.__name__ = ["openfl","_internal","text","TextLayoutGroup"];
openfl__$internal_text_TextLayoutGroup.prototype = {
	__class__: openfl__$internal_text_TextLayoutGroup
};
var openfl_display_Application = function() {
	lime_app_Application.call(this);
	if(openfl_Lib.application == null) openfl_Lib.application = this;
};
$hxClasses["openfl.display.Application"] = openfl_display_Application;
openfl_display_Application.__name__ = ["openfl","display","Application"];
openfl_display_Application.__super__ = lime_app_Application;
openfl_display_Application.prototype = $extend(lime_app_Application.prototype,{
	create: function(config) {
		this.config = config;
		this.backend.create(config);
		if(config != null) {
			if(Object.prototype.hasOwnProperty.call(config,"fps")) this.backend.setFrameRate(config.fps);
			if(Object.prototype.hasOwnProperty.call(config,"windows")) {
				var _g = 0;
				var _g1 = config.windows;
				while(_g < _g1.length) {
					var windowConfig = _g1[_g];
					++_g;
					var $window = new openfl_display_Window(windowConfig);
					this.createWindow($window);
					break;
				}
			}
			if(this.preloader == null || this.preloader.complete) this.onPreloadComplete();
		}
	}
	,__class__: openfl_display_Application
});
var openfl_display_Bitmap = function(bitmapData,pixelSnapping,smoothing) {
	if(smoothing == null) smoothing = false;
	openfl_display_DisplayObject.call(this);
	this.bitmapData = bitmapData;
	this.pixelSnapping = pixelSnapping;
	this.smoothing = smoothing;
	if(pixelSnapping == null) this.pixelSnapping = 1;
};
$hxClasses["openfl.display.Bitmap"] = openfl_display_Bitmap;
openfl_display_Bitmap.__name__ = ["openfl","display","Bitmap"];
openfl_display_Bitmap.__super__ = openfl_display_DisplayObject;
openfl_display_Bitmap.prototype = $extend(openfl_display_DisplayObject.prototype,{
	__getBounds: function(rect,matrix) {
		if(this.bitmapData != null) {
			var bounds = openfl_geom_Rectangle.__temp;
			bounds.setTo(0,0,this.bitmapData.width,this.bitmapData.height);
			bounds.__transform(bounds,matrix);
			rect.__expand(bounds.x,bounds.y,bounds.width,bounds.height);
		}
	}
	,__hitTest: function(x,y,shapeFlag,stack,interactiveOnly,hitObject) {
		if(!hitObject.get_visible() || this.__isMask || this.bitmapData == null) return false;
		if(this.get_mask() != null && !this.get_mask().__hitTestMask(x,y)) return false;
		this.__getWorldTransform();
		var px = this.__worldTransform.__transformInverseX(x,y);
		var py = this.__worldTransform.__transformInverseY(x,y);
		if(px > 0 && py > 0 && px <= this.bitmapData.width && py <= this.bitmapData.height) {
			if(stack != null && !interactiveOnly) stack.push(hitObject);
			return true;
		}
		return false;
	}
	,__hitTestMask: function(x,y) {
		if(this.bitmapData == null) return false;
		this.__getWorldTransform();
		var px = this.__worldTransform.__transformInverseX(x,y);
		var py = this.__worldTransform.__transformInverseY(x,y);
		if(px > 0 && py > 0 && px <= this.bitmapData.width && py <= this.bitmapData.height) return true;
		return false;
	}
	,__renderCairo: function(renderSession) {
		openfl__$internal_renderer_cairo_CairoBitmap.render(this,renderSession);
	}
	,__renderCairoMask: function(renderSession) {
		renderSession.cairo.rectangle(0,0,this.get_width(),this.get_height());
	}
	,__renderCanvas: function(renderSession) {
		openfl__$internal_renderer_canvas_CanvasBitmap.render(this,renderSession);
	}
	,__renderCanvasMask: function(renderSession) {
		renderSession.context.rect(0,0,this.get_width(),this.get_height());
	}
	,__renderDOM: function(renderSession) {
		if(this.stage != null && this.__worldVisible && this.__renderable && this.bitmapData != null && this.bitmapData.__isValid) {
			if(this.bitmapData.image.buffer.__srcImage != null) openfl__$internal_renderer_dom_DOMBitmap.renderImage(this,renderSession); else openfl__$internal_renderer_dom_DOMBitmap.renderCanvas(this,renderSession);
		} else {
			if(this.__image != null) {
				renderSession.element.removeChild(this.__image);
				this.__image = null;
				this.__style = null;
			}
			if(this.__canvas != null) {
				renderSession.element.removeChild(this.__canvas);
				this.__canvas = null;
				this.__style = null;
			}
		}
	}
	,__renderGL: function(renderSession) {
		if(this.__cacheAsBitmap) {
			this.__cacheGL(renderSession);
			return;
		}
		if(this.__scrollRect != null) renderSession.maskManager.pushRect(this.__scrollRect,this.__renderTransform);
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.pushMask(this);
		if(!this.__renderable || this.__worldAlpha <= 0 || this.bitmapData == null || !this.bitmapData.__isValid) null; else renderSession.spriteBatch.renderBitmapData(this.bitmapData,this.smoothing,this.__renderTransform,this.__worldColorTransform,this.__worldAlpha,this.__blendMode,this.__shader,this.pixelSnapping);
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.popMask();
		if(this.__scrollRect != null) renderSession.maskManager.popRect();
	}
	,__updateMask: function(maskGraphics) {
		if(this.bitmapData == null) return;
		maskGraphics.__commands.overrideMatrix(this.__worldTransform);
		maskGraphics.beginFill(0);
		maskGraphics.drawRect(0,0,this.bitmapData.width,this.bitmapData.height);
		if(maskGraphics.__bounds == null) maskGraphics.__bounds = new openfl_geom_Rectangle();
		this.__getBounds(maskGraphics.__bounds,openfl_geom_Matrix.__identity);
		openfl_display_DisplayObject.prototype.__updateMask.call(this,maskGraphics);
	}
	,get_height: function() {
		if(this.bitmapData != null) return this.bitmapData.height * this.get_scaleY();
		return 0;
	}
	,set_height: function(value) {
		if(this.bitmapData != null) {
			if(value != this.bitmapData.height) this.set_scaleY(value / this.bitmapData.height);
			return value;
		}
		return 0;
	}
	,get_width: function() {
		if(this.bitmapData != null) return this.bitmapData.width * this.get_scaleX();
		return 0;
	}
	,set_width: function(value) {
		if(this.bitmapData != null) {
			if(value != this.bitmapData.width) this.set_scaleX(value / this.bitmapData.width);
			return value;
		}
		return 0;
	}
	,__class__: openfl_display_Bitmap
});
var openfl_display_TextureUvs = function() {
	this.y3 = 0;
	this.y2 = 0;
	this.y1 = 0;
	this.y0 = 0;
	this.x3 = 0;
	this.x2 = 0;
	this.x1 = 0;
	this.x0 = 0;
};
$hxClasses["openfl.display.TextureUvs"] = openfl_display_TextureUvs;
openfl_display_TextureUvs.__name__ = ["openfl","display","TextureUvs"];
openfl_display_TextureUvs.prototype = {
	reset: function() {
		this.x0 = this.x1 = this.x2 = this.x3 = this.y0 = this.y1 = this.y2 = this.y3 = 0;
	}
	,__class__: openfl_display_TextureUvs
};
var openfl_display__$BlendMode_BlendMode_$Impl_$ = {};
$hxClasses["openfl.display._BlendMode.BlendMode_Impl_"] = openfl_display__$BlendMode_BlendMode_$Impl_$;
openfl_display__$BlendMode_BlendMode_$Impl_$.__name__ = ["openfl","display","_BlendMode","BlendMode_Impl_"];
openfl_display__$BlendMode_BlendMode_$Impl_$.fromString = function(value) {
	switch(value) {
	case "add":
		return 0;
	case "alpha":
		return 1;
	case "darken":
		return 2;
	case "difference":
		return 3;
	case "erase":
		return 4;
	case "hardlight":
		return 5;
	case "invert":
		return 6;
	case "layer":
		return 7;
	case "lighten":
		return 8;
	case "multiply":
		return 9;
	case "normal":
		return 10;
	case "overlay":
		return 11;
	case "screen":
		return 12;
	case "shader":
		return 13;
	case "subtract":
		return 14;
	default:
		return null;
	}
};
openfl_display__$BlendMode_BlendMode_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "add";
	case 1:
		return "alpha";
	case 2:
		return "darken";
	case 3:
		return "difference";
	case 4:
		return "erase";
	case 5:
		return "hardlight";
	case 6:
		return "invert";
	case 7:
		return "layer";
	case 8:
		return "lighten";
	case 9:
		return "multiply";
	case 10:
		return "normal";
	case 11:
		return "overlay";
	case 12:
		return "screen";
	case 13:
		return "shader";
	case 14:
		return "subtract";
	default:
		return null;
	}
};
var openfl_display__$CapsStyle_CapsStyle_$Impl_$ = {};
$hxClasses["openfl.display._CapsStyle.CapsStyle_Impl_"] = openfl_display__$CapsStyle_CapsStyle_$Impl_$;
openfl_display__$CapsStyle_CapsStyle_$Impl_$.__name__ = ["openfl","display","_CapsStyle","CapsStyle_Impl_"];
openfl_display__$CapsStyle_CapsStyle_$Impl_$.fromString = function(value) {
	switch(value) {
	case "none":
		return 0;
	case "round":
		return 1;
	case "square":
		return 2;
	default:
		return null;
	}
};
openfl_display__$CapsStyle_CapsStyle_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "none";
	case 1:
		return "round";
	case 2:
		return "square";
	default:
		return null;
	}
};
var openfl_display_DirectRenderer = function(type) {
	if(type == null) type = "DirectRenderer";
	openfl_display_DisplayObject.call(this);
};
$hxClasses["openfl.display.DirectRenderer"] = openfl_display_DirectRenderer;
openfl_display_DirectRenderer.__name__ = ["openfl","display","DirectRenderer"];
openfl_display_DirectRenderer.__super__ = openfl_display_DisplayObject;
openfl_display_DirectRenderer.prototype = $extend(openfl_display_DisplayObject.prototype,{
	get_render: function() {
		return this.__render;
	}
	,set_render: function(value) {
		return this.__render = value;
	}
	,__class__: openfl_display_DirectRenderer
	,__properties__: $extend(openfl_display_DisplayObject.prototype.__properties__,{set_render:"set_render",get_render:"get_render"})
});
var openfl_text_TextField = function() {
	openfl_display_InteractiveObject.call(this);
	this.__caretIndex = -1;
	this.__graphics = new openfl_display_Graphics();
	this.__textEngine = new openfl__$internal_text_TextEngine(this);
	this.__layoutDirty = true;
	this.__tabEnabled = true;
	if(openfl_text_TextField.__defaultTextFormat == null) {
		openfl_text_TextField.__defaultTextFormat = new openfl_text_TextFormat("Times New Roman",12,0,false,false,false,"","",3,0,0,0,0);
		openfl_text_TextField.__defaultTextFormat.blockIndent = 0;
		openfl_text_TextField.__defaultTextFormat.bullet = false;
		openfl_text_TextField.__defaultTextFormat.letterSpacing = 0;
		openfl_text_TextField.__defaultTextFormat.kerning = false;
	}
	this.__textFormat = openfl_text_TextField.__defaultTextFormat.clone();
	this.__textEngine.textFormatRanges.push(new openfl__$internal_text_TextFormatRange(this.__textFormat,0,0));
	this.addEventListener("mouseDown",$bind(this,this.this_onMouseDown));
};
$hxClasses["openfl.text.TextField"] = openfl_text_TextField;
openfl_text_TextField.__name__ = ["openfl","text","TextField"];
openfl_text_TextField.__defaultTextFormat = null;
openfl_text_TextField.__super__ = openfl_display_InteractiveObject;
openfl_text_TextField.prototype = $extend(openfl_display_InteractiveObject.prototype,{
	appendText: function(text) {
		this.__textEngine.text += text;
		this.__textEngine.textFormatRanges[this.__textEngine.textFormatRanges.length - 1].end = this.__textEngine.text.length;
		this.__dirty = true;
		this.__layoutDirty = true;
	}
	,getCharBoundaries: function(charIndex) {
		if(charIndex < 0 || charIndex > this.__textEngine.text.length - 1) return null;
		this.__updateLayout();
		var _g = 0;
		var _g1 = this.__textEngine.layoutGroups;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			if(charIndex >= group.startIndex && charIndex <= group.endIndex) {
				var x = group.offsetX;
				var _g3 = 0;
				var _g2 = charIndex - group.startIndex;
				while(_g3 < _g2) {
					var i = _g3++;
					x += group.advances[i];
				}
				return new openfl_geom_Rectangle(x,group.offsetY,group.advances[charIndex - group.startIndex],group.ascent + group.descent);
			}
		}
		return null;
	}
	,getCharIndexAtPoint: function(x,y) {
		if(x <= 2 || x > this.get_width() + 4 || y <= 0 || y > this.get_height() + 4) return -1;
		this.__updateLayout();
		x += this.get_scrollH();
		var _g1 = 0;
		var _g = this.get_scrollV() - 1;
		while(_g1 < _g) {
			var i = _g1++;
			y += this.__textEngine.lineHeights[i];
		}
		var _g2 = 0;
		var _g11 = this.__textEngine.layoutGroups;
		while(_g2 < _g11.length) {
			var group = _g11[_g2];
			++_g2;
			if(y >= group.offsetY && y <= group.offsetY + group.height) {
				if(x >= group.offsetX && x <= group.offsetX + group.width) {
					var advance = 0.0;
					var _g3 = 0;
					var _g21 = group.advances.length;
					while(_g3 < _g21) {
						var i1 = _g3++;
						advance += group.advances[i1];
						if(x <= group.offsetX + advance) return group.startIndex + i1;
					}
					return group.endIndex;
				}
			}
		}
		return -1;
	}
	,getFirstCharInParagraph: function(charIndex) {
		if(charIndex < 0 || charIndex > this.__textEngine.text.length - 1) return 0;
		var index = this.__textEngine.text.indexOf("\n");
		var startIndex = 0;
		while(index > -1) {
			if(index <= charIndex) startIndex = index + 1; else if(index > charIndex) break;
			index = this.__textEngine.text.indexOf("\n",index + 1);
		}
		return startIndex;
	}
	,getLineIndexAtPoint: function(x,y) {
		this.__updateLayout();
		if(x <= 2 || x > this.get_width() + 4 || y <= 0 || y > this.get_height() + 4) return -1;
		var _g1 = 0;
		var _g = this.get_scrollV() - 1;
		while(_g1 < _g) {
			var i = _g1++;
			y += this.__textEngine.lineHeights[i];
		}
		var _g2 = 0;
		var _g11 = this.__textEngine.layoutGroups;
		while(_g2 < _g11.length) {
			var group = _g11[_g2];
			++_g2;
			if(y >= group.offsetY && y <= group.offsetY + group.height) return group.lineIndex;
		}
		return -1;
	}
	,getLineIndexOfChar: function(charIndex) {
		if(charIndex < 0 || charIndex > this.__textEngine.text.length - 1) return -1;
		this.__updateLayout();
		var _g = 0;
		var _g1 = this.__textEngine.layoutGroups;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			if(group.startIndex <= charIndex && group.endIndex >= charIndex) return group.lineIndex;
		}
		return -1;
	}
	,getLineLength: function(lineIndex) {
		this.__updateLayout();
		if(lineIndex < 0 || lineIndex > this.__textEngine.numLines - 1) return 0;
		var startIndex = -1;
		var endIndex = -1;
		var _g = 0;
		var _g1 = this.__textEngine.layoutGroups;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			if(group.lineIndex == lineIndex) {
				if(startIndex == -1) startIndex = group.startIndex;
			} else if(group.lineIndex == lineIndex + 1) {
				endIndex = group.startIndex;
				break;
			}
		}
		if(endIndex == -1) endIndex = this.__textEngine.text.length;
		return endIndex - startIndex;
	}
	,getLineMetrics: function(lineIndex) {
		this.__updateLayout();
		var ascender = this.__textEngine.lineAscents[lineIndex];
		var descender = this.__textEngine.lineDescents[lineIndex];
		var leading = this.__textEngine.lineLeadings[lineIndex];
		var lineHeight = this.__textEngine.lineHeights[lineIndex];
		var lineWidth = this.__textEngine.lineWidths[lineIndex];
		var margin;
		var _g = this.__textFormat.align;
		switch(_g) {
		case 3:case 2:case 5:
			margin = 2;
			break;
		case 4:case 1:
			margin = this.__textEngine.width - lineWidth - 2;
			break;
		case 0:
			margin = (this.__textEngine.width - lineWidth) / 2;
			break;
		}
		return new openfl_text_TextLineMetrics(margin,lineWidth,lineHeight,ascender,descender,leading);
	}
	,getLineOffset: function(lineIndex) {
		this.__updateLayout();
		if(lineIndex < 0 || lineIndex > this.__textEngine.numLines - 1) return -1;
		var _g = 0;
		var _g1 = this.__textEngine.layoutGroups;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			if(group.lineIndex == lineIndex) return group.startIndex;
		}
		return 0;
	}
	,getLineText: function(lineIndex) {
		this.__updateLayout();
		if(lineIndex < 0 || lineIndex > this.__textEngine.numLines - 1) return null;
		var startIndex = -1;
		var endIndex = -1;
		var _g = 0;
		var _g1 = this.__textEngine.layoutGroups;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			if(group.lineIndex == lineIndex) {
				if(startIndex == -1) startIndex = group.startIndex;
			} else if(group.lineIndex == lineIndex + 1) {
				endIndex = group.startIndex;
				break;
			}
		}
		if(endIndex == -1) endIndex = this.__textEngine.text.length;
		return this.__textEngine.text.substring(startIndex,endIndex);
	}
	,getParagraphLength: function(charIndex) {
		if(charIndex < 0 || charIndex > this.__textEngine.text.length - 1) return 0;
		var startIndex = this.getFirstCharInParagraph(charIndex);
		var endIndex = this.__textEngine.text.indexOf("\n",charIndex) + 1;
		if(endIndex == 0) endIndex = this.__textEngine.text.length;
		return endIndex - startIndex;
	}
	,getTextFormat: function(beginIndex,endIndex) {
		if(endIndex == null) endIndex = 0;
		if(beginIndex == null) beginIndex = 0;
		var format = null;
		var _g = 0;
		var _g1 = this.__textEngine.textFormatRanges;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			if(group.start <= beginIndex && group.end >= beginIndex || group.start <= endIndex && group.end >= endIndex) {
				if(format == null) format = group.format.clone(); else {
					if(group.format.font != format.font) format.font = null;
					if(group.format.size != format.size) format.size = null;
					if(group.format.color != format.color) format.color = null;
					if(group.format.bold != format.bold) format.bold = null;
					if(group.format.italic != format.italic) format.italic = null;
					if(group.format.underline != format.underline) format.underline = null;
					if(group.format.url != format.url) format.url = null;
					if(group.format.target != format.target) format.target = null;
					if(group.format.align != format.align) format.align = null;
					if(group.format.leftMargin != format.leftMargin) format.leftMargin = null;
					if(group.format.rightMargin != format.rightMargin) format.rightMargin = null;
					if(group.format.indent != format.indent) format.indent = null;
					if(group.format.leading != format.leading) format.leading = null;
					if(group.format.blockIndent != format.blockIndent) format.blockIndent = null;
					if(group.format.bullet != format.bullet) format.bullet = null;
					if(group.format.kerning != format.kerning) format.kerning = null;
					if(group.format.letterSpacing != format.letterSpacing) format.letterSpacing = null;
					if(group.format.tabStops != format.tabStops) format.tabStops = null;
				}
			}
		}
		return format;
	}
	,replaceSelectedText: function(value) {
		if(value == "" && this.__selectionIndex == this.__caretIndex) return;
		var startIndex;
		if(this.__caretIndex < this.__selectionIndex) startIndex = this.__caretIndex; else startIndex = this.__selectionIndex;
		var endIndex;
		if(this.__caretIndex > this.__selectionIndex) endIndex = this.__caretIndex; else endIndex = this.__selectionIndex;
		this.replaceText(startIndex,endIndex,value);
		this.__caretIndex = startIndex + value.length;
		this.__selectionIndex = this.__caretIndex;
	}
	,replaceText: function(beginIndex,endIndex,newText) {
		if(endIndex < beginIndex || beginIndex < 0 || endIndex > this.__textEngine.text.length || newText == null) return;
		this.__textEngine.text = this.__textEngine.text.substring(0,beginIndex) + newText + this.__textEngine.text.substring(endIndex);
		var offset = newText.length - (endIndex - beginIndex);
		var i = 0;
		var range;
		while(i < this.__textEngine.textFormatRanges.length) {
			range = this.__textEngine.textFormatRanges[i];
			if(range.start <= beginIndex && range.end >= endIndex) {
				range.end += offset;
				i++;
			} else if(range.start >= beginIndex && range.end <= endIndex) {
				this.__textEngine.textFormatRanges.splice(i,1);
				offset -= range.end - range.start;
			} else if(range.start > beginIndex && range.start <= endIndex) {
				range.start += offset;
				i++;
			} else i++;
		}
		this.__dirty = true;
		this.__layoutDirty = true;
	}
	,setSelection: function(beginIndex,endIndex) {
		this.__selectionIndex = beginIndex;
		this.__caretIndex = endIndex;
	}
	,setTextFormat: function(format,beginIndex,endIndex) {
		if(endIndex == null) endIndex = 0;
		if(beginIndex == null) beginIndex = 0;
		if(format.font != null) this.__textFormat.font = format.font;
		if(format.size != null) this.__textFormat.size = format.size;
		if(format.color != null) this.__textFormat.color = format.color;
		if(format.bold != null) this.__textFormat.bold = format.bold;
		if(format.italic != null) this.__textFormat.italic = format.italic;
		if(format.underline != null) this.__textFormat.underline = format.underline;
		if(format.url != null) this.__textFormat.url = format.url;
		if(format.target != null) this.__textFormat.target = format.target;
		if(format.align != null) this.__textFormat.align = format.align;
		if(format.leftMargin != null) this.__textFormat.leftMargin = format.leftMargin;
		if(format.rightMargin != null) this.__textFormat.rightMargin = format.rightMargin;
		if(format.indent != null) this.__textFormat.indent = format.indent;
		if(format.leading != null) this.__textFormat.leading = format.leading;
		if(format.blockIndent != null) this.__textFormat.blockIndent = format.blockIndent;
		if(format.bullet != null) this.__textFormat.bullet = format.bullet;
		if(format.kerning != null) this.__textFormat.kerning = format.kerning;
		if(format.letterSpacing != null) this.__textFormat.letterSpacing = format.letterSpacing;
		if(format.tabStops != null) this.__textFormat.tabStops = format.tabStops;
		this.__dirty = true;
		this.__layoutDirty = true;
	}
	,__getBounds: function(rect,matrix) {
		this.__updateLayout();
		var bounds = openfl_geom_Rectangle.__temp;
		this.__textEngine.bounds.__transform(bounds,matrix);
		rect.__expand(bounds.x,bounds.y,bounds.width,bounds.height);
	}
	,__getCursor: function() {
		if(this.__textEngine.selectable) return lime_ui_MouseCursor.TEXT; else return null;
	}
	,__getPosition: function(x,y) {
		this.__updateLayout();
		x += this.get_scrollH();
		var _g1 = 0;
		var _g = this.get_scrollV() - 1;
		while(_g1 < _g) {
			var i = _g1++;
			y += this.__textEngine.lineHeights[i];
		}
		if(y > this.__textEngine.textHeight) y = this.__textEngine.textHeight;
		var firstGroup = true;
		var group;
		var nextGroup;
		var _g11 = 0;
		var _g2 = this.__textEngine.layoutGroups.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			group = this.__textEngine.layoutGroups[i1];
			if(i1 < this.__textEngine.layoutGroups.length - 1) nextGroup = this.__textEngine.layoutGroups[i1 + 1]; else nextGroup = null;
			if(firstGroup) {
				if(y < group.offsetY) y = group.offsetY;
				if(x < group.offsetX) x = group.offsetX;
				firstGroup = false;
			}
			if(y >= group.offsetY && y <= group.offsetY + group.height || nextGroup == null) {
				if(x >= group.offsetX && x <= group.offsetX + group.width || (nextGroup == null || nextGroup.lineIndex != group.lineIndex)) {
					var advance = 0.0;
					var _g3 = 0;
					var _g21 = group.advances.length;
					while(_g3 < _g21) {
						var i2 = _g3++;
						advance += group.advances[i2];
						if(x <= group.offsetX + advance) {
							if(x <= group.offsetX + (advance - group.advances[i2]) + group.advances[i2] / 2) return group.startIndex + i2; else if(group.startIndex + i2 < group.endIndex) return group.startIndex + i2 + 1; else return group.endIndex;
						}
					}
					return group.endIndex;
				}
			}
		}
		return this.__textEngine.text.length;
	}
	,__hitTest: function(x,y,shapeFlag,stack,interactiveOnly,hitObject) {
		if(!hitObject.get_visible() || this.__isMask || interactiveOnly && !this.mouseEnabled) return false;
		if(this.get_mask() != null && !this.get_mask().__hitTestMask(x,y)) return false;
		this.__getWorldTransform();
		this.__updateLayout();
		var px = this.__worldTransform.__transformInverseX(x,y);
		var py = this.__worldTransform.__transformInverseY(x,y);
		if(this.__textEngine.bounds.contains(px,py)) {
			if(stack != null) stack.push(hitObject);
			return true;
		}
		return false;
	}
	,__hitTestMask: function(x,y) {
		this.__getWorldTransform();
		this.__updateLayout();
		var px = this.__worldTransform.__transformInverseX(x,y);
		var py = this.__worldTransform.__transformInverseY(x,y);
		if(this.__textEngine.bounds.contains(px,py)) return true;
		return false;
	}
	,__renderCairo: function(renderSession) {
		openfl__$internal_renderer_cairo_CairoTextField.render(this,renderSession);
		openfl_display_InteractiveObject.prototype.__renderCairo.call(this,renderSession);
	}
	,__renderCanvas: function(renderSession) {
		openfl__$internal_renderer_canvas_CanvasTextField.render(this,renderSession);
		if(this.__textEngine.antiAliasType == 0 && this.__textEngine.gridFitType == 1) {
			var smoothingEnabled = renderSession.context.imageSmoothingEnabled;
			if(smoothingEnabled) {
				renderSession.context.mozImageSmoothingEnabled = false;
				renderSession.context.msImageSmoothingEnabled = false;
				renderSession.context.imageSmoothingEnabled = false;
			}
			openfl_display_InteractiveObject.prototype.__renderCanvas.call(this,renderSession);
			if(smoothingEnabled) {
				renderSession.context.mozImageSmoothingEnabled = true;
				renderSession.context.msImageSmoothingEnabled = true;
				renderSession.context.imageSmoothingEnabled = true;
			}
		} else openfl_display_InteractiveObject.prototype.__renderCanvas.call(this,renderSession);
	}
	,__renderDOM: function(renderSession) {
		openfl__$internal_renderer_dom_DOMTextField.render(this,renderSession);
	}
	,__renderGL: function(renderSession) {
		if(this.__cacheAsBitmap) {
			this.__cacheGL(renderSession);
			return;
		}
		if(this.__scrollRect != null) renderSession.maskManager.pushRect(this.__scrollRect,this.__renderTransform);
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.pushMask(this);
		openfl__$internal_renderer_canvas_CanvasTextField.render(this,renderSession);
		openfl__$internal_renderer_opengl_GLRenderer.renderBitmap(this,renderSession,this.__textEngine.antiAliasType != 0 || this.__textEngine.gridFitType != 1);
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.popMask();
		if(this.__scrollRect != null) renderSession.maskManager.popRect();
	}
	,__startCursorTimer: function() {
		this.__cursorTimer = haxe_Timer.delay($bind(this,this.__startCursorTimer),600);
		this.__showCursor = !this.__showCursor;
		this.__dirty = true;
	}
	,__startTextInput: function() {
		if(this.__caretIndex < 0) {
			this.__caretIndex = this.__textEngine.text.length;
			this.__selectionIndex = this.__caretIndex;
		}
		if(this.stage != null) {
			this.stage.window.backend.setEnableTextEvents(true);
			if(!this.__inputEnabled) {
				this.stage.window.backend.setEnableTextEvents(true);
				if(!this.stage.window.onTextInput.has($bind(this,this.window_onTextInput))) {
					this.stage.window.onTextInput.add($bind(this,this.window_onTextInput));
					this.stage.window.onKeyDown.add($bind(this,this.window_onKeyDown));
				}
				this.__inputEnabled = true;
				this.__startCursorTimer();
			}
		}
	}
	,__stopCursorTimer: function() {
		if(this.__cursorTimer != null) {
			this.__cursorTimer.stop();
			this.__cursorTimer = null;
		}
		if(this.__showCursor) {
			this.__showCursor = false;
			this.__dirty = true;
		}
	}
	,__stopTextInput: function() {
		if(this.__inputEnabled && this.stage != null) {
			this.stage.window.backend.setEnableTextEvents(false);
			this.stage.window.onTextInput.remove($bind(this,this.window_onTextInput));
			this.stage.window.onKeyDown.remove($bind(this,this.window_onKeyDown));
			this.__inputEnabled = false;
			this.__stopCursorTimer();
		}
	}
	,__updateLayout: function() {
		if(this.__layoutDirty) {
			this.__textEngine.update();
			if(this.__textEngine.autoSize != 2) {
				var cacheWidth = this.__textEngine.width;
				var cacheHeight = this.__textEngine.height;
				var _g = this.__textEngine.autoSize;
				switch(_g) {
				case 1:case 3:case 0:
					if(!this.__textEngine.wordWrap) this.__textEngine.width = this.__textEngine.textWidth + 4;
					this.__textEngine.height = this.__textEngine.textHeight + 4;
					break;
				default:
				}
				if(this.__textEngine.width != cacheWidth) {
					var _g1 = this.__textEngine.autoSize;
					switch(_g1) {
					case 3:
						var _g11 = this;
						_g11.set_x(_g11.get_x() + (cacheWidth - this.__textEngine.width));
						break;
					case 0:
						var _g12 = this;
						_g12.set_x(_g12.get_x() + (cacheWidth - this.__textEngine.width) / 2);
						break;
					default:
					}
				}
				this.__textEngine.getBounds();
			}
			this.__layoutDirty = false;
		}
	}
	,get_antiAliasType: function() {
		return this.__textEngine.antiAliasType;
	}
	,set_antiAliasType: function(value) {
		if(value != this.__textEngine.antiAliasType) {
		}
		return this.__textEngine.antiAliasType = value;
	}
	,get_autoSize: function() {
		return this.__textEngine.autoSize;
	}
	,set_autoSize: function(value) {
		if(value != this.__textEngine.autoSize) {
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		return this.__textEngine.autoSize = value;
	}
	,get_background: function() {
		return this.__textEngine.background;
	}
	,set_background: function(value) {
		if(value != this.__textEngine.background) this.__dirty = true;
		return this.__textEngine.background = value;
	}
	,get_backgroundColor: function() {
		return this.__textEngine.backgroundColor;
	}
	,set_backgroundColor: function(value) {
		if(value != this.__textEngine.backgroundColor) this.__dirty = true;
		return this.__textEngine.backgroundColor = value;
	}
	,get_border: function() {
		return this.__textEngine.border;
	}
	,set_border: function(value) {
		if(value != this.__textEngine.border) this.__dirty = true;
		return this.__textEngine.border = value;
	}
	,get_borderColor: function() {
		return this.__textEngine.borderColor;
	}
	,set_borderColor: function(value) {
		if(value != this.__textEngine.borderColor) this.__dirty = true;
		return this.__textEngine.borderColor = value;
	}
	,get_bottomScrollV: function() {
		this.__updateLayout();
		return this.__textEngine.bottomScrollV;
	}
	,get_caretIndex: function() {
		return this.__caretIndex;
	}
	,get_defaultTextFormat: function() {
		return this.__textFormat.clone();
	}
	,set_defaultTextFormat: function(value) {
		this.__textFormat.__merge(value);
		this.__layoutDirty = true;
		this.__dirty = true;
		return value;
	}
	,get_displayAsPassword: function() {
		return this.__textEngine.displayAsPassword;
	}
	,set_displayAsPassword: function(value) {
		if(value != this.__textEngine.displayAsPassword) {
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		return this.__textEngine.displayAsPassword = value;
	}
	,get_embedFonts: function() {
		return this.__textEngine.embedFonts;
	}
	,set_embedFonts: function(value) {
		return this.__textEngine.embedFonts = value;
	}
	,get_gridFitType: function() {
		return this.__textEngine.gridFitType;
	}
	,set_gridFitType: function(value) {
		return this.__textEngine.gridFitType = value;
	}
	,get_height: function() {
		this.__updateLayout();
		return this.__textEngine.height;
	}
	,set_height: function(value) {
		if(this.get_scaleY() != 1 || value != this.__textEngine.height) {
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		this.set_scaleY(1);
		return this.__textEngine.height = value;
	}
	,get_htmlText: function() {
		return this.__textEngine.text;
	}
	,set_htmlText: function(value) {
		if(!this.__isHTML || this.__textEngine.text != value) {
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		this.__isHTML = true;
		if(this.__div == null) {
			value = new EReg("<br>","g").replace(value,"\n");
			value = new EReg("<br/>","g").replace(value,"\n");
			var segments = value.split("<font");
			if(segments.length == 1) {
				value = new EReg("<.*?>","g").replace(value,"");
				if(this.__textEngine.textFormatRanges.length > 1) this.__textEngine.textFormatRanges.splice(1,this.__textEngine.textFormatRanges.length - 1);
				var range = this.__textEngine.textFormatRanges[0];
				range.format = this.__textFormat;
				range.start = 0;
				range.end = value.length;
				return this.__textEngine.text = value;
			} else {
				this.__textEngine.textFormatRanges.splice(0,this.__textEngine.textFormatRanges.length);
				value = "";
				var _g = 0;
				while(_g < segments.length) {
					var segment = segments[_g];
					++_g;
					if(segment == "") continue;
					var closeFontIndex = segment.indexOf("</font>");
					if(closeFontIndex > -1) {
						var start = segment.indexOf(">") + 1;
						var end = closeFontIndex;
						var format = this.__textFormat.clone();
						var faceIndex = segment.indexOf("face=");
						var colorIndex = segment.indexOf("color=");
						var sizeIndex = segment.indexOf("size=");
						if(faceIndex > -1 && faceIndex < start) {
							var len = segment.indexOf("\"",faceIndex);
							format.font = HxOverrides.substr(segment,faceIndex + 6,len);
						}
						if(colorIndex > -1 && colorIndex < start) format.color = Std.parseInt("0x" + HxOverrides.substr(segment,colorIndex + 8,6));
						if(sizeIndex > -1 && sizeIndex < start) format.size = Std.parseInt((function($this) {
							var $r;
							var len1 = segment.indexOf("\"",sizeIndex);
							$r = HxOverrides.substr(segment,sizeIndex + 6,len1);
							return $r;
						}(this)));
						var sub = segment.substring(start,end);
						sub = new EReg("<.*?>","g").replace(sub,"");
						this.__textEngine.textFormatRanges.push(new openfl__$internal_text_TextFormatRange(format,value.length,value.length + sub.length));
						value += sub;
						if(closeFontIndex + 7 < segment.length) {
							sub = HxOverrides.substr(segment,closeFontIndex + 7,null);
							this.__textEngine.textFormatRanges.push(new openfl__$internal_text_TextFormatRange(this.__textFormat,value.length,value.length + sub.length));
							value += sub;
						}
					} else {
						this.__textEngine.textFormatRanges.push(new openfl__$internal_text_TextFormatRange(this.__textFormat,value.length,value.length + segment.length));
						value += segment;
					}
				}
			}
		}
		return this.__textEngine.text = value;
	}
	,get_length: function() {
		if(this.__textEngine.text != null) return this.__textEngine.text.length;
		return 0;
	}
	,get_maxChars: function() {
		return this.__textEngine.maxChars;
	}
	,set_maxChars: function(value) {
		if(value != this.__textEngine.maxChars) {
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		return this.__textEngine.maxChars = value;
	}
	,get_maxScrollH: function() {
		this.__updateLayout();
		return this.__textEngine.maxScrollH;
	}
	,get_maxScrollV: function() {
		this.__updateLayout();
		return this.__textEngine.maxScrollV;
	}
	,get_multiline: function() {
		return this.__textEngine.multiline;
	}
	,set_multiline: function(value) {
		if(value != this.__textEngine.multiline) {
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		return this.__textEngine.multiline = value;
	}
	,get_numLines: function() {
		this.__updateLayout();
		return this.__textEngine.numLines;
	}
	,get_restrict: function() {
		return this.__textEngine.restrict;
	}
	,set_restrict: function(value) {
		return this.__textEngine.restrict = value;
	}
	,get_scrollH: function() {
		return this.__textEngine.scrollH;
	}
	,set_scrollH: function(value) {
		if(value > this.__textEngine.maxScrollH) value = this.__textEngine.maxScrollH;
		if(value < 0) value = 0;
		if(value != this.__textEngine.scrollH) this.__dirty = true;
		return this.__textEngine.scrollH = value;
	}
	,get_scrollV: function() {
		return this.__textEngine.scrollV;
	}
	,set_scrollV: function(value) {
		if(value > this.__textEngine.maxScrollV) value = this.__textEngine.maxScrollV;
		if(value < 1) value = 1;
		if(value != this.__textEngine.scrollV) this.__dirty = true;
		return this.__textEngine.scrollV = value;
	}
	,get_selectable: function() {
		return this.__textEngine.selectable;
	}
	,set_selectable: function(value) {
		if(value != this.__textEngine.selectable && this.get_type() == 1) {
			if(this.stage != null && this.stage.get_focus() == this) this.__startTextInput(); else if(!value) this.__stopTextInput();
		}
		return this.__textEngine.selectable = value;
	}
	,get_selectionBeginIndex: function() {
		return Std["int"](Math.min(this.__caretIndex,this.__selectionIndex));
	}
	,get_selectionEndIndex: function() {
		return Std["int"](Math.max(this.__caretIndex,this.__selectionIndex));
	}
	,get_sharpness: function() {
		return this.__textEngine.sharpness;
	}
	,set_sharpness: function(value) {
		if(value != this.__textEngine.sharpness) this.__dirty = true;
		return this.__textEngine.sharpness = value;
	}
	,get_text: function() {
		return this.__textEngine.text;
	}
	,set_text: function(value) {
		if(this.__isHTML || this.__textEngine.text != value) {
			this.__dirty = true;
			this.__layoutDirty = true;
		} else return value;
		if(this.__textEngine.textFormatRanges.length > 1) this.__textEngine.textFormatRanges.splice(1,this.__textEngine.textFormatRanges.length - 1);
		var range = this.__textEngine.textFormatRanges[0];
		range.format = this.__textFormat;
		range.start = 0;
		range.end = value.length;
		this.__isHTML = false;
		return this.__textEngine.text = value;
	}
	,get_textColor: function() {
		return this.__textFormat.color;
	}
	,set_textColor: function(value) {
		if(value != this.__textFormat.color) this.__dirty = true;
		var _g = 0;
		var _g1 = this.__textEngine.textFormatRanges;
		while(_g < _g1.length) {
			var range = _g1[_g];
			++_g;
			range.format.color = value;
		}
		return this.__textFormat.color = value;
	}
	,get_textWidth: function() {
		this.__updateLayout();
		return this.__textEngine.textWidth;
	}
	,get_textHeight: function() {
		this.__updateLayout();
		return this.__textEngine.textHeight;
	}
	,get_type: function() {
		return this.__textEngine.type;
	}
	,set_type: function(value) {
		if(value != this.__textEngine.type) {
			if(value == 1) {
				this.addEventListener("focusIn",$bind(this,this.this_onFocusIn));
				this.addEventListener("focusOut",$bind(this,this.this_onFocusOut));
				this.addEventListener("addedToStage",$bind(this,this.this_onAddedToStage));
				this.this_onFocusIn(null);
			} else {
				this.removeEventListener("focusIn",$bind(this,this.this_onFocusIn));
				this.removeEventListener("focusOut",$bind(this,this.this_onFocusOut));
				this.removeEventListener("addedToStage",$bind(this,this.this_onAddedToStage));
				this.__stopTextInput();
			}
			this.__dirty = true;
		}
		return this.__textEngine.type = value;
	}
	,get_width: function() {
		this.__updateLayout();
		return this.__textEngine.width;
	}
	,set_width: function(value) {
		if(this.get_scaleX() != 1 || this.__textEngine.width != value) {
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		this.set_scaleX(1);
		return this.__textEngine.width = value;
	}
	,get_wordWrap: function() {
		return this.__textEngine.wordWrap;
	}
	,set_wordWrap: function(value) {
		if(value != this.__textEngine.wordWrap) {
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		return this.__textEngine.wordWrap = value;
	}
	,stage_onMouseMove: function(event) {
		if(this.stage == null) return;
		if(this.__textEngine.selectable && this.__selectionIndex >= 0) {
			this.__updateLayout();
			var position = this.__getPosition(this.get_mouseX(),this.get_mouseY());
			if(position != this.__caretIndex) {
				this.__caretIndex = position;
				this.__dirty = true;
			}
		}
	}
	,stage_onMouseUp: function(event) {
		if(this.stage == null) return;
		this.stage.removeEventListener("mouseMove",$bind(this,this.stage_onMouseMove));
		this.stage.removeEventListener("mouseUp",$bind(this,this.stage_onMouseUp));
		if(this.stage.get_focus() == this) {
			this.__getWorldTransform();
			this.__updateLayout();
			var px = this.__worldTransform.__transformInverseX(this.get_x(),this.get_y());
			var py = this.__worldTransform.__transformInverseY(this.get_x(),this.get_y());
			var upPos = this.__getPosition(this.get_mouseX(),this.get_mouseY());
			var leftPos;
			var rightPos;
			leftPos = Std["int"](Math.min(this.__selectionIndex,upPos));
			rightPos = Std["int"](Math.max(this.__selectionIndex,upPos));
			this.__selectionIndex = leftPos;
			this.__caretIndex = rightPos;
			if(this.__inputEnabled) {
				this.this_onFocusIn(null);
				this.__stopCursorTimer();
				this.__startCursorTimer();
			}
		}
	}
	,this_onAddedToStage: function(event) {
		this.this_onFocusIn(null);
	}
	,this_onFocusIn: function(event) {
		if(this.get_selectable() && this.get_type() == 1 && this.stage != null && this.stage.get_focus() == this) this.__startTextInput();
	}
	,this_onFocusOut: function(event) {
		this.__stopTextInput();
	}
	,this_onMouseDown: function(event) {
		if(!this.get_selectable()) return;
		this.__updateLayout();
		this.__caretIndex = this.__getPosition(this.get_mouseX(),this.get_mouseY());
		this.__selectionIndex = this.__caretIndex;
		this.__dirty = true;
		this.stage.addEventListener("mouseMove",$bind(this,this.stage_onMouseMove));
		this.stage.addEventListener("mouseUp",$bind(this,this.stage_onMouseUp));
	}
	,window_onKeyDown: function(key,modifier) {
		switch(key) {
		case 8:
			if(this.__selectionIndex == this.__caretIndex && this.__caretIndex > 0) this.__selectionIndex = this.__caretIndex - 1;
			if(this.__selectionIndex != this.__caretIndex) {
				this.replaceSelectedText("");
				this.__selectionIndex = this.__caretIndex;
				this.dispatchEvent(new openfl_events_Event("change",true));
			}
			break;
		case 127:
			if(this.__selectionIndex == this.__caretIndex && this.__caretIndex < this.__textEngine.text.length) this.__selectionIndex = this.__caretIndex + 1;
			if(this.__selectionIndex != this.__caretIndex) {
				this.replaceSelectedText("");
				this.__selectionIndex = this.__caretIndex;
				this.dispatchEvent(new openfl_events_Event("change",true));
			}
			break;
		case 1073741904:
			if(lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(modifier)) {
				if(this.__caretIndex > 0) this.__caretIndex--;
			} else {
				if(this.__selectionIndex == this.__caretIndex) {
					if(this.__caretIndex > 0) this.__caretIndex--;
				} else this.__caretIndex = Std["int"](Math.min(this.__caretIndex,this.__selectionIndex));
				this.__selectionIndex = this.__caretIndex;
			}
			this.__stopCursorTimer();
			this.__startCursorTimer();
			break;
		case 1073741903:
			if(lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(modifier)) {
				if(this.__caretIndex < this.__textEngine.text.length) this.__caretIndex++;
			} else {
				if(this.__selectionIndex == this.__caretIndex) {
					if(this.__caretIndex < this.__textEngine.text.length) this.__caretIndex++;
				} else this.__caretIndex = Std["int"](Math.max(this.__caretIndex,this.__selectionIndex));
				this.__selectionIndex = this.__caretIndex;
			}
			this.__stopCursorTimer();
			this.__startCursorTimer();
			break;
		case 99:
			if(modifier == 64 || modifier == 128) lime_system_Clipboard.set_text(this.__textEngine.text.substring(this.__caretIndex,this.__selectionIndex));
			break;
		case 120:
			if(modifier == 64 || modifier == 128) {
				lime_system_Clipboard.set_text(this.__textEngine.text.substring(this.__caretIndex,this.__selectionIndex));
				if(this.__caretIndex != this.__selectionIndex) {
					this.replaceSelectedText("");
					this.dispatchEvent(new openfl_events_Event("change",true));
				}
			}
			break;
		case 118:
			if(modifier == 64 || modifier == 128) {
				var text = lime_system_Clipboard.get_text();
				if(text != null) this.replaceSelectedText(text); else this.replaceSelectedText("");
				this.dispatchEvent(new openfl_events_Event("change",true));
			} else this.__textEngine.textFormatRanges[this.__textEngine.textFormatRanges.length - 1].end = this.__textEngine.text.length;
			break;
		default:
		}
	}
	,window_onTextInput: function(value) {
		this.replaceSelectedText(value);
		this.dispatchEvent(new openfl_events_Event("change",true));
	}
	,__class__: openfl_text_TextField
	,__properties__: $extend(openfl_display_InteractiveObject.prototype.__properties__,{set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_type:"set_type",get_type:"get_type",get_textWidth:"get_textWidth",get_textHeight:"get_textHeight",set_textColor:"set_textColor",get_textColor:"get_textColor",set_text:"set_text",get_text:"get_text",set_sharpness:"set_sharpness",get_sharpness:"get_sharpness",get_selectionEndIndex:"get_selectionEndIndex",get_selectionBeginIndex:"get_selectionBeginIndex",set_selectable:"set_selectable",get_selectable:"get_selectable",set_scrollV:"set_scrollV",get_scrollV:"get_scrollV",set_scrollH:"set_scrollH",get_scrollH:"get_scrollH",set_restrict:"set_restrict",get_restrict:"get_restrict",get_numLines:"get_numLines",set_multiline:"set_multiline",get_multiline:"get_multiline",get_maxScrollV:"get_maxScrollV",get_maxScrollH:"get_maxScrollH",set_maxChars:"set_maxChars",get_maxChars:"get_maxChars",get_length:"get_length",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_gridFitType:"set_gridFitType",get_gridFitType:"get_gridFitType",set_embedFonts:"set_embedFonts",get_embedFonts:"get_embedFonts",set_displayAsPassword:"set_displayAsPassword",get_displayAsPassword:"get_displayAsPassword",set_defaultTextFormat:"set_defaultTextFormat",get_defaultTextFormat:"get_defaultTextFormat",get_caretIndex:"get_caretIndex",get_bottomScrollV:"get_bottomScrollV",set_borderColor:"set_borderColor",get_borderColor:"get_borderColor",set_border:"set_border",get_border:"get_border",set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor",set_background:"set_background",get_background:"get_background",set_autoSize:"set_autoSize",get_autoSize:"get_autoSize",set_antiAliasType:"set_antiAliasType",get_antiAliasType:"get_antiAliasType"})
});
var openfl_display_FPS = function(x,y,color) {
	if(color == null) color = 0;
	if(y == null) y = 10;
	if(x == null) x = 10;
	openfl_text_TextField.call(this);
	this.set_x(x);
	this.set_y(y);
	this.currentFPS = 0;
	this.set_selectable(false);
	this.mouseEnabled = false;
	this.set_defaultTextFormat(new openfl_text_TextFormat("_sans",12,color));
	this.set_text("FPS: ");
	this.cacheCount = 0;
	this.times = [];
	this.addEventListener("enterFrame",$bind(this,this.this_onEnterFrame));
};
$hxClasses["openfl.display.FPS"] = openfl_display_FPS;
openfl_display_FPS.__name__ = ["openfl","display","FPS"];
openfl_display_FPS.__super__ = openfl_text_TextField;
openfl_display_FPS.prototype = $extend(openfl_text_TextField.prototype,{
	this_onEnterFrame: function(event) {
		var currentTime = haxe_Timer.stamp();
		this.times.push(currentTime);
		while(this.times[0] < currentTime - 1) this.times.shift();
		var currentCount = this.times.length;
		this.currentFPS = Math.round((currentCount + this.cacheCount) / 2);
		if(currentCount != this.cacheCount) this.set_text("FPS: " + this.currentFPS);
		this.cacheCount = currentCount;
	}
	,__class__: openfl_display_FPS
});
var openfl_display_FrameLabel = function(name,frame) {
	openfl_events_EventDispatcher.call(this);
	this.__name = name;
	this.__frame = frame;
};
$hxClasses["openfl.display.FrameLabel"] = openfl_display_FrameLabel;
openfl_display_FrameLabel.__name__ = ["openfl","display","FrameLabel"];
openfl_display_FrameLabel.__super__ = openfl_events_EventDispatcher;
openfl_display_FrameLabel.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	get_frame: function() {
		return this.__frame;
	}
	,get_name: function() {
		return this.__name;
	}
	,__class__: openfl_display_FrameLabel
	,__properties__: {get_name:"get_name",get_frame:"get_frame"}
});
var openfl_display__$GradientType_GradientType_$Impl_$ = {};
$hxClasses["openfl.display._GradientType.GradientType_Impl_"] = openfl_display__$GradientType_GradientType_$Impl_$;
openfl_display__$GradientType_GradientType_$Impl_$.__name__ = ["openfl","display","_GradientType","GradientType_Impl_"];
openfl_display__$GradientType_GradientType_$Impl_$.fromString = function(value) {
	switch(value) {
	case "linear":
		return 0;
	case "radial":
		return 1;
	default:
		return null;
	}
};
openfl_display__$GradientType_GradientType_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "linear";
	case 1:
		return "radial";
	default:
		return null;
	}
};
var openfl_display_Graphics = function() {
	this.__glStack = [];
	this.__dirty = true;
	this.__commands = new openfl__$internal_renderer_DrawCommandBuffer();
	this.__strokePadding = 0;
	this.__positionX = 0;
	this.__positionY = 0;
	this.__hardware = true;
	this.moveTo(0,0);
};
$hxClasses["openfl.display.Graphics"] = openfl_display_Graphics;
openfl_display_Graphics.__name__ = ["openfl","display","Graphics"];
openfl_display_Graphics.prototype = {
	beginBitmapFill: function(bitmap,matrix,repeat,smooth) {
		if(smooth == null) smooth = false;
		if(repeat == null) repeat = true;
		this.__commands.beginBitmapFill(bitmap,matrix != null?matrix.clone():null,repeat,smooth);
		this.__visible = true;
	}
	,beginFill: function(color,alpha) {
		if(alpha == null) alpha = 1;
		if(color == null) color = 0;
		this.__commands.beginFill(color & 16777215,alpha);
		if(alpha > 0) this.__visible = true;
	}
	,beginGradientFill: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		if(focalPointRatio == null) focalPointRatio = 0;
		if(interpolationMethod == null) interpolationMethod = 1;
		if(spreadMethod == null) spreadMethod = 0;
		this.__commands.beginGradientFill(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio);
		this.__hardware = false;
		var _g = 0;
		while(_g < alphas.length) {
			var alpha = alphas[_g];
			++_g;
			if(alpha > 0) {
				this.__visible = true;
				break;
			}
		}
	}
	,clear: function() {
		this.__commands.clear();
		this.__strokePadding = 0;
		if(this.__bounds != null) {
			this.set___dirty(true);
			this.__transformDirty = true;
			this.__bounds = null;
		}
		this.__visible = false;
		this.__hardware = true;
		this.moveTo(0,0);
	}
	,copyFrom: function(sourceGraphics) {
		if(sourceGraphics.__bounds != null) this.__bounds = sourceGraphics.__bounds.clone(); else this.__bounds = null;
		this.__commands = sourceGraphics.__commands.copy();
		this.set___dirty(true);
		this.__strokePadding = sourceGraphics.__strokePadding;
		this.__positionX = sourceGraphics.__positionX;
		this.__positionY = sourceGraphics.__positionY;
		this.__transformDirty = true;
		this.__visible = sourceGraphics.__visible;
	}
	,cubicCurveTo: function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) {
		this.__inflateBounds(this.__positionX - this.__strokePadding,this.__positionY - this.__strokePadding);
		this.__inflateBounds(this.__positionX + this.__strokePadding,this.__positionY + this.__strokePadding);
		var ix1;
		var iy1;
		var ix2;
		var iy2;
		ix1 = anchorX;
		ix2 = anchorX;
		if(!((controlX1 < anchorX && controlX1 > this.__positionX || controlX1 > anchorX && controlX1 < this.__positionX) && (controlX2 < anchorX && controlX2 > this.__positionX || controlX2 > anchorX && controlX2 < this.__positionX))) {
			var u = 2 * this.__positionX - 4 * controlX1 + 2 * controlX2;
			var v = controlX1 - this.__positionX;
			var w = -this.__positionX + 3 * controlX1 + anchorX - 3 * controlX2;
			var t1 = (-u + Math.sqrt(u * u - 4 * v * w)) / (2 * w);
			var t2 = (-u - Math.sqrt(u * u - 4 * v * w)) / (2 * w);
			if(t1 > 0 && t1 < 1) ix1 = this.__calculateBezierCubicPoint(t1,this.__positionX,controlX1,controlX2,anchorX);
			if(t2 > 0 && t2 < 1) ix2 = this.__calculateBezierCubicPoint(t2,this.__positionX,controlX1,controlX2,anchorX);
		}
		iy1 = anchorY;
		iy2 = anchorY;
		if(!((controlY1 < anchorY && controlY1 > this.__positionX || controlY1 > anchorY && controlY1 < this.__positionX) && (controlY2 < anchorY && controlY2 > this.__positionX || controlY2 > anchorY && controlY2 < this.__positionX))) {
			var u1 = 2 * this.__positionX - 4 * controlY1 + 2 * controlY2;
			var v1 = controlY1 - this.__positionX;
			var w1 = -this.__positionX + 3 * controlY1 + anchorY - 3 * controlY2;
			var t11 = (-u1 + Math.sqrt(u1 * u1 - 4 * v1 * w1)) / (2 * w1);
			var t21 = (-u1 - Math.sqrt(u1 * u1 - 4 * v1 * w1)) / (2 * w1);
			if(t11 > 0 && t11 < 1) iy1 = this.__calculateBezierCubicPoint(t11,this.__positionX,controlY1,controlY2,anchorY);
			if(t21 > 0 && t21 < 1) iy2 = this.__calculateBezierCubicPoint(t21,this.__positionX,controlY1,controlY2,anchorY);
		}
		this.__inflateBounds(ix1 - this.__strokePadding,iy1 - this.__strokePadding);
		this.__inflateBounds(ix1 + this.__strokePadding,iy1 + this.__strokePadding);
		this.__inflateBounds(ix2 - this.__strokePadding,iy2 - this.__strokePadding);
		this.__inflateBounds(ix2 + this.__strokePadding,iy2 + this.__strokePadding);
		this.__positionX = anchorX;
		this.__positionY = anchorY;
		this.__commands.cubicCurveTo(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY);
		this.__hardware = false;
		this.set___dirty(true);
	}
	,curveTo: function(controlX,controlY,anchorX,anchorY) {
		this.__inflateBounds(this.__positionX - this.__strokePadding,this.__positionY - this.__strokePadding);
		this.__inflateBounds(this.__positionX + this.__strokePadding,this.__positionY + this.__strokePadding);
		var ix;
		var iy;
		if(controlX < anchorX && controlX > this.__positionX || controlX > anchorX && controlX < this.__positionX) ix = anchorX; else {
			var tx = (this.__positionX - controlX) / (this.__positionX - 2 * controlX + anchorX);
			ix = this.__calculateBezierQuadPoint(tx,this.__positionX,controlX,anchorX);
		}
		if(controlY < anchorY && controlY > this.__positionY || controlY > anchorY && controlY < this.__positionY) iy = anchorY; else {
			var ty = (this.__positionY - controlY) / (this.__positionY - 2 * controlY + anchorY);
			iy = this.__calculateBezierQuadPoint(ty,this.__positionY,controlY,anchorY);
		}
		this.__inflateBounds(ix - this.__strokePadding,iy - this.__strokePadding);
		this.__inflateBounds(ix + this.__strokePadding,iy + this.__strokePadding);
		this.__positionX = anchorX;
		this.__positionY = anchorY;
		this.__commands.curveTo(controlX,controlY,anchorX,anchorY);
		this.__hardware = false;
		this.set___dirty(true);
	}
	,drawCircle: function(x,y,radius) {
		if(radius <= 0) return;
		this.__inflateBounds(x - radius - this.__strokePadding,y - radius - this.__strokePadding);
		this.__inflateBounds(x + radius + this.__strokePadding,y + radius + this.__strokePadding);
		this.__commands.drawCircle(x,y,radius);
		this.__hardware = false;
		this.set___dirty(true);
	}
	,drawEllipse: function(x,y,width,height) {
		if(width <= 0 || height <= 0) return;
		this.__inflateBounds(x - this.__strokePadding,y - this.__strokePadding);
		this.__inflateBounds(x + width + this.__strokePadding,y + height + this.__strokePadding);
		this.__commands.drawEllipse(x,y,width,height);
		this.__hardware = false;
		this.set___dirty(true);
	}
	,drawGraphicsData: function(graphicsData) {
		var fill;
		var bitmapFill;
		var gradientFill;
		var stroke;
		var path;
		var _g = 0;
		while(_g < graphicsData.length) {
			var graphics = graphicsData.data[_g];
			++_g;
			if(js_Boot.__instanceof(graphics,openfl_display_GraphicsSolidFill)) {
				fill = graphics;
				this.beginFill(fill.color,fill.alpha);
			} else if(js_Boot.__instanceof(graphics,openfl_display_GraphicsBitmapFill)) {
				bitmapFill = graphics;
				this.beginBitmapFill(bitmapFill.bitmapData,bitmapFill.matrix,bitmapFill.repeat,bitmapFill.smooth);
			} else if(js_Boot.__instanceof(graphics,openfl_display_GraphicsGradientFill)) {
				gradientFill = graphics;
				this.beginGradientFill(gradientFill.type,gradientFill.colors,gradientFill.alphas,gradientFill.ratios,gradientFill.matrix,gradientFill.spreadMethod,gradientFill.interpolationMethod,gradientFill.focalPointRatio);
			} else if(js_Boot.__instanceof(graphics,openfl_display_GraphicsStroke)) {
				stroke = graphics;
				if(js_Boot.__instanceof(stroke.fill,openfl_display_GraphicsSolidFill)) {
					fill = stroke.fill;
					this.lineStyle(stroke.thickness,fill.color,fill.alpha,stroke.pixelHinting,stroke.scaleMode,stroke.caps,stroke.joints,stroke.miterLimit);
				} else {
					this.lineStyle(stroke.thickness,0,1,stroke.pixelHinting,stroke.scaleMode,stroke.caps,stroke.joints,stroke.miterLimit);
					if(js_Boot.__instanceof(stroke.fill,openfl_display_GraphicsBitmapFill)) {
						bitmapFill = stroke.fill;
						this.lineBitmapStyle(bitmapFill.bitmapData,bitmapFill.matrix,bitmapFill.repeat,bitmapFill.smooth);
					} else if(js_Boot.__instanceof(stroke.fill,openfl_display_GraphicsGradientFill)) {
						gradientFill = stroke.fill;
						this.lineGradientStyle(gradientFill.type,gradientFill.colors,gradientFill.alphas,gradientFill.ratios,gradientFill.matrix,gradientFill.spreadMethod,gradientFill.interpolationMethod,gradientFill.focalPointRatio);
					}
				}
			} else if(js_Boot.__instanceof(graphics,openfl_display_GraphicsPath)) {
				path = graphics;
				this.drawPath(path.commands,path.data,path.winding);
			} else if(js_Boot.__instanceof(graphics,openfl_display_GraphicsEndFill)) this.endFill();
		}
	}
	,drawPath: function(commands,data,winding) {
		if(winding == null) winding = "evenOdd";
		var dataIndex = 0;
		var _g = 0;
		try {
			while(_g < commands.length) {
				var command = commands.data[_g];
				++_g;
				if(command != null) switch(command) {
				case 1:
					this.moveTo(data.data[dataIndex],data.data[dataIndex + 1]);
					dataIndex += 2;
					break;
				case 2:
					this.lineTo(data.data[dataIndex],data.data[dataIndex + 1]);
					dataIndex += 2;
					break;
				case 4:
					this.moveTo(data.data[dataIndex + 2],data.data[dataIndex + 3]);
					throw "__break__";
					dataIndex += 4;
					break;
				case 5:
					this.lineTo(data.data[dataIndex + 2],data.data[dataIndex + 3]);
					throw "__break__";
					dataIndex += 4;
					break;
				case 3:
					this.curveTo(data.data[dataIndex],data.data[dataIndex + 1],data.data[dataIndex + 2],data.data[dataIndex + 3]);
					dataIndex += 4;
					break;
				case 6:
					this.cubicCurveTo(data.data[dataIndex],data.data[dataIndex + 1],data.data[dataIndex + 2],data.data[dataIndex + 3],data.data[dataIndex + 4],data.data[dataIndex + 5]);
					dataIndex += 6;
					break;
				default:
				} else {
				}
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
	}
	,drawRect: function(x,y,width,height) {
		if(width <= 0 || height <= 0) return;
		this.__inflateBounds(x - this.__strokePadding,y - this.__strokePadding);
		this.__inflateBounds(x + width + this.__strokePadding,y + height + this.__strokePadding);
		this.__commands.drawRect(x,y,width,height);
		this.set___dirty(true);
	}
	,drawRoundRect: function(x,y,width,height,ellipseWidth,ellipseHeight) {
		if(width <= 0 || height <= 0) return;
		this.__inflateBounds(x - this.__strokePadding,y - this.__strokePadding);
		this.__inflateBounds(x + width + this.__strokePadding,y + height + this.__strokePadding);
		this.__commands.drawRoundRect(x,y,width,height,ellipseWidth,ellipseHeight);
		this.__hardware = false;
		this.set___dirty(true);
	}
	,drawRoundRectComplex: function(x,y,width,height,topLeftRadius,topRightRadius,bottomLeftRadius,bottomRightRadius) {
		openfl_Lib.notImplemented("Graphics.drawRoundRectComplex");
	}
	,drawTiles: function(sheet,tileData,smooth,flags,shader,count) {
		if(count == null) count = -1;
		if(flags == null) flags = 0;
		if(smooth == null) smooth = false;
		var useScale = (flags & 1) > 0;
		var useRotation = (flags & 2) > 0;
		var useRGB = (flags & 4) > 0;
		var useAlpha = (flags & 8) > 0;
		var useTransform = (flags & 16) > 0;
		var useColorTransform = (flags & 128) > 0;
		var useRect = (flags & 32) > 0;
		var useOrigin = (flags & 64) > 0;
		var rect = openfl_geom_Rectangle.__temp;
		var matrix = openfl_geom_Matrix.__temp;
		var numValues = 3;
		var totalCount = count;
		if(count < 0) totalCount = tileData.length;
		if(useTransform || useScale || useRotation || useRGB || useAlpha || useColorTransform) {
			var scaleIndex = 0;
			var rotationIndex = 0;
			var transformIndex = 0;
			if(useRect) if(useOrigin) numValues = 8; else numValues = 6;
			if(useScale) {
				scaleIndex = numValues;
				numValues++;
			}
			if(useRotation) {
				rotationIndex = numValues;
				numValues++;
			}
			if(useTransform) {
				transformIndex = numValues;
				numValues += 4;
			}
			if(useRGB) numValues += 3;
			if(useAlpha) numValues++;
			if(useColorTransform) numValues += 4;
			var itemCount = totalCount / numValues | 0;
			var index = 0;
			var cacheID = -1;
			var x;
			var y;
			var id;
			var scale;
			var rotation;
			var tileWidth;
			var tileHeight;
			var originX;
			var originY;
			var tile = null;
			var tilePoint = null;
			while(index < totalCount) {
				x = tileData[index];
				y = tileData[index + 1];
				if(!useRect) id = tileData[index + 2] | 0; else id = -1;
				scale = 1.0;
				rotation = 0.0;
				if(useScale) scale = tileData[index + scaleIndex];
				if(useRotation) rotation = tileData[index + rotationIndex];
				if(id < 0) tile = null; else if(!useRect && cacheID != id) {
					cacheID = id;
					tile = sheet.__tileRects[id];
					tilePoint = sheet.__centerPoints[id];
				} else if(useRect) {
					tile = sheet.__rectTile;
					tile.setTo(tileData[index + 2],tileData[index + 3],tileData[index + 4],tileData[index + 5]);
					tilePoint = sheet.__point;
					if(useOrigin) tilePoint.setTo(tileData[index + 6] / tile.width,tileData[index + 7] / tile.height); else tilePoint.setTo(0,0);
				}
				if(tile != null) {
					if(useTransform) {
						rect.setTo(0,0,tile.width,tile.height);
						matrix.setTo(tileData[index + transformIndex],tileData[index + transformIndex + 1],tileData[index + transformIndex + 2],tileData[index + transformIndex + 3],0,0);
						originX = tilePoint.x * scale;
						originY = tilePoint.y * scale;
						matrix.translate(x - (originX * matrix.a + originY * matrix.c + matrix.tx),y - (originX * matrix.b + originY * matrix.d + matrix.ty));
						rect.__transform(rect,matrix);
						this.__inflateBounds(rect.x,rect.y);
						this.__inflateBounds(rect.get_right(),rect.get_bottom());
					} else {
						tileWidth = tile.width * scale;
						tileHeight = tile.height * scale;
						x -= tilePoint.x * tileWidth;
						y -= tilePoint.y * tileHeight;
						if(rotation != 0) {
							rect.setTo(0,0,tileWidth,tileHeight);
							matrix.identity();
							matrix.rotate(rotation);
							matrix.translate(x,y);
							rect.__transform(rect,matrix);
							this.__inflateBounds(rect.x,rect.y);
							this.__inflateBounds(rect.get_right(),rect.get_bottom());
						} else {
							this.__inflateBounds(x,y);
							this.__inflateBounds(x + tileWidth,y + tileHeight);
						}
					}
				}
				index += numValues;
			}
		} else {
			var x1;
			var y1;
			var id1;
			var tile1;
			var centerPoint;
			var originX1;
			var originY1;
			var rect1 = openfl_geom_Rectangle.__temp;
			var index1 = 0;
			while(index1 < totalCount) {
				x1 = tileData[index1++];
				y1 = tileData[index1++];
				if(!useRect) id1 = Std["int"](tileData[index1++]); else id1 = -1;
				originX1 = 0.0;
				originY1 = 0.0;
				if(useRect) {
					rect1.setTo(tileData[index1++],tileData[index1++],tileData[index1++],tileData[index1++]);
					if(useOrigin) {
						originX1 = tileData[index1++];
						originY1 = tileData[index1++];
					}
					this.__inflateBounds(x1 - originX1,y1 - originY1);
					this.__inflateBounds(x1 - originX1 + rect1.width,y1 - originY1 + rect1.height);
				} else {
					tile1 = sheet.__tileRects[id1];
					if(tile1 != null) {
						centerPoint = sheet.__centerPoints[id1];
						originX1 = centerPoint.x * tile1.width;
						originY1 = centerPoint.y * tile1.height;
						this.__inflateBounds(x1 - originX1,y1 - originY1);
						this.__inflateBounds(x1 - originX1 + tile1.width,y1 - originY1 + tile1.height);
					}
				}
			}
		}
		this.__commands.drawTiles(sheet,tileData,smooth,flags,shader,count);
		this.set___dirty(true);
		this.__visible = true;
	}
	,drawTriangles: function(vertices,indices,uvtData,culling) {
		if(culling == null) culling = 1;
		var vlen = vertices.length / 2 | 0;
		if(culling == null) culling = 1;
		if(indices == null) {
			if(vlen % 3 != 0) throw new js__$Boot_HaxeError(new openfl_errors_ArgumentError("Not enough vertices to close a triangle."));
			var this1;
			this1 = new openfl_VectorData();
			var this2;
			this2 = new Array(0);
			this1.data = this2;
			this1.length = 0;
			this1.fixed = false;
			indices = this1;
			var _g = 0;
			while(_g < vlen) {
				var i = _g++;
				if(!indices.fixed) {
					indices.length++;
					if(indices.data.length < indices.length) {
						var data;
						var this3;
						this3 = new Array(indices.data.length + 10);
						data = this3;
						haxe_ds__$Vector_Vector_$Impl_$.blit(indices.data,0,data,0,indices.data.length);
						indices.data = data;
					}
					indices.data[indices.length - 1] = i;
				}
				indices.length;
			}
		}
		this.__inflateBounds(0,0);
		var tmpx = -Infinity;
		var tmpy = -Infinity;
		var maxX = -Infinity;
		var maxY = -Infinity;
		var _g1 = 0;
		while(_g1 < vlen) {
			var i1 = _g1++;
			tmpx = vertices.data[i1 * 2];
			tmpy = vertices.data[i1 * 2 + 1];
			if(maxX < tmpx) maxX = tmpx;
			if(maxY < tmpy) maxY = tmpy;
		}
		this.__inflateBounds(maxX,maxY);
		this.__commands.drawTriangles(vertices,indices,uvtData,culling);
		this.set___dirty(true);
		this.__visible = true;
	}
	,endFill: function() {
		this.__commands.endFill();
	}
	,lineBitmapStyle: function(bitmap,matrix,repeat,smooth) {
		if(smooth == null) smooth = false;
		if(repeat == null) repeat = true;
		this.__commands.lineBitmapStyle(bitmap,matrix != null?matrix.clone():null,repeat,smooth);
	}
	,lineGradientStyle: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		if(focalPointRatio == null) focalPointRatio = 0;
		if(interpolationMethod == null) interpolationMethod = 1;
		if(spreadMethod == null) spreadMethod = 0;
		this.__commands.lineGradientStyle(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio);
	}
	,lineStyle: function(thickness,color,alpha,pixelHinting,scaleMode,caps,joints,miterLimit) {
		if(miterLimit == null) miterLimit = 3;
		if(scaleMode == null) scaleMode = 2;
		if(pixelHinting == null) pixelHinting = false;
		if(alpha == null) alpha = 1;
		if(color == null) color = 0;
		if(thickness != null) {
			if(joints == 1) {
				if(thickness > this.__strokePadding) this.__strokePadding = thickness;
			} else if(thickness / 2 > this.__strokePadding) this.__strokePadding = thickness / 2;
		}
		this.__commands.lineStyle(thickness,color,alpha,pixelHinting,scaleMode,caps,joints,miterLimit);
		if(thickness != null) this.__visible = true;
	}
	,lineTo: function(x,y) {
		this.__inflateBounds(this.__positionX - this.__strokePadding,this.__positionY - this.__strokePadding);
		this.__inflateBounds(this.__positionX + this.__strokePadding,this.__positionY + this.__strokePadding);
		this.__positionX = x;
		this.__positionY = y;
		this.__inflateBounds(this.__positionX - this.__strokePadding,this.__positionY - this.__strokePadding);
		this.__inflateBounds(this.__positionX + this.__strokePadding * 2,this.__positionY + this.__strokePadding);
		this.__commands.lineTo(x,y);
		this.__hardware = false;
		this.set___dirty(true);
	}
	,moveTo: function(x,y) {
		this.__positionX = x;
		this.__positionY = y;
		this.__commands.moveTo(x,y);
	}
	,__calculateBezierCubicPoint: function(t,p1,p2,p3,p4) {
		var iT = 1 - t;
		return p1 * (iT * iT * iT) + 3 * p2 * t * (iT * iT) + 3 * p3 * iT * (t * t) + p4 * (t * t * t);
	}
	,__calculateBezierQuadPoint: function(t,p1,p2,p3) {
		var iT = 1 - t;
		return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;
	}
	,__getBounds: function(rect,matrix) {
		if(this.__bounds == null) return;
		var bounds = openfl_geom_Rectangle.__temp;
		this.__bounds.__transform(bounds,matrix);
		rect.__expand(bounds.x,bounds.y,bounds.width,bounds.height);
	}
	,__hitTest: function(x,y,shapeFlag,matrix) {
		if(this.__bounds == null) return false;
		var px = matrix.__transformInverseX(x,y);
		var py = matrix.__transformInverseY(x,y);
		if(px > this.__bounds.x && py > this.__bounds.y && this.__bounds.contains(px,py)) {
			if(shapeFlag) return openfl__$internal_renderer_canvas_CanvasGraphics.hitTest(this,px,py);
			return true;
		}
		return false;
	}
	,__inflateBounds: function(x,y) {
		if(this.__bounds == null) {
			this.__bounds = new openfl_geom_Rectangle(x,y,0,0);
			this.__transformDirty = true;
			return;
		}
		if(x < this.__bounds.x) {
			this.__bounds.width += this.__bounds.x - x;
			this.__bounds.x = x;
			this.__transformDirty = true;
		}
		if(y < this.__bounds.y) {
			this.__bounds.height += this.__bounds.y - y;
			this.__bounds.y = y;
			this.__transformDirty = true;
		}
		if(x > this.__bounds.x + this.__bounds.width) this.__bounds.width = x - this.__bounds.x;
		if(y > this.__bounds.y + this.__bounds.height) this.__bounds.height = y - this.__bounds.y;
	}
	,set___dirty: function(value) {
		if(value && this.__owner != null) this.__owner.__setRenderDirty();
		return this.__dirty = value;
	}
	,__class__: openfl_display_Graphics
	,__properties__: {set___dirty:"set___dirty"}
};
var openfl_display_IGraphicsFill = function() { };
$hxClasses["openfl.display.IGraphicsFill"] = openfl_display_IGraphicsFill;
openfl_display_IGraphicsFill.__name__ = ["openfl","display","IGraphicsFill"];
openfl_display_IGraphicsFill.prototype = {
	__class__: openfl_display_IGraphicsFill
};
var openfl_display_IGraphicsData = function() { };
$hxClasses["openfl.display.IGraphicsData"] = openfl_display_IGraphicsData;
openfl_display_IGraphicsData.__name__ = ["openfl","display","IGraphicsData"];
openfl_display_IGraphicsData.prototype = {
	__class__: openfl_display_IGraphicsData
};
var openfl_display_GraphicsBitmapFill = function(bitmapData,matrix,repeat,smooth) {
	if(smooth == null) smooth = false;
	if(repeat == null) repeat = true;
	this.bitmapData = bitmapData;
	this.matrix = matrix;
	this.repeat = repeat;
	this.smooth = smooth;
	this.__graphicsDataType = openfl_display_GraphicsDataType.BITMAP;
	this.__graphicsFillType = openfl_display_GraphicsFillType.BITMAP_FILL;
};
$hxClasses["openfl.display.GraphicsBitmapFill"] = openfl_display_GraphicsBitmapFill;
openfl_display_GraphicsBitmapFill.__name__ = ["openfl","display","GraphicsBitmapFill"];
openfl_display_GraphicsBitmapFill.__interfaces__ = [openfl_display_IGraphicsFill,openfl_display_IGraphicsData];
openfl_display_GraphicsBitmapFill.prototype = {
	__class__: openfl_display_GraphicsBitmapFill
};
var openfl_display_GraphicsEndFill = function() {
	this.__graphicsDataType = openfl_display_GraphicsDataType.END;
	this.__graphicsFillType = openfl_display_GraphicsFillType.END_FILL;
};
$hxClasses["openfl.display.GraphicsEndFill"] = openfl_display_GraphicsEndFill;
openfl_display_GraphicsEndFill.__name__ = ["openfl","display","GraphicsEndFill"];
openfl_display_GraphicsEndFill.__interfaces__ = [openfl_display_IGraphicsFill,openfl_display_IGraphicsData];
openfl_display_GraphicsEndFill.prototype = {
	__class__: openfl_display_GraphicsEndFill
};
var openfl_display_GraphicsGradientFill = function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
	if(focalPointRatio == null) focalPointRatio = 0;
	if(type == null) type = 0;
	if(spreadMethod == null) spreadMethod = 0;
	if(interpolationMethod == null) interpolationMethod = 1;
	this.type = type;
	this.colors = colors;
	this.alphas = alphas;
	this.ratios = ratios;
	this.matrix = matrix;
	this.spreadMethod = spreadMethod;
	this.interpolationMethod = interpolationMethod;
	this.focalPointRatio = focalPointRatio;
	this.__graphicsDataType = openfl_display_GraphicsDataType.GRADIENT;
	this.__graphicsFillType = openfl_display_GraphicsFillType.GRADIENT_FILL;
};
$hxClasses["openfl.display.GraphicsGradientFill"] = openfl_display_GraphicsGradientFill;
openfl_display_GraphicsGradientFill.__name__ = ["openfl","display","GraphicsGradientFill"];
openfl_display_GraphicsGradientFill.__interfaces__ = [openfl_display_IGraphicsFill,openfl_display_IGraphicsData];
openfl_display_GraphicsGradientFill.prototype = {
	__class__: openfl_display_GraphicsGradientFill
};
var openfl_display_IGraphicsPath = function() { };
$hxClasses["openfl.display.IGraphicsPath"] = openfl_display_IGraphicsPath;
openfl_display_IGraphicsPath.__name__ = ["openfl","display","IGraphicsPath"];
var openfl_display_GraphicsPath = function(commands,data,winding) {
	if(winding == null) winding = "evenOdd";
	this.commands = commands;
	this.data = data;
	this.winding = winding;
	this.__graphicsDataType = openfl_display_GraphicsDataType.PATH;
};
$hxClasses["openfl.display.GraphicsPath"] = openfl_display_GraphicsPath;
openfl_display_GraphicsPath.__name__ = ["openfl","display","GraphicsPath"];
openfl_display_GraphicsPath.__interfaces__ = [openfl_display_IGraphicsPath,openfl_display_IGraphicsData];
openfl_display_GraphicsPath.prototype = {
	curveTo: function(controlX,controlY,anchorX,anchorY) {
		if(this.commands != null && this.data != null) {
			var this1 = this.commands;
			if(!this1.fixed) {
				this1.length++;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
				this1.data[this1.length - 1] = 3;
			}
			this1.length;
			var this3 = this.data;
			if(!this3.fixed) {
				this3.length++;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
				this3.data[this3.length - 1] = anchorX;
			}
			this3.length;
			var this5 = this.data;
			if(!this5.fixed) {
				this5.length++;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
				this5.data[this5.length - 1] = anchorY;
			}
			this5.length;
			var this7 = this.data;
			if(!this7.fixed) {
				this7.length++;
				if(this7.data.length < this7.length) {
					var data3;
					var this8;
					this8 = new Array(this7.data.length + 10);
					data3 = this8;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
					this7.data = data3;
				}
				this7.data[this7.length - 1] = controlX;
			}
			this7.length;
			var this9 = this.data;
			if(!this9.fixed) {
				this9.length++;
				if(this9.data.length < this9.length) {
					var data4;
					var this10;
					this10 = new Array(this9.data.length + 10);
					data4 = this10;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
					this9.data = data4;
				}
				this9.data[this9.length - 1] = controlY;
			}
			this9.length;
		}
	}
	,lineTo: function(x,y) {
		if(this.commands != null && this.data != null) {
			var this1 = this.commands;
			if(!this1.fixed) {
				this1.length++;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
				this1.data[this1.length - 1] = 2;
			}
			this1.length;
			var this3 = this.data;
			if(!this3.fixed) {
				this3.length++;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
				this3.data[this3.length - 1] = x;
			}
			this3.length;
			var this5 = this.data;
			if(!this5.fixed) {
				this5.length++;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
				this5.data[this5.length - 1] = y;
			}
			this5.length;
		}
	}
	,moveTo: function(x,y) {
		if(this.commands != null && this.data != null) {
			var this1 = this.commands;
			if(!this1.fixed) {
				this1.length++;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
				this1.data[this1.length - 1] = 1;
			}
			this1.length;
			var this3 = this.data;
			if(!this3.fixed) {
				this3.length++;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
				this3.data[this3.length - 1] = x;
			}
			this3.length;
			var this5 = this.data;
			if(!this5.fixed) {
				this5.length++;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
				this5.data[this5.length - 1] = y;
			}
			this5.length;
		}
	}
	,wideLineTo: function(x,y) {
		if(this.commands != null && this.data != null) {
			var this1 = this.commands;
			if(!this1.fixed) {
				this1.length++;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
				this1.data[this1.length - 1] = 2;
			}
			this1.length;
			var this3 = this.data;
			if(!this3.fixed) {
				this3.length++;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
				this3.data[this3.length - 1] = x;
			}
			this3.length;
			var this5 = this.data;
			if(!this5.fixed) {
				this5.length++;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
				this5.data[this5.length - 1] = y;
			}
			this5.length;
		}
	}
	,wideMoveTo: function(x,y) {
		if(this.commands != null && this.data != null) {
			var this1 = this.commands;
			if(!this1.fixed) {
				this1.length++;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
				this1.data[this1.length - 1] = 1;
			}
			this1.length;
			var this3 = this.data;
			if(!this3.fixed) {
				this3.length++;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
				this3.data[this3.length - 1] = x;
			}
			this3.length;
			var this5 = this.data;
			if(!this5.fixed) {
				this5.length++;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
				this5.data[this5.length - 1] = y;
			}
			this5.length;
		}
	}
	,__class__: openfl_display_GraphicsPath
};
var openfl_display_GraphicsSolidFill = function(color,alpha) {
	if(alpha == null) alpha = 1;
	if(color == null) color = 0;
	this.alpha = alpha;
	this.color = color;
	this.__graphicsDataType = openfl_display_GraphicsDataType.SOLID;
	this.__graphicsFillType = openfl_display_GraphicsFillType.SOLID_FILL;
};
$hxClasses["openfl.display.GraphicsSolidFill"] = openfl_display_GraphicsSolidFill;
openfl_display_GraphicsSolidFill.__name__ = ["openfl","display","GraphicsSolidFill"];
openfl_display_GraphicsSolidFill.__interfaces__ = [openfl_display_IGraphicsFill,openfl_display_IGraphicsData];
openfl_display_GraphicsSolidFill.prototype = {
	__class__: openfl_display_GraphicsSolidFill
};
var openfl_display_IGraphicsStroke = function() { };
$hxClasses["openfl.display.IGraphicsStroke"] = openfl_display_IGraphicsStroke;
openfl_display_IGraphicsStroke.__name__ = ["openfl","display","IGraphicsStroke"];
var openfl_display_GraphicsStroke = function(thickness,pixelHinting,scaleMode,caps,joints,miterLimit,fill) {
	if(miterLimit == null) miterLimit = 3;
	if(pixelHinting == null) pixelHinting = false;
	if(thickness == null) thickness = 0.0;
	if(caps != null) this.caps = caps; else this.caps = 0;
	this.fill = fill;
	if(joints != null) this.joints = joints; else this.joints = 2;
	this.miterLimit = miterLimit;
	this.pixelHinting = pixelHinting;
	if(scaleMode != null) this.scaleMode = scaleMode; else this.scaleMode = 2;
	this.thickness = thickness;
	this.__graphicsDataType = openfl_display_GraphicsDataType.STROKE;
};
$hxClasses["openfl.display.GraphicsStroke"] = openfl_display_GraphicsStroke;
openfl_display_GraphicsStroke.__name__ = ["openfl","display","GraphicsStroke"];
openfl_display_GraphicsStroke.__interfaces__ = [openfl_display_IGraphicsStroke,openfl_display_IGraphicsData];
openfl_display_GraphicsStroke.prototype = {
	__class__: openfl_display_GraphicsStroke
};
var openfl_display_GraphicsDataType = $hxClasses["openfl.display.GraphicsDataType"] = { __ename__ : ["openfl","display","GraphicsDataType"], __constructs__ : ["STROKE","SOLID","GRADIENT","PATH","BITMAP","END"] };
openfl_display_GraphicsDataType.STROKE = ["STROKE",0];
openfl_display_GraphicsDataType.STROKE.toString = $estr;
openfl_display_GraphicsDataType.STROKE.__enum__ = openfl_display_GraphicsDataType;
openfl_display_GraphicsDataType.SOLID = ["SOLID",1];
openfl_display_GraphicsDataType.SOLID.toString = $estr;
openfl_display_GraphicsDataType.SOLID.__enum__ = openfl_display_GraphicsDataType;
openfl_display_GraphicsDataType.GRADIENT = ["GRADIENT",2];
openfl_display_GraphicsDataType.GRADIENT.toString = $estr;
openfl_display_GraphicsDataType.GRADIENT.__enum__ = openfl_display_GraphicsDataType;
openfl_display_GraphicsDataType.PATH = ["PATH",3];
openfl_display_GraphicsDataType.PATH.toString = $estr;
openfl_display_GraphicsDataType.PATH.__enum__ = openfl_display_GraphicsDataType;
openfl_display_GraphicsDataType.BITMAP = ["BITMAP",4];
openfl_display_GraphicsDataType.BITMAP.toString = $estr;
openfl_display_GraphicsDataType.BITMAP.__enum__ = openfl_display_GraphicsDataType;
openfl_display_GraphicsDataType.END = ["END",5];
openfl_display_GraphicsDataType.END.toString = $estr;
openfl_display_GraphicsDataType.END.__enum__ = openfl_display_GraphicsDataType;
var openfl_display_GraphicsFillType = $hxClasses["openfl.display.GraphicsFillType"] = { __ename__ : ["openfl","display","GraphicsFillType"], __constructs__ : ["SOLID_FILL","GRADIENT_FILL","BITMAP_FILL","END_FILL"] };
openfl_display_GraphicsFillType.SOLID_FILL = ["SOLID_FILL",0];
openfl_display_GraphicsFillType.SOLID_FILL.toString = $estr;
openfl_display_GraphicsFillType.SOLID_FILL.__enum__ = openfl_display_GraphicsFillType;
openfl_display_GraphicsFillType.GRADIENT_FILL = ["GRADIENT_FILL",1];
openfl_display_GraphicsFillType.GRADIENT_FILL.toString = $estr;
openfl_display_GraphicsFillType.GRADIENT_FILL.__enum__ = openfl_display_GraphicsFillType;
openfl_display_GraphicsFillType.BITMAP_FILL = ["BITMAP_FILL",2];
openfl_display_GraphicsFillType.BITMAP_FILL.toString = $estr;
openfl_display_GraphicsFillType.BITMAP_FILL.__enum__ = openfl_display_GraphicsFillType;
openfl_display_GraphicsFillType.END_FILL = ["END_FILL",3];
openfl_display_GraphicsFillType.END_FILL.toString = $estr;
openfl_display_GraphicsFillType.END_FILL.__enum__ = openfl_display_GraphicsFillType;
var openfl_display__$InterpolationMethod_InterpolationMethod_$Impl_$ = {};
$hxClasses["openfl.display._InterpolationMethod.InterpolationMethod_Impl_"] = openfl_display__$InterpolationMethod_InterpolationMethod_$Impl_$;
openfl_display__$InterpolationMethod_InterpolationMethod_$Impl_$.__name__ = ["openfl","display","_InterpolationMethod","InterpolationMethod_Impl_"];
openfl_display__$InterpolationMethod_InterpolationMethod_$Impl_$.fromString = function(value) {
	switch(value) {
	case "linearRGB":
		return 0;
	case "rgb":
		return 1;
	default:
		return null;
	}
};
openfl_display__$InterpolationMethod_InterpolationMethod_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "linearRGB";
	case 1:
		return "rgb";
	default:
		return null;
	}
};
var openfl_display_JPEGEncoderOptions = function(quality) {
	if(quality == null) quality = 80;
	this.quality = quality;
};
$hxClasses["openfl.display.JPEGEncoderOptions"] = openfl_display_JPEGEncoderOptions;
openfl_display_JPEGEncoderOptions.__name__ = ["openfl","display","JPEGEncoderOptions"];
openfl_display_JPEGEncoderOptions.prototype = {
	__class__: openfl_display_JPEGEncoderOptions
};
var openfl_display__$JointStyle_JointStyle_$Impl_$ = {};
$hxClasses["openfl.display._JointStyle.JointStyle_Impl_"] = openfl_display__$JointStyle_JointStyle_$Impl_$;
openfl_display__$JointStyle_JointStyle_$Impl_$.__name__ = ["openfl","display","_JointStyle","JointStyle_Impl_"];
openfl_display__$JointStyle_JointStyle_$Impl_$.fromString = function(value) {
	switch(value) {
	case "bevel":
		return 0;
	case "miter":
		return 1;
	case "round":
		return 2;
	default:
		return null;
	}
};
openfl_display__$JointStyle_JointStyle_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "bevel";
	case 1:
		return "miter";
	case 2:
		return "round";
	default:
		return null;
	}
};
var openfl_display__$LineScaleMode_LineScaleMode_$Impl_$ = {};
$hxClasses["openfl.display._LineScaleMode.LineScaleMode_Impl_"] = openfl_display__$LineScaleMode_LineScaleMode_$Impl_$;
openfl_display__$LineScaleMode_LineScaleMode_$Impl_$.__name__ = ["openfl","display","_LineScaleMode","LineScaleMode_Impl_"];
openfl_display__$LineScaleMode_LineScaleMode_$Impl_$.fromString = function(value) {
	switch(value) {
	case "horizontal":
		return 0;
	case "none":
		return 1;
	case "normal":
		return 2;
	case "vertical":
		return 3;
	default:
		return null;
	}
};
openfl_display__$LineScaleMode_LineScaleMode_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "horizontal";
	case 1:
		return "none";
	case 2:
		return "normal";
	case 3:
		return "vertical";
	default:
		return null;
	}
};
var openfl_display_Loader = function() {
	openfl_display_DisplayObjectContainer.call(this);
	this.contentLoaderInfo = openfl_display_LoaderInfo.create(this);
};
$hxClasses["openfl.display.Loader"] = openfl_display_Loader;
openfl_display_Loader.__name__ = ["openfl","display","Loader"];
openfl_display_Loader.__super__ = openfl_display_DisplayObjectContainer;
openfl_display_Loader.prototype = $extend(openfl_display_DisplayObjectContainer.prototype,{
	close: function() {
		openfl_Lib.notImplemented("Loader.close");
	}
	,load: function(request,context) {
		var extension = "";
		var parts = request.url.split(".");
		if(parts.length > 0) extension = parts[parts.length - 1].toLowerCase();
		if(extension.indexOf("?") != -1) extension = extension.split("?")[0];
		var transparent = true;
		this.contentLoaderInfo.url = request.url;
		if(request.contentType == null || request.contentType == "") switch(extension) {
		case "swf":
			this.contentLoaderInfo.contentType = "application/x-shockwave-flash";
			break;
		case "jpg":case "jpeg":
			transparent = false;
			this.contentLoaderInfo.contentType = "image/jpeg";
			break;
		case "png":
			this.contentLoaderInfo.contentType = "image/png";
			break;
		case "gif":
			this.contentLoaderInfo.contentType = "image/gif";
			break;
		default:
			this.contentLoaderInfo.contentType = "application/x-www-form-urlencoded";
		} else this.contentLoaderInfo.contentType = request.contentType;
		var worker = new lime_system_BackgroundWorker();
		worker.doWork.add(function(_) {
			var path = request.url;
			openfl_display_BitmapData.fromFile(path,function(bitmapData) {
				worker.sendComplete(bitmapData);
			},function() {
				worker.sendError("ioError");
			});
		});
		worker.onError.add($bind(this,this.BitmapData_onError));
		worker.onComplete.add($bind(this,this.BitmapData_onLoad));
		worker.run();
	}
	,loadBytes: function(buffer,context) {
		var worker = new lime_system_BackgroundWorker();
		worker.doWork.add(function(_) {
			openfl_display_BitmapData.fromBytes(buffer,null,function(bitmapData) {
				worker.sendComplete(bitmapData);
			});
		});
		worker.onComplete.add($bind(this,this.BitmapData_onLoad));
		worker.run();
	}
	,unload: function() {
		if(this.get_numChildren() > 0) {
			while(this.get_numChildren() > 0) this.removeChildAt(0);
			this.content = null;
			this.contentLoaderInfo.url = null;
			this.contentLoaderInfo.contentType = null;
			this.contentLoaderInfo.content = null;
			this.contentLoaderInfo.bytesLoaded = 0;
			this.contentLoaderInfo.bytesTotal = 0;
			this.contentLoaderInfo.width = 0;
			this.contentLoaderInfo.height = 0;
			var event = new openfl_events_Event("unload");
			event.currentTarget = this;
			this.__dispatchEvent(event);
		}
	}
	,unloadAndStop: function(gc) {
		if(gc == null) gc = true;
		openfl_Lib.notImplemented("Loader.unloadAndStop");
	}
	,BitmapData_onLoad: function(bitmapData) {
		this.contentLoaderInfo.content = new openfl_display_Bitmap(bitmapData);
		this.content = this.contentLoaderInfo.content;
		this.addChild(this.contentLoaderInfo.content);
		var event = new openfl_events_Event("complete");
		event.target = this.contentLoaderInfo;
		event.currentTarget = this.contentLoaderInfo;
		this.contentLoaderInfo.dispatchEvent(event);
	}
	,BitmapData_onError: function(_) {
		var event = new openfl_events_IOErrorEvent("ioError");
		event.target = this.contentLoaderInfo;
		event.currentTarget = this.contentLoaderInfo;
		this.contentLoaderInfo.dispatchEvent(event);
	}
	,__class__: openfl_display_Loader
});
var openfl_display_OpenGLView = function() {
	openfl_display_DirectRenderer.call(this,"OpenGLView");
	if(!this.__added) {
		this.__added = true;
		haxe_Log.trace("Warning: OpenGLView is not available in HTML5 canvas rendering mode",{ fileName : "OpenGLView.hx", lineNumber : 76, className : "openfl.display.OpenGLView", methodName : "new"});
		haxe_Log.trace("Please compile your project using -Ddom or -Dwebgl (beta) to enable",{ fileName : "OpenGLView.hx", lineNumber : 77, className : "openfl.display.OpenGLView", methodName : "new"});
	}
};
$hxClasses["openfl.display.OpenGLView"] = openfl_display_OpenGLView;
openfl_display_OpenGLView.__name__ = ["openfl","display","OpenGLView"];
openfl_display_OpenGLView.__properties__ = {get_isSupported:"get_isSupported"}
openfl_display_OpenGLView.isSupported = null;
openfl_display_OpenGLView.get_isSupported = function() {
	return false;
};
openfl_display_OpenGLView.__super__ = openfl_display_DirectRenderer;
openfl_display_OpenGLView.prototype = $extend(openfl_display_DirectRenderer.prototype,{
	__renderCanvas: function(renderSession) {
	}
	,__renderDOM: function(renderSession) {
		if(this.stage != null && this.__worldVisible && this.__renderable) {
			if(!this.__added) {
				renderSession.element.appendChild(this.__canvas);
				this.__added = true;
				openfl__$internal_renderer_dom_DOMRenderer.initializeElement(this,this.__canvas,renderSession);
			}
			if(this.__context != null) {
				var rect = null;
				if(this.get_scrollRect() == null) rect = new openfl_geom_Rectangle(0,0,this.stage.stageWidth,this.stage.stageHeight); else rect = new openfl_geom_Rectangle(this.get_x() + this.get_scrollRect().x,this.get_y() + this.get_scrollRect().y,this.get_scrollRect().width,this.get_scrollRect().height);
				if(this.__render != null) this.__render(rect);
			}
		} else if(this.__added) {
			renderSession.element.removeChild(this.__canvas);
			this.__added = false;
		}
	}
	,__renderGL: function(renderSession) {
		if(this.stage != null && this.__renderable) {
			var rect = null;
			if(this.get_scrollRect() == null) rect = new openfl_geom_Rectangle(0,0,this.stage.stageWidth,this.stage.stageHeight); else rect = new openfl_geom_Rectangle(this.get_x() + this.get_scrollRect().x,this.get_y() + this.get_scrollRect().y,this.get_scrollRect().width,this.get_scrollRect().height);
			if(this.__render != null) this.__render(rect);
			renderSession.shaderManager.setShader(null);
			renderSession.blendModeManager.setBlendMode(null);
		}
	}
	,__class__: openfl_display_OpenGLView
});
var openfl_display_PNGEncoderOptions = function(fastCompression) {
	if(fastCompression == null) fastCompression = false;
	this.fastCompression = fastCompression;
};
$hxClasses["openfl.display.PNGEncoderOptions"] = openfl_display_PNGEncoderOptions;
openfl_display_PNGEncoderOptions.__name__ = ["openfl","display","PNGEncoderOptions"];
openfl_display_PNGEncoderOptions.prototype = {
	__class__: openfl_display_PNGEncoderOptions
};
var openfl_display__$PixelSnapping_PixelSnapping_$Impl_$ = {};
$hxClasses["openfl.display._PixelSnapping.PixelSnapping_Impl_"] = openfl_display__$PixelSnapping_PixelSnapping_$Impl_$;
openfl_display__$PixelSnapping_PixelSnapping_$Impl_$.__name__ = ["openfl","display","_PixelSnapping","PixelSnapping_Impl_"];
openfl_display__$PixelSnapping_PixelSnapping_$Impl_$.fromString = function(value) {
	switch(value) {
	case "always":
		return 0;
	case "auto":
		return 1;
	case "never":
		return 2;
	default:
		return null;
	}
};
openfl_display__$PixelSnapping_PixelSnapping_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "always";
	case 1:
		return "auto";
	case 2:
		return "never";
	default:
		return null;
	}
};
var openfl_display_Preloader = function(display) {
	lime_app_Preloader.call(this);
	if(display != null) {
		this.display = display;
		openfl_Lib.current.addChild(display);
		if(js_Boot.__instanceof(display,NMEPreloader)) (js_Boot.__cast(display , NMEPreloader)).onInit();
	}
};
$hxClasses["openfl.display.Preloader"] = openfl_display_Preloader;
openfl_display_Preloader.__name__ = ["openfl","display","Preloader"];
openfl_display_Preloader.__super__ = lime_app_Preloader;
openfl_display_Preloader.prototype = $extend(lime_app_Preloader.prototype,{
	load: function(urls,types) {
		var sounds = [];
		var url = null;
		var _g1 = 0;
		var _g = urls.length;
		while(_g1 < _g) {
			var i = _g1++;
			url = urls[i];
			var _g2 = types[i];
			switch(_g2) {
			case "MUSIC":case "SOUND":
				var sound = haxe_io_Path.withoutExtension(url);
				if(!HxOverrides.remove(sounds,sound)) this.total++;
				sounds.push(sound);
				break;
			default:
			}
		}
		var _g3 = 0;
		while(_g3 < sounds.length) {
			var soundName = sounds[_g3];
			++_g3;
			var sound1 = new openfl_media_Sound();
			sound1.addEventListener("complete",$bind(this,this.sound_onComplete));
			sound1.addEventListener("ioError",$bind(this,this.sound_onIOError));
			sound1.load(new openfl_net_URLRequest(soundName + ".ogg"));
		}
		lime_app_Preloader.prototype.load.call(this,urls,types);
	}
	,start: function() {
		if(this.display != null && js_Boot.__instanceof(this.display,NMEPreloader)) {
			this.display.addEventListener("complete",$bind(this,this.display_onComplete));
			(js_Boot.__cast(this.display , NMEPreloader)).onLoaded();
		} else lime_app_Preloader.prototype.start.call(this);
	}
	,update: function(loaded,total) {
		if(this.display != null && js_Boot.__instanceof(this.display,NMEPreloader)) (js_Boot.__cast(this.display , NMEPreloader)).onUpdate(loaded,total);
	}
	,display_onComplete: function(event) {
		this.display.removeEventListener("complete",$bind(this,this.display_onComplete));
		openfl_Lib.current.removeChild(this.display);
		openfl_Lib.current.stage.set_focus(null);
		this.display = null;
		lime_app_Preloader.prototype.start.call(this);
	}
	,sound_onComplete: function(event) {
		this.loaded++;
		this.onProgress.dispatch(this.loaded,this.total);
		if(this.loaded == this.total) this.start();
	}
	,sound_onIOError: function(event) {
		this.loaded++;
		this.onProgress.dispatch(this.loaded,this.total);
		if(this.loaded == this.total) this.start();
	}
	,__class__: openfl_display_Preloader
});
var openfl_display_Shader = function(precision) {
	if(precision == null) precision = 1;
	this.__dirty = true;
	this.repeatY = 33071;
	this.repeatX = 33071;
	this.precision = 1;
	this.precision = precision;
	this.data = new haxe_ds_StringMap();
	var value = new openfl_display_GLShaderParameter("vec2");
	this.data.set(openfl_display_Shader.uObjectSize,value);
	var value1 = new openfl_display_GLShaderParameter("vec2");
	this.data.set(openfl_display_Shader.uTextureSize,value1);
};
$hxClasses["openfl.display.Shader"] = openfl_display_Shader;
openfl_display_Shader.__name__ = ["openfl","display","Shader"];
openfl_display_Shader.prototype = {
	__init: function(gl) {
		var dirty = this.__dirty;
		if(dirty) {
			if(this.__shader != null) this.__shader.destroy();
			this.__shader = new openfl__$internal_renderer_opengl_shaders2_Shader(gl);
			if(this.__vertexCode != null) this.__shader.vertexString = this.__vertexCode; else this.__shader.vertexString = openfl__$internal_renderer_opengl_shaders2_DefaultShader.VERTEX_SRC.join("\n");
			this.__shader.fragmentString = this.__fragmentCode;
			this.__dirty = false;
		}
		this.__shader.init(dirty);
	}
	,__buildFragmentCode: function(code) {
		var output = [];
		output.push("#ifdef GL_ES");
		output.push((function($this) {
			var $r;
			var _g = $this.precision;
			$r = (function($this) {
				var $r;
				switch(_g) {
				case 2:
					$r = "precision highp float;";
					break;
				case 1:
					$r = "precision mediump float;";
					break;
				default:
					$r = "precision lowp float;";
				}
				return $r;
			}($this));
			return $r;
		}(this)));
		output.push("#endif");
		output = output.concat(openfl_display_Shader.fragmentHeader);
		output.push(code);
		this.__fragmentCode = output.join("\n");
	}
	,__buildVertexCode: function(code) {
		var output = [];
		output.push("#ifdef GL_ES");
		output.push((function($this) {
			var $r;
			var _g = $this.precision;
			$r = (function($this) {
				var $r;
				switch(_g) {
				case 2:
					$r = "precision highp float;";
					break;
				case 1:
					$r = "precision mediump float;";
					break;
				default:
					$r = "precision lowp float;";
				}
				return $r;
			}($this));
			return $r;
		}(this)));
		output.push("#endif");
		output = output.concat(openfl_display_Shader.vertexHeader);
		output.push(code);
		this.__vertexCode = output.join("\n");
	}
	,__class__: openfl_display_Shader
};
var openfl_display_GLShaderParameter = function(type,arraySize) {
	this.internalType = 0;
	this.transpose = false;
	this.repeatY = 33071;
	this.repeatX = 33071;
	this.smooth = false;
	this.arraySize = 0;
	this.size = 0;
	this.type = type;
	if(arraySize == null) this.arraySize = 0; else this.arraySize = arraySize;
	this.__init();
};
$hxClasses["openfl.display.GLShaderParameter"] = openfl_display_GLShaderParameter;
openfl_display_GLShaderParameter.__name__ = ["openfl","display","GLShaderParameter"];
openfl_display_GLShaderParameter.prototype = {
	__init: function() {
		var _g = this.type;
		var v = _g;
		var m = _g;
		switch(_g) {
		case "bool":
			this.internalType = 1;
			this.size = 1;
			if(this.internalType == 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a value, use bitmap instead");
			this.value = [0.0];
			break;
		case "int":
			this.internalType = 1;
			this.size = 1;
			if(this.internalType == 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a value, use bitmap instead");
			this.value = [0.0];
			break;
		case "float":
			this.internalType = 2;
			this.size = 1;
			if(this.internalType == 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a value, use bitmap instead");
			this.value = [0.0];
			break;
		case "sampler2D":
			if(v.indexOf("vec") > -1) {
				if(StringTools.startsWith(this.type,"b") || StringTools.startsWith(this.type,"i")) this.internalType = 1; else this.internalType = 2;
				var s = Std.parseInt(this.type.charAt(this.type.length - 1));
				this.size = s;
				this.set_value((function($this) {
					var $r;
					var _g1 = [];
					{
						var _g3 = 0;
						var _g2 = $this.size;
						while(_g3 < _g2) {
							var i = _g3++;
							_g1.push(0.0);
						}
					}
					$r = _g1;
					return $r;
				}(this)));
			} else if(m.indexOf("mat") > -1) {
				this.internalType = 3;
				var s1 = Std.parseInt(this.type.charAt(this.type.length - 1));
				this.size = s1;
				if(this.internalType == 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a value, use bitmap instead");
				var _g11 = this.size;
				switch(_g11) {
				case 2:
					this.value = [1,0,1,0];
					break;
				case 3:
					this.value = [1,0,0,0,1,0,0,0,1];
					break;
				case 4:
					this.value = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];
					break;
				default:
					this.value = [0];
				}
			} else {
				this.internalType = 4;
				this.size = 0;
			}
			break;
		case "samplerCube":
			if(v.indexOf("vec") > -1) {
				if(StringTools.startsWith(this.type,"b") || StringTools.startsWith(this.type,"i")) this.internalType = 1; else this.internalType = 2;
				var s2 = Std.parseInt(this.type.charAt(this.type.length - 1));
				this.size = s2;
				this.set_value((function($this) {
					var $r;
					var _g12 = [];
					{
						var _g31 = 0;
						var _g21 = $this.size;
						while(_g31 < _g21) {
							var i1 = _g31++;
							_g12.push(0.0);
						}
					}
					$r = _g12;
					return $r;
				}(this)));
			} else if(m.indexOf("mat") > -1) {
				this.internalType = 3;
				var s3 = Std.parseInt(this.type.charAt(this.type.length - 1));
				this.size = s3;
				if(this.internalType == 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a value, use bitmap instead");
				var _g13 = this.size;
				switch(_g13) {
				case 2:
					this.value = [1,0,1,0];
					break;
				case 3:
					this.value = [1,0,0,0,1,0,0,0,1];
					break;
				case 4:
					this.value = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];
					break;
				default:
					this.value = [0];
				}
			} else {
				this.internalType = 4;
				this.size = 0;
			}
			break;
		default:
			if(v.indexOf("vec") > -1) {
				if(StringTools.startsWith(this.type,"b") || StringTools.startsWith(this.type,"i")) this.internalType = 1; else this.internalType = 2;
				var s4 = Std.parseInt(this.type.charAt(this.type.length - 1));
				this.size = s4;
				this.set_value((function($this) {
					var $r;
					var _g14 = [];
					{
						var _g32 = 0;
						var _g22 = $this.size;
						while(_g32 < _g22) {
							var i2 = _g32++;
							_g14.push(0.0);
						}
					}
					$r = _g14;
					return $r;
				}(this)));
			} else if(m.indexOf("mat") > -1) {
				this.internalType = 3;
				var s5 = Std.parseInt(this.type.charAt(this.type.length - 1));
				this.size = s5;
				if(this.internalType == 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a value, use bitmap instead");
				var _g15 = this.size;
				switch(_g15) {
				case 2:
					this.value = [1,0,1,0];
					break;
				case 3:
					this.value = [1,0,0,0,1,0,0,0,1];
					break;
				case 4:
					this.value = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];
					break;
				default:
					this.value = [0];
				}
			} else {
				this.internalType = 0;
				haxe_Log.trace("Can't initialize value for type " + this.type,{ fileName : "Shader.hx", lineNumber : 307, className : "openfl.display.GLShaderParameter", methodName : "__init"});
			}
		}
	}
	,set_value: function(v) {
		if(this.internalType == 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a value, use bitmap instead");
		return this.value = v;
	}
	,set_bitmap: function(v) {
		if(this.internalType != 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a bitmap, use value instead");
		return this.bitmap = v;
	}
	,__class__: openfl_display_GLShaderParameter
	,__properties__: {set_bitmap:"set_bitmap",set_value:"set_value"}
};
var openfl_display_Shape = function() {
	openfl_display_DisplayObject.call(this);
};
$hxClasses["openfl.display.Shape"] = openfl_display_Shape;
openfl_display_Shape.__name__ = ["openfl","display","Shape"];
openfl_display_Shape.__super__ = openfl_display_DisplayObject;
openfl_display_Shape.prototype = $extend(openfl_display_DisplayObject.prototype,{
	get_graphics: function() {
		if(this.__graphics == null) {
			this.__graphics = new openfl_display_Graphics();
			this.__graphics.__owner = this;
		}
		return this.__graphics;
	}
	,__class__: openfl_display_Shape
	,__properties__: $extend(openfl_display_DisplayObject.prototype.__properties__,{get_graphics:"get_graphics"})
});
var openfl_display__$SpreadMethod_SpreadMethod_$Impl_$ = {};
$hxClasses["openfl.display._SpreadMethod.SpreadMethod_Impl_"] = openfl_display__$SpreadMethod_SpreadMethod_$Impl_$;
openfl_display__$SpreadMethod_SpreadMethod_$Impl_$.__name__ = ["openfl","display","_SpreadMethod","SpreadMethod_Impl_"];
openfl_display__$SpreadMethod_SpreadMethod_$Impl_$.fromString = function(value) {
	switch(value) {
	case "pad":
		return 0;
	case "reflect":
		return 1;
	case "repeat":
		return 2;
	default:
		return null;
	}
};
openfl_display__$SpreadMethod_SpreadMethod_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "pad";
	case 1:
		return "reflect";
	case 2:
		return "repeat";
	default:
		return null;
	}
};
var openfl_display_Stage = function(window,color) {
	openfl_display_DisplayObjectContainer.call(this);
	this.application = window.application;
	this.window = window;
	if(color == null) {
		this.__transparent = true;
		this.set_color(0);
	} else this.set_color(color);
	this.set_name(null);
	this.__deltaTime = 0;
	this.__displayState = 2;
	this.__mouseX = 0;
	this.__mouseY = 0;
	this.__lastClickTime = 0;
	this.stageWidth = window.__width * window.__scale | 0;
	this.stageHeight = window.__height * window.__scale | 0;
	this.stage = this;
	this.align = 6;
	this.allowsFullScreen = false;
	this.allowsFullScreenInteractive = false;
	this.quality = 1;
	this.scaleMode = 2;
	this.stageFocusRect = true;
	this.__macKeyboard = /AppleWebKit/.test (navigator.userAgent) && /Mobile\/\w+/.test (navigator.userAgent) || /Mac/.test (navigator.platform);
	this.__clearBeforeRender = true;
	this.__stack = [];
	this.__mouseOutStack = [];
	var this1;
	this1 = new openfl_VectorData();
	var this2;
	this2 = new Array(0);
	this1.data = this2;
	this1.length = 0;
	this1.fixed = false;
	this.stage3Ds = this1;
	var this3 = this.stage3Ds;
	var x = new openfl_display_Stage3D();
	if(!this3.fixed) {
		this3.length++;
		if(this3.data.length < this3.length) {
			var data;
			var this4;
			this4 = new Array(this3.data.length + 10);
			data = this4;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data,0,this3.data.length);
			this3.data = data;
		}
		this3.data[this3.length - 1] = x;
	}
	this3.length;
	if(openfl_Lib.current.stage == null) this.stage.addChild(openfl_Lib.current);
};
$hxClasses["openfl.display.Stage"] = openfl_display_Stage;
openfl_display_Stage.__name__ = ["openfl","display","Stage"];
openfl_display_Stage.__interfaces__ = [lime_app_IModule];
openfl_display_Stage.__super__ = openfl_display_DisplayObjectContainer;
openfl_display_Stage.prototype = $extend(openfl_display_DisplayObjectContainer.prototype,{
	globalToLocal: function(pos) {
		return pos.clone();
	}
	,invalidate: function() {
		this.__invalidated = true;
	}
	,localToGlobal: function(pos) {
		return pos.clone();
	}
	,onGamepadAxisMove: function(gamepad,axis,value) {
		openfl_ui_GameInput.__onGamepadAxisMove(gamepad,axis,value);
	}
	,onGamepadButtonDown: function(gamepad,button) {
		openfl_ui_GameInput.__onGamepadButtonDown(gamepad,button);
	}
	,onGamepadButtonUp: function(gamepad,button) {
		openfl_ui_GameInput.__onGamepadButtonUp(gamepad,button);
	}
	,onGamepadConnect: function(gamepad) {
		openfl_ui_GameInput.__onGamepadConnect(gamepad);
	}
	,onGamepadDisconnect: function(gamepad) {
		openfl_ui_GameInput.__onGamepadDisconnect(gamepad);
	}
	,onJoystickAxisMove: function(joystick,axis,value) {
	}
	,onJoystickButtonDown: function(joystick,button) {
	}
	,onJoystickButtonUp: function(joystick,button) {
	}
	,onJoystickConnect: function(joystick) {
	}
	,onJoystickDisconnect: function(joystick) {
	}
	,onJoystickHatMove: function(joystick,hat,position) {
	}
	,onJoystickTrackballMove: function(joystick,trackball,value) {
	}
	,onKeyDown: function(window,keyCode,modifier) {
		if(this.window == null || this.window != window) return;
		this.__onKey("keyDown",keyCode,modifier);
	}
	,onKeyUp: function(window,keyCode,modifier) {
		if(this.window == null || this.window != window) return;
		this.__onKey("keyUp",keyCode,modifier);
	}
	,onModuleExit: function(code) {
		if(this.window != null) {
			var event = new openfl_events_Event("deactivate");
			this.__broadcast(event,true);
		}
	}
	,onMouseDown: function(window,x,y,button) {
		if(this.window == null || this.window != window) return;
		var type;
		switch(button) {
		case 1:
			type = "middleMouseDown";
			break;
		case 2:
			type = "rightMouseDown";
			break;
		default:
			type = "mouseDown";
		}
		this.__onMouse(type,x * window.__scale | 0,y * window.__scale | 0,button);
	}
	,onMouseMove: function(window,x,y) {
		if(this.window == null || this.window != window) return;
		this.__onMouse("mouseMove",x * window.__scale | 0,y * window.__scale | 0,0);
	}
	,onMouseMoveRelative: function(window,x,y) {
	}
	,onMouseUp: function(window,x,y,button) {
		if(this.window == null || this.window != window) return;
		var type;
		switch(button) {
		case 1:
			type = "middleMouseUp";
			break;
		case 2:
			type = "rightMouseUp";
			break;
		default:
			type = "mouseUp";
		}
		this.__onMouse(type,x * window.__scale | 0,y * window.__scale | 0,button);
	}
	,onMouseWheel: function(window,deltaX,deltaY) {
		if(this.window == null || this.window != window) return;
		this.__onMouseWheel(deltaX * window.__scale | 0,deltaY * window.__scale | 0);
	}
	,onPreloadComplete: function() {
	}
	,onPreloadProgress: function(loaded,total) {
	}
	,onRenderContextLost: function(renderer) {
	}
	,onRenderContextRestored: function(renderer,context) {
	}
	,onTextEdit: function(window,text,start,length) {
	}
	,onTextInput: function(window,text) {
		if(this.window == null || this.window != window) return;
		var stack = [];
		if(this.__focus == null) this.__getInteractive(stack); else this.__focus.__getInteractive(stack);
		var event = new openfl_events_TextEvent("textInput",true,false,text);
		if(stack.length > 0) {
			stack.reverse();
			this.__fireEvent(event,stack);
		} else this.__broadcast(event,true);
	}
	,onTouchMove: function(touch) {
		this.__onTouch("touchMove",touch);
	}
	,onTouchEnd: function(touch) {
		this.__onTouch("touchEnd",touch);
	}
	,onTouchStart: function(touch) {
		this.__onTouch("touchBegin",touch);
	}
	,onWindowActivate: function(window) {
		if(this.window == null || this.window != window) return;
		var event = new openfl_events_Event("activate");
		this.__broadcast(event,true);
	}
	,onWindowClose: function(window) {
		if(this.window == window) this.window = null;
	}
	,onWindowCreate: function(window) {
		if(this.window == null || this.window != window) return;
		if(window.renderer != null) {
			var _g = window.renderer.context;
			switch(_g[1]) {
			case 0:
				var gl = _g[2];
				break;
			case 1:
				var context = _g[2];
				this.__renderer = new openfl__$internal_renderer_canvas_CanvasRenderer(this.stageWidth,this.stageHeight,context);
				break;
			case 2:
				var element = _g[2];
				break;
			case 4:
				var cairo = _g[2];
				break;
			case 5:
				var ctx = _g[2];
				break;
			default:
			}
		}
	}
	,onWindowDeactivate: function(window) {
		if(this.window == null || this.window != window) return;
		var event = new openfl_events_Event("deactivate");
		this.__broadcast(event,true);
	}
	,onWindowDropFile: function(window,file) {
	}
	,onWindowEnter: function(window) {
	}
	,onWindowFocusIn: function(window) {
		if(this.window == null || this.window != window) return;
		var event = new openfl_events_FocusEvent("focusIn",true,false,null,false,0);
		this.__broadcast(event,true);
	}
	,onWindowFocusOut: function(window) {
		if(this.window == null || this.window != window) return;
		var event = new openfl_events_FocusEvent("focusOut",true,false,null,false,0);
		this.__broadcast(event,true);
	}
	,onWindowFullscreen: function(window) {
		if(this.window == null || this.window != window) return;
		if(this.__displayState == 2) this.__displayState = 1;
	}
	,onWindowLeave: function(window) {
		if(this.window == null || this.window != window) return;
		this.__dispatchEvent(new openfl_events_Event("mouseLeave"));
	}
	,onWindowMinimize: function(window) {
	}
	,onWindowMove: function(window,x,y) {
	}
	,onWindowResize: function(window,width,height) {
		if(this.window == null || this.window != window) return;
		if(this.__displayState != 2 && !window.__fullscreen) this.__displayState = 2;
		this.stageWidth = width * window.__scale | 0;
		this.stageHeight = height * window.__scale | 0;
		if(this.__renderer != null) this.__renderer.resize(this.stageWidth,this.stageHeight);
		var event = new openfl_events_Event("resize");
		this.__broadcast(event,false);
	}
	,onWindowRestore: function(window) {
	}
	,render: function(renderer) {
		if(renderer.window == null || renderer.window != this.window) return;
		if(this.application != null && this.application.windows.length > 0) {
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
			if(!this.__renderDirty) {
				this.__updateCachedBitmap = true;
				this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
				this.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
		}
		if(this.__rendering) return;
		this.__rendering = true;
		this.__broadcast(new openfl_events_Event("enterFrame"),true);
		if(this.__invalidated) {
			this.__invalidated = false;
			this.__broadcast(new openfl_events_Event("render"),true);
		}
		this.__renderable = true;
		this.__enterFrame(this.__deltaTime);
		this.__deltaTime = 0;
		this.__update(false,true);
		if(this.__renderer != null) {
			{
				var _g = renderer.context;
				switch(_g[1]) {
				case 4:
					var cairo = _g[2];
					(js_Boot.__cast(this.__renderer , openfl__$internal_renderer_cairo_CairoRenderer)).cairo = cairo;
					this.__renderer.renderSession.cairo = cairo;
					break;
				default:
				}
			}
			this.__renderer.render(this);
		}
		this.__rendering = false;
	}
	,update: function(deltaTime) {
		this.__deltaTime = deltaTime;
	}
	,__drag: function(mouse) {
		var parent = this.__dragObject.parent;
		if(parent != null) mouse = parent.globalToLocal(mouse);
		var x = mouse.x + this.__dragOffsetX;
		var y = mouse.y + this.__dragOffsetY;
		if(this.__dragBounds != null) {
			if(x < this.__dragBounds.x) x = this.__dragBounds.x; else if(x > this.__dragBounds.get_right()) x = this.__dragBounds.get_right();
			if(y < this.__dragBounds.y) y = this.__dragBounds.y; else if(y > this.__dragBounds.get_bottom()) y = this.__dragBounds.get_bottom();
		}
		this.__dragObject.set_x(x);
		this.__dragObject.set_y(y);
	}
	,__fireEvent: function(event,stack) {
		var length = stack.length;
		if(length == 0) {
			event.eventPhase = 2;
			event.target.__broadcast(event,false);
		} else {
			event.eventPhase = 1;
			event.target = stack[stack.length - 1];
			var _g1 = 0;
			var _g = length - 1;
			while(_g1 < _g) {
				var i = _g1++;
				stack[i].__broadcast(event,false);
				if(event.__isCanceled) return;
			}
			event.eventPhase = 2;
			event.target.__broadcast(event,false);
			if(event.__isCanceled) return;
			if(event.bubbles) {
				event.eventPhase = 3;
				var i1 = length - 2;
				while(i1 >= 0) {
					stack[i1].__broadcast(event,false);
					if(event.__isCanceled) return;
					i1--;
				}
			}
		}
	}
	,__getInteractive: function(stack) {
		if(stack != null) stack.push(this);
		return true;
	}
	,__onKey: function(type,keyCode,modifier) {
		openfl_events_MouseEvent.__altKey = lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_altKey(modifier);
		openfl_events_MouseEvent.__commandKey = lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey(modifier);
		openfl_events_MouseEvent.__ctrlKey = lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(modifier);
		openfl_events_MouseEvent.__shiftKey = lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(modifier);
		var stack = [];
		if(this.__focus == null) this.__getInteractive(stack); else this.__focus.__getInteractive(stack);
		if(stack.length > 0) {
			var keyLocation;
			switch(keyCode) {
			case 1073742048:case 1073742049:case 1073742050:case 1073742051:
				keyLocation = 1;
				break;
			case 1073742052:case 1073742053:case 1073742054:case 1073742055:
				keyLocation = 2;
				break;
			case 1073741908:case 1073741909:case 1073741910:case 1073741911:case 1073741912:case 1073741913:case 1073741914:case 1073741915:case 1073741916:case 1073741917:case 1073741918:case 1073741919:case 1073741920:case 1073741921:case 1073741922:case 1073741923:case 1073742044:
				keyLocation = 3;
				break;
			default:
				keyLocation = 0;
			}
			var keyCode1;
			switch(keyCode) {
			case 8:
				keyCode1 = 8;
				break;
			case 9:
				keyCode1 = 9;
				break;
			case 13:
				keyCode1 = 13;
				break;
			case 27:
				keyCode1 = 27;
				break;
			case 32:
				keyCode1 = 32;
				break;
			case 33:
				keyCode1 = 49;
				break;
			case 34:
				keyCode1 = 222;
				break;
			case 35:
				keyCode1 = 51;
				break;
			case 36:
				keyCode1 = 52;
				break;
			case 37:
				keyCode1 = 53;
				break;
			case 38:
				keyCode1 = 55;
				break;
			case 39:
				keyCode1 = 222;
				break;
			case 40:
				keyCode1 = 57;
				break;
			case 41:
				keyCode1 = 48;
				break;
			case 42:
				keyCode1 = 56;
				break;
			case 44:
				keyCode1 = 188;
				break;
			case 45:
				keyCode1 = 189;
				break;
			case 46:
				keyCode1 = 190;
				break;
			case 47:
				keyCode1 = 191;
				break;
			case 48:
				keyCode1 = 48;
				break;
			case 49:
				keyCode1 = 49;
				break;
			case 50:
				keyCode1 = 50;
				break;
			case 51:
				keyCode1 = 51;
				break;
			case 52:
				keyCode1 = 52;
				break;
			case 53:
				keyCode1 = 53;
				break;
			case 54:
				keyCode1 = 54;
				break;
			case 55:
				keyCode1 = 55;
				break;
			case 56:
				keyCode1 = 56;
				break;
			case 57:
				keyCode1 = 57;
				break;
			case 58:
				keyCode1 = 186;
				break;
			case 59:
				keyCode1 = 186;
				break;
			case 60:
				keyCode1 = 60;
				break;
			case 61:
				keyCode1 = 187;
				break;
			case 62:
				keyCode1 = 190;
				break;
			case 63:
				keyCode1 = 191;
				break;
			case 64:
				keyCode1 = 50;
				break;
			case 91:
				keyCode1 = 219;
				break;
			case 92:
				keyCode1 = 220;
				break;
			case 93:
				keyCode1 = 221;
				break;
			case 94:
				keyCode1 = 54;
				break;
			case 95:
				keyCode1 = 189;
				break;
			case 96:
				keyCode1 = 192;
				break;
			case 97:
				keyCode1 = 65;
				break;
			case 98:
				keyCode1 = 66;
				break;
			case 99:
				keyCode1 = 67;
				break;
			case 100:
				keyCode1 = 68;
				break;
			case 101:
				keyCode1 = 69;
				break;
			case 102:
				keyCode1 = 70;
				break;
			case 103:
				keyCode1 = 71;
				break;
			case 104:
				keyCode1 = 72;
				break;
			case 105:
				keyCode1 = 73;
				break;
			case 106:
				keyCode1 = 74;
				break;
			case 107:
				keyCode1 = 75;
				break;
			case 108:
				keyCode1 = 76;
				break;
			case 109:
				keyCode1 = 77;
				break;
			case 110:
				keyCode1 = 78;
				break;
			case 111:
				keyCode1 = 79;
				break;
			case 112:
				keyCode1 = 80;
				break;
			case 113:
				keyCode1 = 81;
				break;
			case 114:
				keyCode1 = 82;
				break;
			case 115:
				keyCode1 = 83;
				break;
			case 116:
				keyCode1 = 84;
				break;
			case 117:
				keyCode1 = 85;
				break;
			case 118:
				keyCode1 = 86;
				break;
			case 119:
				keyCode1 = 87;
				break;
			case 120:
				keyCode1 = 88;
				break;
			case 121:
				keyCode1 = 89;
				break;
			case 122:
				keyCode1 = 90;
				break;
			case 127:
				keyCode1 = 46;
				break;
			case 1073741881:
				keyCode1 = 20;
				break;
			case 1073741882:
				keyCode1 = 112;
				break;
			case 1073741883:
				keyCode1 = 113;
				break;
			case 1073741884:
				keyCode1 = 114;
				break;
			case 1073741885:
				keyCode1 = 115;
				break;
			case 1073741886:
				keyCode1 = 116;
				break;
			case 1073741887:
				keyCode1 = 117;
				break;
			case 1073741888:
				keyCode1 = 118;
				break;
			case 1073741889:
				keyCode1 = 119;
				break;
			case 1073741890:
				keyCode1 = 120;
				break;
			case 1073741891:
				keyCode1 = 121;
				break;
			case 1073741892:
				keyCode1 = 122;
				break;
			case 1073741893:
				keyCode1 = 123;
				break;
			case 1073741894:
				keyCode1 = 301;
				break;
			case 1073741895:
				keyCode1 = 145;
				break;
			case 1073741896:
				keyCode1 = 19;
				break;
			case 1073741897:
				keyCode1 = 45;
				break;
			case 1073741898:
				keyCode1 = 36;
				break;
			case 1073741899:
				keyCode1 = 33;
				break;
			case 1073741901:
				keyCode1 = 35;
				break;
			case 1073741902:
				keyCode1 = 34;
				break;
			case 1073741903:
				keyCode1 = 39;
				break;
			case 1073741904:
				keyCode1 = 37;
				break;
			case 1073741905:
				keyCode1 = 40;
				break;
			case 1073741906:
				keyCode1 = 38;
				break;
			case 1073741907:
				keyCode1 = 144;
				break;
			case 1073741908:
				keyCode1 = 111;
				break;
			case 1073741909:
				keyCode1 = 106;
				break;
			case 1073741910:
				keyCode1 = 109;
				break;
			case 1073741911:
				keyCode1 = 107;
				break;
			case 1073741912:
				keyCode1 = 108;
				break;
			case 1073741913:
				keyCode1 = 97;
				break;
			case 1073741914:
				keyCode1 = 98;
				break;
			case 1073741915:
				keyCode1 = 99;
				break;
			case 1073741916:
				keyCode1 = 100;
				break;
			case 1073741917:
				keyCode1 = 101;
				break;
			case 1073741918:
				keyCode1 = 102;
				break;
			case 1073741919:
				keyCode1 = 103;
				break;
			case 1073741920:
				keyCode1 = 104;
				break;
			case 1073741921:
				keyCode1 = 105;
				break;
			case 1073741922:
				keyCode1 = 96;
				break;
			case 1073741923:
				keyCode1 = 110;
				break;
			case 1073741925:
				keyCode1 = 302;
				break;
			case 1073741928:
				keyCode1 = 124;
				break;
			case 1073741929:
				keyCode1 = 125;
				break;
			case 1073741930:
				keyCode1 = 126;
				break;
			case 1073741982:
				keyCode1 = 13;
				break;
			case 1073742044:
				keyCode1 = 110;
				break;
			case 1073742048:
				keyCode1 = 17;
				break;
			case 1073742049:
				keyCode1 = 16;
				break;
			case 1073742050:
				keyCode1 = 18;
				break;
			case 1073742051:
				keyCode1 = 15;
				break;
			case 1073742052:
				keyCode1 = 17;
				break;
			case 1073742053:
				keyCode1 = 16;
				break;
			case 1073742054:
				keyCode1 = 18;
				break;
			case 1073742055:
				keyCode1 = 15;
				break;
			default:
				keyCode1 = keyCode;
			}
			var charCode = openfl_ui_Keyboard.__getCharCode(keyCode1,lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(modifier));
			var event = new openfl_events_KeyboardEvent(type,true,false,charCode,keyCode1,keyLocation,this.__macKeyboard?lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(modifier) || lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey(modifier):lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(modifier),lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_altKey(modifier),lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(modifier),lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(modifier),lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey(modifier));
			stack.reverse();
			this.__fireEvent(event,stack);
			if(event.__isCanceled) {
				if(type == "keyDown") this.window.onKeyDown.cancel(); else this.window.onKeyUp.cancel();
			}
		}
	}
	,__onMouse: function(type,x,y,button) {
		if(button > 2) return;
		this.__mouseX = x;
		this.__mouseY = y;
		var stack = [];
		var target = null;
		var targetPoint = new openfl_geom_Point(x,y);
		if(this.__hitTest(x,y,true,stack,true,this)) target = stack[stack.length - 1]; else {
			target = this;
			stack = [this];
		}
		if(target == null) target = this;
		var clickType = null;
		switch(type) {
		case "mouseDown":
			if(target.get_tabEnabled()) this.set_focus(target); else this.set_focus(null);
			this.__mouseDownLeft = target;
			break;
		case "middleMouseDown":
			this.__mouseDownMiddle = target;
			break;
		case "rightMouseDown":
			this.__mouseDownRight = target;
			break;
		case "mouseUp":
			if(this.__mouseDownLeft == target) clickType = "click";
			this.__mouseDownLeft = null;
			break;
		case "middleMouseUp":
			if(this.__mouseDownMiddle == target) clickType = "middleClick";
			this.__mouseDownMiddle = null;
			break;
		case "rightMouseUp":
			if(this.__mouseDownRight == target) clickType = "rightClick";
			this.__mouseDownRight = null;
			break;
		default:
		}
		this.__fireEvent(openfl_events_MouseEvent.__create(type,button,this.__mouseX,this.__mouseY,target == this?targetPoint:target.globalToLocal(targetPoint),target),stack);
		if(clickType != null) {
			this.__fireEvent(openfl_events_MouseEvent.__create(clickType,button,this.__mouseX,this.__mouseY,target == this?targetPoint:target.globalToLocal(targetPoint),target),stack);
			if(type == "mouseUp" && (js_Boot.__cast(target , openfl_display_InteractiveObject)).doubleClickEnabled) {
				var currentTime = openfl_Lib.getTimer();
				if(currentTime - this.__lastClickTime < 500) {
					this.__fireEvent(openfl_events_MouseEvent.__create("doubleClick",button,this.__mouseX,this.__mouseY,target == this?targetPoint:target.globalToLocal(targetPoint),target),stack);
					this.__lastClickTime = 0;
				} else this.__lastClickTime = currentTime;
			}
		}
		var cursor = null;
		var _g = 0;
		while(_g < stack.length) {
			var target1 = stack[_g];
			++_g;
			cursor = target1.__getCursor();
			if(cursor != null) {
				lime_ui_Mouse.set_cursor(cursor);
				break;
			}
		}
		if(cursor == null) lime_ui_Mouse.set_cursor(lime_ui_MouseCursor.ARROW);
		var event;
		var localPoint;
		var _g1 = 0;
		var _g11 = this.__mouseOutStack;
		while(_g1 < _g11.length) {
			var target2 = _g11[_g1];
			++_g1;
			if(HxOverrides.indexOf(stack,target2,0) == -1) {
				HxOverrides.remove(this.__mouseOutStack,target2);
				localPoint = target2.globalToLocal(targetPoint);
				event = openfl_events_MouseEvent.__create("mouseOut",button,this.__mouseX,this.__mouseY,localPoint,target2);
				event.bubbles = false;
				target2.__dispatchEvent(event);
			}
		}
		var _g2 = 0;
		while(_g2 < stack.length) {
			var target3 = stack[_g2];
			++_g2;
			if(HxOverrides.indexOf(this.__mouseOutStack,target3,0) == -1) {
				if(target3.hasEventListener("mouseOver")) {
					localPoint = target3.globalToLocal(targetPoint);
					event = openfl_events_MouseEvent.__create("mouseOver",button,this.__mouseX,this.__mouseY,localPoint,target3);
					event.bubbles = false;
					target3.__dispatchEvent(event);
				}
				if(target3.hasEventListener("mouseOut")) this.__mouseOutStack.push(target3);
			}
		}
		if(this.__dragObject != null) this.__drag(targetPoint);
	}
	,__onMouseWheel: function(deltaX,deltaY) {
		var x = this.__mouseX;
		var y = this.__mouseY;
		var stack = [];
		if(!this.__hitTest(x,y,false,stack,true,this)) stack = [this];
		var target = stack[stack.length - 1];
		var targetPoint = new openfl_geom_Point(x,y);
		var delta = deltaY | 0;
		this.__fireEvent(openfl_events_MouseEvent.__create("mouseWheel",0,this.__mouseX,this.__mouseY,target == this?targetPoint:target.globalToLocal(targetPoint),target,delta),stack);
	}
	,__onTouch: function(type,touch) {
		var point = new openfl_geom_Point(touch.x * this.stageWidth,touch.y * this.stageHeight);
		this.__mouseX = point.x;
		this.__mouseY = point.y;
		var __stack = [];
		if(this.__hitTest(this.__mouseX,this.__mouseY,false,__stack,true,this)) {
			var target = __stack[__stack.length - 1];
			if(target == null) target = this;
			var localPoint = target.globalToLocal(point);
			var touchEvent = openfl_events_TouchEvent.__create(type,null,this.__mouseX,this.__mouseY,localPoint,target);
			touchEvent.touchPointID = touch.id;
			touchEvent.isPrimaryTouchPoint = true;
			this.__fireEvent(touchEvent,__stack);
		} else {
			var touchEvent1 = openfl_events_TouchEvent.__create(type,null,this.__mouseX,this.__mouseY,point,this);
			touchEvent1.touchPointID = touch.id;
			touchEvent1.isPrimaryTouchPoint = true;
			this.__fireEvent(touchEvent1,[this.stage]);
		}
	}
	,__resize: function() {
	}
	,__startDrag: function(sprite,lockCenter,bounds) {
		if(bounds == null) this.__dragBounds = null; else this.__dragBounds = bounds.clone();
		this.__dragObject = sprite;
		if(this.__dragObject != null) {
			if(lockCenter) {
				this.__dragOffsetX = -this.__dragObject.get_width() / 2;
				this.__dragOffsetY = -this.__dragObject.get_height() / 2;
			} else {
				var mouse = new openfl_geom_Point(this.get_mouseX(),this.get_mouseY());
				var parent = this.__dragObject.parent;
				if(parent != null) mouse = parent.globalToLocal(mouse);
				this.__dragOffsetX = this.__dragObject.get_x() - mouse.x;
				this.__dragOffsetY = this.__dragObject.get_y() - mouse.y;
			}
		}
	}
	,__stopDrag: function(sprite) {
		this.__dragBounds = null;
		this.__dragObject = null;
	}
	,__update: function(transformOnly,updateChildren,maskGrahpics) {
		if(transformOnly) {
			if(openfl_display_DisplayObject.__worldTransformDirty > 0) {
				openfl_display_DisplayObjectContainer.prototype.__update.call(this,true,updateChildren,maskGrahpics);
				if(updateChildren) {
					openfl_display_DisplayObject.__worldTransformDirty = 0;
					this.__dirty = true;
				}
			}
		} else if(openfl_display_DisplayObject.__worldTransformDirty > 0 || this.__dirty || openfl_display_DisplayObject.__worldRenderDirty > 0) {
			openfl_display_DisplayObjectContainer.prototype.__update.call(this,false,updateChildren,maskGrahpics);
			if(updateChildren) {
				openfl_display_DisplayObject.__worldTransformDirty = 0;
				openfl_display_DisplayObject.__worldRenderDirty = 0;
				this.__dirty = false;
			}
		}
	}
	,get_mouseX: function() {
		return this.__mouseX;
	}
	,get_mouseY: function() {
		return this.__mouseY;
	}
	,canvas_onContextLost: function(event) {
	}
	,canvas_onContextRestored: function(event) {
	}
	,get_color: function() {
		return this.__color;
	}
	,set_color: function(value) {
		var r = (value & 16711680) >>> 16;
		var g = (value & 65280) >>> 8;
		var b = value & 255;
		this.__colorSplit = [r / 255,g / 255,b / 255];
		this.__colorString = "#" + StringTools.hex(value,6);
		return this.__color = value;
	}
	,get_displayState: function() {
		return this.__displayState;
	}
	,set_displayState: function(value) {
		if(this.window != null) switch(value) {
		case 2:
			if(this.window.__fullscreen) {
				this.window.set_fullscreen(false);
				this.stageWidth = this.window.__width * this.window.__scale | 0;
				this.stageHeight = this.window.__height * this.window.__scale | 0;
				this.dispatchEvent(new openfl_events_FullScreenEvent("fullScreen",false,false,false,true));
			}
			break;
		default:
			if(!this.window.__fullscreen) {
				this.window.set_fullscreen(true);
				this.stageWidth = this.window.__width * this.window.__scale | 0;
				this.stageHeight = this.window.__height * this.window.__scale | 0;
				this.dispatchEvent(new openfl_events_FullScreenEvent("fullScreen",false,false,true,true));
			}
		}
		return this.__displayState = value;
	}
	,get_focus: function() {
		return this.__focus;
	}
	,set_focus: function(value) {
		if(value != this.__focus) {
			var oldFocus = this.__focus;
			this.__focus = value;
			if(oldFocus != null) {
				var event = new openfl_events_FocusEvent("focusOut",true,false,this.__focus,false,0);
				this.__stack = [];
				oldFocus.__getInteractive(this.__stack);
				this.__stack.reverse();
				this.__fireEvent(event,this.__stack);
			}
			if(this.__focus != null) {
				var event1 = new openfl_events_FocusEvent("focusIn",true,false,oldFocus,false,0);
				this.__stack = [];
				value.__getInteractive(this.__stack);
				this.__stack.reverse();
				this.__fireEvent(event1,this.__stack);
			}
		}
		return this.__focus;
	}
	,get_frameRate: function() {
		if(this.application != null) return this.application.backend.getFrameRate();
		return 0;
	}
	,set_frameRate: function(value) {
		if(this.application != null) return this.application.backend.setFrameRate(value);
		return value;
	}
	,__class__: openfl_display_Stage
	,__properties__: $extend(openfl_display_DisplayObjectContainer.prototype.__properties__,{set_frameRate:"set_frameRate",get_frameRate:"get_frameRate",set_focus:"set_focus",get_focus:"get_focus",set_displayState:"set_displayState",get_displayState:"get_displayState",set_color:"set_color",get_color:"get_color"})
});
var openfl_display_Stage3D = function() {
	openfl_events_EventDispatcher.call(this);
};
$hxClasses["openfl.display.Stage3D"] = openfl_display_Stage3D;
openfl_display_Stage3D.__name__ = ["openfl","display","Stage3D"];
openfl_display_Stage3D.__super__ = openfl_events_EventDispatcher;
openfl_display_Stage3D.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	requestContext3D: function(context3DRenderMode) {
		if(context3DRenderMode == null) context3DRenderMode = "";
		var _g = this;
		if(openfl_display_OpenGLView.get_isSupported()) haxe_Timer.delay(function() {
			_g.context3D = new openfl_display3D_Context3D();
			_g.dispatchEvent(new openfl_events_Event("context3DCreate"));
		},1); else haxe_Timer.delay(function() {
			_g.dispatchEvent(new openfl_events_ErrorEvent("error"));
		},1);
	}
	,__class__: openfl_display_Stage3D
});
var openfl_display__$StageAlign_StageAlign_$Impl_$ = {};
$hxClasses["openfl.display._StageAlign.StageAlign_Impl_"] = openfl_display__$StageAlign_StageAlign_$Impl_$;
openfl_display__$StageAlign_StageAlign_$Impl_$.__name__ = ["openfl","display","_StageAlign","StageAlign_Impl_"];
openfl_display__$StageAlign_StageAlign_$Impl_$.fromString = function(value) {
	switch(value) {
	case "bottom":
		return 0;
	case "bottomLeft":
		return 1;
	case "bottomRight":
		return 2;
	case "left":
		return 3;
	case "right":
		return 4;
	case "top":
		return 5;
	case "topLeft":
		return 6;
	case "topRight":
		return 7;
	default:
		return null;
	}
};
openfl_display__$StageAlign_StageAlign_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "bottom";
	case 1:
		return "bottomLeft";
	case 2:
		return "bottomRight";
	case 3:
		return "left";
	case 4:
		return "right";
	case 5:
		return "top";
	case 6:
		return "topLeft";
	case 7:
		return "topRight";
	default:
		return null;
	}
};
var openfl_display__$StageDisplayState_StageDisplayState_$Impl_$ = {};
$hxClasses["openfl.display._StageDisplayState.StageDisplayState_Impl_"] = openfl_display__$StageDisplayState_StageDisplayState_$Impl_$;
openfl_display__$StageDisplayState_StageDisplayState_$Impl_$.__name__ = ["openfl","display","_StageDisplayState","StageDisplayState_Impl_"];
openfl_display__$StageDisplayState_StageDisplayState_$Impl_$.fromString = function(value) {
	switch(value) {
	case "fullScreen":
		return 0;
	case "fullScreenInteractive":
		return 1;
	case "normal":
		return 2;
	default:
		return null;
	}
};
openfl_display__$StageDisplayState_StageDisplayState_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "fullScreen";
	case 1:
		return "fullScreenInteractive";
	case 2:
		return "normal";
	default:
		return null;
	}
};
var openfl_display__$StageQuality_StageQuality_$Impl_$ = {};
$hxClasses["openfl.display._StageQuality.StageQuality_Impl_"] = openfl_display__$StageQuality_StageQuality_$Impl_$;
openfl_display__$StageQuality_StageQuality_$Impl_$.__name__ = ["openfl","display","_StageQuality","StageQuality_Impl_"];
openfl_display__$StageQuality_StageQuality_$Impl_$.fromString = function(value) {
	switch(value) {
	case "best":
		return 0;
	case "high":
		return 1;
	case "low":
		return 2;
	case "medium":
		return 3;
	default:
		return null;
	}
};
openfl_display__$StageQuality_StageQuality_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "best";
	case 1:
		return "high";
	case 2:
		return "low";
	case 3:
		return "medium";
	default:
		return null;
	}
};
var openfl_display__$StageScaleMode_StageScaleMode_$Impl_$ = {};
$hxClasses["openfl.display._StageScaleMode.StageScaleMode_Impl_"] = openfl_display__$StageScaleMode_StageScaleMode_$Impl_$;
openfl_display__$StageScaleMode_StageScaleMode_$Impl_$.__name__ = ["openfl","display","_StageScaleMode","StageScaleMode_Impl_"];
openfl_display__$StageScaleMode_StageScaleMode_$Impl_$.fromString = function(value) {
	switch(value) {
	case "exactFit":
		return 0;
	case "noBorder":
		return 1;
	case "noScale":
		return 2;
	case "showAll":
		return 3;
	default:
		return null;
	}
};
openfl_display__$StageScaleMode_StageScaleMode_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "exactFit";
	case 1:
		return "noBorder";
	case 2:
		return "noScale";
	case 3:
		return "showAll";
	default:
		return null;
	}
};
var openfl_display_Tilesheet = function(image) {
	this.__bitmap = image;
	this.__centerPoints = [];
	this.__tileRects = [];
	this.__tileUVs = [];
	this.__rectTile = new openfl_geom_Rectangle();
	this.__rectUV = new openfl_geom_Rectangle();
	this.__point = new openfl_geom_Point();
};
$hxClasses["openfl.display.Tilesheet"] = openfl_display_Tilesheet;
openfl_display_Tilesheet.__name__ = ["openfl","display","Tilesheet"];
openfl_display_Tilesheet.prototype = {
	addTileRect: function(rectangle,centerPoint) {
		this.__tileRects.push(rectangle);
		if(centerPoint == null) centerPoint = openfl_display_Tilesheet.__defaultPoint;
		this.__centerPoints.push(centerPoint);
		this.__tileUVs.push(new openfl_geom_Rectangle(rectangle.get_left() / this.__bitmap.width,rectangle.get_top() / this.__bitmap.height,rectangle.get_right() / this.__bitmap.width,rectangle.get_bottom() / this.__bitmap.height));
		return this.__tileRects.length - 1;
	}
	,drawTiles: function(graphics,tileData,smooth,flags,count) {
		if(count == null) count = -1;
		if(flags == null) flags = 0;
		if(smooth == null) smooth = false;
		graphics.drawTiles(this,tileData,smooth,flags,null,count);
	}
	,getTileCenter: function(index) {
		return this.__centerPoints[index];
	}
	,getTileRect: function(index) {
		return this.__tileRects[index];
	}
	,getTileUVs: function(index) {
		return this.__tileUVs[index];
	}
	,__class__: openfl_display_Tilesheet
};
var openfl_display__$TriangleCulling_TriangleCulling_$Impl_$ = {};
$hxClasses["openfl.display._TriangleCulling.TriangleCulling_Impl_"] = openfl_display__$TriangleCulling_TriangleCulling_$Impl_$;
openfl_display__$TriangleCulling_TriangleCulling_$Impl_$.__name__ = ["openfl","display","_TriangleCulling","TriangleCulling_Impl_"];
openfl_display__$TriangleCulling_TriangleCulling_$Impl_$.fromString = function(value) {
	switch(value) {
	case "negative":
		return 0;
	case "none":
		return 1;
	case "positive":
		return 2;
	default:
		return null;
	}
};
openfl_display__$TriangleCulling_TriangleCulling_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "negative";
	case 1:
		return "none";
	case 2:
		return "positive";
	default:
		return null;
	}
};
var openfl_display_Window = function(config) {
	lime_ui_Window.call(this,config);
};
$hxClasses["openfl.display.Window"] = openfl_display_Window;
openfl_display_Window.__name__ = ["openfl","display","Window"];
openfl_display_Window.__super__ = lime_ui_Window;
openfl_display_Window.prototype = $extend(lime_ui_Window.prototype,{
	create: function(application) {
		lime_ui_Window.prototype.create.call(this,application);
		this.stage = new openfl_display_Stage(this,Object.prototype.hasOwnProperty.call(this.config,"background")?this.config.background:16777215);
		application.addModule(this.stage);
	}
	,__class__: openfl_display_Window
});
var openfl_display3D_Context3D = function() {
	this.disposed = false;
	this.stencilCompareMode = 519;
	this.stencilRef = 0;
	this.stencilReadMask = 255;
	this._yFlip = 1;
	this.vertexBuffersCreated = [];
	this.indexBuffersCreated = [];
	this.programsCreated = [];
	this.texturesCreated = [];
	this.samplerParameters = [];
	var _g1 = 0;
	var _g = openfl_display3D_Context3D.MAX_SAMPLERS;
	while(_g1 < _g) {
		var i = _g1++;
		this.samplerParameters[i] = new openfl_display3D__$Context3D_SamplerState();
		this.samplerParameters[i].wrap = openfl_display3D_Context3DWrapMode.CLAMP;
		this.samplerParameters[i].filter = openfl_display3D_Context3DTextureFilter.LINEAR;
		this.samplerParameters[i].mipfilter = openfl_display3D_Context3DMipFilter.MIPNONE;
	}
	var stage = openfl_Lib.current.stage;
	this.ogl = new openfl_display_OpenGLView();
	this.ogl.set_scrollRect(new openfl_geom_Rectangle(0,0,stage.stageWidth,stage.stageHeight));
	this.scrollRect = this.ogl.get_scrollRect().clone();
	this.ogl.set_width(stage.stageWidth);
	this.ogl.set_height(stage.stageHeight);
	stage.addChildAt(this.ogl,0);
	lime_graphics_opengl_GL.context.pixelStorei(37440,1);
	lime_graphics_opengl_GL.context.pixelStorei(37441,1);
};
$hxClasses["openfl.display3D.Context3D"] = openfl_display3D_Context3D;
openfl_display3D_Context3D.__name__ = ["openfl","display3D","Context3D"];
openfl_display3D_Context3D.prototype = {
	clear: function(red,green,blue,alpha,depth,stencil,mask) {
		if(mask == null) mask = 17664;
		if(stencil == null) stencil = 0;
		if(depth == null) depth = 1;
		if(alpha == null) alpha = 1;
		if(blue == null) blue = 0;
		if(green == null) green = 0;
		if(red == null) red = 0;
		if(!this.drawing) {
			this.__updateBlendStatus();
			this.drawing = true;
		}
		if(this.scissorRectangle != null) lime_graphics_opengl_GL.context.disable(3089);
		lime_graphics_opengl_GL.context.clearColor(red,green,blue,alpha);
		lime_graphics_opengl_GL.context.clearDepth(depth);
		lime_graphics_opengl_GL.context.clearStencil(stencil);
		lime_graphics_opengl_GL.context.clear(mask);
		if(this.scissorRectangle != null) lime_graphics_opengl_GL.context.enable(3089);
	}
	,configureBackBuffer: function(width,height,antiAlias,enableDepthAndStencil) {
		if(enableDepthAndStencil == null) enableDepthAndStencil = true;
		this.backBufferDepthAndStencil = enableDepthAndStencil;
		this.updateDepthAndStencilState();
		this.setBackBufferViewPort(null,null,width,height);
		this.updateScissorRectangle();
	}
	,setBackBufferViewPort: function(x,y,width,height) {
		if(x == null) x = this.scrollRect.x | 0;
		if(y == null) y = this.scrollRect.y | 0;
		if(width == null) width = this.scrollRect.width | 0;
		if(height == null) height = this.scrollRect.height | 0;
		this.scrollRect.x = x;
		this.scrollRect.y = y;
		this.scrollRect.width = width;
		this.scrollRect.height = height;
		this.ogl.set_width(x + width);
		this.ogl.set_height(y + height);
		this.updateBackBufferViewPort();
	}
	,updateBackBufferViewPort: function() {
		if(!this.renderToTexture) lime_graphics_opengl_GL.context.viewport(this.scrollRect.x | 0,this.scrollRect.y | 0,this.scrollRect.width | 0,this.scrollRect.height | 0);
	}
	,updateDepthAndStencilState: function() {
		var depthAndStencil;
		if(this.renderToTexture) depthAndStencil = this.rttDepthAndStencil; else depthAndStencil = this.backBufferDepthAndStencil;
		if(depthAndStencil) {
			if(lime_app_Application.current.windows[0].config.depthBuffer) lime_graphics_opengl_GL.context.enable(2929);
			if(lime_app_Application.current.windows[0].config.stencilBuffer) lime_graphics_opengl_GL.context.enable(2960);
		} else {
			lime_graphics_opengl_GL.context.disable(2929);
			lime_graphics_opengl_GL.context.disable(2960);
		}
	}
	,createCubeTexture: function(size,format,optimizeForRenderToTexture,streamingLevels) {
		if(streamingLevels == null) streamingLevels = 0;
		var texture = new openfl_display3D_textures_CubeTexture(this,lime_graphics_opengl_GL.context.createTexture(),size);
		this.texturesCreated.push(texture);
		return texture;
	}
	,createIndexBuffer: function(numIndices,bufferUsage) {
		if(bufferUsage == null) bufferUsage = openfl_display3D_Context3DBufferUsage.STATIC_DRAW;
		var indexBuffer = new openfl_display3D_IndexBuffer3D(this,lime_graphics_opengl_GL.context.createBuffer(),numIndices,bufferUsage == openfl_display3D_Context3DBufferUsage.STATIC_DRAW?35044:35048);
		this.indexBuffersCreated.push(indexBuffer);
		return indexBuffer;
	}
	,createProgram: function() {
		var program = new openfl_display3D_Program3D(this,lime_graphics_opengl_GL.context.createProgram());
		this.programsCreated.push(program);
		return program;
	}
	,createRectangleTexture: function(width,height,format,optimizeForRenderToTexture) {
		var texture = new openfl_display3D_textures_RectangleTexture(this,lime_graphics_opengl_GL.context.createTexture(),optimizeForRenderToTexture,width,height);
		this.texturesCreated.push(texture);
		return texture;
	}
	,createTexture: function(width,height,format,optimizeForRenderToTexture,streamingLevels) {
		if(streamingLevels == null) streamingLevels = 0;
		var texture = new openfl_display3D_textures_Texture(this,lime_graphics_opengl_GL.context.createTexture(),optimizeForRenderToTexture,width,height);
		this.texturesCreated.push(texture);
		return texture;
	}
	,createVertexBuffer: function(numVertices,data32PerVertex,bufferUsage) {
		if(bufferUsage == null) bufferUsage = openfl_display3D_Context3DBufferUsage.STATIC_DRAW;
		var vertexBuffer = new openfl_display3D_VertexBuffer3D(this,lime_graphics_opengl_GL.context.createBuffer(),numVertices,data32PerVertex,bufferUsage == openfl_display3D_Context3DBufferUsage.STATIC_DRAW?35044:35048);
		this.vertexBuffersCreated.push(vertexBuffer);
		return vertexBuffer;
	}
	,__deleteTexture: function(texture) {
		if(texture.glTexture == null) return;
		HxOverrides.remove(this.texturesCreated,texture);
		lime_graphics_opengl_GL.context.deleteTexture(texture.glTexture);
		texture.glTexture = null;
	}
	,__deleteVertexBuffer: function(buffer) {
		if(buffer.glBuffer == null) return;
		HxOverrides.remove(this.vertexBuffersCreated,buffer);
		lime_graphics_opengl_GL.context.deleteBuffer(buffer.glBuffer);
		buffer.glBuffer = null;
	}
	,__deleteIndexBuffer: function(buffer) {
		if(buffer.glBuffer == null) return;
		HxOverrides.remove(this.indexBuffersCreated,buffer);
		lime_graphics_opengl_GL.context.deleteBuffer(buffer.glBuffer);
		buffer.glBuffer = null;
	}
	,__deleteProgram: function(program) {
		if(program.glProgram == null) return;
		HxOverrides.remove(this.programsCreated,program);
		lime_graphics_opengl_GL.context.deleteProgram(program.glProgram);
		program.glProgram = null;
	}
	,dispose: function() {
		var _g = 0;
		var _g1 = this.vertexBuffersCreated;
		while(_g < _g1.length) {
			var vertexBuffer = _g1[_g];
			++_g;
			vertexBuffer.dispose();
		}
		this.vertexBuffersCreated = null;
		var _g2 = 0;
		var _g11 = this.indexBuffersCreated;
		while(_g2 < _g11.length) {
			var indexBuffer = _g11[_g2];
			++_g2;
			indexBuffer.dispose();
		}
		this.indexBuffersCreated = null;
		var _g3 = 0;
		var _g12 = this.programsCreated;
		while(_g3 < _g12.length) {
			var program = _g12[_g3];
			++_g3;
			program.dispose();
		}
		this.programsCreated = null;
		this.samplerParameters = null;
		var _g4 = 0;
		var _g13 = this.texturesCreated;
		while(_g4 < _g13.length) {
			var texture = _g13[_g4];
			++_g4;
			texture.dispose();
		}
		this.texturesCreated = null;
		if(this.framebuffer != null) {
			lime_graphics_opengl_GL.context.deleteFramebuffer(this.framebuffer);
			this.framebuffer = null;
		}
		if(this.renderbuffer != null) {
			lime_graphics_opengl_GL.context.deleteRenderbuffer(this.renderbuffer);
			this.renderbuffer = null;
		}
		this.disposed = true;
	}
	,drawToBitmapData: function(destination) {
	}
	,drawTriangles: function(indexBuffer,firstIndex,numTriangles) {
		if(numTriangles == null) numTriangles = -1;
		if(firstIndex == null) firstIndex = 0;
		var location = lime_graphics_opengl_GL.context.getUniformLocation(this.currentProgram.glProgram,"yflip");
		lime_graphics_opengl_GL.context.uniform1f(location,this._yFlip);
		if(!this.drawing) throw new js__$Boot_HaxeError(new openfl_errors_Error("Need to clear before drawing if the buffer has not been cleared since the last present() call."));
		var numIndices;
		if(numTriangles == -1) numIndices = indexBuffer.numIndices; else numIndices = numTriangles * 3;
		var byteOffset = firstIndex * 2;
		lime_graphics_opengl_GL.context.bindBuffer(34963,indexBuffer.glBuffer);
		lime_graphics_opengl_GL.context.drawElements(4,numIndices,5123,byteOffset);
	}
	,present: function() {
		this.drawing = false;
		lime_graphics_opengl_GL.context.useProgram(null);
		lime_graphics_opengl_GL.context.bindBuffer(34962,null);
		lime_graphics_opengl_GL.context.disable(2884);
		if(this.framebuffer != null) lime_graphics_opengl_GL.context.bindFramebuffer(36160,null);
		if(this.renderbuffer != null) lime_graphics_opengl_GL.context.bindRenderbuffer(36161,null);
	}
	,removeRenderMethod: function(func) {
		this.ogl.set_render(null);
	}
	,setBlendFactors: function(sourceFactor,destinationFactor) {
		this.blendEnabled = true;
		this.blendSourceFactor = sourceFactor;
		this.blendDestinationFactor = destinationFactor;
		this.__updateBlendStatus();
	}
	,setColorMask: function(red,green,blue,alpha) {
		lime_graphics_opengl_GL.context.colorMask(red,green,blue,alpha);
	}
	,setCulling: function(triangleFaceToCull) {
		if(triangleFaceToCull == 0) lime_graphics_opengl_GL.context.disable(2884); else {
			lime_graphics_opengl_GL.context.enable(2884);
			switch(triangleFaceToCull) {
			case 1029:
				lime_graphics_opengl_GL.context.cullFace(1029);
				break;
			case 1028:
				lime_graphics_opengl_GL.context.cullFace(1028);
				break;
			case 1032:
				lime_graphics_opengl_GL.context.cullFace(1032);
				break;
			default:
				throw new js__$Boot_HaxeError("Unknown Context3DTriangleFace type.");
			}
		}
		switch(triangleFaceToCull) {
		case 1029:
			this._yFlip = -1;
			break;
		case 1028:
			this._yFlip = 1;
			break;
		case 1032:
			this._yFlip = 1;
			break;
		case 0:
			this._yFlip = 1;
			break;
		default:
			throw new js__$Boot_HaxeError("Unknown culling mode " + triangleFaceToCull + ".");
		}
	}
	,setDepthTest: function(depthMask,passCompareMode) {
		lime_graphics_opengl_GL.context.depthFunc(passCompareMode);
		lime_graphics_opengl_GL.context.depthMask(depthMask);
	}
	,setGLSLProgramConstantsFromByteArray: function(locationName,data,byteArrayOffset) {
		if(byteArrayOffset == null) byteArrayOffset = 0;
		data.position = byteArrayOffset;
		var location = lime_graphics_opengl_GL.context.getUniformLocation(this.currentProgram.glProgram,locationName);
		lime_graphics_opengl_GL.uniform4f(location,data.readFloat(),data.readFloat(),data.readFloat(),data.readFloat());
	}
	,setGLSLProgramConstantsFromMatrix: function(locationName,matrix,transposedMatrix) {
		if(transposedMatrix == null) transposedMatrix = false;
		var location = lime_graphics_opengl_GL.context.getUniformLocation(this.currentProgram.glProgram,locationName);
		lime_graphics_opengl_GL.uniformMatrix4fv(location,!transposedMatrix,(function($this) {
			var $r;
			var array;
			{
				var this2 = matrix.rawData;
				var value = [];
				var _g1 = 0;
				var _g = this2.data.length;
				while(_g1 < _g) {
					var i = _g1++;
					value.push(this2.data[i]);
				}
				array = value;
			}
			var this1;
			if(array != null) this1 = new Float32Array(array); else this1 = null;
			$r = this1;
			return $r;
		}(this)));
	}
	,setGLSLProgramConstantsFromVector4: function(locationName,data,startIndex) {
		if(startIndex == null) startIndex = 0;
		var location = lime_graphics_opengl_GL.context.getUniformLocation(this.currentProgram.glProgram,locationName);
		lime_graphics_opengl_GL.context.uniform4f(location,data[startIndex],data[startIndex + 1],data[startIndex + 2],data[startIndex + 3]);
	}
	,setGLSLTextureAt: function(locationName,texture,textureIndex) {
		switch(textureIndex) {
		case 0:
			lime_graphics_opengl_GL.context.activeTexture(33984);
			break;
		case 1:
			lime_graphics_opengl_GL.context.activeTexture(33985);
			break;
		case 2:
			lime_graphics_opengl_GL.context.activeTexture(33986);
			break;
		case 3:
			lime_graphics_opengl_GL.context.activeTexture(33987);
			break;
		case 4:
			lime_graphics_opengl_GL.context.activeTexture(33988);
			break;
		case 5:
			lime_graphics_opengl_GL.context.activeTexture(33989);
			break;
		case 6:
			lime_graphics_opengl_GL.context.activeTexture(33990);
			break;
		case 7:
			lime_graphics_opengl_GL.context.activeTexture(33991);
			break;
		default:
			throw new js__$Boot_HaxeError("Does not support texture8 or more");
		}
		if(texture == null) {
			lime_graphics_opengl_GL.context.bindTexture(3553,null);
			lime_graphics_opengl_GL.context.bindTexture(34067,null);
			return;
		}
		var location = lime_graphics_opengl_GL.context.getUniformLocation(this.currentProgram.glProgram,locationName);
		if(js_Boot.__instanceof(texture,openfl_display3D_textures_Texture)) {
			lime_graphics_opengl_GL.bindTexture(3553,(js_Boot.__cast(texture , openfl_display3D_textures_Texture)).glTexture);
			lime_graphics_opengl_GL.context.uniform1i(location,textureIndex);
		} else if(js_Boot.__instanceof(texture,openfl_display3D_textures_RectangleTexture)) {
			lime_graphics_opengl_GL.bindTexture(3553,(js_Boot.__cast(texture , openfl_display3D_textures_RectangleTexture)).glTexture);
			lime_graphics_opengl_GL.context.uniform1i(location,textureIndex);
		} else if(js_Boot.__instanceof(texture,openfl_display3D_textures_CubeTexture)) {
			lime_graphics_opengl_GL.bindTexture(34067,(js_Boot.__cast(texture , openfl_display3D_textures_CubeTexture)).glTexture);
			lime_graphics_opengl_GL.context.uniform1i(location,textureIndex);
		} else throw new js__$Boot_HaxeError("Texture of type " + Type.getClassName(texture == null?null:js_Boot.getClass(texture)) + " not supported yet");
		var parameters = this.samplerParameters[textureIndex];
		if(parameters != null) this.setTextureParameters(texture,parameters.wrap,parameters.filter,parameters.mipfilter); else this.setTextureParameters(texture,openfl_display3D_Context3DWrapMode.CLAMP,openfl_display3D_Context3DTextureFilter.NEAREST,openfl_display3D_Context3DMipFilter.MIPNONE);
	}
	,setGLSLVertexBufferAt: function(locationName,buffer,bufferOffset,format) {
		if(bufferOffset == null) bufferOffset = 0;
		var location;
		if(this.currentProgram != null && this.currentProgram.glProgram != null) location = lime_graphics_opengl_GL.context.getAttribLocation(this.currentProgram.glProgram,locationName); else location = -1;
		if(location == -1) return;
		if(buffer == null) {
			if(location > -1) lime_graphics_opengl_GL.context.disableVertexAttribArray(location);
			return;
		}
		lime_graphics_opengl_GL.context.bindBuffer(34962,buffer.glBuffer);
		var dimension = 4;
		var type = 5126;
		var numBytes = 4;
		if(format == openfl_display3D_Context3DVertexBufferFormat.BYTES_4) {
			dimension = 4;
			type = 5126;
			numBytes = 4;
		} else if(format == openfl_display3D_Context3DVertexBufferFormat.FLOAT_1) {
			dimension = 1;
			type = 5126;
			numBytes = 4;
		} else if(format == openfl_display3D_Context3DVertexBufferFormat.FLOAT_2) {
			dimension = 2;
			type = 5126;
			numBytes = 4;
		} else if(format == openfl_display3D_Context3DVertexBufferFormat.FLOAT_3) {
			dimension = 3;
			type = 5126;
			numBytes = 4;
		} else if(format == openfl_display3D_Context3DVertexBufferFormat.FLOAT_4) {
			dimension = 4;
			type = 5126;
			numBytes = 4;
		} else throw new js__$Boot_HaxeError("Buffer format " + Std.string(format) + " is not supported");
		lime_graphics_opengl_GL.context.enableVertexAttribArray(location);
		lime_graphics_opengl_GL.context.vertexAttribPointer(location,dimension,type,false,buffer.data32PerVertex * numBytes,bufferOffset * numBytes);
	}
	,setProgram: function(program3D) {
		var glProgram = null;
		if(program3D != null) glProgram = program3D.glProgram;
		lime_graphics_opengl_GL.context.useProgram(glProgram);
		this.currentProgram = program3D;
	}
	,setProgramConstantsFromByteArray: function(programType,firstRegister,numRegisters,data,byteArrayOffset) {
		data.position = byteArrayOffset;
		var _g = 0;
		while(_g < numRegisters) {
			var i = _g++;
			var locationName = this.__getUniformLocationNameFromAgalRegisterIndex(programType,firstRegister + i);
			this.setGLSLProgramConstantsFromByteArray(locationName,data);
		}
	}
	,setProgramConstantsFromMatrix: function(programType,firstRegister,matrix,transposedMatrix) {
		if(transposedMatrix == null) transposedMatrix = false;
		var d = matrix.rawData;
		if(transposedMatrix) {
			this.setProgramConstantsFromVector(programType,firstRegister,[d.data[0],d.data[4],d.data[8],d.data[12]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 1,[d.data[1],d.data[5],d.data[9],d.data[13]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 2,[d.data[2],d.data[6],d.data[10],d.data[14]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 3,[d.data[3],d.data[7],d.data[11],d.data[15]],1);
		} else {
			this.setProgramConstantsFromVector(programType,firstRegister,[d.data[0],d.data[1],d.data[2],d.data[3]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 1,[d.data[4],d.data[5],d.data[6],d.data[7]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 2,[d.data[8],d.data[9],d.data[10],d.data[11]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 3,[d.data[12],d.data[13],d.data[14],d.data[15]],1);
		}
	}
	,setProgramConstantsFromVector: function(programType,firstRegister,data,numRegisters) {
		if(numRegisters == null) numRegisters = 1;
		var _g = 0;
		while(_g < numRegisters) {
			var i = _g++;
			var currentIndex = i * 4;
			var locationName = this.__getUniformLocationNameFromAgalRegisterIndex(programType,firstRegister + i);
			this.setGLSLProgramConstantsFromVector4(locationName,data,currentIndex);
		}
	}
	,setRenderMethod: function(func) {
		this.ogl.set_render(function(rect) {
			func(null);
		});
	}
	,setRenderToBackBuffer: function() {
		lime_graphics_opengl_GL.context.disable(2929);
		lime_graphics_opengl_GL.context.disable(2960);
		lime_graphics_opengl_GL.context.disable(3089);
		lime_graphics_opengl_GL.context.bindFramebuffer(36160,null);
		if(this.framebuffer != null) lime_graphics_opengl_GL.context.bindFramebuffer(36160,null);
		if(this.renderbuffer != null) lime_graphics_opengl_GL.context.bindRenderbuffer(36161,null);
		this.renderToTexture = false;
		this.updateBackBufferViewPort();
		this.updateScissorRectangle();
		this.updateDepthAndStencilState();
	}
	,setRenderToTexture: function(texture,enableDepthAndStencil,antiAlias,surfaceSelector) {
		if(surfaceSelector == null) surfaceSelector = 0;
		if(antiAlias == null) antiAlias = 0;
		if(enableDepthAndStencil == null) enableDepthAndStencil = false;
		if(this.framebuffer == null) this.framebuffer = lime_graphics_opengl_GL.context.createFramebuffer();
		lime_graphics_opengl_GL.context.bindFramebuffer(36160,this.framebuffer);
		if(this.renderbuffer == null) this.renderbuffer = lime_graphics_opengl_GL.context.createRenderbuffer();
		lime_graphics_opengl_GL.context.bindRenderbuffer(36161,this.renderbuffer);
		if(enableDepthAndStencil) lime_graphics_opengl_GL.context.renderbufferStorage(36161,34041,texture.width,texture.height);
		lime_graphics_opengl_GL.context.framebufferTexture2D(36160,36064,3553,texture.glTexture,0);
		lime_graphics_opengl_GL.context.renderbufferStorage(36161,34041,texture.width,texture.height);
		lime_graphics_opengl_GL.context.framebufferRenderbuffer(36160,33306,36161,this.renderbuffer);
		if(enableDepthAndStencil) {
			lime_graphics_opengl_GL.context.enable(2929);
			lime_graphics_opengl_GL.context.enable(2960);
		}
		lime_graphics_opengl_GL.context.bindTexture(3553,texture.glTexture);
		lime_graphics_opengl_GL.context.texImage2D(3553,0,6408,texture.width,texture.height,0,6408,5121,null);
		lime_graphics_opengl_GL.context.texParameteri(3553,10240,9729);
		lime_graphics_opengl_GL.context.texParameteri(3553,10241,9985);
		lime_graphics_opengl_GL.context.viewport(0,0,texture.width,texture.height);
		this.renderToTexture = true;
		this.rttDepthAndStencil = enableDepthAndStencil;
		this.rttWidth = texture.width;
		this.rttHeight = texture.height;
		this.updateScissorRectangle();
		this.updateDepthAndStencilState();
	}
	,setSamplerStateAt: function(sampler,wrap,filter,mipfilter) {
		if(0 <= sampler && sampler < openfl_display3D_Context3D.MAX_SAMPLERS) {
			this.samplerParameters[sampler].wrap = wrap;
			this.samplerParameters[sampler].filter = filter;
			this.samplerParameters[sampler].mipfilter = mipfilter;
		} else throw new js__$Boot_HaxeError("Sampler is out of bounds.");
	}
	,setScissorRectangle: function(rectangle) {
		this.scissorRectangle = rectangle;
		if(rectangle == null) {
			lime_graphics_opengl_GL.context.disable(3089);
			return;
		}
		lime_graphics_opengl_GL.context.enable(3089);
		this.updateScissorRectangle();
	}
	,updateScissorRectangle: function() {
		if(this.scissorRectangle == null) return;
		var height;
		if(this.renderToTexture) height = this.rttHeight; else height = this.scrollRect.height | 0;
		lime_graphics_opengl_GL.context.scissor(this.scissorRectangle.x | 0,height - (this.scissorRectangle.y | 0) - (this.scissorRectangle.height | 0) | 0,this.scissorRectangle.width | 0,this.scissorRectangle.height | 0);
	}
	,setStencilActions: function(triangleFace,compareMode,actionOnBothPass,actionOnDepthFail,actionOnDepthPassStencilFail) {
		this.stencilCompareMode = compareMode;
		lime_graphics_opengl_GL.context.stencilOp(actionOnBothPass,actionOnDepthFail,actionOnDepthPassStencilFail);
		lime_graphics_opengl_GL.context.stencilFunc(this.stencilCompareMode,this.stencilRef,this.stencilReadMask);
	}
	,setStencilReferenceValue: function(referenceValue,readMask,writeMask) {
		if(writeMask == null) writeMask = 255;
		if(readMask == null) readMask = 255;
		this.stencilReadMask = readMask;
		this.stencilRef = referenceValue;
		lime_graphics_opengl_GL.context.stencilFunc(this.stencilCompareMode,this.stencilRef,this.stencilReadMask);
		lime_graphics_opengl_GL.context.stencilMask(writeMask);
	}
	,setTextureAt: function(sampler,texture) {
		var locationName = "fs" + sampler;
		this.setGLSLTextureAt(locationName,texture,sampler);
	}
	,setTextureParameters: function(texture,wrap,filter,mipfilter) {
		if(!openfl_display3D_Context3D.anisotropySupportTested) {
			var ext = lime_graphics_opengl_GL.context.getExtension("EXT_texture_filter_anisotropic");
			if(ext == null || Reflect.field(ext,"MAX_TEXTURE_MAX_ANISOTROPY_EXT") == null) ext = lime_graphics_opengl_GL.context.getExtension("MOZ_EXT_texture_filter_anisotropic");
			if(ext == null || Reflect.field(ext,"MAX_TEXTURE_MAX_ANISOTROPY_EXT") == null) ext = lime_graphics_opengl_GL.context.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
			openfl_display3D_Context3D.supportsAnisotropy = ext != null;
			if(openfl_display3D_Context3D.supportsAnisotropy) {
				openfl_display3D_Context3D.maxSupportedAnisotropy = lime_graphics_opengl_GL.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
				lime_graphics_opengl_GL.context.texParameteri(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,openfl_display3D_Context3D.maxSupportedAnisotropy);
			}
			openfl_display3D_Context3D.anisotropySupportTested = true;
		}
		if(js_Boot.__instanceof(texture,openfl_display3D_textures_Texture)) {
			switch(wrap[1]) {
			case 0:
				lime_graphics_opengl_GL.context.texParameteri(3553,10242,33071);
				lime_graphics_opengl_GL.context.texParameteri(3553,10243,33071);
				break;
			case 1:
				lime_graphics_opengl_GL.context.texParameteri(3553,10242,10497);
				lime_graphics_opengl_GL.context.texParameteri(3553,10243,10497);
				break;
			}
			switch(filter[1]) {
			case 4:
				lime_graphics_opengl_GL.context.texParameteri(3553,10240,9729);
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.context.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,1);
				break;
			case 5:
				lime_graphics_opengl_GL.context.texParameteri(3553,10240,9728);
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.context.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,1);
				break;
			case 0:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(2,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):2);
				break;
			case 1:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(4,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):4);
				break;
			case 2:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(8,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):8);
				break;
			case 3:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(16,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):16);
				break;
			}
			switch(mipfilter[1]) {
			case 0:
				lime_graphics_opengl_GL.context.texParameteri(3553,10241,9987);
				break;
			case 1:
				lime_graphics_opengl_GL.context.texParameteri(3553,10241,9984);
				break;
			case 2:
				lime_graphics_opengl_GL.context.texParameteri(3553,10241,filter == openfl_display3D_Context3DTextureFilter.NEAREST?9728:9729);
				break;
			}
			var tex = texture;
			if(mipfilter != openfl_display3D_Context3DMipFilter.MIPNONE && !tex.mipmapsGenerated) {
				lime_graphics_opengl_GL.context.generateMipmap(3553);
				tex.mipmapsGenerated = true;
			}
		} else if(js_Boot.__instanceof(texture,openfl_display3D_textures_RectangleTexture)) {
			lime_graphics_opengl_GL.context.texParameteri(3553,10242,33071);
			lime_graphics_opengl_GL.context.texParameteri(3553,10243,33071);
			switch(filter[1]) {
			case 4:
				lime_graphics_opengl_GL.context.texParameteri(3553,10240,9729);
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.context.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,1);
				break;
			case 5:
				lime_graphics_opengl_GL.context.texParameteri(3553,10240,9728);
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.context.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,1);
				break;
			case 0:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(2,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):2);
				break;
			case 1:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(4,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):4);
				break;
			case 2:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(8,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):8);
				break;
			case 3:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(16,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):16);
				break;
			}
			lime_graphics_opengl_GL.context.texParameteri(3553,10241,filter == openfl_display3D_Context3DTextureFilter.NEAREST?9728:9729);
		} else if(js_Boot.__instanceof(texture,openfl_display3D_textures_CubeTexture)) {
			switch(wrap[1]) {
			case 0:
				lime_graphics_opengl_GL.context.texParameteri(34067,10242,33071);
				lime_graphics_opengl_GL.context.texParameteri(34067,10243,33071);
				break;
			case 1:
				lime_graphics_opengl_GL.context.texParameteri(34067,10242,10497);
				lime_graphics_opengl_GL.context.texParameteri(34067,10243,10497);
				break;
			}
			switch(filter[1]) {
			case 4:
				lime_graphics_opengl_GL.context.texParameteri(34067,10240,9729);
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.context.texParameterf(34067,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,1);
				break;
			case 5:
				lime_graphics_opengl_GL.context.texParameteri(34067,10240,9728);
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.context.texParameterf(34067,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,1);
				break;
			case 0:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(34067,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(2,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):2);
				break;
			case 1:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(34067,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(4,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):4);
				break;
			case 2:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(34067,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(8,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):8);
				break;
			case 3:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(34067,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(16,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):16);
				break;
			}
			switch(mipfilter[1]) {
			case 0:
				lime_graphics_opengl_GL.context.texParameteri(34067,10241,9987);
				break;
			case 1:
				lime_graphics_opengl_GL.context.texParameteri(34067,10241,9984);
				break;
			case 2:
				lime_graphics_opengl_GL.context.texParameteri(34067,10241,filter == openfl_display3D_Context3DTextureFilter.NEAREST?9728:9729);
				break;
			}
			var cubetex = texture;
			if(mipfilter != openfl_display3D_Context3DMipFilter.MIPNONE && !cubetex.mipmapsGenerated) {
				lime_graphics_opengl_GL.context.generateMipmap(34067);
				cubetex.mipmapsGenerated = true;
			}
		} else throw new js__$Boot_HaxeError("Texture of type " + Type.getClassName(texture == null?null:js_Boot.getClass(texture)) + " not supported yet");
	}
	,setVertexBufferAt: function(index,buffer,bufferOffset,format) {
		if(bufferOffset == null) bufferOffset = 0;
		var locationName = "va" + index;
		this.setGLSLVertexBufferAt(locationName,buffer,bufferOffset,format);
	}
	,__getUniformLocationNameFromAgalRegisterIndex: function(programType,firstRegister) {
		if(programType == openfl_display3D_Context3DProgramType.VERTEX) return "vc" + firstRegister; else if(programType == openfl_display3D_Context3DProgramType.FRAGMENT) return "fc" + firstRegister;
		throw new js__$Boot_HaxeError("Program Type " + Std.string(programType) + " not supported");
	}
	,__updateBlendStatus: function() {
		if(this.blendEnabled) {
			lime_graphics_opengl_GL.context.enable(3042);
			lime_graphics_opengl_GL.context.blendEquation(32774);
			lime_graphics_opengl_GL.context.blendFunc(this.blendSourceFactor,this.blendDestinationFactor);
		} else lime_graphics_opengl_GL.context.disable(3042);
	}
	,__class__: openfl_display3D_Context3D
};
var openfl_display3D__$Context3D_SamplerState = function() {
};
$hxClasses["openfl.display3D._Context3D.SamplerState"] = openfl_display3D__$Context3D_SamplerState;
openfl_display3D__$Context3D_SamplerState.__name__ = ["openfl","display3D","_Context3D","SamplerState"];
openfl_display3D__$Context3D_SamplerState.prototype = {
	__class__: openfl_display3D__$Context3D_SamplerState
};
var openfl_display3D_Context3DBufferUsage = $hxClasses["openfl.display3D.Context3DBufferUsage"] = { __ename__ : ["openfl","display3D","Context3DBufferUsage"], __constructs__ : ["STATIC_DRAW","DYNAMIC_DRAW"] };
openfl_display3D_Context3DBufferUsage.STATIC_DRAW = ["STATIC_DRAW",0];
openfl_display3D_Context3DBufferUsage.STATIC_DRAW.toString = $estr;
openfl_display3D_Context3DBufferUsage.STATIC_DRAW.__enum__ = openfl_display3D_Context3DBufferUsage;
openfl_display3D_Context3DBufferUsage.DYNAMIC_DRAW = ["DYNAMIC_DRAW",1];
openfl_display3D_Context3DBufferUsage.DYNAMIC_DRAW.toString = $estr;
openfl_display3D_Context3DBufferUsage.DYNAMIC_DRAW.__enum__ = openfl_display3D_Context3DBufferUsage;
var openfl_display3D_Context3DClearMask = function() { };
$hxClasses["openfl.display3D.Context3DClearMask"] = openfl_display3D_Context3DClearMask;
openfl_display3D_Context3DClearMask.__name__ = ["openfl","display3D","Context3DClearMask"];
var openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$ = {};
$hxClasses["openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_"] = openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.__name__ = ["openfl","display3D","_Context3DCompareMode","Context3DCompareMode_Impl_"];
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$._new = function(a) {
	return a;
};
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.fromInt = function(s) {
	return s;
};
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.toInt = function(this1) {
	return this1;
};
var openfl_display3D_Context3DMipFilter = $hxClasses["openfl.display3D.Context3DMipFilter"] = { __ename__ : ["openfl","display3D","Context3DMipFilter"], __constructs__ : ["MIPLINEAR","MIPNEAREST","MIPNONE"] };
openfl_display3D_Context3DMipFilter.MIPLINEAR = ["MIPLINEAR",0];
openfl_display3D_Context3DMipFilter.MIPLINEAR.toString = $estr;
openfl_display3D_Context3DMipFilter.MIPLINEAR.__enum__ = openfl_display3D_Context3DMipFilter;
openfl_display3D_Context3DMipFilter.MIPNEAREST = ["MIPNEAREST",1];
openfl_display3D_Context3DMipFilter.MIPNEAREST.toString = $estr;
openfl_display3D_Context3DMipFilter.MIPNEAREST.__enum__ = openfl_display3D_Context3DMipFilter;
openfl_display3D_Context3DMipFilter.MIPNONE = ["MIPNONE",2];
openfl_display3D_Context3DMipFilter.MIPNONE.toString = $estr;
openfl_display3D_Context3DMipFilter.MIPNONE.__enum__ = openfl_display3D_Context3DMipFilter;
var openfl_display3D_Context3DProgramType = $hxClasses["openfl.display3D.Context3DProgramType"] = { __ename__ : ["openfl","display3D","Context3DProgramType"], __constructs__ : ["VERTEX","FRAGMENT"] };
openfl_display3D_Context3DProgramType.VERTEX = ["VERTEX",0];
openfl_display3D_Context3DProgramType.VERTEX.toString = $estr;
openfl_display3D_Context3DProgramType.VERTEX.__enum__ = openfl_display3D_Context3DProgramType;
openfl_display3D_Context3DProgramType.FRAGMENT = ["FRAGMENT",1];
openfl_display3D_Context3DProgramType.FRAGMENT.toString = $estr;
openfl_display3D_Context3DProgramType.FRAGMENT.__enum__ = openfl_display3D_Context3DProgramType;
var openfl_display3D_Context3DTextureFilter = $hxClasses["openfl.display3D.Context3DTextureFilter"] = { __ename__ : ["openfl","display3D","Context3DTextureFilter"], __constructs__ : ["ANISOTROPIC2X","ANISOTROPIC4X","ANISOTROPIC8X","ANISOTROPIC16X","LINEAR","NEAREST"] };
openfl_display3D_Context3DTextureFilter.ANISOTROPIC2X = ["ANISOTROPIC2X",0];
openfl_display3D_Context3DTextureFilter.ANISOTROPIC2X.toString = $estr;
openfl_display3D_Context3DTextureFilter.ANISOTROPIC2X.__enum__ = openfl_display3D_Context3DTextureFilter;
openfl_display3D_Context3DTextureFilter.ANISOTROPIC4X = ["ANISOTROPIC4X",1];
openfl_display3D_Context3DTextureFilter.ANISOTROPIC4X.toString = $estr;
openfl_display3D_Context3DTextureFilter.ANISOTROPIC4X.__enum__ = openfl_display3D_Context3DTextureFilter;
openfl_display3D_Context3DTextureFilter.ANISOTROPIC8X = ["ANISOTROPIC8X",2];
openfl_display3D_Context3DTextureFilter.ANISOTROPIC8X.toString = $estr;
openfl_display3D_Context3DTextureFilter.ANISOTROPIC8X.__enum__ = openfl_display3D_Context3DTextureFilter;
openfl_display3D_Context3DTextureFilter.ANISOTROPIC16X = ["ANISOTROPIC16X",3];
openfl_display3D_Context3DTextureFilter.ANISOTROPIC16X.toString = $estr;
openfl_display3D_Context3DTextureFilter.ANISOTROPIC16X.__enum__ = openfl_display3D_Context3DTextureFilter;
openfl_display3D_Context3DTextureFilter.LINEAR = ["LINEAR",4];
openfl_display3D_Context3DTextureFilter.LINEAR.toString = $estr;
openfl_display3D_Context3DTextureFilter.LINEAR.__enum__ = openfl_display3D_Context3DTextureFilter;
openfl_display3D_Context3DTextureFilter.NEAREST = ["NEAREST",5];
openfl_display3D_Context3DTextureFilter.NEAREST.toString = $estr;
openfl_display3D_Context3DTextureFilter.NEAREST.__enum__ = openfl_display3D_Context3DTextureFilter;
var openfl_display3D_Context3DTextureFormat = $hxClasses["openfl.display3D.Context3DTextureFormat"] = { __ename__ : ["openfl","display3D","Context3DTextureFormat"], __constructs__ : ["BGRA","COMPRESSED","COMPRESSED_ALPHA"] };
openfl_display3D_Context3DTextureFormat.BGRA = ["BGRA",0];
openfl_display3D_Context3DTextureFormat.BGRA.toString = $estr;
openfl_display3D_Context3DTextureFormat.BGRA.__enum__ = openfl_display3D_Context3DTextureFormat;
openfl_display3D_Context3DTextureFormat.COMPRESSED = ["COMPRESSED",1];
openfl_display3D_Context3DTextureFormat.COMPRESSED.toString = $estr;
openfl_display3D_Context3DTextureFormat.COMPRESSED.__enum__ = openfl_display3D_Context3DTextureFormat;
openfl_display3D_Context3DTextureFormat.COMPRESSED_ALPHA = ["COMPRESSED_ALPHA",2];
openfl_display3D_Context3DTextureFormat.COMPRESSED_ALPHA.toString = $estr;
openfl_display3D_Context3DTextureFormat.COMPRESSED_ALPHA.__enum__ = openfl_display3D_Context3DTextureFormat;
var openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$ = {};
$hxClasses["openfl.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_"] = openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$;
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$.__name__ = ["openfl","display3D","_Context3DTriangleFace","Context3DTriangleFace_Impl_"];
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$._new = function(a) {
	return a;
};
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$.fromInt = function(s) {
	return s;
};
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$.toInt = function(this1) {
	return this1;
};
var openfl_display3D_Context3DVertexBufferFormat = $hxClasses["openfl.display3D.Context3DVertexBufferFormat"] = { __ename__ : ["openfl","display3D","Context3DVertexBufferFormat"], __constructs__ : ["BYTES_4","FLOAT_1","FLOAT_2","FLOAT_3","FLOAT_4"] };
openfl_display3D_Context3DVertexBufferFormat.BYTES_4 = ["BYTES_4",0];
openfl_display3D_Context3DVertexBufferFormat.BYTES_4.toString = $estr;
openfl_display3D_Context3DVertexBufferFormat.BYTES_4.__enum__ = openfl_display3D_Context3DVertexBufferFormat;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_1 = ["FLOAT_1",1];
openfl_display3D_Context3DVertexBufferFormat.FLOAT_1.toString = $estr;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_1.__enum__ = openfl_display3D_Context3DVertexBufferFormat;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_2 = ["FLOAT_2",2];
openfl_display3D_Context3DVertexBufferFormat.FLOAT_2.toString = $estr;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_2.__enum__ = openfl_display3D_Context3DVertexBufferFormat;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_3 = ["FLOAT_3",3];
openfl_display3D_Context3DVertexBufferFormat.FLOAT_3.toString = $estr;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_3.__enum__ = openfl_display3D_Context3DVertexBufferFormat;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_4 = ["FLOAT_4",4];
openfl_display3D_Context3DVertexBufferFormat.FLOAT_4.toString = $estr;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_4.__enum__ = openfl_display3D_Context3DVertexBufferFormat;
var openfl_display3D_Context3DWrapMode = $hxClasses["openfl.display3D.Context3DWrapMode"] = { __ename__ : ["openfl","display3D","Context3DWrapMode"], __constructs__ : ["CLAMP","REPEAT"] };
openfl_display3D_Context3DWrapMode.CLAMP = ["CLAMP",0];
openfl_display3D_Context3DWrapMode.CLAMP.toString = $estr;
openfl_display3D_Context3DWrapMode.CLAMP.__enum__ = openfl_display3D_Context3DWrapMode;
openfl_display3D_Context3DWrapMode.REPEAT = ["REPEAT",1];
openfl_display3D_Context3DWrapMode.REPEAT.toString = $estr;
openfl_display3D_Context3DWrapMode.REPEAT.__enum__ = openfl_display3D_Context3DWrapMode;
var openfl_display3D_IndexBuffer3D = function(context,glBuffer,numIndices,bufferUsage) {
	this.context = context;
	this.glBuffer = glBuffer;
	this.numIndices = numIndices;
	this.bufferUsage = bufferUsage;
};
$hxClasses["openfl.display3D.IndexBuffer3D"] = openfl_display3D_IndexBuffer3D;
openfl_display3D_IndexBuffer3D.__name__ = ["openfl","display3D","IndexBuffer3D"];
openfl_display3D_IndexBuffer3D.prototype = {
	dispose: function() {
		this.context.__deleteIndexBuffer(this);
	}
	,uploadFromByteArray: function(byteArray,byteArrayOffset,startOffset,count) {
		var bytesPerIndex = 2;
		lime_graphics_opengl_GL.context.bindBuffer(34963,this.glBuffer);
		var length = count * bytesPerIndex;
		var offset = byteArrayOffset + startOffset * bytesPerIndex;
		var indices;
		var this1;
		if(length != null) this1 = new Int16Array(length); else this1 = null;
		indices = this1;
		byteArray.position = offset;
		var i = 0;
		while(byteArray.position < length + offset) {
			var val = byteArray.readUnsignedByte();
			indices[i] = val;
			i++;
		}
		lime_graphics_opengl_GL.context.bufferData(34963,indices,this.bufferUsage);
	}
	,uploadFromVector: function(data,startOffset,count) {
		lime_graphics_opengl_GL.context.bindBuffer(34963,this.glBuffer);
		var indices;
		var this1;
		if(count != null) this1 = new Int16Array(count); else this1 = null;
		indices = this1;
		var _g1 = startOffset;
		var _g = startOffset + count;
		while(_g1 < _g) {
			var i = _g1++;
			indices[i] = data.data[i];
		}
		lime_graphics_opengl_GL.context.bufferData(34963,indices,this.bufferUsage);
	}
	,uploadFromInt16Array: function(data) {
		lime_graphics_opengl_GL.context.bindBuffer(34963,this.glBuffer);
		lime_graphics_opengl_GL.context.bufferData(34963,data,this.bufferUsage);
	}
	,__class__: openfl_display3D_IndexBuffer3D
};
var openfl_display3D_Program3D = function(context,program) {
	this.context = context;
	this.glProgram = program;
};
$hxClasses["openfl.display3D.Program3D"] = openfl_display3D_Program3D;
openfl_display3D_Program3D.__name__ = ["openfl","display3D","Program3D"];
openfl_display3D_Program3D.prototype = {
	dispose: function() {
		this.context.__deleteProgram(this);
	}
	,upload: function(vertexShader,fragmentShader) {
		lime_graphics_opengl_GL.context.attachShader(this.glProgram,vertexShader);
		lime_graphics_opengl_GL.context.attachShader(this.glProgram,fragmentShader);
		lime_graphics_opengl_GL.context.linkProgram(this.glProgram);
		if(lime_graphics_opengl_GL.context.getProgramParameter(this.glProgram,35714) == 0) {
			var result = lime_graphics_opengl_GL.context.getProgramInfoLog(this.glProgram);
			if(result != "") throw new js__$Boot_HaxeError(result);
		}
	}
	,__class__: openfl_display3D_Program3D
};
var openfl_display3D_VertexBuffer3D = function(context,glBuffer,numVertices,data32PerVertex,bufferUsage) {
	this.context = context;
	this.glBuffer = glBuffer;
	this.numVertices = numVertices;
	this.data32PerVertex = data32PerVertex;
	this.bufferUsage = bufferUsage;
};
$hxClasses["openfl.display3D.VertexBuffer3D"] = openfl_display3D_VertexBuffer3D;
openfl_display3D_VertexBuffer3D.__name__ = ["openfl","display3D","VertexBuffer3D"];
openfl_display3D_VertexBuffer3D.prototype = {
	dispose: function() {
		this.context.__deleteVertexBuffer(this);
	}
	,uploadFromByteArray: function(byteArray,byteArrayOffset,startOffset,count) {
		var bytesPerVertex = this.data32PerVertex * 4;
		lime_graphics_opengl_GL.context.bindBuffer(34962,this.glBuffer);
		var length = count * bytesPerVertex;
		var offset = byteArrayOffset + startOffset * bytesPerVertex;
		var float32Array;
		var this1;
		if(length != null) this1 = new Float32Array(length); else this1 = null;
		float32Array = this1;
		byteArray.position = offset;
		var i = 0;
		while(byteArray.position < length + offset) {
			var val = byteArray.readUnsignedByte();
			float32Array[i] = val;
			i++;
		}
		lime_graphics_opengl_GL.context.bufferData(34962,float32Array,this.bufferUsage);
	}
	,uploadFromFloat32Array: function(data) {
		lime_graphics_opengl_GL.context.bindBuffer(34962,this.glBuffer);
		lime_graphics_opengl_GL.context.bufferData(34962,data,this.bufferUsage);
	}
	,uploadFromVector: function(data,startVertex,numVertices) {
		var bytesPerVertex = this.data32PerVertex * 4;
		lime_graphics_opengl_GL.context.bindBuffer(34962,this.glBuffer);
		var length = numVertices * this.data32PerVertex;
		var offset = startVertex;
		var float32Array;
		var this1;
		if(length != null) this1 = new Float32Array(length); else this1 = null;
		float32Array = this1;
		var _g1 = startVertex;
		var _g = startVertex + length;
		while(_g1 < _g) {
			var i = _g1++;
			float32Array[i] = data.data[i];
		}
		lime_graphics_opengl_GL.context.bufferData(34962,float32Array,this.bufferUsage);
		float32Array = null;
	}
	,__class__: openfl_display3D_VertexBuffer3D
};
var openfl_display3D_textures_TextureBase = function(context,glTexture,width,height) {
	if(height == null) height = 0;
	if(width == null) width = 0;
	openfl_events_EventDispatcher.call(this);
	this.context = context;
	this.width = width;
	this.height = height;
	this.glTexture = glTexture;
};
$hxClasses["openfl.display3D.textures.TextureBase"] = openfl_display3D_textures_TextureBase;
openfl_display3D_textures_TextureBase.__name__ = ["openfl","display3D","textures","TextureBase"];
openfl_display3D_textures_TextureBase.__super__ = openfl_events_EventDispatcher;
openfl_display3D_textures_TextureBase.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	dispose: function() {
		this.context.__deleteTexture(this);
	}
	,__class__: openfl_display3D_textures_TextureBase
});
var openfl_display3D_textures_CubeTexture = function(context,glTexture,size) {
	openfl_display3D_textures_TextureBase.call(this,context,glTexture,size,size);
	this.size = size;
	this.mipmapsGenerated = false;
	this._textures = [];
	var _g = 0;
	while(_g < 6) {
		var i = _g++;
		this._textures[i] = lime_graphics_opengl_GL.context.createTexture();
	}
};
$hxClasses["openfl.display3D.textures.CubeTexture"] = openfl_display3D_textures_CubeTexture;
openfl_display3D_textures_CubeTexture.__name__ = ["openfl","display3D","textures","CubeTexture"];
openfl_display3D_textures_CubeTexture.__super__ = openfl_display3D_textures_TextureBase;
openfl_display3D_textures_CubeTexture.prototype = $extend(openfl_display3D_textures_TextureBase.prototype,{
	glTextureAt: function(index) {
		return this._textures[index];
	}
	,uploadCompressedTextureFromByteArray: function(data,byteArrayOffset,async) {
		if(async == null) async = false;
	}
	,uploadFromBitmapData: function(bitmapData,side,miplevel) {
		if(miplevel == null) miplevel = 0;
		var source = bitmapData.image.get_data();
		lime_graphics_opengl_GL.context.bindTexture(34067,this.glTexture);
		switch(side) {
		case 0:
			lime_graphics_opengl_GL.context.texImage2D(34069,miplevel,6408,bitmapData.width,bitmapData.height,0,6408,5121,source);
			break;
		case 1:
			lime_graphics_opengl_GL.context.texImage2D(34070,miplevel,6408,bitmapData.width,bitmapData.height,0,6408,5121,source);
			break;
		case 2:
			lime_graphics_opengl_GL.context.texImage2D(34071,miplevel,6408,bitmapData.width,bitmapData.height,0,6408,5121,source);
			break;
		case 3:
			lime_graphics_opengl_GL.context.texImage2D(34072,miplevel,6408,bitmapData.width,bitmapData.height,0,6408,5121,source);
			break;
		case 4:
			lime_graphics_opengl_GL.context.texImage2D(34073,miplevel,6408,bitmapData.width,bitmapData.height,0,6408,5121,source);
			break;
		case 5:
			lime_graphics_opengl_GL.context.texImage2D(34074,miplevel,6408,bitmapData.width,bitmapData.height,0,6408,5121,source);
			break;
		default:
			throw new js__$Boot_HaxeError("unknown side type");
		}
		lime_graphics_opengl_GL.context.bindTexture(34067,null);
	}
	,uploadFromByteArray: function(data,byteArrayOffset,side,miplevel) {
		if(miplevel == null) miplevel = 0;
	}
	,__class__: openfl_display3D_textures_CubeTexture
});
var openfl_display3D_textures_RectangleTexture = function(context,glTexture,optimize,width,height) {
	this.optimizeForRenderToTexture = optimize;
	if(this.optimizeForRenderToTexture == null) this.optimizeForRenderToTexture = false;
	openfl_display3D_textures_TextureBase.call(this,context,glTexture,width,height);
};
$hxClasses["openfl.display3D.textures.RectangleTexture"] = openfl_display3D_textures_RectangleTexture;
openfl_display3D_textures_RectangleTexture.__name__ = ["openfl","display3D","textures","RectangleTexture"];
openfl_display3D_textures_RectangleTexture.__super__ = openfl_display3D_textures_TextureBase;
openfl_display3D_textures_RectangleTexture.prototype = $extend(openfl_display3D_textures_TextureBase.prototype,{
	uploadFromBitmapData: function(bitmapData,miplevel) {
		if(miplevel == null) miplevel = 0;
		var p = openfl_utils__$ByteArray_ByteArray_$Impl_$.fromArrayBuffer(bitmapData.image.get_data().buffer);
		this.width = bitmapData.width;
		this.height = bitmapData.height;
		this.uploadFromByteArray(p,0);
	}
	,uploadFromByteArray: function(data,byteArrayOffset) {
		lime_graphics_opengl_GL.context.bindTexture(3553,this.glTexture);
		if(this.optimizeForRenderToTexture) lime_graphics_opengl_GL.context.pixelStorei(37440,1);
		lime_graphics_opengl_GL.context.texParameteri(3553,10240,9728);
		lime_graphics_opengl_GL.context.texParameteri(3553,10241,9728);
		lime_graphics_opengl_GL.context.texParameteri(3553,10242,33071);
		lime_graphics_opengl_GL.context.texParameteri(3553,10243,33071);
		var source;
		var elements = openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(data);
		var this1;
		if(elements != null) this1 = new Uint8Array(elements); else this1 = null;
		source = this1;
		data.position = byteArrayOffset;
		var i = 0;
		while(data.position < openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(data)) {
			var val = data.readUnsignedByte();
			source[i] = val;
			i++;
		}
		lime_graphics_opengl_GL.context.texImage2D(3553,0,6408,this.width,this.height,0,6408,5121,source);
		lime_graphics_opengl_GL.context.bindTexture(3553,null);
	}
	,__class__: openfl_display3D_textures_RectangleTexture
});
var openfl_display3D_textures_Texture = function(context,glTexture,optimize,width,height) {
	this.optimizeForRenderToTexture = optimize;
	this.mipmapsGenerated = false;
	if(openfl_display3D_textures_Texture.internalFormat == -1) openfl_display3D_textures_Texture.internalFormat = 6408;
	if(this.optimizeForRenderToTexture == null) this.optimizeForRenderToTexture = false;
	openfl_display3D_textures_TextureBase.call(this,context,glTexture,width,height);
};
$hxClasses["openfl.display3D.textures.Texture"] = openfl_display3D_textures_Texture;
openfl_display3D_textures_Texture.__name__ = ["openfl","display3D","textures","Texture"];
openfl_display3D_textures_Texture.__super__ = openfl_display3D_textures_TextureBase;
openfl_display3D_textures_Texture.prototype = $extend(openfl_display3D_textures_TextureBase.prototype,{
	uploadCompressedTextureFromByteArray: function(data,byteArrayOffset,async) {
		if(async == null) async = false;
	}
	,uploadFromBitmapData: function(bitmapData,miplevel) {
		if(miplevel == null) miplevel = 0;
		var image = bitmapData.image;
		if(!image.get_premultiplied() && image.get_transparent()) {
			image = image.clone();
			image.set_premultiplied(true);
		}
		this.width = image.width;
		this.height = image.height;
		this.uploadFromUInt8Array(image.get_data(),miplevel);
	}
	,uploadFromByteArray: function(data,byteArrayOffset,miplevel) {
		if(miplevel == null) miplevel = 0;
		var source;
		var elements = openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(data);
		var this1;
		if(elements != null) this1 = new Uint8Array(elements); else this1 = null;
		source = this1;
		data.position = byteArrayOffset;
		var i = 0;
		while(data.position < openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(data)) {
			var val = data.readUnsignedByte();
			source[i] = val;
			i++;
		}
		this.uploadFromUInt8Array(source,miplevel);
	}
	,uploadFromUInt8Array: function(data,miplevel) {
		if(miplevel == null) miplevel = 0;
		lime_graphics_opengl_GL.context.bindTexture(3553,this.glTexture);
		if(this.optimizeForRenderToTexture) {
			lime_graphics_opengl_GL.context.pixelStorei(37440,1);
			lime_graphics_opengl_GL.context.texParameteri(3553,10240,9728);
			lime_graphics_opengl_GL.context.texParameteri(3553,10241,9728);
			lime_graphics_opengl_GL.context.texParameteri(3553,10242,33071);
			lime_graphics_opengl_GL.context.texParameteri(3553,10243,33071);
		}
		lime_graphics_opengl_GL.context.texImage2D(3553,miplevel,openfl_display3D_textures_Texture.internalFormat,this.width,this.height,0,openfl_display3D_textures_Texture.internalFormat,5121,data);
		lime_graphics_opengl_GL.context.bindTexture(3553,null);
	}
	,__class__: openfl_display3D_textures_Texture
});
var openfl_errors_Error = function(message,id) {
	if(id == null) id = 0;
	if(message == null) message = "";
	this.message = message;
	this.errorID = id;
	this.name = "Error";
};
$hxClasses["openfl.errors.Error"] = openfl_errors_Error;
openfl_errors_Error.__name__ = ["openfl","errors","Error"];
openfl_errors_Error.prototype = {
	getStackTrace: function() {
		return haxe_CallStack.toString(haxe_CallStack.exceptionStack());
	}
	,toString: function() {
		if(this.message != null) return this.message; else return "Error";
	}
	,__class__: openfl_errors_Error
};
var openfl_errors_ArgumentError = function(message) {
	if(message == null) message = "";
	openfl_errors_Error.call(this,message);
	this.name = "ArgumentError";
};
$hxClasses["openfl.errors.ArgumentError"] = openfl_errors_ArgumentError;
openfl_errors_ArgumentError.__name__ = ["openfl","errors","ArgumentError"];
openfl_errors_ArgumentError.__super__ = openfl_errors_Error;
openfl_errors_ArgumentError.prototype = $extend(openfl_errors_Error.prototype,{
	__class__: openfl_errors_ArgumentError
});
var openfl_errors_IOError = function(message) {
	if(message == null) message = "";
	openfl_errors_Error.call(this,message);
	this.name = "IOError";
};
$hxClasses["openfl.errors.IOError"] = openfl_errors_IOError;
openfl_errors_IOError.__name__ = ["openfl","errors","IOError"];
openfl_errors_IOError.__super__ = openfl_errors_Error;
openfl_errors_IOError.prototype = $extend(openfl_errors_Error.prototype,{
	__class__: openfl_errors_IOError
});
var openfl_errors_EOFError = function() {
	openfl_errors_IOError.call(this,"End of file was encountered");
	this.name = "EOFError";
	this.errorID = 2030;
};
$hxClasses["openfl.errors.EOFError"] = openfl_errors_EOFError;
openfl_errors_EOFError.__name__ = ["openfl","errors","EOFError"];
openfl_errors_EOFError.__super__ = openfl_errors_IOError;
openfl_errors_EOFError.prototype = $extend(openfl_errors_IOError.prototype,{
	__class__: openfl_errors_EOFError
});
var openfl_errors_RangeError = function(message) {
	if(message == null) message = "";
	openfl_errors_Error.call(this,message,0);
	this.name = "RangeError";
};
$hxClasses["openfl.errors.RangeError"] = openfl_errors_RangeError;
openfl_errors_RangeError.__name__ = ["openfl","errors","RangeError"];
openfl_errors_RangeError.__super__ = openfl_errors_Error;
openfl_errors_RangeError.prototype = $extend(openfl_errors_Error.prototype,{
	__class__: openfl_errors_RangeError
});
var openfl_errors_TypeError = function(message) {
	if(message == null) message = "";
	openfl_errors_Error.call(this,message,0);
	this.name = "TypeError";
};
$hxClasses["openfl.errors.TypeError"] = openfl_errors_TypeError;
openfl_errors_TypeError.__name__ = ["openfl","errors","TypeError"];
openfl_errors_TypeError.__super__ = openfl_errors_Error;
openfl_errors_TypeError.prototype = $extend(openfl_errors_Error.prototype,{
	__class__: openfl_errors_TypeError
});
var openfl_events_Event = function(type,bubbles,cancelable) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	this.type = type;
	this.bubbles = bubbles;
	this.cancelable = cancelable;
	this.eventPhase = 2;
};
$hxClasses["openfl.events.Event"] = openfl_events_Event;
openfl_events_Event.__name__ = ["openfl","events","Event"];
openfl_events_Event.prototype = {
	clone: function() {
		var event = new openfl_events_Event(this.type,this.bubbles,this.cancelable);
		event.eventPhase = this.eventPhase;
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		return event;
	}
	,formatToString: function(className,p1,p2,p3,p4,p5) {
		var parameters = [];
		if(p1 != null) parameters.push(p1);
		if(p2 != null) parameters.push(p2);
		if(p3 != null) parameters.push(p3);
		if(p4 != null) parameters.push(p4);
		if(p5 != null) parameters.push(p5);
		return $bind(this,this.__formatToString).apply(this,[className,parameters]);
	}
	,isDefaultPrevented: function() {
		return this.__preventDefault;
	}
	,preventDefault: function() {
		if(this.cancelable) this.__preventDefault = true;
	}
	,stopImmediatePropagation: function() {
		this.__isCanceled = true;
		this.__isCanceledNow = true;
	}
	,stopPropagation: function() {
		this.__isCanceled = true;
	}
	,toString: function() {
		return this.__formatToString("Event",["type","bubbles","cancelable"]);
	}
	,__formatToString: function(className,parameters) {
		var output = "[" + className;
		var arg = null;
		var _g = 0;
		while(_g < parameters.length) {
			var param = parameters[_g];
			++_g;
			arg = Reflect.field(this,param);
			if(typeof(arg) == "string") output += " " + param + "=\"" + Std.string(arg) + "\""; else output += " " + param + "=" + Std.string(arg);
		}
		output += "]";
		return output;
	}
	,__class__: openfl_events_Event
};
var openfl_events_ActivityEvent = function(type,bubbles,cancelable,activating) {
	if(activating == null) activating = false;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.activating = activating;
};
$hxClasses["openfl.events.ActivityEvent"] = openfl_events_ActivityEvent;
openfl_events_ActivityEvent.__name__ = ["openfl","events","ActivityEvent"];
openfl_events_ActivityEvent.__super__ = openfl_events_Event;
openfl_events_ActivityEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_ActivityEvent(this.type,this.bubbles,this.cancelable,this.activating);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("ActivityEvent",["type","bubbles","cancelable","activating"]);
	}
	,__class__: openfl_events_ActivityEvent
});
var openfl_events_TextEvent = function(type,bubbles,cancelable,text) {
	if(text == null) text = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.text = text;
};
$hxClasses["openfl.events.TextEvent"] = openfl_events_TextEvent;
openfl_events_TextEvent.__name__ = ["openfl","events","TextEvent"];
openfl_events_TextEvent.__super__ = openfl_events_Event;
openfl_events_TextEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_TextEvent(this.type,this.bubbles,this.cancelable,this.text);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("TextEvent",["type","bubbles","cancelable","text"]);
	}
	,__class__: openfl_events_TextEvent
});
var openfl_events_ErrorEvent = function(type,bubbles,cancelable,text,id) {
	if(id == null) id = 0;
	if(text == null) text = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_TextEvent.call(this,type,bubbles,cancelable,text);
	this.errorID = id;
};
$hxClasses["openfl.events.ErrorEvent"] = openfl_events_ErrorEvent;
openfl_events_ErrorEvent.__name__ = ["openfl","events","ErrorEvent"];
openfl_events_ErrorEvent.__super__ = openfl_events_TextEvent;
openfl_events_ErrorEvent.prototype = $extend(openfl_events_TextEvent.prototype,{
	clone: function() {
		var event = new openfl_events_ErrorEvent(this.type,this.bubbles,this.cancelable,this.text,this.errorID);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("ErrorEvent",["type","bubbles","cancelable","text","errorID"]);
	}
	,__class__: openfl_events_ErrorEvent
});
var openfl_events__$EventDispatcher_Listener = function(callback,useCapture,priority) {
	this.callback = callback;
	this.useCapture = useCapture;
	this.priority = priority;
};
$hxClasses["openfl.events._EventDispatcher.Listener"] = openfl_events__$EventDispatcher_Listener;
openfl_events__$EventDispatcher_Listener.__name__ = ["openfl","events","_EventDispatcher","Listener"];
openfl_events__$EventDispatcher_Listener.prototype = {
	match: function(callback,useCapture) {
		return Reflect.compareMethods(this.callback,callback) && this.useCapture == useCapture;
	}
	,__class__: openfl_events__$EventDispatcher_Listener
};
var openfl_events_FocusEvent = function(type,bubbles,cancelable,relatedObject,shiftKey,keyCode) {
	if(keyCode == null) keyCode = 0;
	if(shiftKey == null) shiftKey = false;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.keyCode = keyCode;
	this.shiftKey = shiftKey;
	this.relatedObject = relatedObject;
};
$hxClasses["openfl.events.FocusEvent"] = openfl_events_FocusEvent;
openfl_events_FocusEvent.__name__ = ["openfl","events","FocusEvent"];
openfl_events_FocusEvent.__super__ = openfl_events_Event;
openfl_events_FocusEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_FocusEvent(this.type,this.bubbles,this.cancelable,this.relatedObject,this.shiftKey,this.keyCode);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("FocusEvent",["type","bubbles","cancelable","relatedObject","shiftKey","keyCode"]);
	}
	,__class__: openfl_events_FocusEvent
});
var openfl_events_FullScreenEvent = function(type,bubbles,cancelable,fullScreen,interactive) {
	if(interactive == null) interactive = false;
	if(fullScreen == null) fullScreen = false;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_ActivityEvent.call(this,type,bubbles,cancelable);
	this.fullScreen = fullScreen;
	this.interactive = interactive;
};
$hxClasses["openfl.events.FullScreenEvent"] = openfl_events_FullScreenEvent;
openfl_events_FullScreenEvent.__name__ = ["openfl","events","FullScreenEvent"];
openfl_events_FullScreenEvent.__super__ = openfl_events_ActivityEvent;
openfl_events_FullScreenEvent.prototype = $extend(openfl_events_ActivityEvent.prototype,{
	clone: function() {
		var event = new openfl_events_FullScreenEvent(this.type,this.bubbles,this.cancelable,this.fullScreen,this.interactive);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("FullscreenEvent",["type","bubbles","cancelable","fullscreen","interactive"]);
	}
	,__class__: openfl_events_FullScreenEvent
});
var openfl_events_GameInputEvent = function(type,bubbles,cancelable,device) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = true;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.device = device;
};
$hxClasses["openfl.events.GameInputEvent"] = openfl_events_GameInputEvent;
openfl_events_GameInputEvent.__name__ = ["openfl","events","GameInputEvent"];
openfl_events_GameInputEvent.__super__ = openfl_events_Event;
openfl_events_GameInputEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_GameInputEvent(this.type,this.bubbles,this.cancelable,this.device);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("GameInputEvent",["type","bubbles","cancelable","device"]);
	}
	,__class__: openfl_events_GameInputEvent
});
var openfl_events_HTTPStatusEvent = function(type,bubbles,cancelable,status,redirected) {
	if(redirected == null) redirected = false;
	if(status == null) status = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	this.status = status;
	this.redirected = redirected;
	openfl_events_Event.call(this,type,bubbles,cancelable);
};
$hxClasses["openfl.events.HTTPStatusEvent"] = openfl_events_HTTPStatusEvent;
openfl_events_HTTPStatusEvent.__name__ = ["openfl","events","HTTPStatusEvent"];
openfl_events_HTTPStatusEvent.__super__ = openfl_events_Event;
openfl_events_HTTPStatusEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_HTTPStatusEvent(this.type,this.bubbles,null,this.status,this.redirected);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("HTTPStatusEvent",["type","bubbles","cancelable","status","redirected"]);
	}
	,__class__: openfl_events_HTTPStatusEvent
});
var openfl_events_IOErrorEvent = function(type,bubbles,cancelable,text,id) {
	if(id == null) id = 0;
	if(text == null) text = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = true;
	openfl_events_ErrorEvent.call(this,type,bubbles,cancelable,text,id);
};
$hxClasses["openfl.events.IOErrorEvent"] = openfl_events_IOErrorEvent;
openfl_events_IOErrorEvent.__name__ = ["openfl","events","IOErrorEvent"];
openfl_events_IOErrorEvent.__super__ = openfl_events_ErrorEvent;
openfl_events_IOErrorEvent.prototype = $extend(openfl_events_ErrorEvent.prototype,{
	clone: function() {
		var event = new openfl_events_IOErrorEvent(this.type,this.bubbles,this.cancelable,this.text,this.errorID);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("IOErrorEvent",["type","bubbles","cancelable","text","errorID"]);
	}
	,__class__: openfl_events_IOErrorEvent
});
var openfl_events_KeyboardEvent = function(type,bubbles,cancelable,charCodeValue,keyCodeValue,keyLocationValue,ctrlKeyValue,altKeyValue,shiftKeyValue,controlKeyValue,commandKeyValue) {
	if(commandKeyValue == null) commandKeyValue = false;
	if(controlKeyValue == null) controlKeyValue = false;
	if(shiftKeyValue == null) shiftKeyValue = false;
	if(altKeyValue == null) altKeyValue = false;
	if(ctrlKeyValue == null) ctrlKeyValue = false;
	if(keyCodeValue == null) keyCodeValue = 0;
	if(charCodeValue == null) charCodeValue = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.charCode = charCodeValue;
	this.keyCode = keyCodeValue;
	if(keyLocationValue != null) this.keyLocation = keyLocationValue; else this.keyLocation = 0;
	this.ctrlKey = ctrlKeyValue;
	this.altKey = altKeyValue;
	this.shiftKey = shiftKeyValue;
	this.controlKey = controlKeyValue;
	this.commandKey = commandKeyValue;
};
$hxClasses["openfl.events.KeyboardEvent"] = openfl_events_KeyboardEvent;
openfl_events_KeyboardEvent.__name__ = ["openfl","events","KeyboardEvent"];
openfl_events_KeyboardEvent.__super__ = openfl_events_Event;
openfl_events_KeyboardEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_KeyboardEvent(this.type,this.bubbles,this.cancelable,this.charCode,this.keyCode,this.keyLocation,this.ctrlKey,this.altKey,this.shiftKey,this.controlKey,this.commandKey);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("KeyboardEvent",["type","bubbles","cancelable","charCode","keyCode","keyLocation","ctrlKey","altKey","shiftKey"]);
	}
	,__class__: openfl_events_KeyboardEvent
});
var openfl_events_MouseEvent = function(type,bubbles,cancelable,localX,localY,relatedObject,ctrlKey,altKey,shiftKey,buttonDown,delta,commandKey,clickCount) {
	if(clickCount == null) clickCount = 0;
	if(commandKey == null) commandKey = false;
	if(delta == null) delta = 0;
	if(buttonDown == null) buttonDown = false;
	if(shiftKey == null) shiftKey = false;
	if(altKey == null) altKey = false;
	if(ctrlKey == null) ctrlKey = false;
	if(localY == null) localY = 0;
	if(localX == null) localX = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = true;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.shiftKey = shiftKey;
	this.altKey = altKey;
	this.ctrlKey = ctrlKey;
	this.bubbles = bubbles;
	this.relatedObject = relatedObject;
	this.delta = delta;
	this.localX = localX;
	this.localY = localY;
	this.buttonDown = buttonDown;
	this.commandKey = commandKey;
	this.clickCount = clickCount;
};
$hxClasses["openfl.events.MouseEvent"] = openfl_events_MouseEvent;
openfl_events_MouseEvent.__name__ = ["openfl","events","MouseEvent"];
openfl_events_MouseEvent.__altKey = null;
openfl_events_MouseEvent.__buttonDown = null;
openfl_events_MouseEvent.__commandKey = null;
openfl_events_MouseEvent.__ctrlKey = null;
openfl_events_MouseEvent.__shiftKey = null;
openfl_events_MouseEvent.__create = function(type,button,stageX,stageY,local,target,delta) {
	if(delta == null) delta = 0;
	switch(type) {
	case "mouseDown":
		openfl_events_MouseEvent.__buttonDown = true;
		break;
	case "mouseUp":
		openfl_events_MouseEvent.__buttonDown = false;
		break;
	default:
	}
	var event = new openfl_events_MouseEvent(type,true,false,local.x,local.y,null,openfl_events_MouseEvent.__ctrlKey,openfl_events_MouseEvent.__altKey,openfl_events_MouseEvent.__shiftKey,openfl_events_MouseEvent.__buttonDown,delta,openfl_events_MouseEvent.__commandKey);
	event.stageX = stageX;
	event.stageY = stageY;
	event.target = target;
	return event;
};
openfl_events_MouseEvent.__super__ = openfl_events_Event;
openfl_events_MouseEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_MouseEvent(this.type,this.bubbles,this.cancelable,this.localX,this.localY,this.relatedObject,this.ctrlKey,this.altKey,this.shiftKey,this.buttonDown,this.delta,this.commandKey,this.clickCount);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("MouseEvent",["type","bubbles","cancelable","localX","localY","relatedObject","ctrlKey","altKey","shiftKey","buttonDown","delta"]);
	}
	,updateAfterEvent: function() {
	}
	,__class__: openfl_events_MouseEvent
});
var openfl_events_NetStatusEvent = function(type,bubbles,cancelable,info) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	this.info = info;
	openfl_events_Event.call(this,type,bubbles,cancelable);
};
$hxClasses["openfl.events.NetStatusEvent"] = openfl_events_NetStatusEvent;
openfl_events_NetStatusEvent.__name__ = ["openfl","events","NetStatusEvent"];
openfl_events_NetStatusEvent.__super__ = openfl_events_Event;
openfl_events_NetStatusEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_NetStatusEvent(this.type,this.bubbles,this.cancelable,this.info);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("NetStatusEvent",["type","bubbles","cancelable","info"]);
	}
	,__class__: openfl_events_NetStatusEvent
});
var openfl_events_ProgressEvent = function(type,bubbles,cancelable,bytesLoaded,bytesTotal) {
	if(bytesTotal == null) bytesTotal = 0;
	if(bytesLoaded == null) bytesLoaded = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.bytesLoaded = bytesLoaded;
	this.bytesTotal = bytesTotal;
};
$hxClasses["openfl.events.ProgressEvent"] = openfl_events_ProgressEvent;
openfl_events_ProgressEvent.__name__ = ["openfl","events","ProgressEvent"];
openfl_events_ProgressEvent.__super__ = openfl_events_Event;
openfl_events_ProgressEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_ProgressEvent(this.type,this.bubbles,this.cancelable,this.bytesLoaded,this.bytesTotal);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("ProgressEvent",["type","bubbles","cancelable","bytesLoaded","bytesTotal"]);
	}
	,__class__: openfl_events_ProgressEvent
});
var openfl_events_SecurityErrorEvent = function(type,bubbles,cancelable,text,id) {
	if(id == null) id = 0;
	if(text == null) text = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_ErrorEvent.call(this,type,bubbles,cancelable,text,id);
};
$hxClasses["openfl.events.SecurityErrorEvent"] = openfl_events_SecurityErrorEvent;
openfl_events_SecurityErrorEvent.__name__ = ["openfl","events","SecurityErrorEvent"];
openfl_events_SecurityErrorEvent.__super__ = openfl_events_ErrorEvent;
openfl_events_SecurityErrorEvent.prototype = $extend(openfl_events_ErrorEvent.prototype,{
	clone: function() {
		var event = new openfl_events_SecurityErrorEvent(this.type,this.bubbles,this.cancelable,this.text,this.errorID);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("SecurityErrorEvent",["type","bubbles","cancelable","text","errorID"]);
	}
	,__class__: openfl_events_SecurityErrorEvent
});
var openfl_events_TouchEvent = function(type,bubbles,cancelable,touchPointID,isPrimaryTouchPoint,localX,localY,sizeX,sizeY,pressure,relatedObject,ctrlKey,altKey,shiftKey,commandKey,controlKey,timestamp,touchIntent,samples,isTouchPointCanceled) {
	if(isTouchPointCanceled == null) isTouchPointCanceled = false;
	if(timestamp == null) timestamp = 0;
	if(controlKey == null) controlKey = false;
	if(commandKey == null) commandKey = false;
	if(shiftKey == null) shiftKey = false;
	if(altKey == null) altKey = false;
	if(ctrlKey == null) ctrlKey = false;
	if(pressure == null) pressure = 0;
	if(sizeY == null) sizeY = 0;
	if(sizeX == null) sizeX = 0;
	if(localY == null) localY = 0;
	if(localX == null) localX = 0;
	if(isPrimaryTouchPoint == null) isPrimaryTouchPoint = false;
	if(touchPointID == null) touchPointID = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = true;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.touchPointID = touchPointID;
	this.isPrimaryTouchPoint = isPrimaryTouchPoint;
	this.localX = localX;
	this.localY = localY;
	this.sizeX = sizeX;
	this.sizeY = sizeY;
	this.pressure = pressure;
	this.relatedObject = relatedObject;
	this.ctrlKey = ctrlKey;
	this.altKey = altKey;
	this.shiftKey = shiftKey;
	this.commandKey = commandKey;
	this.controlKey = controlKey;
};
$hxClasses["openfl.events.TouchEvent"] = openfl_events_TouchEvent;
openfl_events_TouchEvent.__name__ = ["openfl","events","TouchEvent"];
openfl_events_TouchEvent.__create = function(type,touch,stageX,stageY,local,target) {
	var evt = new openfl_events_TouchEvent(type,true,false,0,true,local.x,local.y,1,1,1);
	evt.stageX = stageX;
	evt.stageY = stageY;
	evt.target = target;
	return evt;
};
openfl_events_TouchEvent.__super__ = openfl_events_Event;
openfl_events_TouchEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_TouchEvent(this.type,this.bubbles,this.cancelable,this.touchPointID,this.isPrimaryTouchPoint,this.localX,this.localY,this.sizeX,this.sizeY,this.pressure,this.relatedObject,this.ctrlKey,this.altKey,this.shiftKey,this.commandKey,this.controlKey);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("TouchEvent",["type","bubbles","cancelable","touchPointID","isPrimaryTouchPoint","localX","localY","sizeX","sizeY","pressure","relatedObject","ctrlKey","altKey","shiftKey","commandKey","controlKey"]);
	}
	,updateAfterEvent: function() {
	}
	,__class__: openfl_events_TouchEvent
});
var openfl_filters_BitmapFilter = function() {
	this.__saveLastFilter = false;
	this.__passes = 0;
	this.__dirty = true;
};
$hxClasses["openfl.filters.BitmapFilter"] = openfl_filters_BitmapFilter;
openfl_filters_BitmapFilter.__name__ = ["openfl","filters","BitmapFilter"];
openfl_filters_BitmapFilter.__tmpRenderTexture = null;
openfl_filters_BitmapFilter.__applyFilters = function(filters,renderSession,source,target,sourceRect,destPoint) {
	var same = target == source && target.__usingPingPongTexture;
	if(same) target.__pingPongTexture.useOldTexture = true;
	if(sourceRect == null) sourceRect = source.rect;
	var lastFilterOutput = null;
	var useLastFilter = false;
	var srcShader = source.__shader;
	var _g = 0;
	while(_g < filters.length) {
		var filter = filters[_g];
		++_g;
		useLastFilter = false;
		if(filter.__saveLastFilter) {
			target.__pingPongTexture.swap();
			target.__drawGL(renderSession,source,null,null,null,sourceRect,true,!target.__usingPingPongTexture,true);
			lastFilterOutput = target.__pingPongTexture.get_oldRenderTexture();
			target.__pingPongTexture.set_oldRenderTexture(openfl_filters_BitmapFilter.__tmpRenderTexture);
		}
		var _g2 = 0;
		var _g1 = filter.__passes;
		while(_g2 < _g1) {
			var pass = _g2++;
			useLastFilter = filter.__saveLastFilter && filter.__useLastFilter(pass);
			if(same && !useLastFilter) target.__pingPongTexture.swap();
			if(useLastFilter) {
				openfl_filters_BitmapFilter.__tmpRenderTexture = target.__pingPongTexture.get_oldRenderTexture();
				target.__pingPongTexture.set_oldRenderTexture(lastFilterOutput);
			}
			source.__shader = filter.__preparePass(pass);
			target.__drawGL(renderSession,source,null,null,null,sourceRect,true,!target.__usingPingPongTexture,!useLastFilter);
		}
	}
	source.__shader = srcShader;
	if(same) target.__pingPongTexture.useOldTexture = false;
};
openfl_filters_BitmapFilter.__expandBounds = function(filters,rect,matrix) {
	var r = openfl_geom_Rectangle.__temp;
	r.setEmpty();
	var _g = 0;
	while(_g < filters.length) {
		var filter = filters[_g];
		++_g;
		filter.__growBounds(r);
	}
	r.__transform(r,matrix);
	rect.__expand(r.x,r.y,r.width,r.height);
};
openfl_filters_BitmapFilter.prototype = {
	clone: function() {
		return new openfl_filters_BitmapFilter();
	}
	,__applyFilter: function(sourceData,targetData,sourceRect,destPoint) {
	}
	,__growBounds: function(rect) {
	}
	,__preparePass: function(pass) {
		return null;
	}
	,__useLastFilter: function(pass) {
		return false;
	}
	,__class__: openfl_filters_BitmapFilter
};
var openfl_filters_BlurFilter = function(blurX,blurY,quality) {
	if(quality == null) quality = 1;
	if(blurY == null) blurY = 4;
	if(blurX == null) blurX = 4;
	openfl_filters_BitmapFilter.call(this);
	this.blurX = blurX;
	this.blurY = blurY;
	this.set_quality(quality);
	this.__blurShader = new openfl_filters__$BlurFilter_BlurShader();
	this.__blurShader.smooth = true;
};
$hxClasses["openfl.filters.BlurFilter"] = openfl_filters_BlurFilter;
openfl_filters_BlurFilter.__name__ = ["openfl","filters","BlurFilter"];
openfl_filters_BlurFilter.__super__ = openfl_filters_BitmapFilter;
openfl_filters_BlurFilter.prototype = $extend(openfl_filters_BitmapFilter.prototype,{
	clone: function() {
		return new openfl_filters_BlurFilter(this.blurX,this.blurY,this.quality);
	}
	,__growBounds: function(rect) {
		rect.x += -this.blurX * 0.5 * this.quality;
		rect.y += -this.blurY * 0.5 * this.quality;
		rect.width += this.blurX * 0.5 * this.quality;
		rect.height += this.blurY * 0.5 * this.quality;
	}
	,__preparePass: function(pass) {
		var even = pass % 2 == 0;
		var scale = Math.pow(0.5,pass >> 1);
		if(even) this.__blurShader.__uRadius.value[0] = scale * this.blurX; else this.__blurShader.__uRadius.value[0] = 0;
		if(even) this.__blurShader.__uRadius.value[1] = 0; else this.__blurShader.__uRadius.value[1] = scale * this.blurY;
		return this.__blurShader;
	}
	,set_quality: function(value) {
		this.__passes = value * 2;
		return this.quality = value;
	}
	,__class__: openfl_filters_BlurFilter
	,__properties__: {set_quality:"set_quality"}
});
var openfl_filters__$BlurFilter_BlurShader = function() {
	this.__uRadius = new openfl_display_GLShaderParameter("vec2",0);
	this.fragment = ["varying vec2 vBlurCoords[7];","void main(void)","{","vec4 sum = vec4(0.0);","sum += texture2D(" + openfl_display_Shader.uSampler + ", vBlurCoords[0]) * 0.00443;","sum += texture2D(" + openfl_display_Shader.uSampler + ", vBlurCoords[1]) * 0.05399;","sum += texture2D(" + openfl_display_Shader.uSampler + ", vBlurCoords[2]) * 0.24197;","sum += texture2D(" + openfl_display_Shader.uSampler + ", vBlurCoords[3]) * 0.39894;","sum += texture2D(" + openfl_display_Shader.uSampler + ", vBlurCoords[4]) * 0.24197;","sum += texture2D(" + openfl_display_Shader.uSampler + ", vBlurCoords[5]) * 0.05399;","sum += texture2D(" + openfl_display_Shader.uSampler + ", vBlurCoords[6]) * 0.00443;","\tgl_FragColor = sum;","}"];
	this.vertex = ["uniform vec2 uRadius;","varying vec2 vBlurCoords[7];","void main(void)","{","vec2 r = uRadius / " + openfl_display_Shader.uTextureSize + ";","vBlurCoords[0] = " + openfl_display_Shader.aTexCoord + " - r * 1.2;","vBlurCoords[1] = " + openfl_display_Shader.aTexCoord + " - r * 0.8;","vBlurCoords[2] = " + openfl_display_Shader.aTexCoord + " - r * 0.4;","vBlurCoords[3] = " + openfl_display_Shader.aTexCoord + ";","vBlurCoords[4] = " + openfl_display_Shader.aTexCoord + " + r * 0.4;","vBlurCoords[5] = " + openfl_display_Shader.aTexCoord + " + r * 0.8;","vBlurCoords[6] = " + openfl_display_Shader.aTexCoord + " + r * 1.2;","" + openfl_display_Shader.vTexCoord + " = " + openfl_display_Shader.aTexCoord + ";","" + openfl_display_Shader.vColor + " = " + openfl_display_Shader.aColor + ";","gl_Position = vec4((" + openfl_display_Shader.uProjectionMatrix + " * vec3(" + openfl_display_Shader.aPosition + ", 1.0)).xy, 0.0, 1.0);","}"];
	openfl_display_Shader.call(this);
	this.data.set("uRadius",this.__uRadius);
	this.__buildVertexCode("uniform vec2 uRadius;\nvarying vec2 vBlurCoords[7];\nvoid main(void)\n{\nvec2 r = uRadius / " + openfl_display_Shader.uTextureSize + ";\nvBlurCoords[0] = " + openfl_display_Shader.aTexCoord + " - r * 1.2;\nvBlurCoords[1] = " + openfl_display_Shader.aTexCoord + " - r * 0.8;\nvBlurCoords[2] = " + openfl_display_Shader.aTexCoord + " - r * 0.4;\nvBlurCoords[3] = " + openfl_display_Shader.aTexCoord + ";\nvBlurCoords[4] = " + openfl_display_Shader.aTexCoord + " + r * 0.4;\nvBlurCoords[5] = " + openfl_display_Shader.aTexCoord + " + r * 0.8;\nvBlurCoords[6] = " + openfl_display_Shader.aTexCoord + " + r * 1.2;\n" + openfl_display_Shader.vTexCoord + " = " + openfl_display_Shader.aTexCoord + ";\n" + openfl_display_Shader.vColor + " = " + openfl_display_Shader.aColor + ";\ngl_Position = vec4((" + openfl_display_Shader.uProjectionMatrix + " * vec3(" + openfl_display_Shader.aPosition + ", 1.0)).xy, 0.0, 1.0);\n}");
	this.__buildFragmentCode("varying vec2 vBlurCoords[7];\nvoid main(void)\n{\nvec4 sum = vec4(0.0);\nsum += texture2D(" + openfl_display_Shader.uSampler + ", vBlurCoords[0]) * 0.00443;\nsum += texture2D(" + openfl_display_Shader.uSampler + ", vBlurCoords[1]) * 0.05399;\nsum += texture2D(" + openfl_display_Shader.uSampler + ", vBlurCoords[2]) * 0.24197;\nsum += texture2D(" + openfl_display_Shader.uSampler + ", vBlurCoords[3]) * 0.39894;\nsum += texture2D(" + openfl_display_Shader.uSampler + ", vBlurCoords[4]) * 0.24197;\nsum += texture2D(" + openfl_display_Shader.uSampler + ", vBlurCoords[5]) * 0.05399;\nsum += texture2D(" + openfl_display_Shader.uSampler + ", vBlurCoords[6]) * 0.00443;\n\tgl_FragColor = sum;\n}");
};
$hxClasses["openfl.filters._BlurFilter.BlurShader"] = openfl_filters__$BlurFilter_BlurShader;
openfl_filters__$BlurFilter_BlurShader.__name__ = ["openfl","filters","_BlurFilter","BlurShader"];
openfl_filters__$BlurFilter_BlurShader.__super__ = openfl_display_Shader;
openfl_filters__$BlurFilter_BlurShader.prototype = $extend(openfl_display_Shader.prototype,{
	get_uRadius: function() {
		return this.__uRadius.value;
	}
	,set_uRadius: function(v) {
		return this.__uRadius.set_value(v);
	}
	,__class__: openfl_filters__$BlurFilter_BlurShader
	,__properties__: {set_uRadius:"set_uRadius",get_uRadius:"get_uRadius"}
});
var openfl_geom_Matrix3D = function(v) {
	if(v != null && v.length == 16) this.rawData = v; else {
		var value = [1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0];
		var vectorData = new openfl_VectorData();
		vectorData.length = value.length;
		vectorData.fixed = true;
		var vec;
		var this1;
		this1 = new Array(value.length);
		vec = this1;
		var _g1 = 0;
		var _g = value.length;
		while(_g1 < _g) {
			var i = _g1++;
			vec[i] = value[i];
		}
		vectorData.data = vec;
		this.rawData = vectorData;
	}
};
$hxClasses["openfl.geom.Matrix3D"] = openfl_geom_Matrix3D;
openfl_geom_Matrix3D.__name__ = ["openfl","geom","Matrix3D"];
openfl_geom_Matrix3D.create2D = function(x,y,scale,rotation) {
	if(rotation == null) rotation = 0;
	if(scale == null) scale = 1;
	var theta = rotation * Math.PI / 180.0;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	return new openfl_geom_Matrix3D((function($this) {
		var $r;
		var value = [c * scale,-s * scale,0,0,s * scale,c * scale,0,0,0,0,1,0,x,y,0,1];
		var vectorData = new openfl_VectorData();
		vectorData.length = value.length;
		vectorData.fixed = true;
		{
			var vec;
			var this1;
			this1 = new Array(value.length);
			vec = this1;
			var _g1 = 0;
			var _g = value.length;
			while(_g1 < _g) {
				var i = _g1++;
				vec[i] = value[i];
			}
			vectorData.data = vec;
		}
		$r = vectorData;
		return $r;
	}(this)));
};
openfl_geom_Matrix3D.createABCD = function(a,b,c,d,tx,ty) {
	return new openfl_geom_Matrix3D((function($this) {
		var $r;
		var value = [a,b,0,0,c,d,0,0,0,0,1,0,tx,ty,0,1];
		var vectorData = new openfl_VectorData();
		vectorData.length = value.length;
		vectorData.fixed = true;
		{
			var vec;
			var this1;
			this1 = new Array(value.length);
			vec = this1;
			var _g1 = 0;
			var _g = value.length;
			while(_g1 < _g) {
				var i = _g1++;
				vec[i] = value[i];
			}
			vectorData.data = vec;
		}
		$r = vectorData;
		return $r;
	}(this)));
};
openfl_geom_Matrix3D.createOrtho = function(x0,x1,y0,y1,zNear,zFar) {
	var sx = 1.0 / (x1 - x0);
	var sy = 1.0 / (y1 - y0);
	var sz = 1.0 / (zFar - zNear);
	return new openfl_geom_Matrix3D((function($this) {
		var $r;
		var value = [2.0 * sx,0,0,0,0,2.0 * sy,0,0,0,0,-2. * sz,0,-(x0 + x1) * sx,-(y0 + y1) * sy,-(zNear + zFar) * sz,1];
		var vectorData = new openfl_VectorData();
		vectorData.length = value.length;
		vectorData.fixed = true;
		{
			var vec;
			var this1;
			this1 = new Array(value.length);
			vec = this1;
			var _g1 = 0;
			var _g = value.length;
			while(_g1 < _g) {
				var i = _g1++;
				vec[i] = value[i];
			}
			vectorData.data = vec;
		}
		$r = vectorData;
		return $r;
	}(this)));
};
openfl_geom_Matrix3D.interpolate = function(thisMat,toMat,percent) {
	var m = new openfl_geom_Matrix3D();
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		var this1 = m.rawData;
		if(!this1.fixed) {
			if(i >= this1.length) this1.length = i + 1;
			if(this1.data.length < this1.length) {
				var data;
				var this2;
				this2 = new Array(this1.data.length + 10);
				data = this2;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
				this1.data = data;
			}
		}
		this1.data[i] = thisMat.rawData.data[i] + (toMat.rawData.data[i] - thisMat.rawData.data[i]) * percent;
	}
	return m;
};
openfl_geom_Matrix3D.__getAxisRotation = function(x,y,z,degrees) {
	var m = new openfl_geom_Matrix3D();
	var a1 = new openfl_geom_Vector3D(x,y,z);
	var rad = -degrees * (Math.PI / 180);
	var c = Math.cos(rad);
	var s = Math.sin(rad);
	var t = 1.0 - c;
	var this1 = m.rawData;
	if(!this1.fixed) {
		if(0 >= this1.length) this1.length = 1;
		if(this1.data.length < this1.length) {
			var data;
			var this2;
			this2 = new Array(this1.data.length + 10);
			data = this2;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
			this1.data = data;
		}
	}
	this1.data[0] = c + a1.x * a1.x * t;
	var this3 = m.rawData;
	if(!this3.fixed) {
		if(5 >= this3.length) this3.length = 6;
		if(this3.data.length < this3.length) {
			var data1;
			var this4;
			this4 = new Array(this3.data.length + 10);
			data1 = this4;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
			this3.data = data1;
		}
	}
	this3.data[5] = c + a1.y * a1.y * t;
	var this5 = m.rawData;
	if(!this5.fixed) {
		if(10 >= this5.length) this5.length = 11;
		if(this5.data.length < this5.length) {
			var data2;
			var this6;
			this6 = new Array(this5.data.length + 10);
			data2 = this6;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
			this5.data = data2;
		}
	}
	this5.data[10] = c + a1.z * a1.z * t;
	var tmp1 = a1.x * a1.y * t;
	var tmp2 = a1.z * s;
	var this7 = m.rawData;
	if(!this7.fixed) {
		if(4 >= this7.length) this7.length = 5;
		if(this7.data.length < this7.length) {
			var data3;
			var this8;
			this8 = new Array(this7.data.length + 10);
			data3 = this8;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
			this7.data = data3;
		}
	}
	this7.data[4] = tmp1 + tmp2;
	var this9 = m.rawData;
	if(!this9.fixed) {
		if(1 >= this9.length) this9.length = 2;
		if(this9.data.length < this9.length) {
			var data4;
			var this10;
			this10 = new Array(this9.data.length + 10);
			data4 = this10;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
			this9.data = data4;
		}
	}
	this9.data[1] = tmp1 - tmp2;
	tmp1 = a1.x * a1.z * t;
	tmp2 = a1.y * s;
	var this11 = m.rawData;
	if(!this11.fixed) {
		if(8 >= this11.length) this11.length = 9;
		if(this11.data.length < this11.length) {
			var data5;
			var this12;
			this12 = new Array(this11.data.length + 10);
			data5 = this12;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
			this11.data = data5;
		}
	}
	this11.data[8] = tmp1 - tmp2;
	var this13 = m.rawData;
	if(!this13.fixed) {
		if(2 >= this13.length) this13.length = 3;
		if(this13.data.length < this13.length) {
			var data6;
			var this14;
			this14 = new Array(this13.data.length + 10);
			data6 = this14;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
			this13.data = data6;
		}
	}
	this13.data[2] = tmp1 + tmp2;
	tmp1 = a1.y * a1.z * t;
	tmp2 = a1.x * s;
	var this15 = m.rawData;
	if(!this15.fixed) {
		if(9 >= this15.length) this15.length = 10;
		if(this15.data.length < this15.length) {
			var data7;
			var this16;
			this16 = new Array(this15.data.length + 10);
			data7 = this16;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
			this15.data = data7;
		}
	}
	this15.data[9] = tmp1 + tmp2;
	var this17 = m.rawData;
	if(!this17.fixed) {
		if(6 >= this17.length) this17.length = 7;
		if(this17.data.length < this17.length) {
			var data8;
			var this18;
			this18 = new Array(this17.data.length + 10);
			data8 = this18;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
			this17.data = data8;
		}
	}
	this17.data[6] = tmp1 - tmp2;
	return m;
};
openfl_geom_Matrix3D.prototype = {
	append: function(lhs) {
		var m111 = this.rawData.data[0];
		var m121 = this.rawData.data[4];
		var m131 = this.rawData.data[8];
		var m141 = this.rawData.data[12];
		var m112 = this.rawData.data[1];
		var m122 = this.rawData.data[5];
		var m132 = this.rawData.data[9];
		var m142 = this.rawData.data[13];
		var m113 = this.rawData.data[2];
		var m123 = this.rawData.data[6];
		var m133 = this.rawData.data[10];
		var m143 = this.rawData.data[14];
		var m114 = this.rawData.data[3];
		var m124 = this.rawData.data[7];
		var m134 = this.rawData.data[11];
		var m144 = this.rawData.data[15];
		var m211 = lhs.rawData.data[0];
		var m221 = lhs.rawData.data[4];
		var m231 = lhs.rawData.data[8];
		var m241 = lhs.rawData.data[12];
		var m212 = lhs.rawData.data[1];
		var m222 = lhs.rawData.data[5];
		var m232 = lhs.rawData.data[9];
		var m242 = lhs.rawData.data[13];
		var m213 = lhs.rawData.data[2];
		var m223 = lhs.rawData.data[6];
		var m233 = lhs.rawData.data[10];
		var m243 = lhs.rawData.data[14];
		var m214 = lhs.rawData.data[3];
		var m224 = lhs.rawData.data[7];
		var m234 = lhs.rawData.data[11];
		var m244 = lhs.rawData.data[15];
		var this1 = this.rawData;
		if(!this1.fixed) {
			if(0 >= this1.length) this1.length = 1;
			if(this1.data.length < this1.length) {
				var data;
				var this2;
				this2 = new Array(this1.data.length + 10);
				data = this2;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
				this1.data = data;
			}
		}
		this1.data[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;
		var this3 = this.rawData;
		if(!this3.fixed) {
			if(1 >= this3.length) this3.length = 2;
			if(this3.data.length < this3.length) {
				var data1;
				var this4;
				this4 = new Array(this3.data.length + 10);
				data1 = this4;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
				this3.data = data1;
			}
		}
		this3.data[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;
		var this5 = this.rawData;
		if(!this5.fixed) {
			if(2 >= this5.length) this5.length = 3;
			if(this5.data.length < this5.length) {
				var data2;
				var this6;
				this6 = new Array(this5.data.length + 10);
				data2 = this6;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
				this5.data = data2;
			}
		}
		this5.data[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;
		var this7 = this.rawData;
		if(!this7.fixed) {
			if(3 >= this7.length) this7.length = 4;
			if(this7.data.length < this7.length) {
				var data3;
				var this8;
				this8 = new Array(this7.data.length + 10);
				data3 = this8;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
				this7.data = data3;
			}
		}
		this7.data[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;
		var this9 = this.rawData;
		if(!this9.fixed) {
			if(4 >= this9.length) this9.length = 5;
			if(this9.data.length < this9.length) {
				var data4;
				var this10;
				this10 = new Array(this9.data.length + 10);
				data4 = this10;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
				this9.data = data4;
			}
		}
		this9.data[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;
		var this11 = this.rawData;
		if(!this11.fixed) {
			if(5 >= this11.length) this11.length = 6;
			if(this11.data.length < this11.length) {
				var data5;
				var this12;
				this12 = new Array(this11.data.length + 10);
				data5 = this12;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
				this11.data = data5;
			}
		}
		this11.data[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;
		var this13 = this.rawData;
		if(!this13.fixed) {
			if(6 >= this13.length) this13.length = 7;
			if(this13.data.length < this13.length) {
				var data6;
				var this14;
				this14 = new Array(this13.data.length + 10);
				data6 = this14;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
				this13.data = data6;
			}
		}
		this13.data[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;
		var this15 = this.rawData;
		if(!this15.fixed) {
			if(7 >= this15.length) this15.length = 8;
			if(this15.data.length < this15.length) {
				var data7;
				var this16;
				this16 = new Array(this15.data.length + 10);
				data7 = this16;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
				this15.data = data7;
			}
		}
		this15.data[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;
		var this17 = this.rawData;
		if(!this17.fixed) {
			if(8 >= this17.length) this17.length = 9;
			if(this17.data.length < this17.length) {
				var data8;
				var this18;
				this18 = new Array(this17.data.length + 10);
				data8 = this18;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
				this17.data = data8;
			}
		}
		this17.data[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;
		var this19 = this.rawData;
		if(!this19.fixed) {
			if(9 >= this19.length) this19.length = 10;
			if(this19.data.length < this19.length) {
				var data9;
				var this20;
				this20 = new Array(this19.data.length + 10);
				data9 = this20;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data9,0,this19.data.length);
				this19.data = data9;
			}
		}
		this19.data[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;
		var this21 = this.rawData;
		if(!this21.fixed) {
			if(10 >= this21.length) this21.length = 11;
			if(this21.data.length < this21.length) {
				var data10;
				var this22;
				this22 = new Array(this21.data.length + 10);
				data10 = this22;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data10,0,this21.data.length);
				this21.data = data10;
			}
		}
		this21.data[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;
		var this23 = this.rawData;
		if(!this23.fixed) {
			if(11 >= this23.length) this23.length = 12;
			if(this23.data.length < this23.length) {
				var data11;
				var this24;
				this24 = new Array(this23.data.length + 10);
				data11 = this24;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data11,0,this23.data.length);
				this23.data = data11;
			}
		}
		this23.data[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;
		var this25 = this.rawData;
		if(!this25.fixed) {
			if(12 >= this25.length) this25.length = 13;
			if(this25.data.length < this25.length) {
				var data12;
				var this26;
				this26 = new Array(this25.data.length + 10);
				data12 = this26;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data12,0,this25.data.length);
				this25.data = data12;
			}
		}
		this25.data[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;
		var this27 = this.rawData;
		if(!this27.fixed) {
			if(13 >= this27.length) this27.length = 14;
			if(this27.data.length < this27.length) {
				var data13;
				var this28;
				this28 = new Array(this27.data.length + 10);
				data13 = this28;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this27.data,0,data13,0,this27.data.length);
				this27.data = data13;
			}
		}
		this27.data[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;
		var this29 = this.rawData;
		if(!this29.fixed) {
			if(14 >= this29.length) this29.length = 15;
			if(this29.data.length < this29.length) {
				var data14;
				var this30;
				this30 = new Array(this29.data.length + 10);
				data14 = this30;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this29.data,0,data14,0,this29.data.length);
				this29.data = data14;
			}
		}
		this29.data[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;
		var this31 = this.rawData;
		if(!this31.fixed) {
			if(15 >= this31.length) this31.length = 16;
			if(this31.data.length < this31.length) {
				var data15;
				var this32;
				this32 = new Array(this31.data.length + 10);
				data15 = this32;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this31.data,0,data15,0,this31.data.length);
				this31.data = data15;
			}
		}
		this31.data[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;
	}
	,appendRotation: function(degrees,axis,pivotPoint) {
		var m = openfl_geom_Matrix3D.__getAxisRotation(axis.x,axis.y,axis.z,degrees);
		if(pivotPoint != null) {
			var p = pivotPoint;
			m.appendTranslation(p.x,p.y,p.z);
		}
		this.append(m);
	}
	,appendScale: function(xScale,yScale,zScale) {
		this.append(new openfl_geom_Matrix3D((function($this) {
			var $r;
			var value = [xScale,0.0,0.0,0.0,0.0,yScale,0.0,0.0,0.0,0.0,zScale,0.0,0.0,0.0,0.0,1.0];
			var vectorData = new openfl_VectorData();
			vectorData.length = value.length;
			vectorData.fixed = true;
			{
				var vec;
				var this1;
				this1 = new Array(value.length);
				vec = this1;
				var _g1 = 0;
				var _g = value.length;
				while(_g1 < _g) {
					var i = _g1++;
					vec[i] = value[i];
				}
				vectorData.data = vec;
			}
			$r = vectorData;
			return $r;
		}(this))));
	}
	,appendTranslation: function(x,y,z) {
		var this1 = this.rawData;
		if(!this1.fixed) {
			if(12 >= this1.length) this1.length = 13;
			if(this1.data.length < this1.length) {
				var data;
				var this2;
				this2 = new Array(this1.data.length + 10);
				data = this2;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
				this1.data = data;
			}
		}
		this1.data[12] = this.rawData.data[12] + x;
		var this3 = this.rawData;
		if(!this3.fixed) {
			if(13 >= this3.length) this3.length = 14;
			if(this3.data.length < this3.length) {
				var data1;
				var this4;
				this4 = new Array(this3.data.length + 10);
				data1 = this4;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
				this3.data = data1;
			}
		}
		this3.data[13] = this.rawData.data[13] + y;
		var this5 = this.rawData;
		if(!this5.fixed) {
			if(14 >= this5.length) this5.length = 15;
			if(this5.data.length < this5.length) {
				var data2;
				var this6;
				this6 = new Array(this5.data.length + 10);
				data2 = this6;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
				this5.data = data2;
			}
		}
		this5.data[14] = this.rawData.data[14] + z;
	}
	,clone: function() {
		return new openfl_geom_Matrix3D((function($this) {
			var $r;
			var this1 = $this.rawData;
			var vectorData = new openfl_VectorData();
			vectorData.length = this1.length;
			vectorData.fixed = this1.fixed;
			{
				var this2;
				this2 = new Array(this1.length);
				vectorData.data = this2;
			}
			haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,vectorData.data,0,this1.length);
			$r = vectorData;
			return $r;
		}(this)));
	}
	,copyColumnFrom: function(column,vector3D) {
		switch(column) {
		case 0:
			var this1 = this.rawData;
			if(!this1.fixed) {
				if(0 >= this1.length) this1.length = 1;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
			}
			this1.data[0] = vector3D.x;
			var this3 = this.rawData;
			if(!this3.fixed) {
				if(1 >= this3.length) this3.length = 2;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
			}
			this3.data[1] = vector3D.y;
			var this5 = this.rawData;
			if(!this5.fixed) {
				if(2 >= this5.length) this5.length = 3;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
			}
			this5.data[2] = vector3D.z;
			var this7 = this.rawData;
			if(!this7.fixed) {
				if(3 >= this7.length) this7.length = 4;
				if(this7.data.length < this7.length) {
					var data3;
					var this8;
					this8 = new Array(this7.data.length + 10);
					data3 = this8;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
					this7.data = data3;
				}
			}
			this7.data[3] = vector3D.w;
			break;
		case 1:
			var this9 = this.rawData;
			if(!this9.fixed) {
				if(4 >= this9.length) this9.length = 5;
				if(this9.data.length < this9.length) {
					var data4;
					var this10;
					this10 = new Array(this9.data.length + 10);
					data4 = this10;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
					this9.data = data4;
				}
			}
			this9.data[4] = vector3D.x;
			var this11 = this.rawData;
			if(!this11.fixed) {
				if(5 >= this11.length) this11.length = 6;
				if(this11.data.length < this11.length) {
					var data5;
					var this12;
					this12 = new Array(this11.data.length + 10);
					data5 = this12;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
					this11.data = data5;
				}
			}
			this11.data[5] = vector3D.y;
			var this13 = this.rawData;
			if(!this13.fixed) {
				if(6 >= this13.length) this13.length = 7;
				if(this13.data.length < this13.length) {
					var data6;
					var this14;
					this14 = new Array(this13.data.length + 10);
					data6 = this14;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
					this13.data = data6;
				}
			}
			this13.data[6] = vector3D.z;
			var this15 = this.rawData;
			if(!this15.fixed) {
				if(7 >= this15.length) this15.length = 8;
				if(this15.data.length < this15.length) {
					var data7;
					var this16;
					this16 = new Array(this15.data.length + 10);
					data7 = this16;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
					this15.data = data7;
				}
			}
			this15.data[7] = vector3D.w;
			break;
		case 2:
			var this17 = this.rawData;
			if(!this17.fixed) {
				if(8 >= this17.length) this17.length = 9;
				if(this17.data.length < this17.length) {
					var data8;
					var this18;
					this18 = new Array(this17.data.length + 10);
					data8 = this18;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
					this17.data = data8;
				}
			}
			this17.data[8] = vector3D.x;
			var this19 = this.rawData;
			if(!this19.fixed) {
				if(9 >= this19.length) this19.length = 10;
				if(this19.data.length < this19.length) {
					var data9;
					var this20;
					this20 = new Array(this19.data.length + 10);
					data9 = this20;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data9,0,this19.data.length);
					this19.data = data9;
				}
			}
			this19.data[9] = vector3D.y;
			var this21 = this.rawData;
			if(!this21.fixed) {
				if(10 >= this21.length) this21.length = 11;
				if(this21.data.length < this21.length) {
					var data10;
					var this22;
					this22 = new Array(this21.data.length + 10);
					data10 = this22;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data10,0,this21.data.length);
					this21.data = data10;
				}
			}
			this21.data[10] = vector3D.z;
			var this23 = this.rawData;
			if(!this23.fixed) {
				if(11 >= this23.length) this23.length = 12;
				if(this23.data.length < this23.length) {
					var data11;
					var this24;
					this24 = new Array(this23.data.length + 10);
					data11 = this24;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data11,0,this23.data.length);
					this23.data = data11;
				}
			}
			this23.data[11] = vector3D.w;
			break;
		case 3:
			var this25 = this.rawData;
			if(!this25.fixed) {
				if(12 >= this25.length) this25.length = 13;
				if(this25.data.length < this25.length) {
					var data12;
					var this26;
					this26 = new Array(this25.data.length + 10);
					data12 = this26;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data12,0,this25.data.length);
					this25.data = data12;
				}
			}
			this25.data[12] = vector3D.x;
			var this27 = this.rawData;
			if(!this27.fixed) {
				if(13 >= this27.length) this27.length = 14;
				if(this27.data.length < this27.length) {
					var data13;
					var this28;
					this28 = new Array(this27.data.length + 10);
					data13 = this28;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this27.data,0,data13,0,this27.data.length);
					this27.data = data13;
				}
			}
			this27.data[13] = vector3D.y;
			var this29 = this.rawData;
			if(!this29.fixed) {
				if(14 >= this29.length) this29.length = 15;
				if(this29.data.length < this29.length) {
					var data14;
					var this30;
					this30 = new Array(this29.data.length + 10);
					data14 = this30;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this29.data,0,data14,0,this29.data.length);
					this29.data = data14;
				}
			}
			this29.data[14] = vector3D.z;
			var this31 = this.rawData;
			if(!this31.fixed) {
				if(15 >= this31.length) this31.length = 16;
				if(this31.data.length < this31.length) {
					var data15;
					var this32;
					this32 = new Array(this31.data.length + 10);
					data15 = this32;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this31.data,0,data15,0,this31.data.length);
					this31.data = data15;
				}
			}
			this31.data[15] = vector3D.w;
			break;
		default:
		}
	}
	,copyColumnTo: function(column,vector3D) {
		switch(column) {
		case 0:
			vector3D.x = this.rawData.data[0];
			vector3D.y = this.rawData.data[1];
			vector3D.z = this.rawData.data[2];
			vector3D.w = this.rawData.data[3];
			break;
		case 1:
			vector3D.x = this.rawData.data[4];
			vector3D.y = this.rawData.data[5];
			vector3D.z = this.rawData.data[6];
			vector3D.w = this.rawData.data[7];
			break;
		case 2:
			vector3D.x = this.rawData.data[8];
			vector3D.y = this.rawData.data[9];
			vector3D.z = this.rawData.data[10];
			vector3D.w = this.rawData.data[11];
			break;
		case 3:
			vector3D.x = this.rawData.data[12];
			vector3D.y = this.rawData.data[13];
			vector3D.z = this.rawData.data[14];
			vector3D.w = this.rawData.data[15];
			break;
		default:
		}
	}
	,copyFrom: function(other) {
		var this1 = other.rawData;
		var vectorData = new openfl_VectorData();
		vectorData.length = this1.length;
		vectorData.fixed = this1.fixed;
		var this2;
		this2 = new Array(this1.length);
		vectorData.data = this2;
		haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,vectorData.data,0,this1.length);
		this.rawData = vectorData;
	}
	,copyRawDataFrom: function(vector,index,transpose) {
		if(transpose == null) transpose = false;
		if(index == null) index = 0;
		if(transpose) this.transpose();
		var length = vector.length - index;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var this1 = this.rawData;
			if(!this1.fixed) {
				if(i >= this1.length) this1.length = i + 1;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
			}
			this1.data[i] = vector.data[i + index];
		}
		if(transpose) this.transpose();
	}
	,copyRawDataTo: function(vector,index,transpose) {
		if(transpose == null) transpose = false;
		if(index == null) index = 0;
		if(transpose) this.transpose();
		var _g1 = 0;
		var _g = this.rawData.length;
		while(_g1 < _g) {
			var i = _g1++;
			var key = i + index;
			if(!vector.fixed) {
				if(key >= vector.length) vector.length = key + 1;
				if(vector.data.length < vector.length) {
					var data;
					var this1;
					this1 = new Array(vector.data.length + 10);
					data = this1;
					haxe_ds__$Vector_Vector_$Impl_$.blit(vector.data,0,data,0,vector.data.length);
					vector.data = data;
				}
			}
			vector.data[key] = this.rawData.data[i];
		}
		if(transpose) this.transpose();
	}
	,copyRowFrom: function(row,vector3D) {
		switch(row) {
		case 0:
			var this1 = this.rawData;
			if(!this1.fixed) {
				if(0 >= this1.length) this1.length = 1;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
			}
			this1.data[0] = vector3D.x;
			var this3 = this.rawData;
			if(!this3.fixed) {
				if(4 >= this3.length) this3.length = 5;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
			}
			this3.data[4] = vector3D.y;
			var this5 = this.rawData;
			if(!this5.fixed) {
				if(8 >= this5.length) this5.length = 9;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
			}
			this5.data[8] = vector3D.z;
			var this7 = this.rawData;
			if(!this7.fixed) {
				if(12 >= this7.length) this7.length = 13;
				if(this7.data.length < this7.length) {
					var data3;
					var this8;
					this8 = new Array(this7.data.length + 10);
					data3 = this8;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
					this7.data = data3;
				}
			}
			this7.data[12] = vector3D.w;
			break;
		case 1:
			var this9 = this.rawData;
			if(!this9.fixed) {
				if(1 >= this9.length) this9.length = 2;
				if(this9.data.length < this9.length) {
					var data4;
					var this10;
					this10 = new Array(this9.data.length + 10);
					data4 = this10;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
					this9.data = data4;
				}
			}
			this9.data[1] = vector3D.x;
			var this11 = this.rawData;
			if(!this11.fixed) {
				if(5 >= this11.length) this11.length = 6;
				if(this11.data.length < this11.length) {
					var data5;
					var this12;
					this12 = new Array(this11.data.length + 10);
					data5 = this12;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
					this11.data = data5;
				}
			}
			this11.data[5] = vector3D.y;
			var this13 = this.rawData;
			if(!this13.fixed) {
				if(9 >= this13.length) this13.length = 10;
				if(this13.data.length < this13.length) {
					var data6;
					var this14;
					this14 = new Array(this13.data.length + 10);
					data6 = this14;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
					this13.data = data6;
				}
			}
			this13.data[9] = vector3D.z;
			var this15 = this.rawData;
			if(!this15.fixed) {
				if(13 >= this15.length) this15.length = 14;
				if(this15.data.length < this15.length) {
					var data7;
					var this16;
					this16 = new Array(this15.data.length + 10);
					data7 = this16;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
					this15.data = data7;
				}
			}
			this15.data[13] = vector3D.w;
			break;
		case 2:
			var this17 = this.rawData;
			if(!this17.fixed) {
				if(2 >= this17.length) this17.length = 3;
				if(this17.data.length < this17.length) {
					var data8;
					var this18;
					this18 = new Array(this17.data.length + 10);
					data8 = this18;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
					this17.data = data8;
				}
			}
			this17.data[2] = vector3D.x;
			var this19 = this.rawData;
			if(!this19.fixed) {
				if(6 >= this19.length) this19.length = 7;
				if(this19.data.length < this19.length) {
					var data9;
					var this20;
					this20 = new Array(this19.data.length + 10);
					data9 = this20;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data9,0,this19.data.length);
					this19.data = data9;
				}
			}
			this19.data[6] = vector3D.y;
			var this21 = this.rawData;
			if(!this21.fixed) {
				if(10 >= this21.length) this21.length = 11;
				if(this21.data.length < this21.length) {
					var data10;
					var this22;
					this22 = new Array(this21.data.length + 10);
					data10 = this22;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data10,0,this21.data.length);
					this21.data = data10;
				}
			}
			this21.data[10] = vector3D.z;
			var this23 = this.rawData;
			if(!this23.fixed) {
				if(14 >= this23.length) this23.length = 15;
				if(this23.data.length < this23.length) {
					var data11;
					var this24;
					this24 = new Array(this23.data.length + 10);
					data11 = this24;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data11,0,this23.data.length);
					this23.data = data11;
				}
			}
			this23.data[14] = vector3D.w;
			break;
		case 3:
			var this25 = this.rawData;
			if(!this25.fixed) {
				if(3 >= this25.length) this25.length = 4;
				if(this25.data.length < this25.length) {
					var data12;
					var this26;
					this26 = new Array(this25.data.length + 10);
					data12 = this26;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data12,0,this25.data.length);
					this25.data = data12;
				}
			}
			this25.data[3] = vector3D.x;
			var this27 = this.rawData;
			if(!this27.fixed) {
				if(7 >= this27.length) this27.length = 8;
				if(this27.data.length < this27.length) {
					var data13;
					var this28;
					this28 = new Array(this27.data.length + 10);
					data13 = this28;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this27.data,0,data13,0,this27.data.length);
					this27.data = data13;
				}
			}
			this27.data[7] = vector3D.y;
			var this29 = this.rawData;
			if(!this29.fixed) {
				if(11 >= this29.length) this29.length = 12;
				if(this29.data.length < this29.length) {
					var data14;
					var this30;
					this30 = new Array(this29.data.length + 10);
					data14 = this30;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this29.data,0,data14,0,this29.data.length);
					this29.data = data14;
				}
			}
			this29.data[11] = vector3D.z;
			var this31 = this.rawData;
			if(!this31.fixed) {
				if(15 >= this31.length) this31.length = 16;
				if(this31.data.length < this31.length) {
					var data15;
					var this32;
					this32 = new Array(this31.data.length + 10);
					data15 = this32;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this31.data,0,data15,0,this31.data.length);
					this31.data = data15;
				}
			}
			this31.data[15] = vector3D.w;
			break;
		default:
		}
	}
	,copyRowTo: function(row,vector3D) {
		switch(row) {
		case 0:
			vector3D.x = this.rawData.data[0];
			vector3D.y = this.rawData.data[4];
			vector3D.z = this.rawData.data[8];
			vector3D.w = this.rawData.data[12];
			break;
		case 1:
			vector3D.x = this.rawData.data[1];
			vector3D.y = this.rawData.data[5];
			vector3D.z = this.rawData.data[9];
			vector3D.w = this.rawData.data[13];
			break;
		case 2:
			vector3D.x = this.rawData.data[2];
			vector3D.y = this.rawData.data[6];
			vector3D.z = this.rawData.data[10];
			vector3D.w = this.rawData.data[14];
			break;
		case 3:
			vector3D.x = this.rawData.data[3];
			vector3D.y = this.rawData.data[7];
			vector3D.z = this.rawData.data[11];
			vector3D.w = this.rawData.data[15];
			break;
		default:
		}
	}
	,copyToMatrix3D: function(other) {
		var this1 = this.rawData;
		var vectorData = new openfl_VectorData();
		vectorData.length = this1.length;
		vectorData.fixed = this1.fixed;
		var this2;
		this2 = new Array(this1.length);
		vectorData.data = this2;
		haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,vectorData.data,0,this1.length);
		other.rawData = vectorData;
	}
	,decompose: function(orientationStyle) {
		if(orientationStyle == null) orientationStyle = 1;
		var vec;
		var this1;
		this1 = new openfl_VectorData();
		var this2;
		this2 = new Array(0);
		this1.data = this2;
		this1.length = 0;
		this1.fixed = false;
		vec = this1;
		var m = this.clone();
		var mr;
		var this3 = m.rawData;
		var vectorData = new openfl_VectorData();
		vectorData.length = this3.length;
		vectorData.fixed = this3.fixed;
		var this4;
		this4 = new Array(this3.length);
		vectorData.data = this4;
		haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,vectorData.data,0,this3.length);
		mr = vectorData;
		var pos = new openfl_geom_Vector3D(mr.data[12],mr.data[13],mr.data[14]);
		{
			if(!mr.fixed) {
				if(12 >= mr.length) mr.length = 13;
				if(mr.data.length < mr.length) {
					var data;
					var this5;
					this5 = new Array(mr.data.length + 10);
					data = this5;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data,0,mr.data.length);
					mr.data = data;
				}
			}
			mr.data[12] = 0;
		}
		{
			if(!mr.fixed) {
				if(13 >= mr.length) mr.length = 14;
				if(mr.data.length < mr.length) {
					var data1;
					var this6;
					this6 = new Array(mr.data.length + 10);
					data1 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data1,0,mr.data.length);
					mr.data = data1;
				}
			}
			mr.data[13] = 0;
		}
		{
			if(!mr.fixed) {
				if(14 >= mr.length) mr.length = 15;
				if(mr.data.length < mr.length) {
					var data2;
					var this7;
					this7 = new Array(mr.data.length + 10);
					data2 = this7;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data2,0,mr.data.length);
					mr.data = data2;
				}
			}
			mr.data[14] = 0;
		}
		var scale = new openfl_geom_Vector3D();
		scale.x = Math.sqrt(mr.data[0] * mr.data[0] + mr.data[1] * mr.data[1] + mr.data[2] * mr.data[2]);
		scale.y = Math.sqrt(mr.data[4] * mr.data[4] + mr.data[5] * mr.data[5] + mr.data[6] * mr.data[6]);
		scale.z = Math.sqrt(mr.data[8] * mr.data[8] + mr.data[9] * mr.data[9] + mr.data[10] * mr.data[10]);
		if(mr.data[0] * (mr.data[5] * mr.data[10] - mr.data[6] * mr.data[9]) - mr.data[1] * (mr.data[4] * mr.data[10] - mr.data[6] * mr.data[8]) + mr.data[2] * (mr.data[4] * mr.data[9] - mr.data[5] * mr.data[8]) < 0) scale.z = -scale.z;
		{
			if(!mr.fixed) {
				if(0 >= mr.length) mr.length = 1;
				if(mr.data.length < mr.length) {
					var data3;
					var this8;
					this8 = new Array(mr.data.length + 10);
					data3 = this8;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data3,0,mr.data.length);
					mr.data = data3;
				}
			}
			mr.data[0] = mr.data[0] / scale.x;
		}
		{
			if(!mr.fixed) {
				if(1 >= mr.length) mr.length = 2;
				if(mr.data.length < mr.length) {
					var data4;
					var this9;
					this9 = new Array(mr.data.length + 10);
					data4 = this9;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data4,0,mr.data.length);
					mr.data = data4;
				}
			}
			mr.data[1] = mr.data[1] / scale.x;
		}
		{
			if(!mr.fixed) {
				if(2 >= mr.length) mr.length = 3;
				if(mr.data.length < mr.length) {
					var data5;
					var this10;
					this10 = new Array(mr.data.length + 10);
					data5 = this10;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data5,0,mr.data.length);
					mr.data = data5;
				}
			}
			mr.data[2] = mr.data[2] / scale.x;
		}
		{
			if(!mr.fixed) {
				if(4 >= mr.length) mr.length = 5;
				if(mr.data.length < mr.length) {
					var data6;
					var this11;
					this11 = new Array(mr.data.length + 10);
					data6 = this11;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data6,0,mr.data.length);
					mr.data = data6;
				}
			}
			mr.data[4] = mr.data[4] / scale.y;
		}
		{
			if(!mr.fixed) {
				if(5 >= mr.length) mr.length = 6;
				if(mr.data.length < mr.length) {
					var data7;
					var this12;
					this12 = new Array(mr.data.length + 10);
					data7 = this12;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data7,0,mr.data.length);
					mr.data = data7;
				}
			}
			mr.data[5] = mr.data[5] / scale.y;
		}
		{
			if(!mr.fixed) {
				if(6 >= mr.length) mr.length = 7;
				if(mr.data.length < mr.length) {
					var data8;
					var this13;
					this13 = new Array(mr.data.length + 10);
					data8 = this13;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data8,0,mr.data.length);
					mr.data = data8;
				}
			}
			mr.data[6] = mr.data[6] / scale.y;
		}
		{
			if(!mr.fixed) {
				if(8 >= mr.length) mr.length = 9;
				if(mr.data.length < mr.length) {
					var data9;
					var this14;
					this14 = new Array(mr.data.length + 10);
					data9 = this14;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data9,0,mr.data.length);
					mr.data = data9;
				}
			}
			mr.data[8] = mr.data[8] / scale.z;
		}
		{
			if(!mr.fixed) {
				if(9 >= mr.length) mr.length = 10;
				if(mr.data.length < mr.length) {
					var data10;
					var this15;
					this15 = new Array(mr.data.length + 10);
					data10 = this15;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data10,0,mr.data.length);
					mr.data = data10;
				}
			}
			mr.data[9] = mr.data[9] / scale.z;
		}
		{
			if(!mr.fixed) {
				if(10 >= mr.length) mr.length = 11;
				if(mr.data.length < mr.length) {
					var data11;
					var this16;
					this16 = new Array(mr.data.length + 10);
					data11 = this16;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data11,0,mr.data.length);
					mr.data = data11;
				}
			}
			mr.data[10] = mr.data[10] / scale.z;
		}
		var rot = new openfl_geom_Vector3D();
		if(orientationStyle != null) switch(orientationStyle) {
		case 0:
			rot.w = Math.acos((mr.data[0] + mr.data[5] + mr.data[10] - 1) / 2);
			var len = Math.sqrt((mr.data[6] - mr.data[9]) * (mr.data[6] - mr.data[9]) + (mr.data[8] - mr.data[2]) * (mr.data[8] - mr.data[2]) + (mr.data[1] - mr.data[4]) * (mr.data[1] - mr.data[4]));
			if(len != 0) {
				rot.x = (mr.data[6] - mr.data[9]) / len;
				rot.y = (mr.data[8] - mr.data[2]) / len;
				rot.z = (mr.data[1] - mr.data[4]) / len;
			} else rot.x = rot.y = rot.z = 0;
			break;
		case 2:
			var tr = mr.data[0] + mr.data[5] + mr.data[10];
			if(tr > 0) {
				rot.w = Math.sqrt(1 + tr) / 2;
				rot.x = (mr.data[6] - mr.data[9]) / (4 * rot.w);
				rot.y = (mr.data[8] - mr.data[2]) / (4 * rot.w);
				rot.z = (mr.data[1] - mr.data[4]) / (4 * rot.w);
			} else if(mr.data[0] > mr.data[5] && mr.data[0] > mr.data[10]) {
				rot.x = Math.sqrt(1 + mr.data[0] - mr.data[5] - mr.data[10]) / 2;
				rot.w = (mr.data[6] - mr.data[9]) / (4 * rot.x);
				rot.y = (mr.data[1] + mr.data[4]) / (4 * rot.x);
				rot.z = (mr.data[8] + mr.data[2]) / (4 * rot.x);
			} else if(mr.data[5] > mr.data[10]) {
				rot.y = Math.sqrt(1 + mr.data[5] - mr.data[0] - mr.data[10]) / 2;
				rot.x = (mr.data[1] + mr.data[4]) / (4 * rot.y);
				rot.w = (mr.data[8] - mr.data[2]) / (4 * rot.y);
				rot.z = (mr.data[6] + mr.data[9]) / (4 * rot.y);
			} else {
				rot.z = Math.sqrt(1 + mr.data[10] - mr.data[0] - mr.data[5]) / 2;
				rot.x = (mr.data[8] + mr.data[2]) / (4 * rot.z);
				rot.y = (mr.data[6] + mr.data[9]) / (4 * rot.z);
				rot.w = (mr.data[1] - mr.data[4]) / (4 * rot.z);
			}
			break;
		case 1:
			rot.y = Math.asin(-mr.data[2]);
			if(mr.data[2] != 1 && mr.data[2] != -1) {
				rot.x = Math.atan2(mr.data[6],mr.data[10]);
				rot.z = Math.atan2(mr.data[1],mr.data[0]);
			} else {
				rot.z = 0;
				rot.x = Math.atan2(mr.data[4],mr.data[5]);
			}
			break;
		}
		if(!vec.fixed) {
			vec.length++;
			if(vec.data.length < vec.length) {
				var data12;
				var this17;
				this17 = new Array(vec.data.length + 10);
				data12 = this17;
				haxe_ds__$Vector_Vector_$Impl_$.blit(vec.data,0,data12,0,vec.data.length);
				vec.data = data12;
			}
			vec.data[vec.length - 1] = pos;
		}
		vec.length;
		if(!vec.fixed) {
			vec.length++;
			if(vec.data.length < vec.length) {
				var data13;
				var this18;
				this18 = new Array(vec.data.length + 10);
				data13 = this18;
				haxe_ds__$Vector_Vector_$Impl_$.blit(vec.data,0,data13,0,vec.data.length);
				vec.data = data13;
			}
			vec.data[vec.length - 1] = rot;
		}
		vec.length;
		if(!vec.fixed) {
			vec.length++;
			if(vec.data.length < vec.length) {
				var data14;
				var this19;
				this19 = new Array(vec.data.length + 10);
				data14 = this19;
				haxe_ds__$Vector_Vector_$Impl_$.blit(vec.data,0,data14,0,vec.data.length);
				vec.data = data14;
			}
			vec.data[vec.length - 1] = scale;
		}
		vec.length;
		return vec;
	}
	,deltaTransformVector: function(v) {
		var x = v.x;
		var y = v.y;
		var z = v.z;
		return new openfl_geom_Vector3D(x * this.rawData.data[0] + y * this.rawData.data[4] + z * this.rawData.data[8] + this.rawData.data[3],x * this.rawData.data[1] + y * this.rawData.data[5] + z * this.rawData.data[9] + this.rawData.data[7],x * this.rawData.data[2] + y * this.rawData.data[6] + z * this.rawData.data[10] + this.rawData.data[11],0);
	}
	,identity: function() {
		{
			var value = [1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0];
			var vectorData = new openfl_VectorData();
			vectorData.length = value.length;
			vectorData.fixed = true;
			var vec;
			var this1;
			this1 = new Array(value.length);
			vec = this1;
			var _g1 = 0;
			var _g = value.length;
			while(_g1 < _g) {
				var i = _g1++;
				vec[i] = value[i];
			}
			vectorData.data = vec;
			this.rawData = vectorData;
		}
	}
	,interpolateTo: function(toMat,percent) {
		var _g = 0;
		while(_g < 16) {
			var i = _g++;
			var this1 = this.rawData;
			if(!this1.fixed) {
				if(i >= this1.length) this1.length = i + 1;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
			}
			this1.data[i] = this.rawData.data[i] + (toMat.rawData.data[i] - this.rawData.data[i]) * percent;
		}
	}
	,invert: function() {
		var d = this.get_determinant();
		var invertable = Math.abs(d) > 0.00000000001;
		if(invertable) {
			d = 1 / d;
			var m11 = this.rawData.data[0];
			var m21 = this.rawData.data[4];
			var m31 = this.rawData.data[8];
			var m41 = this.rawData.data[12];
			var m12 = this.rawData.data[1];
			var m22 = this.rawData.data[5];
			var m32 = this.rawData.data[9];
			var m42 = this.rawData.data[13];
			var m13 = this.rawData.data[2];
			var m23 = this.rawData.data[6];
			var m33 = this.rawData.data[10];
			var m43 = this.rawData.data[14];
			var m14 = this.rawData.data[3];
			var m24 = this.rawData.data[7];
			var m34 = this.rawData.data[11];
			var m44 = this.rawData.data[15];
			var this1 = this.rawData;
			if(!this1.fixed) {
				if(0 >= this1.length) this1.length = 1;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
			}
			this1.data[0] = d * (m22 * (m33 * m44 - m43 * m34) - m32 * (m23 * m44 - m43 * m24) + m42 * (m23 * m34 - m33 * m24));
			var this3 = this.rawData;
			if(!this3.fixed) {
				if(1 >= this3.length) this3.length = 2;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
			}
			this3.data[1] = -d * (m12 * (m33 * m44 - m43 * m34) - m32 * (m13 * m44 - m43 * m14) + m42 * (m13 * m34 - m33 * m14));
			var this5 = this.rawData;
			if(!this5.fixed) {
				if(2 >= this5.length) this5.length = 3;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
			}
			this5.data[2] = d * (m12 * (m23 * m44 - m43 * m24) - m22 * (m13 * m44 - m43 * m14) + m42 * (m13 * m24 - m23 * m14));
			var this7 = this.rawData;
			if(!this7.fixed) {
				if(3 >= this7.length) this7.length = 4;
				if(this7.data.length < this7.length) {
					var data3;
					var this8;
					this8 = new Array(this7.data.length + 10);
					data3 = this8;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
					this7.data = data3;
				}
			}
			this7.data[3] = -d * (m12 * (m23 * m34 - m33 * m24) - m22 * (m13 * m34 - m33 * m14) + m32 * (m13 * m24 - m23 * m14));
			var this9 = this.rawData;
			if(!this9.fixed) {
				if(4 >= this9.length) this9.length = 5;
				if(this9.data.length < this9.length) {
					var data4;
					var this10;
					this10 = new Array(this9.data.length + 10);
					data4 = this10;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
					this9.data = data4;
				}
			}
			this9.data[4] = -d * (m21 * (m33 * m44 - m43 * m34) - m31 * (m23 * m44 - m43 * m24) + m41 * (m23 * m34 - m33 * m24));
			var this11 = this.rawData;
			if(!this11.fixed) {
				if(5 >= this11.length) this11.length = 6;
				if(this11.data.length < this11.length) {
					var data5;
					var this12;
					this12 = new Array(this11.data.length + 10);
					data5 = this12;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
					this11.data = data5;
				}
			}
			this11.data[5] = d * (m11 * (m33 * m44 - m43 * m34) - m31 * (m13 * m44 - m43 * m14) + m41 * (m13 * m34 - m33 * m14));
			var this13 = this.rawData;
			if(!this13.fixed) {
				if(6 >= this13.length) this13.length = 7;
				if(this13.data.length < this13.length) {
					var data6;
					var this14;
					this14 = new Array(this13.data.length + 10);
					data6 = this14;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
					this13.data = data6;
				}
			}
			this13.data[6] = -d * (m11 * (m23 * m44 - m43 * m24) - m21 * (m13 * m44 - m43 * m14) + m41 * (m13 * m24 - m23 * m14));
			var this15 = this.rawData;
			if(!this15.fixed) {
				if(7 >= this15.length) this15.length = 8;
				if(this15.data.length < this15.length) {
					var data7;
					var this16;
					this16 = new Array(this15.data.length + 10);
					data7 = this16;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
					this15.data = data7;
				}
			}
			this15.data[7] = d * (m11 * (m23 * m34 - m33 * m24) - m21 * (m13 * m34 - m33 * m14) + m31 * (m13 * m24 - m23 * m14));
			var this17 = this.rawData;
			if(!this17.fixed) {
				if(8 >= this17.length) this17.length = 9;
				if(this17.data.length < this17.length) {
					var data8;
					var this18;
					this18 = new Array(this17.data.length + 10);
					data8 = this18;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
					this17.data = data8;
				}
			}
			this17.data[8] = d * (m21 * (m32 * m44 - m42 * m34) - m31 * (m22 * m44 - m42 * m24) + m41 * (m22 * m34 - m32 * m24));
			var this19 = this.rawData;
			if(!this19.fixed) {
				if(9 >= this19.length) this19.length = 10;
				if(this19.data.length < this19.length) {
					var data9;
					var this20;
					this20 = new Array(this19.data.length + 10);
					data9 = this20;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data9,0,this19.data.length);
					this19.data = data9;
				}
			}
			this19.data[9] = -d * (m11 * (m32 * m44 - m42 * m34) - m31 * (m12 * m44 - m42 * m14) + m41 * (m12 * m34 - m32 * m14));
			var this21 = this.rawData;
			if(!this21.fixed) {
				if(10 >= this21.length) this21.length = 11;
				if(this21.data.length < this21.length) {
					var data10;
					var this22;
					this22 = new Array(this21.data.length + 10);
					data10 = this22;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data10,0,this21.data.length);
					this21.data = data10;
				}
			}
			this21.data[10] = d * (m11 * (m22 * m44 - m42 * m24) - m21 * (m12 * m44 - m42 * m14) + m41 * (m12 * m24 - m22 * m14));
			var this23 = this.rawData;
			if(!this23.fixed) {
				if(11 >= this23.length) this23.length = 12;
				if(this23.data.length < this23.length) {
					var data11;
					var this24;
					this24 = new Array(this23.data.length + 10);
					data11 = this24;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data11,0,this23.data.length);
					this23.data = data11;
				}
			}
			this23.data[11] = -d * (m11 * (m22 * m34 - m32 * m24) - m21 * (m12 * m34 - m32 * m14) + m31 * (m12 * m24 - m22 * m14));
			var this25 = this.rawData;
			if(!this25.fixed) {
				if(12 >= this25.length) this25.length = 13;
				if(this25.data.length < this25.length) {
					var data12;
					var this26;
					this26 = new Array(this25.data.length + 10);
					data12 = this26;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data12,0,this25.data.length);
					this25.data = data12;
				}
			}
			this25.data[12] = -d * (m21 * (m32 * m43 - m42 * m33) - m31 * (m22 * m43 - m42 * m23) + m41 * (m22 * m33 - m32 * m23));
			var this27 = this.rawData;
			if(!this27.fixed) {
				if(13 >= this27.length) this27.length = 14;
				if(this27.data.length < this27.length) {
					var data13;
					var this28;
					this28 = new Array(this27.data.length + 10);
					data13 = this28;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this27.data,0,data13,0,this27.data.length);
					this27.data = data13;
				}
			}
			this27.data[13] = d * (m11 * (m32 * m43 - m42 * m33) - m31 * (m12 * m43 - m42 * m13) + m41 * (m12 * m33 - m32 * m13));
			var this29 = this.rawData;
			if(!this29.fixed) {
				if(14 >= this29.length) this29.length = 15;
				if(this29.data.length < this29.length) {
					var data14;
					var this30;
					this30 = new Array(this29.data.length + 10);
					data14 = this30;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this29.data,0,data14,0,this29.data.length);
					this29.data = data14;
				}
			}
			this29.data[14] = -d * (m11 * (m22 * m43 - m42 * m23) - m21 * (m12 * m43 - m42 * m13) + m41 * (m12 * m23 - m22 * m13));
			var this31 = this.rawData;
			if(!this31.fixed) {
				if(15 >= this31.length) this31.length = 16;
				if(this31.data.length < this31.length) {
					var data15;
					var this32;
					this32 = new Array(this31.data.length + 10);
					data15 = this32;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this31.data,0,data15,0,this31.data.length);
					this31.data = data15;
				}
			}
			this31.data[15] = d * (m11 * (m22 * m33 - m32 * m23) - m21 * (m12 * m33 - m32 * m13) + m31 * (m12 * m23 - m22 * m13));
		}
		return invertable;
	}
	,pointAt: function(pos,at,up) {
		if(at == null) at = new openfl_geom_Vector3D(0,0,-1);
		if(up == null) up = new openfl_geom_Vector3D(0,-1,0);
		var dir = at.subtract(pos);
		var vup = up.clone();
		var right;
		dir.normalize();
		vup.normalize();
		var dir2 = dir.clone();
		dir2.scaleBy(vup.dotProduct(dir));
		vup = vup.subtract(dir2);
		if(vup.get_length() > 0) vup.normalize(); else if(dir.x != 0) vup = new openfl_geom_Vector3D(-dir.y,dir.x,0); else vup = new openfl_geom_Vector3D(1,0,0);
		right = vup.crossProduct(dir);
		right.normalize();
		var this1 = this.rawData;
		if(!this1.fixed) {
			if(0 >= this1.length) this1.length = 1;
			if(this1.data.length < this1.length) {
				var data;
				var this2;
				this2 = new Array(this1.data.length + 10);
				data = this2;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
				this1.data = data;
			}
		}
		this1.data[0] = right.x;
		var this3 = this.rawData;
		if(!this3.fixed) {
			if(4 >= this3.length) this3.length = 5;
			if(this3.data.length < this3.length) {
				var data1;
				var this4;
				this4 = new Array(this3.data.length + 10);
				data1 = this4;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
				this3.data = data1;
			}
		}
		this3.data[4] = right.y;
		var this5 = this.rawData;
		if(!this5.fixed) {
			if(8 >= this5.length) this5.length = 9;
			if(this5.data.length < this5.length) {
				var data2;
				var this6;
				this6 = new Array(this5.data.length + 10);
				data2 = this6;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
				this5.data = data2;
			}
		}
		this5.data[8] = right.z;
		var this7 = this.rawData;
		if(!this7.fixed) {
			if(12 >= this7.length) this7.length = 13;
			if(this7.data.length < this7.length) {
				var data3;
				var this8;
				this8 = new Array(this7.data.length + 10);
				data3 = this8;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
				this7.data = data3;
			}
		}
		this7.data[12] = 0.0;
		var this9 = this.rawData;
		if(!this9.fixed) {
			if(1 >= this9.length) this9.length = 2;
			if(this9.data.length < this9.length) {
				var data4;
				var this10;
				this10 = new Array(this9.data.length + 10);
				data4 = this10;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
				this9.data = data4;
			}
		}
		this9.data[1] = vup.x;
		var this11 = this.rawData;
		if(!this11.fixed) {
			if(5 >= this11.length) this11.length = 6;
			if(this11.data.length < this11.length) {
				var data5;
				var this12;
				this12 = new Array(this11.data.length + 10);
				data5 = this12;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
				this11.data = data5;
			}
		}
		this11.data[5] = vup.y;
		var this13 = this.rawData;
		if(!this13.fixed) {
			if(9 >= this13.length) this13.length = 10;
			if(this13.data.length < this13.length) {
				var data6;
				var this14;
				this14 = new Array(this13.data.length + 10);
				data6 = this14;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
				this13.data = data6;
			}
		}
		this13.data[9] = vup.z;
		var this15 = this.rawData;
		if(!this15.fixed) {
			if(13 >= this15.length) this15.length = 14;
			if(this15.data.length < this15.length) {
				var data7;
				var this16;
				this16 = new Array(this15.data.length + 10);
				data7 = this16;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
				this15.data = data7;
			}
		}
		this15.data[13] = 0.0;
		var this17 = this.rawData;
		if(!this17.fixed) {
			if(2 >= this17.length) this17.length = 3;
			if(this17.data.length < this17.length) {
				var data8;
				var this18;
				this18 = new Array(this17.data.length + 10);
				data8 = this18;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
				this17.data = data8;
			}
		}
		this17.data[2] = dir.x;
		var this19 = this.rawData;
		if(!this19.fixed) {
			if(6 >= this19.length) this19.length = 7;
			if(this19.data.length < this19.length) {
				var data9;
				var this20;
				this20 = new Array(this19.data.length + 10);
				data9 = this20;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data9,0,this19.data.length);
				this19.data = data9;
			}
		}
		this19.data[6] = dir.y;
		var this21 = this.rawData;
		if(!this21.fixed) {
			if(10 >= this21.length) this21.length = 11;
			if(this21.data.length < this21.length) {
				var data10;
				var this22;
				this22 = new Array(this21.data.length + 10);
				data10 = this22;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data10,0,this21.data.length);
				this21.data = data10;
			}
		}
		this21.data[10] = dir.z;
		var this23 = this.rawData;
		if(!this23.fixed) {
			if(14 >= this23.length) this23.length = 15;
			if(this23.data.length < this23.length) {
				var data11;
				var this24;
				this24 = new Array(this23.data.length + 10);
				data11 = this24;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data11,0,this23.data.length);
				this23.data = data11;
			}
		}
		this23.data[14] = 0.0;
		var this25 = this.rawData;
		if(!this25.fixed) {
			if(3 >= this25.length) this25.length = 4;
			if(this25.data.length < this25.length) {
				var data12;
				var this26;
				this26 = new Array(this25.data.length + 10);
				data12 = this26;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data12,0,this25.data.length);
				this25.data = data12;
			}
		}
		this25.data[3] = pos.x;
		var this27 = this.rawData;
		if(!this27.fixed) {
			if(7 >= this27.length) this27.length = 8;
			if(this27.data.length < this27.length) {
				var data13;
				var this28;
				this28 = new Array(this27.data.length + 10);
				data13 = this28;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this27.data,0,data13,0,this27.data.length);
				this27.data = data13;
			}
		}
		this27.data[7] = pos.y;
		var this29 = this.rawData;
		if(!this29.fixed) {
			if(11 >= this29.length) this29.length = 12;
			if(this29.data.length < this29.length) {
				var data14;
				var this30;
				this30 = new Array(this29.data.length + 10);
				data14 = this30;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this29.data,0,data14,0,this29.data.length);
				this29.data = data14;
			}
		}
		this29.data[11] = pos.z;
		var this31 = this.rawData;
		if(!this31.fixed) {
			if(15 >= this31.length) this31.length = 16;
			if(this31.data.length < this31.length) {
				var data15;
				var this32;
				this32 = new Array(this31.data.length + 10);
				data15 = this32;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this31.data,0,data15,0,this31.data.length);
				this31.data = data15;
			}
		}
		this31.data[15] = 1.0;
	}
	,prepend: function(rhs) {
		var m111 = rhs.rawData.data[0];
		var m121 = rhs.rawData.data[4];
		var m131 = rhs.rawData.data[8];
		var m141 = rhs.rawData.data[12];
		var m112 = rhs.rawData.data[1];
		var m122 = rhs.rawData.data[5];
		var m132 = rhs.rawData.data[9];
		var m142 = rhs.rawData.data[13];
		var m113 = rhs.rawData.data[2];
		var m123 = rhs.rawData.data[6];
		var m133 = rhs.rawData.data[10];
		var m143 = rhs.rawData.data[14];
		var m114 = rhs.rawData.data[3];
		var m124 = rhs.rawData.data[7];
		var m134 = rhs.rawData.data[11];
		var m144 = rhs.rawData.data[15];
		var m211 = this.rawData.data[0];
		var m221 = this.rawData.data[4];
		var m231 = this.rawData.data[8];
		var m241 = this.rawData.data[12];
		var m212 = this.rawData.data[1];
		var m222 = this.rawData.data[5];
		var m232 = this.rawData.data[9];
		var m242 = this.rawData.data[13];
		var m213 = this.rawData.data[2];
		var m223 = this.rawData.data[6];
		var m233 = this.rawData.data[10];
		var m243 = this.rawData.data[14];
		var m214 = this.rawData.data[3];
		var m224 = this.rawData.data[7];
		var m234 = this.rawData.data[11];
		var m244 = this.rawData.data[15];
		var this1 = this.rawData;
		if(!this1.fixed) {
			if(0 >= this1.length) this1.length = 1;
			if(this1.data.length < this1.length) {
				var data;
				var this2;
				this2 = new Array(this1.data.length + 10);
				data = this2;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
				this1.data = data;
			}
		}
		this1.data[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;
		var this3 = this.rawData;
		if(!this3.fixed) {
			if(1 >= this3.length) this3.length = 2;
			if(this3.data.length < this3.length) {
				var data1;
				var this4;
				this4 = new Array(this3.data.length + 10);
				data1 = this4;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
				this3.data = data1;
			}
		}
		this3.data[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;
		var this5 = this.rawData;
		if(!this5.fixed) {
			if(2 >= this5.length) this5.length = 3;
			if(this5.data.length < this5.length) {
				var data2;
				var this6;
				this6 = new Array(this5.data.length + 10);
				data2 = this6;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
				this5.data = data2;
			}
		}
		this5.data[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;
		var this7 = this.rawData;
		if(!this7.fixed) {
			if(3 >= this7.length) this7.length = 4;
			if(this7.data.length < this7.length) {
				var data3;
				var this8;
				this8 = new Array(this7.data.length + 10);
				data3 = this8;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
				this7.data = data3;
			}
		}
		this7.data[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;
		var this9 = this.rawData;
		if(!this9.fixed) {
			if(4 >= this9.length) this9.length = 5;
			if(this9.data.length < this9.length) {
				var data4;
				var this10;
				this10 = new Array(this9.data.length + 10);
				data4 = this10;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
				this9.data = data4;
			}
		}
		this9.data[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;
		var this11 = this.rawData;
		if(!this11.fixed) {
			if(5 >= this11.length) this11.length = 6;
			if(this11.data.length < this11.length) {
				var data5;
				var this12;
				this12 = new Array(this11.data.length + 10);
				data5 = this12;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
				this11.data = data5;
			}
		}
		this11.data[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;
		var this13 = this.rawData;
		if(!this13.fixed) {
			if(6 >= this13.length) this13.length = 7;
			if(this13.data.length < this13.length) {
				var data6;
				var this14;
				this14 = new Array(this13.data.length + 10);
				data6 = this14;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
				this13.data = data6;
			}
		}
		this13.data[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;
		var this15 = this.rawData;
		if(!this15.fixed) {
			if(7 >= this15.length) this15.length = 8;
			if(this15.data.length < this15.length) {
				var data7;
				var this16;
				this16 = new Array(this15.data.length + 10);
				data7 = this16;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
				this15.data = data7;
			}
		}
		this15.data[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;
		var this17 = this.rawData;
		if(!this17.fixed) {
			if(8 >= this17.length) this17.length = 9;
			if(this17.data.length < this17.length) {
				var data8;
				var this18;
				this18 = new Array(this17.data.length + 10);
				data8 = this18;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
				this17.data = data8;
			}
		}
		this17.data[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;
		var this19 = this.rawData;
		if(!this19.fixed) {
			if(9 >= this19.length) this19.length = 10;
			if(this19.data.length < this19.length) {
				var data9;
				var this20;
				this20 = new Array(this19.data.length + 10);
				data9 = this20;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data9,0,this19.data.length);
				this19.data = data9;
			}
		}
		this19.data[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;
		var this21 = this.rawData;
		if(!this21.fixed) {
			if(10 >= this21.length) this21.length = 11;
			if(this21.data.length < this21.length) {
				var data10;
				var this22;
				this22 = new Array(this21.data.length + 10);
				data10 = this22;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data10,0,this21.data.length);
				this21.data = data10;
			}
		}
		this21.data[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;
		var this23 = this.rawData;
		if(!this23.fixed) {
			if(11 >= this23.length) this23.length = 12;
			if(this23.data.length < this23.length) {
				var data11;
				var this24;
				this24 = new Array(this23.data.length + 10);
				data11 = this24;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data11,0,this23.data.length);
				this23.data = data11;
			}
		}
		this23.data[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;
		var this25 = this.rawData;
		if(!this25.fixed) {
			if(12 >= this25.length) this25.length = 13;
			if(this25.data.length < this25.length) {
				var data12;
				var this26;
				this26 = new Array(this25.data.length + 10);
				data12 = this26;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data12,0,this25.data.length);
				this25.data = data12;
			}
		}
		this25.data[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;
		var this27 = this.rawData;
		if(!this27.fixed) {
			if(13 >= this27.length) this27.length = 14;
			if(this27.data.length < this27.length) {
				var data13;
				var this28;
				this28 = new Array(this27.data.length + 10);
				data13 = this28;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this27.data,0,data13,0,this27.data.length);
				this27.data = data13;
			}
		}
		this27.data[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;
		var this29 = this.rawData;
		if(!this29.fixed) {
			if(14 >= this29.length) this29.length = 15;
			if(this29.data.length < this29.length) {
				var data14;
				var this30;
				this30 = new Array(this29.data.length + 10);
				data14 = this30;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this29.data,0,data14,0,this29.data.length);
				this29.data = data14;
			}
		}
		this29.data[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;
		var this31 = this.rawData;
		if(!this31.fixed) {
			if(15 >= this31.length) this31.length = 16;
			if(this31.data.length < this31.length) {
				var data15;
				var this32;
				this32 = new Array(this31.data.length + 10);
				data15 = this32;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this31.data,0,data15,0,this31.data.length);
				this31.data = data15;
			}
		}
		this31.data[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;
	}
	,prependRotation: function(degrees,axis,pivotPoint) {
		var m = openfl_geom_Matrix3D.__getAxisRotation(axis.x,axis.y,axis.z,degrees);
		if(pivotPoint != null) {
			var p = pivotPoint;
			m.appendTranslation(p.x,p.y,p.z);
		}
		this.prepend(m);
	}
	,prependScale: function(xScale,yScale,zScale) {
		this.prepend(new openfl_geom_Matrix3D((function($this) {
			var $r;
			var value = [xScale,0.0,0.0,0.0,0.0,yScale,0.0,0.0,0.0,0.0,zScale,0.0,0.0,0.0,0.0,1.0];
			var vectorData = new openfl_VectorData();
			vectorData.length = value.length;
			vectorData.fixed = true;
			{
				var vec;
				var this1;
				this1 = new Array(value.length);
				vec = this1;
				var _g1 = 0;
				var _g = value.length;
				while(_g1 < _g) {
					var i = _g1++;
					vec[i] = value[i];
				}
				vectorData.data = vec;
			}
			$r = vectorData;
			return $r;
		}(this))));
	}
	,prependTranslation: function(x,y,z) {
		var m = new openfl_geom_Matrix3D();
		m.set_position(new openfl_geom_Vector3D(x,y,z));
		this.prepend(m);
	}
	,recompose: function(components,orientationStyle) {
		if(components.length < 3 || components.data[2].x == 0 || components.data[2].y == 0 || components.data[2].z == 0) return false;
		if(orientationStyle == null) orientationStyle = 1;
		this.identity();
		var scale = [];
		scale[0] = scale[1] = scale[2] = components.data[2].x;
		scale[4] = scale[5] = scale[6] = components.data[2].y;
		scale[8] = scale[9] = scale[10] = components.data[2].z;
		if(orientationStyle != null) switch(orientationStyle) {
		case 1:
			var cx = Math.cos(components.data[1].x);
			var cy = Math.cos(components.data[1].y);
			var cz = Math.cos(components.data[1].z);
			var sx = Math.sin(components.data[1].x);
			var sy = Math.sin(components.data[1].y);
			var sz = Math.sin(components.data[1].z);
			var this1 = this.rawData;
			if(!this1.fixed) {
				if(0 >= this1.length) this1.length = 1;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
			}
			this1.data[0] = cy * cz * scale[0];
			var this3 = this.rawData;
			if(!this3.fixed) {
				if(1 >= this3.length) this3.length = 2;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
			}
			this3.data[1] = cy * sz * scale[1];
			var this5 = this.rawData;
			if(!this5.fixed) {
				if(2 >= this5.length) this5.length = 3;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
			}
			this5.data[2] = -sy * scale[2];
			var this7 = this.rawData;
			if(!this7.fixed) {
				if(3 >= this7.length) this7.length = 4;
				if(this7.data.length < this7.length) {
					var data3;
					var this8;
					this8 = new Array(this7.data.length + 10);
					data3 = this8;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
					this7.data = data3;
				}
			}
			this7.data[3] = 0;
			var this9 = this.rawData;
			if(!this9.fixed) {
				if(4 >= this9.length) this9.length = 5;
				if(this9.data.length < this9.length) {
					var data4;
					var this10;
					this10 = new Array(this9.data.length + 10);
					data4 = this10;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
					this9.data = data4;
				}
			}
			this9.data[4] = (sx * sy * cz - cx * sz) * scale[4];
			var this11 = this.rawData;
			if(!this11.fixed) {
				if(5 >= this11.length) this11.length = 6;
				if(this11.data.length < this11.length) {
					var data5;
					var this12;
					this12 = new Array(this11.data.length + 10);
					data5 = this12;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
					this11.data = data5;
				}
			}
			this11.data[5] = (sx * sy * sz + cx * cz) * scale[5];
			var this13 = this.rawData;
			if(!this13.fixed) {
				if(6 >= this13.length) this13.length = 7;
				if(this13.data.length < this13.length) {
					var data6;
					var this14;
					this14 = new Array(this13.data.length + 10);
					data6 = this14;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
					this13.data = data6;
				}
			}
			this13.data[6] = sx * cy * scale[6];
			var this15 = this.rawData;
			if(!this15.fixed) {
				if(7 >= this15.length) this15.length = 8;
				if(this15.data.length < this15.length) {
					var data7;
					var this16;
					this16 = new Array(this15.data.length + 10);
					data7 = this16;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
					this15.data = data7;
				}
			}
			this15.data[7] = 0;
			var this17 = this.rawData;
			if(!this17.fixed) {
				if(8 >= this17.length) this17.length = 9;
				if(this17.data.length < this17.length) {
					var data8;
					var this18;
					this18 = new Array(this17.data.length + 10);
					data8 = this18;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
					this17.data = data8;
				}
			}
			this17.data[8] = (cx * sy * cz + sx * sz) * scale[8];
			var this19 = this.rawData;
			if(!this19.fixed) {
				if(9 >= this19.length) this19.length = 10;
				if(this19.data.length < this19.length) {
					var data9;
					var this20;
					this20 = new Array(this19.data.length + 10);
					data9 = this20;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data9,0,this19.data.length);
					this19.data = data9;
				}
			}
			this19.data[9] = (cx * sy * sz - sx * cz) * scale[9];
			var this21 = this.rawData;
			if(!this21.fixed) {
				if(10 >= this21.length) this21.length = 11;
				if(this21.data.length < this21.length) {
					var data10;
					var this22;
					this22 = new Array(this21.data.length + 10);
					data10 = this22;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data10,0,this21.data.length);
					this21.data = data10;
				}
			}
			this21.data[10] = cx * cy * scale[10];
			var this23 = this.rawData;
			if(!this23.fixed) {
				if(11 >= this23.length) this23.length = 12;
				if(this23.data.length < this23.length) {
					var data11;
					var this24;
					this24 = new Array(this23.data.length + 10);
					data11 = this24;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data11,0,this23.data.length);
					this23.data = data11;
				}
			}
			this23.data[11] = 0;
			var this25 = this.rawData;
			if(!this25.fixed) {
				if(12 >= this25.length) this25.length = 13;
				if(this25.data.length < this25.length) {
					var data12;
					var this26;
					this26 = new Array(this25.data.length + 10);
					data12 = this26;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data12,0,this25.data.length);
					this25.data = data12;
				}
			}
			this25.data[12] = components.data[0].x;
			var this27 = this.rawData;
			if(!this27.fixed) {
				if(13 >= this27.length) this27.length = 14;
				if(this27.data.length < this27.length) {
					var data13;
					var this28;
					this28 = new Array(this27.data.length + 10);
					data13 = this28;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this27.data,0,data13,0,this27.data.length);
					this27.data = data13;
				}
			}
			this27.data[13] = components.data[0].y;
			var this29 = this.rawData;
			if(!this29.fixed) {
				if(14 >= this29.length) this29.length = 15;
				if(this29.data.length < this29.length) {
					var data14;
					var this30;
					this30 = new Array(this29.data.length + 10);
					data14 = this30;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this29.data,0,data14,0,this29.data.length);
					this29.data = data14;
				}
			}
			this29.data[14] = components.data[0].z;
			var this31 = this.rawData;
			if(!this31.fixed) {
				if(15 >= this31.length) this31.length = 16;
				if(this31.data.length < this31.length) {
					var data15;
					var this32;
					this32 = new Array(this31.data.length + 10);
					data15 = this32;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this31.data,0,data15,0,this31.data.length);
					this31.data = data15;
				}
			}
			this31.data[15] = 1;
			break;
		default:
			var x = components.data[1].x;
			var y = components.data[1].y;
			var z = components.data[1].z;
			var w = components.data[1].w;
			if(Type.enumEq(orientationStyle,0)) {
				x *= Math.sin(w / 2);
				y *= Math.sin(w / 2);
				z *= Math.sin(w / 2);
				w = Math.cos(w / 2);
			}
			var this33 = this.rawData;
			if(!this33.fixed) {
				if(0 >= this33.length) this33.length = 1;
				if(this33.data.length < this33.length) {
					var data16;
					var this34;
					this34 = new Array(this33.data.length + 10);
					data16 = this34;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this33.data,0,data16,0,this33.data.length);
					this33.data = data16;
				}
			}
			this33.data[0] = (1 - 2 * y * y - 2 * z * z) * scale[0];
			var this35 = this.rawData;
			if(!this35.fixed) {
				if(1 >= this35.length) this35.length = 2;
				if(this35.data.length < this35.length) {
					var data17;
					var this36;
					this36 = new Array(this35.data.length + 10);
					data17 = this36;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this35.data,0,data17,0,this35.data.length);
					this35.data = data17;
				}
			}
			this35.data[1] = (2 * x * y + 2 * w * z) * scale[1];
			var this37 = this.rawData;
			if(!this37.fixed) {
				if(2 >= this37.length) this37.length = 3;
				if(this37.data.length < this37.length) {
					var data18;
					var this38;
					this38 = new Array(this37.data.length + 10);
					data18 = this38;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this37.data,0,data18,0,this37.data.length);
					this37.data = data18;
				}
			}
			this37.data[2] = (2 * x * z - 2 * w * y) * scale[2];
			var this39 = this.rawData;
			if(!this39.fixed) {
				if(3 >= this39.length) this39.length = 4;
				if(this39.data.length < this39.length) {
					var data19;
					var this40;
					this40 = new Array(this39.data.length + 10);
					data19 = this40;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this39.data,0,data19,0,this39.data.length);
					this39.data = data19;
				}
			}
			this39.data[3] = 0;
			var this41 = this.rawData;
			if(!this41.fixed) {
				if(4 >= this41.length) this41.length = 5;
				if(this41.data.length < this41.length) {
					var data20;
					var this42;
					this42 = new Array(this41.data.length + 10);
					data20 = this42;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this41.data,0,data20,0,this41.data.length);
					this41.data = data20;
				}
			}
			this41.data[4] = (2 * x * y - 2 * w * z) * scale[4];
			var this43 = this.rawData;
			if(!this43.fixed) {
				if(5 >= this43.length) this43.length = 6;
				if(this43.data.length < this43.length) {
					var data21;
					var this44;
					this44 = new Array(this43.data.length + 10);
					data21 = this44;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this43.data,0,data21,0,this43.data.length);
					this43.data = data21;
				}
			}
			this43.data[5] = (1 - 2 * x * x - 2 * z * z) * scale[5];
			var this45 = this.rawData;
			if(!this45.fixed) {
				if(6 >= this45.length) this45.length = 7;
				if(this45.data.length < this45.length) {
					var data22;
					var this46;
					this46 = new Array(this45.data.length + 10);
					data22 = this46;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this45.data,0,data22,0,this45.data.length);
					this45.data = data22;
				}
			}
			this45.data[6] = (2 * y * z + 2 * w * x) * scale[6];
			var this47 = this.rawData;
			if(!this47.fixed) {
				if(7 >= this47.length) this47.length = 8;
				if(this47.data.length < this47.length) {
					var data23;
					var this48;
					this48 = new Array(this47.data.length + 10);
					data23 = this48;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this47.data,0,data23,0,this47.data.length);
					this47.data = data23;
				}
			}
			this47.data[7] = 0;
			var this49 = this.rawData;
			if(!this49.fixed) {
				if(8 >= this49.length) this49.length = 9;
				if(this49.data.length < this49.length) {
					var data24;
					var this50;
					this50 = new Array(this49.data.length + 10);
					data24 = this50;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this49.data,0,data24,0,this49.data.length);
					this49.data = data24;
				}
			}
			this49.data[8] = (2 * x * z + 2 * w * y) * scale[8];
			var this51 = this.rawData;
			if(!this51.fixed) {
				if(9 >= this51.length) this51.length = 10;
				if(this51.data.length < this51.length) {
					var data25;
					var this52;
					this52 = new Array(this51.data.length + 10);
					data25 = this52;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this51.data,0,data25,0,this51.data.length);
					this51.data = data25;
				}
			}
			this51.data[9] = (2 * y * z - 2 * w * x) * scale[9];
			var this53 = this.rawData;
			if(!this53.fixed) {
				if(10 >= this53.length) this53.length = 11;
				if(this53.data.length < this53.length) {
					var data26;
					var this54;
					this54 = new Array(this53.data.length + 10);
					data26 = this54;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this53.data,0,data26,0,this53.data.length);
					this53.data = data26;
				}
			}
			this53.data[10] = (1 - 2 * x * x - 2 * y * y) * scale[10];
			var this55 = this.rawData;
			if(!this55.fixed) {
				if(11 >= this55.length) this55.length = 12;
				if(this55.data.length < this55.length) {
					var data27;
					var this56;
					this56 = new Array(this55.data.length + 10);
					data27 = this56;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this55.data,0,data27,0,this55.data.length);
					this55.data = data27;
				}
			}
			this55.data[11] = 0;
			var this57 = this.rawData;
			if(!this57.fixed) {
				if(12 >= this57.length) this57.length = 13;
				if(this57.data.length < this57.length) {
					var data28;
					var this58;
					this58 = new Array(this57.data.length + 10);
					data28 = this58;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this57.data,0,data28,0,this57.data.length);
					this57.data = data28;
				}
			}
			this57.data[12] = components.data[0].x;
			var this59 = this.rawData;
			if(!this59.fixed) {
				if(13 >= this59.length) this59.length = 14;
				if(this59.data.length < this59.length) {
					var data29;
					var this60;
					this60 = new Array(this59.data.length + 10);
					data29 = this60;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this59.data,0,data29,0,this59.data.length);
					this59.data = data29;
				}
			}
			this59.data[13] = components.data[0].y;
			var this61 = this.rawData;
			if(!this61.fixed) {
				if(14 >= this61.length) this61.length = 15;
				if(this61.data.length < this61.length) {
					var data30;
					var this62;
					this62 = new Array(this61.data.length + 10);
					data30 = this62;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this61.data,0,data30,0,this61.data.length);
					this61.data = data30;
				}
			}
			this61.data[14] = components.data[0].z;
			var this63 = this.rawData;
			if(!this63.fixed) {
				if(15 >= this63.length) this63.length = 16;
				if(this63.data.length < this63.length) {
					var data31;
					var this64;
					this64 = new Array(this63.data.length + 10);
					data31 = this64;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this63.data,0,data31,0,this63.data.length);
					this63.data = data31;
				}
			}
			this63.data[15] = 1;
		} else {
			var x = components.data[1].x;
			var y = components.data[1].y;
			var z = components.data[1].z;
			var w = components.data[1].w;
			if(Type.enumEq(orientationStyle,0)) {
				x *= Math.sin(w / 2);
				y *= Math.sin(w / 2);
				z *= Math.sin(w / 2);
				w = Math.cos(w / 2);
			}
			var this33 = this.rawData;
			if(!this33.fixed) {
				if(0 >= this33.length) this33.length = 1;
				if(this33.data.length < this33.length) {
					var data16;
					var this34;
					this34 = new Array(this33.data.length + 10);
					data16 = this34;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this33.data,0,data16,0,this33.data.length);
					this33.data = data16;
				}
			}
			this33.data[0] = (1 - 2 * y * y - 2 * z * z) * scale[0];
			var this35 = this.rawData;
			if(!this35.fixed) {
				if(1 >= this35.length) this35.length = 2;
				if(this35.data.length < this35.length) {
					var data17;
					var this36;
					this36 = new Array(this35.data.length + 10);
					data17 = this36;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this35.data,0,data17,0,this35.data.length);
					this35.data = data17;
				}
			}
			this35.data[1] = (2 * x * y + 2 * w * z) * scale[1];
			var this37 = this.rawData;
			if(!this37.fixed) {
				if(2 >= this37.length) this37.length = 3;
				if(this37.data.length < this37.length) {
					var data18;
					var this38;
					this38 = new Array(this37.data.length + 10);
					data18 = this38;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this37.data,0,data18,0,this37.data.length);
					this37.data = data18;
				}
			}
			this37.data[2] = (2 * x * z - 2 * w * y) * scale[2];
			var this39 = this.rawData;
			if(!this39.fixed) {
				if(3 >= this39.length) this39.length = 4;
				if(this39.data.length < this39.length) {
					var data19;
					var this40;
					this40 = new Array(this39.data.length + 10);
					data19 = this40;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this39.data,0,data19,0,this39.data.length);
					this39.data = data19;
				}
			}
			this39.data[3] = 0;
			var this41 = this.rawData;
			if(!this41.fixed) {
				if(4 >= this41.length) this41.length = 5;
				if(this41.data.length < this41.length) {
					var data20;
					var this42;
					this42 = new Array(this41.data.length + 10);
					data20 = this42;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this41.data,0,data20,0,this41.data.length);
					this41.data = data20;
				}
			}
			this41.data[4] = (2 * x * y - 2 * w * z) * scale[4];
			var this43 = this.rawData;
			if(!this43.fixed) {
				if(5 >= this43.length) this43.length = 6;
				if(this43.data.length < this43.length) {
					var data21;
					var this44;
					this44 = new Array(this43.data.length + 10);
					data21 = this44;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this43.data,0,data21,0,this43.data.length);
					this43.data = data21;
				}
			}
			this43.data[5] = (1 - 2 * x * x - 2 * z * z) * scale[5];
			var this45 = this.rawData;
			if(!this45.fixed) {
				if(6 >= this45.length) this45.length = 7;
				if(this45.data.length < this45.length) {
					var data22;
					var this46;
					this46 = new Array(this45.data.length + 10);
					data22 = this46;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this45.data,0,data22,0,this45.data.length);
					this45.data = data22;
				}
			}
			this45.data[6] = (2 * y * z + 2 * w * x) * scale[6];
			var this47 = this.rawData;
			if(!this47.fixed) {
				if(7 >= this47.length) this47.length = 8;
				if(this47.data.length < this47.length) {
					var data23;
					var this48;
					this48 = new Array(this47.data.length + 10);
					data23 = this48;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this47.data,0,data23,0,this47.data.length);
					this47.data = data23;
				}
			}
			this47.data[7] = 0;
			var this49 = this.rawData;
			if(!this49.fixed) {
				if(8 >= this49.length) this49.length = 9;
				if(this49.data.length < this49.length) {
					var data24;
					var this50;
					this50 = new Array(this49.data.length + 10);
					data24 = this50;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this49.data,0,data24,0,this49.data.length);
					this49.data = data24;
				}
			}
			this49.data[8] = (2 * x * z + 2 * w * y) * scale[8];
			var this51 = this.rawData;
			if(!this51.fixed) {
				if(9 >= this51.length) this51.length = 10;
				if(this51.data.length < this51.length) {
					var data25;
					var this52;
					this52 = new Array(this51.data.length + 10);
					data25 = this52;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this51.data,0,data25,0,this51.data.length);
					this51.data = data25;
				}
			}
			this51.data[9] = (2 * y * z - 2 * w * x) * scale[9];
			var this53 = this.rawData;
			if(!this53.fixed) {
				if(10 >= this53.length) this53.length = 11;
				if(this53.data.length < this53.length) {
					var data26;
					var this54;
					this54 = new Array(this53.data.length + 10);
					data26 = this54;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this53.data,0,data26,0,this53.data.length);
					this53.data = data26;
				}
			}
			this53.data[10] = (1 - 2 * x * x - 2 * y * y) * scale[10];
			var this55 = this.rawData;
			if(!this55.fixed) {
				if(11 >= this55.length) this55.length = 12;
				if(this55.data.length < this55.length) {
					var data27;
					var this56;
					this56 = new Array(this55.data.length + 10);
					data27 = this56;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this55.data,0,data27,0,this55.data.length);
					this55.data = data27;
				}
			}
			this55.data[11] = 0;
			var this57 = this.rawData;
			if(!this57.fixed) {
				if(12 >= this57.length) this57.length = 13;
				if(this57.data.length < this57.length) {
					var data28;
					var this58;
					this58 = new Array(this57.data.length + 10);
					data28 = this58;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this57.data,0,data28,0,this57.data.length);
					this57.data = data28;
				}
			}
			this57.data[12] = components.data[0].x;
			var this59 = this.rawData;
			if(!this59.fixed) {
				if(13 >= this59.length) this59.length = 14;
				if(this59.data.length < this59.length) {
					var data29;
					var this60;
					this60 = new Array(this59.data.length + 10);
					data29 = this60;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this59.data,0,data29,0,this59.data.length);
					this59.data = data29;
				}
			}
			this59.data[13] = components.data[0].y;
			var this61 = this.rawData;
			if(!this61.fixed) {
				if(14 >= this61.length) this61.length = 15;
				if(this61.data.length < this61.length) {
					var data30;
					var this62;
					this62 = new Array(this61.data.length + 10);
					data30 = this62;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this61.data,0,data30,0,this61.data.length);
					this61.data = data30;
				}
			}
			this61.data[14] = components.data[0].z;
			var this63 = this.rawData;
			if(!this63.fixed) {
				if(15 >= this63.length) this63.length = 16;
				if(this63.data.length < this63.length) {
					var data31;
					var this64;
					this64 = new Array(this63.data.length + 10);
					data31 = this64;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this63.data,0,data31,0,this63.data.length);
					this63.data = data31;
				}
			}
			this63.data[15] = 1;
		}
		if(components.data[2].x == 0) {
			var this65 = this.rawData;
			if(!this65.fixed) {
				if(0 >= this65.length) this65.length = 1;
				if(this65.data.length < this65.length) {
					var data32;
					var this66;
					this66 = new Array(this65.data.length + 10);
					data32 = this66;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this65.data,0,data32,0,this65.data.length);
					this65.data = data32;
				}
			}
			this65.data[0] = 1e-15;
		}
		if(components.data[2].y == 0) {
			var this67 = this.rawData;
			if(!this67.fixed) {
				if(5 >= this67.length) this67.length = 6;
				if(this67.data.length < this67.length) {
					var data33;
					var this68;
					this68 = new Array(this67.data.length + 10);
					data33 = this68;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this67.data,0,data33,0,this67.data.length);
					this67.data = data33;
				}
			}
			this67.data[5] = 1e-15;
		}
		if(components.data[2].z == 0) {
			var this69 = this.rawData;
			if(!this69.fixed) {
				if(10 >= this69.length) this69.length = 11;
				if(this69.data.length < this69.length) {
					var data34;
					var this70;
					this70 = new Array(this69.data.length + 10);
					data34 = this70;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this69.data,0,data34,0,this69.data.length);
					this69.data = data34;
				}
			}
			this69.data[10] = 1e-15;
		}
		return !(components.data[2].x == 0 || components.data[2].y == 0 || components.data[2].y == 0);
	}
	,transformVector: function(v) {
		var x = v.x;
		var y = v.y;
		var z = v.z;
		return new openfl_geom_Vector3D(x * this.rawData.data[0] + y * this.rawData.data[4] + z * this.rawData.data[8] + this.rawData.data[12],x * this.rawData.data[1] + y * this.rawData.data[5] + z * this.rawData.data[9] + this.rawData.data[13],x * this.rawData.data[2] + y * this.rawData.data[6] + z * this.rawData.data[10] + this.rawData.data[14],x * this.rawData.data[3] + y * this.rawData.data[7] + z * this.rawData.data[11] + this.rawData.data[15]);
	}
	,transformVectors: function(vin,vout) {
		var i = 0;
		var x;
		var y;
		var z;
		while(i + 3 <= vin.length) {
			x = vin.data[i];
			y = vin.data[i + 1];
			z = vin.data[i + 2];
			{
				if(!vout.fixed) {
					if(i >= vout.length) vout.length = i + 1;
					if(vout.data.length < vout.length) {
						var data;
						var this1;
						this1 = new Array(vout.data.length + 10);
						data = this1;
						haxe_ds__$Vector_Vector_$Impl_$.blit(vout.data,0,data,0,vout.data.length);
						vout.data = data;
					}
				}
				vout.data[i] = x * this.rawData.data[0] + y * this.rawData.data[4] + z * this.rawData.data[8] + this.rawData.data[12];
			}
			var key = i + 1;
			if(!vout.fixed) {
				if(key >= vout.length) vout.length = key + 1;
				if(vout.data.length < vout.length) {
					var data1;
					var this2;
					this2 = new Array(vout.data.length + 10);
					data1 = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(vout.data,0,data1,0,vout.data.length);
					vout.data = data1;
				}
			}
			vout.data[key] = x * this.rawData.data[1] + y * this.rawData.data[5] + z * this.rawData.data[9] + this.rawData.data[13];
			var key1 = i + 2;
			if(!vout.fixed) {
				if(key1 >= vout.length) vout.length = key1 + 1;
				if(vout.data.length < vout.length) {
					var data2;
					var this3;
					this3 = new Array(vout.data.length + 10);
					data2 = this3;
					haxe_ds__$Vector_Vector_$Impl_$.blit(vout.data,0,data2,0,vout.data.length);
					vout.data = data2;
				}
			}
			vout.data[key1] = x * this.rawData.data[2] + y * this.rawData.data[6] + z * this.rawData.data[10] + this.rawData.data[14];
			i += 3;
		}
	}
	,transpose: function() {
		var oRawData;
		var this1 = this.rawData;
		var vectorData = new openfl_VectorData();
		vectorData.length = this1.length;
		vectorData.fixed = this1.fixed;
		var this2;
		this2 = new Array(this1.length);
		vectorData.data = this2;
		haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,vectorData.data,0,this1.length);
		oRawData = vectorData;
		var this3 = this.rawData;
		if(!this3.fixed) {
			if(1 >= this3.length) this3.length = 2;
			if(this3.data.length < this3.length) {
				var data;
				var this4;
				this4 = new Array(this3.data.length + 10);
				data = this4;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data,0,this3.data.length);
				this3.data = data;
			}
		}
		this3.data[1] = oRawData.data[4];
		var this5 = this.rawData;
		if(!this5.fixed) {
			if(2 >= this5.length) this5.length = 3;
			if(this5.data.length < this5.length) {
				var data1;
				var this6;
				this6 = new Array(this5.data.length + 10);
				data1 = this6;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data1,0,this5.data.length);
				this5.data = data1;
			}
		}
		this5.data[2] = oRawData.data[8];
		var this7 = this.rawData;
		if(!this7.fixed) {
			if(3 >= this7.length) this7.length = 4;
			if(this7.data.length < this7.length) {
				var data2;
				var this8;
				this8 = new Array(this7.data.length + 10);
				data2 = this8;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data2,0,this7.data.length);
				this7.data = data2;
			}
		}
		this7.data[3] = oRawData.data[12];
		var this9 = this.rawData;
		if(!this9.fixed) {
			if(4 >= this9.length) this9.length = 5;
			if(this9.data.length < this9.length) {
				var data3;
				var this10;
				this10 = new Array(this9.data.length + 10);
				data3 = this10;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data3,0,this9.data.length);
				this9.data = data3;
			}
		}
		this9.data[4] = oRawData.data[1];
		var this11 = this.rawData;
		if(!this11.fixed) {
			if(6 >= this11.length) this11.length = 7;
			if(this11.data.length < this11.length) {
				var data4;
				var this12;
				this12 = new Array(this11.data.length + 10);
				data4 = this12;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data4,0,this11.data.length);
				this11.data = data4;
			}
		}
		this11.data[6] = oRawData.data[9];
		var this13 = this.rawData;
		if(!this13.fixed) {
			if(7 >= this13.length) this13.length = 8;
			if(this13.data.length < this13.length) {
				var data5;
				var this14;
				this14 = new Array(this13.data.length + 10);
				data5 = this14;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data5,0,this13.data.length);
				this13.data = data5;
			}
		}
		this13.data[7] = oRawData.data[13];
		var this15 = this.rawData;
		if(!this15.fixed) {
			if(8 >= this15.length) this15.length = 9;
			if(this15.data.length < this15.length) {
				var data6;
				var this16;
				this16 = new Array(this15.data.length + 10);
				data6 = this16;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data6,0,this15.data.length);
				this15.data = data6;
			}
		}
		this15.data[8] = oRawData.data[2];
		var this17 = this.rawData;
		if(!this17.fixed) {
			if(9 >= this17.length) this17.length = 10;
			if(this17.data.length < this17.length) {
				var data7;
				var this18;
				this18 = new Array(this17.data.length + 10);
				data7 = this18;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data7,0,this17.data.length);
				this17.data = data7;
			}
		}
		this17.data[9] = oRawData.data[6];
		var this19 = this.rawData;
		if(!this19.fixed) {
			if(11 >= this19.length) this19.length = 12;
			if(this19.data.length < this19.length) {
				var data8;
				var this20;
				this20 = new Array(this19.data.length + 10);
				data8 = this20;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data8,0,this19.data.length);
				this19.data = data8;
			}
		}
		this19.data[11] = oRawData.data[14];
		var this21 = this.rawData;
		if(!this21.fixed) {
			if(12 >= this21.length) this21.length = 13;
			if(this21.data.length < this21.length) {
				var data9;
				var this22;
				this22 = new Array(this21.data.length + 10);
				data9 = this22;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data9,0,this21.data.length);
				this21.data = data9;
			}
		}
		this21.data[12] = oRawData.data[3];
		var this23 = this.rawData;
		if(!this23.fixed) {
			if(13 >= this23.length) this23.length = 14;
			if(this23.data.length < this23.length) {
				var data10;
				var this24;
				this24 = new Array(this23.data.length + 10);
				data10 = this24;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data10,0,this23.data.length);
				this23.data = data10;
			}
		}
		this23.data[13] = oRawData.data[7];
		var this25 = this.rawData;
		if(!this25.fixed) {
			if(14 >= this25.length) this25.length = 15;
			if(this25.data.length < this25.length) {
				var data11;
				var this26;
				this26 = new Array(this25.data.length + 10);
				data11 = this26;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data11,0,this25.data.length);
				this25.data = data11;
			}
		}
		this25.data[14] = oRawData.data[11];
	}
	,get_determinant: function() {
		return (this.rawData.data[0] * this.rawData.data[5] - this.rawData.data[4] * this.rawData.data[1]) * (this.rawData.data[10] * this.rawData.data[15] - this.rawData.data[14] * this.rawData.data[11]) - (this.rawData.data[0] * this.rawData.data[9] - this.rawData.data[8] * this.rawData.data[1]) * (this.rawData.data[6] * this.rawData.data[15] - this.rawData.data[14] * this.rawData.data[7]) + (this.rawData.data[0] * this.rawData.data[13] - this.rawData.data[12] * this.rawData.data[1]) * (this.rawData.data[6] * this.rawData.data[11] - this.rawData.data[10] * this.rawData.data[7]) + (this.rawData.data[4] * this.rawData.data[9] - this.rawData.data[8] * this.rawData.data[5]) * (this.rawData.data[2] * this.rawData.data[15] - this.rawData.data[14] * this.rawData.data[3]) - (this.rawData.data[4] * this.rawData.data[13] - this.rawData.data[12] * this.rawData.data[5]) * (this.rawData.data[2] * this.rawData.data[11] - this.rawData.data[10] * this.rawData.data[3]) + (this.rawData.data[8] * this.rawData.data[13] - this.rawData.data[12] * this.rawData.data[9]) * (this.rawData.data[2] * this.rawData.data[7] - this.rawData.data[6] * this.rawData.data[3]);
	}
	,get_position: function() {
		return new openfl_geom_Vector3D(this.rawData.data[12],this.rawData.data[13],this.rawData.data[14]);
	}
	,set_position: function(val) {
		var this1 = this.rawData;
		if(!this1.fixed) {
			if(12 >= this1.length) this1.length = 13;
			if(this1.data.length < this1.length) {
				var data;
				var this2;
				this2 = new Array(this1.data.length + 10);
				data = this2;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
				this1.data = data;
			}
		}
		this1.data[12] = val.x;
		var this3 = this.rawData;
		if(!this3.fixed) {
			if(13 >= this3.length) this3.length = 14;
			if(this3.data.length < this3.length) {
				var data1;
				var this4;
				this4 = new Array(this3.data.length + 10);
				data1 = this4;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
				this3.data = data1;
			}
		}
		this3.data[13] = val.y;
		var this5 = this.rawData;
		if(!this5.fixed) {
			if(14 >= this5.length) this5.length = 15;
			if(this5.data.length < this5.length) {
				var data2;
				var this6;
				this6 = new Array(this5.data.length + 10);
				data2 = this6;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
				this5.data = data2;
			}
		}
		this5.data[14] = val.z;
		return val;
	}
	,__class__: openfl_geom_Matrix3D
	,__properties__: {set_position:"set_position",get_position:"get_position",get_determinant:"get_determinant"}
};
var openfl_geom__$Orientation3D_Orientation3D_$Impl_$ = {};
$hxClasses["openfl.geom._Orientation3D.Orientation3D_Impl_"] = openfl_geom__$Orientation3D_Orientation3D_$Impl_$;
openfl_geom__$Orientation3D_Orientation3D_$Impl_$.__name__ = ["openfl","geom","_Orientation3D","Orientation3D_Impl_"];
openfl_geom__$Orientation3D_Orientation3D_$Impl_$.fromString = function(value) {
	switch(value) {
	case "axisAngle":
		return 0;
	case "eulerAngles":
		return 1;
	case "quaternion":
		return 2;
	default:
		return null;
	}
};
openfl_geom__$Orientation3D_Orientation3D_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "axisAngle";
	case 1:
		return "eulerAngles";
	case 2:
		return "quaternion";
	default:
		return null;
	}
};
var openfl_geom_Transform = function(displayObject) {
	this.__colorTransform = new openfl_geom_ColorTransform();
	this.concatenatedColorTransform = new openfl_geom_ColorTransform();
	this.pixelBounds = new openfl_geom_Rectangle();
	this.__displayObject = displayObject;
	this.__hasMatrix = true;
};
$hxClasses["openfl.geom.Transform"] = openfl_geom_Transform;
openfl_geom_Transform.__name__ = ["openfl","geom","Transform"];
openfl_geom_Transform.prototype = {
	get_colorTransform: function() {
		return this.__colorTransform;
	}
	,set_colorTransform: function(value) {
		if(!this.__colorTransform.__equals(value)) {
			this.__colorTransform = value;
			if(value != null) this.__displayObject.set_alpha(value.alphaMultiplier);
			this.__displayObject.__setRenderDirty();
		}
		return this.__colorTransform;
	}
	,get_matrix: function() {
		if(this.__hasMatrix) return this.__displayObject.__transform.clone();
		return null;
	}
	,get_concatenatedMatrix: function() {
		if(this.__hasMatrix) return this.__displayObject.__getWorldTransform().clone();
		return null;
	}
	,set_matrix: function(value) {
		if(value == null) {
			this.__hasMatrix = false;
			return null;
		}
		this.__hasMatrix = true;
		this.__hasMatrix3D = false;
		if(this.__displayObject != null) {
			var rotation = 180 / Math.PI * Math.atan2(value.d,value.c) - 90;
			if(rotation != this.__displayObject.__rotation) {
				this.__displayObject.__rotation = rotation;
				var radians = rotation * (Math.PI / 180);
				this.__displayObject.__rotationSine = Math.sin(radians);
				this.__displayObject.__rotationCosine = Math.cos(radians);
			}
			this.__displayObject.__transform.copyFrom(value);
			this.__displayObject.__setTransformDirty();
		}
		return value;
	}
	,get_matrix3D: function() {
		if(this.__hasMatrix3D) {
			var matrix = this.__displayObject.__transform;
			return new openfl_geom_Matrix3D((function($this) {
				var $r;
				var value = [matrix.a,matrix.b,0.0,0.0,matrix.c,matrix.d,0.0,0.0,0.0,0.0,1.0,0.0,matrix.tx,matrix.ty,0.0,1.0];
				var vectorData = new openfl_VectorData();
				vectorData.length = value.length;
				vectorData.fixed = true;
				{
					var vec;
					var this1;
					this1 = new Array(value.length);
					vec = this1;
					var _g1 = 0;
					var _g = value.length;
					while(_g1 < _g) {
						var i = _g1++;
						vec[i] = value[i];
					}
					vectorData.data = vec;
				}
				$r = vectorData;
				return $r;
			}(this)));
		}
		return null;
	}
	,set_matrix3D: function(value) {
		if(value == null) {
			this.__hasMatrix3D = false;
			return null;
		}
		this.__hasMatrix = false;
		this.__hasMatrix3D = true;
		if(this.__displayObject != null) {
			var rotation = 180 / Math.PI * Math.atan2(value.rawData.data[5],value.rawData.data[4]) - 90;
			if(rotation != this.__displayObject.__rotation) {
				this.__displayObject.__rotation = rotation;
				var radians = rotation * (Math.PI / 180);
				this.__displayObject.__rotationSine = Math.sin(radians);
				this.__displayObject.__rotationCosine = Math.cos(radians);
			}
			this.__displayObject.__transform.a = value.rawData.data[0];
			this.__displayObject.__transform.b = value.rawData.data[1];
			this.__displayObject.__transform.c = value.rawData.data[5];
			this.__displayObject.__transform.d = value.rawData.data[6];
			this.__displayObject.__transform.tx = value.rawData.data[12];
			this.__displayObject.__transform.ty = value.rawData.data[13];
			this.__displayObject.__setTransformDirty();
		}
		return value;
	}
	,__class__: openfl_geom_Transform
	,__properties__: {set_matrix3D:"set_matrix3D",get_matrix3D:"get_matrix3D",set_matrix:"set_matrix",get_matrix:"get_matrix",get_concatenatedMatrix:"get_concatenatedMatrix",set_colorTransform:"set_colorTransform",get_colorTransform:"get_colorTransform"}
};
var openfl_geom_Vector3D = function(x,y,z,w) {
	if(w == null) w = 0;
	if(z == null) z = 0;
	if(y == null) y = 0;
	if(x == null) x = 0;
	this.w = w;
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["openfl.geom.Vector3D"] = openfl_geom_Vector3D;
openfl_geom_Vector3D.__name__ = ["openfl","geom","Vector3D"];
openfl_geom_Vector3D.__properties__ = {get_Z_AXIS:"get_Z_AXIS",get_Y_AXIS:"get_Y_AXIS",get_X_AXIS:"get_X_AXIS"}
openfl_geom_Vector3D.X_AXIS = null;
openfl_geom_Vector3D.Y_AXIS = null;
openfl_geom_Vector3D.Z_AXIS = null;
openfl_geom_Vector3D.angleBetween = function(a,b) {
	var la = a.get_length();
	var lb = b.get_length();
	var dot = a.dotProduct(b);
	if(la != 0) dot /= la;
	if(lb != 0) dot /= lb;
	return Math.acos(dot);
};
openfl_geom_Vector3D.distance = function(pt1,pt2) {
	var x = pt2.x - pt1.x;
	var y = pt2.y - pt1.y;
	var z = pt2.z - pt1.z;
	return Math.sqrt(x * x + y * y + z * z);
};
openfl_geom_Vector3D.get_X_AXIS = function() {
	return new openfl_geom_Vector3D(1,0,0);
};
openfl_geom_Vector3D.get_Y_AXIS = function() {
	return new openfl_geom_Vector3D(0,1,0);
};
openfl_geom_Vector3D.get_Z_AXIS = function() {
	return new openfl_geom_Vector3D(0,0,1);
};
openfl_geom_Vector3D.prototype = {
	add: function(a) {
		return new openfl_geom_Vector3D(this.x + a.x,this.y + a.y,this.z + a.z);
	}
	,clone: function() {
		return new openfl_geom_Vector3D(this.x,this.y,this.z,this.w);
	}
	,copyFrom: function(sourceVector3D) {
		this.x = sourceVector3D.x;
		this.y = sourceVector3D.y;
		this.z = sourceVector3D.z;
	}
	,crossProduct: function(a) {
		return new openfl_geom_Vector3D(this.y * a.z - this.z * a.y,this.z * a.x - this.x * a.z,this.x * a.y - this.y * a.x,1);
	}
	,decrementBy: function(a) {
		this.x -= a.x;
		this.y -= a.y;
		this.z -= a.z;
	}
	,dotProduct: function(a) {
		return this.x * a.x + this.y * a.y + this.z * a.z;
	}
	,equals: function(toCompare,allFour) {
		if(allFour == null) allFour = false;
		return this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w);
	}
	,incrementBy: function(a) {
		this.x += a.x;
		this.y += a.y;
		this.z += a.z;
	}
	,nearEquals: function(toCompare,tolerance,allFour) {
		if(allFour == null) allFour = false;
		return Math.abs(this.x - toCompare.x) < tolerance && Math.abs(this.y - toCompare.y) < tolerance && Math.abs(this.z - toCompare.z) < tolerance && (!allFour || Math.abs(this.w - toCompare.w) < tolerance);
	}
	,negate: function() {
		this.x *= -1;
		this.y *= -1;
		this.z *= -1;
	}
	,normalize: function() {
		var l = this.get_length();
		if(l != 0) {
			this.x /= l;
			this.y /= l;
			this.z /= l;
		}
		return l;
	}
	,project: function() {
		this.x /= this.w;
		this.y /= this.w;
		this.z /= this.w;
	}
	,scaleBy: function(s) {
		this.x *= s;
		this.y *= s;
		this.z *= s;
	}
	,setTo: function(xa,ya,za) {
		this.x = xa;
		this.y = ya;
		this.z = za;
	}
	,subtract: function(a) {
		return new openfl_geom_Vector3D(this.x - a.x,this.y - a.y,this.z - a.z);
	}
	,toString: function() {
		return "Vector3D(" + this.x + ", " + this.y + ", " + this.z + ")";
	}
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,get_lengthSquared: function() {
		return this.x * this.x + this.y * this.y + this.z * this.z;
	}
	,__class__: openfl_geom_Vector3D
	,__properties__: {get_lengthSquared:"get_lengthSquared",get_length:"get_length"}
};
var openfl_media_ID3Info = function() {
};
$hxClasses["openfl.media.ID3Info"] = openfl_media_ID3Info;
openfl_media_ID3Info.__name__ = ["openfl","media","ID3Info"];
openfl_media_ID3Info.prototype = {
	__class__: openfl_media_ID3Info
};
var openfl_media_Sound = function(stream,context) {
	openfl_events_EventDispatcher.call(this,this);
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.id3 = null;
	this.isBuffering = false;
	this.url = null;
	if(stream != null) this.load(stream,context);
};
$hxClasses["openfl.media.Sound"] = openfl_media_Sound;
openfl_media_Sound.__name__ = ["openfl","media","Sound"];
openfl_media_Sound.fromAudioBuffer = function(buffer) {
	var sound = new openfl_media_Sound();
	sound.__buffer = buffer;
	return sound;
};
openfl_media_Sound.fromFile = function(path) {
	return openfl_media_Sound.fromAudioBuffer(lime_audio_AudioBuffer.fromFile(path));
};
openfl_media_Sound.__super__ = openfl_events_EventDispatcher;
openfl_media_Sound.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	close: function() {
		if(openfl_media_Sound.__registeredSounds.exists(this.__soundID)) createjs.Sound.removeSound(this.__soundID);
	}
	,load: function(stream,context) {
		this.url = stream.url;
		this.__soundID = haxe_io_Path.withoutExtension(stream.url);
		if(!openfl_media_Sound.__registeredSounds.exists(this.__soundID)) {
			openfl_media_Sound.__registeredSounds.set(this.__soundID,true);
			createjs.Sound.addEventListener("fileload",$bind(this,this.SoundJS_onFileLoad));
			createjs.Sound.addEventListener("fileerror",$bind(this,this.SoundJS_onFileError));
			createjs.Sound.registerSound(this.url,this.__soundID);
		} else this.dispatchEvent(new openfl_events_Event("complete"));
	}
	,loadCompressedDataFromByteArray: function(bytes,bytesLength,forcePlayAsMusic) {
		if(forcePlayAsMusic == null) forcePlayAsMusic = false;
		openfl_Lib.notImplemented("Sound.loadCompressedDataFromByteArray");
	}
	,loadPCMFromByteArray: function(bytes,samples,format,stereo,sampleRate) {
		if(sampleRate == null) sampleRate = 44100;
		if(stereo == null) stereo = true;
		openfl_Lib.notImplemented("Sound.loadPCMFromByteArray");
	}
	,play: function(startTime,loops,sndTransform) {
		if(loops == null) loops = 0;
		if(startTime == null) startTime = 0.0;
		if(sndTransform == null) sndTransform = new openfl_media_SoundTransform(1,0);
		var pan = sndTransform.pan;
		if(pan == 0) pan = -0.0000001;
		var instance;
		if(loops > 1) instance = createjs.Sound.play(this.__soundID,"any",0,startTime | 0,loops - 1,sndTransform.volume,pan); else instance = createjs.Sound.play(this.__soundID,"any",0,startTime | 0,0,sndTransform.volume,pan);
		return new openfl_media_SoundChannel(instance);
	}
	,get_id3: function() {
		return new openfl_media_ID3Info();
	}
	,get_length: function() {
		if(this.__buffer != null) {
		}
		return 0;
	}
	,AudioBuffer_onURLLoad: function(buffer) {
		if(buffer == null) this.dispatchEvent(new openfl_events_IOErrorEvent("ioError")); else {
			this.__buffer = buffer;
			this.dispatchEvent(new openfl_events_Event("complete"));
		}
	}
	,SoundJS_onFileLoad: function(event) {
		if(event.id == this.__soundID) {
			createjs.Sound.removeEventListener("fileload",$bind(this,this.SoundJS_onFileLoad));
			createjs.Sound.removeEventListener("fileerror",$bind(this,this.SoundJS_onFileError));
			this.dispatchEvent(new openfl_events_Event("complete"));
		}
	}
	,SoundJS_onFileError: function(event) {
		if(event.id == this.__soundID) {
			createjs.Sound.removeEventListener("fileload",$bind(this,this.SoundJS_onFileLoad));
			createjs.Sound.removeEventListener("fileerror",$bind(this,this.SoundJS_onFileError));
			this.dispatchEvent(new openfl_events_IOErrorEvent("ioError"));
		}
	}
	,__class__: openfl_media_Sound
	,__properties__: {get_length:"get_length",get_id3:"get_id3"}
});
var openfl_media_SoundChannel = function(soundInstance) {
	openfl_events_EventDispatcher.call(this,this);
	this.leftPeak = 1;
	this.rightPeak = 1;
	if(soundInstance != null) {
		this.__soundInstance = soundInstance;
		this.__soundInstance.addEventListener("complete",$bind(this,this.source_onComplete));
		this.__isValid = true;
	}
};
$hxClasses["openfl.media.SoundChannel"] = openfl_media_SoundChannel;
openfl_media_SoundChannel.__name__ = ["openfl","media","SoundChannel"];
openfl_media_SoundChannel.__super__ = openfl_events_EventDispatcher;
openfl_media_SoundChannel.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	stop: function() {
		if(!this.__isValid) return;
		this.__soundInstance.stop();
	}
	,__dispose: function() {
		if(!this.__isValid) return;
		this.__soundInstance.stop();
		this.__soundInstance = null;
		this.__isValid = false;
	}
	,get_position: function() {
		if(!this.__isValid) return 0;
		return this.__soundInstance.getPosition();
	}
	,set_position: function(value) {
		if(!this.__isValid) return 0;
		this.__soundInstance.setPosition(value | 0);
		return this.__soundInstance.getPosition();
	}
	,get_soundTransform: function() {
		if(!this.__isValid) return new openfl_media_SoundTransform();
		return new openfl_media_SoundTransform(this.__soundInstance.getVolume(),this.__soundInstance.getPan());
	}
	,set_soundTransform: function(value) {
		if(!this.__isValid) return value;
		this.__soundInstance.setVolume(value.volume);
		this.__soundInstance.setPan(value.pan);
		return value;
	}
	,soundInstance_onComplete: function(_) {
		this.dispatchEvent(new openfl_events_Event("soundComplete"));
	}
	,source_onComplete: function() {
		this.__dispose();
		this.dispatchEvent(new openfl_events_Event("soundComplete"));
	}
	,__class__: openfl_media_SoundChannel
	,__properties__: {set_soundTransform:"set_soundTransform",get_soundTransform:"get_soundTransform",set_position:"set_position",get_position:"get_position"}
});
var openfl_media_SoundLoaderContext = function(bufferTime,checkPolicyFile) {
	if(checkPolicyFile == null) checkPolicyFile = false;
	if(bufferTime == null) bufferTime = 1000;
	this.bufferTime = bufferTime;
	this.checkPolicyFile = checkPolicyFile;
};
$hxClasses["openfl.media.SoundLoaderContext"] = openfl_media_SoundLoaderContext;
openfl_media_SoundLoaderContext.__name__ = ["openfl","media","SoundLoaderContext"];
openfl_media_SoundLoaderContext.prototype = {
	__class__: openfl_media_SoundLoaderContext
};
var openfl_media_SoundTransform = function(vol,panning) {
	if(panning == null) panning = 0;
	if(vol == null) vol = 1;
	this.volume = vol;
	this.pan = panning;
	this.leftToLeft = 0;
	this.leftToRight = 0;
	this.rightToLeft = 0;
	this.rightToRight = 0;
};
$hxClasses["openfl.media.SoundTransform"] = openfl_media_SoundTransform;
openfl_media_SoundTransform.__name__ = ["openfl","media","SoundTransform"];
openfl_media_SoundTransform.prototype = {
	clone: function() {
		return new openfl_media_SoundTransform(this.volume,this.pan);
	}
	,__class__: openfl_media_SoundTransform
};
var openfl_net_NetConnection = function() {
	openfl_events_EventDispatcher.call(this);
};
$hxClasses["openfl.net.NetConnection"] = openfl_net_NetConnection;
openfl_net_NetConnection.__name__ = ["openfl","net","NetConnection"];
openfl_net_NetConnection.__super__ = openfl_events_EventDispatcher;
openfl_net_NetConnection.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	connect: function(command,_,_1,_2,_3,_4) {
		if(command != null) throw new js__$Boot_HaxeError("Error: Can only connect in \"HTTP streaming\" mode");
		this.dispatchEvent(new openfl_events_NetStatusEvent("netStatus",false,true,{ code : "connectSuccess"}));
	}
	,__class__: openfl_net_NetConnection
});
var openfl_net_SharedObject = function() {
	openfl_events_EventDispatcher.call(this);
	this.client = this;
	this.objectEncoding = 3;
};
$hxClasses["openfl.net.SharedObject"] = openfl_net_SharedObject;
openfl_net_SharedObject.__name__ = ["openfl","net","SharedObject"];
openfl_net_SharedObject.__sharedObjects = null;
openfl_net_SharedObject.getLocal = function(name,localPath,secure) {
	if(secure == null) secure = false;
	if(localPath == null) localPath = window.location.href;
	if(openfl_net_SharedObject.__sharedObjects == null) {
		openfl_net_SharedObject.__sharedObjects = new haxe_ds_StringMap();
		openfl_Lib.application.onExit.add(openfl_net_SharedObject.application_onExit);
	}
	var id = localPath + "/" + name;
	if(!openfl_net_SharedObject.__sharedObjects.exists(id)) {
		var sharedObject = new openfl_net_SharedObject();
		sharedObject.data = { };
		sharedObject.__localPath = localPath;
		sharedObject.__name = name;
		var encodedData = null;
		try {
			var storage = js_Browser.getLocalStorage();
			if(storage != null) encodedData = storage.getItem(localPath + ":" + name);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
		}
		if(encodedData != null && encodedData != "") try {
			var unserializer = new haxe_Unserializer(encodedData);
			unserializer.setResolver({ resolveEnum : Type.resolveEnum, resolveClass : openfl_net_SharedObject.__resolveClass});
			sharedObject.data = unserializer.unserialize();
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
		}
		openfl_net_SharedObject.__sharedObjects.set(id,sharedObject);
	}
	return openfl_net_SharedObject.__sharedObjects.get(id);
};
openfl_net_SharedObject.getRemote = function(name,remotePath,persistence,secure) {
	if(secure == null) secure = false;
	if(persistence == null) persistence = false;
	openfl_Lib.notImplemented("SharedObject.getRemote");
	return null;
};
openfl_net_SharedObject.__mkdir = function(directory) {
};
openfl_net_SharedObject.__resolveClass = function(name) {
	if(name != null) {
		if(StringTools.startsWith(name,"neash.")) name = StringTools.replace(name,"neash.","openfl.");
		if(StringTools.startsWith(name,"native.")) name = StringTools.replace(name,"native.","openfl.");
		if(StringTools.startsWith(name,"flash.")) name = StringTools.replace(name,"flash.","openfl.");
		if(StringTools.startsWith(name,"openfl._v2.")) name = StringTools.replace(name,"openfl._v2.","openfl.");
		if(StringTools.startsWith(name,"openfl._legacy.")) name = StringTools.replace(name,"openfl._legacy.","openfl.");
		return Type.resolveClass(name);
	}
	return null;
};
openfl_net_SharedObject.application_onExit = function(_) {
	var $it0 = openfl_net_SharedObject.__sharedObjects.iterator();
	while( $it0.hasNext() ) {
		var sharedObject = $it0.next();
		sharedObject.flush();
	}
};
openfl_net_SharedObject.__super__ = openfl_events_EventDispatcher;
openfl_net_SharedObject.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	clear: function() {
		this.data = { };
		try {
			var storage = js_Browser.getLocalStorage();
			if(storage != null) storage.removeItem(this.__localPath + ":" + this.__name);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
		}
	}
	,close: function() {
	}
	,connect: function(myConnection,params) {
		openfl_Lib.notImplemented("SharedObject.connect");
	}
	,flush: function(minDiskSpace) {
		if(minDiskSpace == null) minDiskSpace = 0;
		if(Reflect.fields(this.data).length == 0) return 0;
		var encodedData = haxe_Serializer.run(this.data);
		try {
			var storage = js_Browser.getLocalStorage();
			if(storage != null) {
				storage.removeItem(this.__localPath + ":" + this.__name);
				storage.setItem(this.__localPath + ":" + this.__name,encodedData);
			}
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			return 1;
		}
		return 0;
	}
	,send: function($arguments) {
		openfl_Lib.notImplemented("SharedObject.send");
	}
	,setDirty: function(propertyName) {
	}
	,setProperty: function(propertyName,value) {
		if(this.data != null) this.data[propertyName] = value;
	}
	,get_size: function() {
		try {
			var d = haxe_Serializer.run(this.data);
			return haxe_io_Bytes.ofString(d).length;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			return 0;
		}
	}
	,__class__: openfl_net_SharedObject
	,__properties__: {get_size:"get_size"}
});
var openfl_net__$SharedObjectFlushStatus_SharedObjectFlushStatus_$Impl_$ = {};
$hxClasses["openfl.net._SharedObjectFlushStatus.SharedObjectFlushStatus_Impl_"] = openfl_net__$SharedObjectFlushStatus_SharedObjectFlushStatus_$Impl_$;
openfl_net__$SharedObjectFlushStatus_SharedObjectFlushStatus_$Impl_$.__name__ = ["openfl","net","_SharedObjectFlushStatus","SharedObjectFlushStatus_Impl_"];
openfl_net__$SharedObjectFlushStatus_SharedObjectFlushStatus_$Impl_$.fromString = function(value) {
	switch(value) {
	case "flushed":
		return 0;
	case "pending":
		return 1;
	default:
		return null;
	}
};
openfl_net__$SharedObjectFlushStatus_SharedObjectFlushStatus_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "flushed";
	case 1:
		return "pending";
	default:
		return null;
	}
};
var openfl_net_URLLoader = function(request) {
	openfl_events_EventDispatcher.call(this);
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.set_dataFormat(1);
	if(request != null) this.load(request);
};
$hxClasses["openfl.net.URLLoader"] = openfl_net_URLLoader;
openfl_net_URLLoader.__name__ = ["openfl","net","URLLoader"];
openfl_net_URLLoader.__super__ = openfl_events_EventDispatcher;
openfl_net_URLLoader.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	close: function() {
	}
	,getData: function() {
		return null;
	}
	,load: function(request) {
		this.requestUrl(request.url,request.method,request.data,request.formatRequestHeaders());
	}
	,registerEvents: function(subject) {
		var self = this;
		if(typeof XMLHttpRequestProgressEvent != "undefined") subject.addEventListener("progress",$bind(this,this.onProgress),false);
		subject.onreadystatechange = function() {
			if(subject.readyState != 4) return;
			var s;
			try {
				s = subject.status;
			} catch( e ) {
				haxe_CallStack.lastException = e;
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				s = null;
			}
			if(s == undefined) s = null;
			if(s != null) self.onStatus(s);
			if(s != null && s >= 200 && s < 400) self.onData(subject.response); else if(s == null) self.onError("Failed to connect or resolve host"); else if(s == 12029) self.onError("Failed to connect to host"); else if(s == 12007) self.onError("Unknown host"); else if(s == 0) {
				self.onError("Unable to make request (may be blocked due to cross-domain permissions)");
				self.onSecurityError("Unable to make request (may be blocked due to cross-domain permissions)");
			} else self.onError("Http Error #" + subject.status);
		};
	}
	,requestUrl: function(url,method,data,requestHeaders) {
		var xmlHttpRequest = new XMLHttpRequest();
		this.registerEvents(xmlHttpRequest);
		var uri = "";
		if(js_Boot.__instanceof(data,openfl_utils_ByteArrayData)) {
			var data1 = data;
			var _g = this.dataFormat;
			switch(_g) {
			case 0:
				uri = js_Boot.__cast(data1 , ArrayBuffer);
				break;
			default:
				uri = data1.readUTFBytes(data1.length);
			}
		} else if(js_Boot.__instanceof(data,openfl_net_URLVariables)) {
			var data2 = data;
			var _g1 = 0;
			var _g11 = Reflect.fields(data2);
			while(_g1 < _g11.length) {
				var p = _g11[_g1];
				++_g1;
				if(uri.length != 0) uri += "&";
				uri += encodeURIComponent(p) + "=" + StringTools.urlEncode(Reflect.field(data2,p));
			}
		} else if(data != null) uri = data.toString();
		try {
			if(method == "GET" && uri != null && uri != "") {
				var question = url.split("?").length <= 1;
				xmlHttpRequest.open(method,url + (question?"?":"&") + Std.string(uri),true);
				uri = "";
			} else xmlHttpRequest.open(method,url,true);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			this.onError(e.toString());
			return;
		}
		var _g2 = this.dataFormat;
		switch(_g2) {
		case 0:
			xmlHttpRequest.responseType = "arraybuffer";
			break;
		default:
		}
		var _g3 = 0;
		while(_g3 < requestHeaders.length) {
			var header = requestHeaders[_g3];
			++_g3;
			xmlHttpRequest.setRequestHeader(header.name,header.value);
		}
		xmlHttpRequest.send(uri);
		this.onOpen();
		this.getData = function() {
			if(xmlHttpRequest.response != null) return xmlHttpRequest.response; else return xmlHttpRequest.responseText;
		};
	}
	,onData: function(_) {
		var content = this.getData();
		var _g = this.dataFormat;
		switch(_g) {
		case 0:
			this.data = openfl_utils__$ByteArray_ByteArray_$Impl_$.fromArrayBuffer(content);
			break;
		default:
			this.data = Std.string(content);
		}
		var evt = new openfl_events_Event("complete");
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onError: function(msg) {
		var evt = new openfl_events_IOErrorEvent("ioError");
		evt.text = msg;
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onOpen: function() {
		var evt = new openfl_events_Event("open");
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onProgress: function(event) {
		var evt = new openfl_events_ProgressEvent("progress");
		evt.currentTarget = this;
		evt.bytesLoaded = event.loaded;
		evt.bytesTotal = event.total;
		this.dispatchEvent(evt);
	}
	,onSecurityError: function(msg) {
		var evt = new openfl_events_SecurityErrorEvent("securityError");
		evt.text = msg;
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onStatus: function(status) {
		var evt = new openfl_events_HTTPStatusEvent("httpStatus",false,false,status);
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,set_dataFormat: function(inputVal) {
		if(inputVal == 0 && !Reflect.hasField(window,"ArrayBuffer")) this.dataFormat = 1; else this.dataFormat = inputVal;
		return this.dataFormat;
	}
	,__class__: openfl_net_URLLoader
	,__properties__: {set_dataFormat:"set_dataFormat"}
});
var openfl_net__$URLLoaderDataFormat_URLLoaderDataFormat_$Impl_$ = {};
$hxClasses["openfl.net._URLLoaderDataFormat.URLLoaderDataFormat_Impl_"] = openfl_net__$URLLoaderDataFormat_URLLoaderDataFormat_$Impl_$;
openfl_net__$URLLoaderDataFormat_URLLoaderDataFormat_$Impl_$.__name__ = ["openfl","net","_URLLoaderDataFormat","URLLoaderDataFormat_Impl_"];
openfl_net__$URLLoaderDataFormat_URLLoaderDataFormat_$Impl_$.fromString = function(value) {
	switch(value) {
	case "binary":
		return 0;
	case "text":
		return 1;
	case "variables":
		return 2;
	default:
		return null;
	}
};
openfl_net__$URLLoaderDataFormat_URLLoaderDataFormat_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "binary";
	case 1:
		return "text";
	case 2:
		return "variables";
	default:
		return null;
	}
};
var openfl_net_URLRequest = function(inURL) {
	if(inURL != null) this.url = inURL;
	this.requestHeaders = [];
	this.method = openfl_net__$URLRequestMethod_URLRequestMethod_$Impl_$.toString(1);
	this.contentType = null;
};
$hxClasses["openfl.net.URLRequest"] = openfl_net_URLRequest;
openfl_net_URLRequest.__name__ = ["openfl","net","URLRequest"];
openfl_net_URLRequest.prototype = {
	formatRequestHeaders: function() {
		var res = this.requestHeaders;
		if(res == null) res = [];
		if(openfl_net__$URLRequestMethod_URLRequestMethod_$Impl_$.fromString(this.method) == 1 || this.data == null) return res;
		if(typeof(this.data) == "string" || js_Boot.__instanceof(this.data,openfl_utils_ByteArrayData)) {
			res = res.slice();
			res.push(new openfl_net_URLRequestHeader("Content-Type",this.contentType != null?this.contentType:"application/x-www-form-urlencoded"));
		}
		return res;
	}
	,__class__: openfl_net_URLRequest
};
var openfl_net_URLRequestHeader = function(name,value) {
	if(value == null) value = "";
	if(name == null) name = "";
	this.name = name;
	this.value = value;
};
$hxClasses["openfl.net.URLRequestHeader"] = openfl_net_URLRequestHeader;
openfl_net_URLRequestHeader.__name__ = ["openfl","net","URLRequestHeader"];
openfl_net_URLRequestHeader.prototype = {
	__class__: openfl_net_URLRequestHeader
};
var openfl_net__$URLRequestMethod_URLRequestMethod_$Impl_$ = {};
$hxClasses["openfl.net._URLRequestMethod.URLRequestMethod_Impl_"] = openfl_net__$URLRequestMethod_URLRequestMethod_$Impl_$;
openfl_net__$URLRequestMethod_URLRequestMethod_$Impl_$.__name__ = ["openfl","net","_URLRequestMethod","URLRequestMethod_Impl_"];
openfl_net__$URLRequestMethod_URLRequestMethod_$Impl_$.fromString = function(value) {
	switch(value) {
	case "DELETE":
		return 0;
	case "GET":
		return 1;
	case "HEAD":
		return 2;
	case "OPTIONS":
		return 3;
	case "POST":
		return 4;
	case "PUT":
		return 5;
	default:
		return null;
	}
};
openfl_net__$URLRequestMethod_URLRequestMethod_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "DELETE";
	case 1:
		return "GET";
	case 2:
		return "HEAD";
	case 3:
		return "OPTIONS";
	case 4:
		return "POST";
	case 5:
		return "PUT";
	default:
		return null;
	}
};
var openfl_net_URLVariables = function(source) {
	if(source != null) this.decode(source);
};
$hxClasses["openfl.net.URLVariables"] = openfl_net_URLVariables;
openfl_net_URLVariables.__name__ = ["openfl","net","URLVariables"];
openfl_net_URLVariables.prototype = {
	decode: function(source) {
		var fields = Reflect.fields(this);
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			Reflect.deleteField(this,f);
		}
		var fields1 = source.split(";").join("&").split("&");
		var _g1 = 0;
		while(_g1 < fields1.length) {
			var f1 = fields1[_g1];
			++_g1;
			var eq = f1.indexOf("=");
			if(eq > 0) Reflect.setField(this,StringTools.urlDecode(HxOverrides.substr(f1,0,eq)),StringTools.urlDecode(HxOverrides.substr(f1,eq + 1,null))); else if(eq != 0) Reflect.setField(this,decodeURIComponent(f1.split("+").join(" ")),"");
		}
	}
	,toString: function() {
		var result = [];
		var fields = Reflect.fields(this);
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			result.push(encodeURIComponent(f) + "=" + StringTools.urlEncode(Reflect.field(this,f)));
		}
		return result.join("&");
	}
	,__class__: openfl_net_URLVariables
};
var openfl_system_LoaderContext = function(checkPolicyFile,applicationDomain,securityDomain) {
	if(checkPolicyFile == null) checkPolicyFile = false;
	this.checkPolicyFile = checkPolicyFile;
	this.securityDomain = securityDomain;
	this.applicationDomain = applicationDomain;
	this.allowCodeImport = true;
	this.allowLoadBytesCodeExecution = true;
};
$hxClasses["openfl.system.LoaderContext"] = openfl_system_LoaderContext;
openfl_system_LoaderContext.__name__ = ["openfl","system","LoaderContext"];
openfl_system_LoaderContext.prototype = {
	__class__: openfl_system_LoaderContext
};
var openfl_system_SecurityDomain = function() {
};
$hxClasses["openfl.system.SecurityDomain"] = openfl_system_SecurityDomain;
openfl_system_SecurityDomain.__name__ = ["openfl","system","SecurityDomain"];
openfl_system_SecurityDomain.prototype = {
	__class__: openfl_system_SecurityDomain
};
var openfl_system_System = function() { };
$hxClasses["openfl.system.System"] = openfl_system_System;
openfl_system_System.__name__ = ["openfl","system","System"];
openfl_system_System.__properties__ = {get_vmVersion:"get_vmVersion",get_totalMemory:"get_totalMemory"}
openfl_system_System.totalMemory = null;
openfl_system_System.vmVersion = null;
openfl_system_System.exit = function(code) {
	lime_system_System.exit(code);
};
openfl_system_System.gc = function() {
};
openfl_system_System.pause = function() {
	openfl_Lib.notImplemented("System.pause");
};
openfl_system_System.resume = function() {
	openfl_Lib.notImplemented("System.resume");
};
openfl_system_System.setClipboard = function(string) {
	lime_system_Clipboard.set_text(string);
};
openfl_system_System.get_totalMemory = function() {
	return (window.performance && window.performance.memory) ? window.performance.memory.usedJSHeapSize : 0;
};
openfl_system_System.get_vmVersion = function() {
	return "1.0.0";
};
var openfl_text__$AntiAliasType_AntiAliasType_$Impl_$ = {};
$hxClasses["openfl.text._AntiAliasType.AntiAliasType_Impl_"] = openfl_text__$AntiAliasType_AntiAliasType_$Impl_$;
openfl_text__$AntiAliasType_AntiAliasType_$Impl_$.__name__ = ["openfl","text","_AntiAliasType","AntiAliasType_Impl_"];
openfl_text__$AntiAliasType_AntiAliasType_$Impl_$.fromString = function(value) {
	switch(value) {
	case "advanced":
		return 0;
	case "normal":
		return 1;
	default:
		return null;
	}
};
openfl_text__$AntiAliasType_AntiAliasType_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "advanced";
	case 1:
		return "normal";
	default:
		return null;
	}
};
var openfl_text__$FontStyle_FontStyle_$Impl_$ = {};
$hxClasses["openfl.text._FontStyle.FontStyle_Impl_"] = openfl_text__$FontStyle_FontStyle_$Impl_$;
openfl_text__$FontStyle_FontStyle_$Impl_$.__name__ = ["openfl","text","_FontStyle","FontStyle_Impl_"];
openfl_text__$FontStyle_FontStyle_$Impl_$.fromString = function(value) {
	switch(value) {
	case "bold":
		return 0;
	case "boldItalic":
		return 1;
	case "italic":
		return 2;
	case "regular":
		return 3;
	default:
		return null;
	}
};
openfl_text__$FontStyle_FontStyle_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "bold";
	case 1:
		return "boldItalic";
	case 2:
		return "italic";
	case 3:
		return "regular";
	default:
		return null;
	}
};
var openfl_text__$FontType_FontType_$Impl_$ = {};
$hxClasses["openfl.text._FontType.FontType_Impl_"] = openfl_text__$FontType_FontType_$Impl_$;
openfl_text__$FontType_FontType_$Impl_$.__name__ = ["openfl","text","_FontType","FontType_Impl_"];
openfl_text__$FontType_FontType_$Impl_$.fromString = function(value) {
	switch(value) {
	case "device":
		return 0;
	case "embedded":
		return 1;
	case "embeddedCFF":
		return 2;
	default:
		return null;
	}
};
openfl_text__$FontType_FontType_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "device";
	case 1:
		return "embedded";
	case 2:
		return "embeddedCFF";
	default:
		return null;
	}
};
var openfl_text__$GridFitType_GridFitType_$Impl_$ = {};
$hxClasses["openfl.text._GridFitType.GridFitType_Impl_"] = openfl_text__$GridFitType_GridFitType_$Impl_$;
openfl_text__$GridFitType_GridFitType_$Impl_$.__name__ = ["openfl","text","_GridFitType","GridFitType_Impl_"];
openfl_text__$GridFitType_GridFitType_$Impl_$.fromString = function(value) {
	switch(value) {
	case "none":
		return 0;
	case "pixel":
		return 1;
	case "subpixel":
		return 2;
	default:
		return null;
	}
};
openfl_text__$GridFitType_GridFitType_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "none";
	case 1:
		return "pixel";
	case 2:
		return "subpixel";
	default:
		return null;
	}
};
var openfl_text__$TextFieldAutoSize_TextFieldAutoSize_$Impl_$ = {};
$hxClasses["openfl.text._TextFieldAutoSize.TextFieldAutoSize_Impl_"] = openfl_text__$TextFieldAutoSize_TextFieldAutoSize_$Impl_$;
openfl_text__$TextFieldAutoSize_TextFieldAutoSize_$Impl_$.__name__ = ["openfl","text","_TextFieldAutoSize","TextFieldAutoSize_Impl_"];
openfl_text__$TextFieldAutoSize_TextFieldAutoSize_$Impl_$.fromString = function(value) {
	switch(value) {
	case "center":
		return 0;
	case "left":
		return 1;
	case "none":
		return 2;
	case "right":
		return 3;
	default:
		return null;
	}
};
openfl_text__$TextFieldAutoSize_TextFieldAutoSize_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "center";
	case 1:
		return "left";
	case 2:
		return "none";
	case 3:
		return "right";
	default:
		return null;
	}
};
var openfl_text__$TextFieldType_TextFieldType_$Impl_$ = {};
$hxClasses["openfl.text._TextFieldType.TextFieldType_Impl_"] = openfl_text__$TextFieldType_TextFieldType_$Impl_$;
openfl_text__$TextFieldType_TextFieldType_$Impl_$.__name__ = ["openfl","text","_TextFieldType","TextFieldType_Impl_"];
openfl_text__$TextFieldType_TextFieldType_$Impl_$.fromString = function(value) {
	switch(value) {
	case "dynamic":
		return 0;
	case "input":
		return 1;
	default:
		return null;
	}
};
openfl_text__$TextFieldType_TextFieldType_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "dynamic";
	case 1:
		return "input";
	default:
		return null;
	}
};
var openfl_text_TextFormat = function(font,size,color,bold,italic,underline,url,target,align,leftMargin,rightMargin,indent,leading) {
	this.font = font;
	this.size = size;
	this.color = color;
	this.bold = bold;
	this.italic = italic;
	this.underline = underline;
	this.url = url;
	this.target = target;
	this.align = align;
	this.leftMargin = leftMargin;
	this.rightMargin = rightMargin;
	this.indent = indent;
	this.leading = leading;
};
$hxClasses["openfl.text.TextFormat"] = openfl_text_TextFormat;
openfl_text_TextFormat.__name__ = ["openfl","text","TextFormat"];
openfl_text_TextFormat.prototype = {
	clone: function() {
		var newFormat = new openfl_text_TextFormat(this.font,this.size,this.color,this.bold,this.italic,this.underline,this.url,this.target);
		newFormat.align = this.align;
		newFormat.leftMargin = this.leftMargin;
		newFormat.rightMargin = this.rightMargin;
		newFormat.indent = this.indent;
		newFormat.leading = this.leading;
		newFormat.blockIndent = this.blockIndent;
		newFormat.bullet = this.bullet;
		newFormat.kerning = this.kerning;
		newFormat.letterSpacing = this.letterSpacing;
		newFormat.tabStops = this.tabStops;
		return newFormat;
	}
	,__merge: function(format) {
		if(format.font != null) this.font = format.font;
		if(format.size != null) this.size = format.size;
		if(format.color != null) this.color = format.color;
		if(format.bold != null) this.bold = format.bold;
		if(format.italic != null) this.italic = format.italic;
		if(format.underline != null) this.underline = format.underline;
		if(format.url != null) this.url = format.url;
		if(format.target != null) this.target = format.target;
		if(format.align != null) this.align = format.align;
		if(format.leftMargin != null) this.leftMargin = format.leftMargin;
		if(format.rightMargin != null) this.rightMargin = format.rightMargin;
		if(format.indent != null) this.indent = format.indent;
		if(format.leading != null) this.leading = format.leading;
		if(format.blockIndent != null) this.blockIndent = format.blockIndent;
		if(format.bullet != null) this.bullet = format.bullet;
		if(format.kerning != null) this.kerning = format.kerning;
		if(format.letterSpacing != null) this.letterSpacing = format.letterSpacing;
		if(format.tabStops != null) this.tabStops = format.tabStops;
	}
	,__class__: openfl_text_TextFormat
};
var openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$ = {};
$hxClasses["openfl.text._TextFormatAlign.TextFormatAlign_Impl_"] = openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$;
openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$.__name__ = ["openfl","text","_TextFormatAlign","TextFormatAlign_Impl_"];
openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$.fromString = function(value) {
	switch(value) {
	case "center":
		return 0;
	case "end":
		return 1;
	case "justify":
		return 2;
	case "left":
		return 3;
	case "right":
		return 4;
	case "start":
		return 5;
	default:
		return null;
	}
};
openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "center";
	case 1:
		return "end";
	case 2:
		return "justify";
	case 3:
		return "left";
	case 4:
		return "right";
	case 5:
		return "start";
	default:
		return null;
	}
};
var openfl_text_TextLineMetrics = function(x,width,height,ascent,descent,leading) {
	this.x = x;
	this.width = width;
	this.height = height;
	this.ascent = ascent;
	this.descent = descent;
	this.leading = leading;
};
$hxClasses["openfl.text.TextLineMetrics"] = openfl_text_TextLineMetrics;
openfl_text_TextLineMetrics.__name__ = ["openfl","text","TextLineMetrics"];
openfl_text_TextLineMetrics.prototype = {
	__class__: openfl_text_TextLineMetrics
};
var openfl_ui_GameInput = function() {
	openfl_events_EventDispatcher.call(this);
	openfl_ui_GameInput.__instances.push(this);
};
$hxClasses["openfl.ui.GameInput"] = openfl_ui_GameInput;
openfl_ui_GameInput.__name__ = ["openfl","ui","GameInput"];
openfl_ui_GameInput.getDeviceAt = function(index) {
	if(index >= 0 && index < openfl_ui_GameInput.__deviceList.length) return openfl_ui_GameInput.__deviceList[index];
	return null;
};
openfl_ui_GameInput.__getDevice = function(gamepad) {
	if(gamepad == null) return null;
	if(!(openfl_ui_GameInput.__devices.h.__keys__[gamepad.__id__] != null)) {
		var device = new openfl_ui_GameInputDevice(gamepad.get_guid(),gamepad.get_name());
		openfl_ui_GameInput.__deviceList.push(device);
		openfl_ui_GameInput.__devices.set(gamepad,device);
		openfl_ui_GameInput.numDevices = openfl_ui_GameInput.__deviceList.length;
	}
	return openfl_ui_GameInput.__devices.h[gamepad.__id__];
};
openfl_ui_GameInput.__onGamepadAxisMove = function(gamepad,axis,value) {
	var device = openfl_ui_GameInput.__getDevice(gamepad);
	if(device == null) return;
	if(device.enabled) {
		if(!device.__axis.h.hasOwnProperty(axis)) {
			var control1 = new openfl_ui_GameInputControl(device,"AXIS_" + (function($this) {
				var $r;
				switch(axis) {
				case 0:
					$r = "LEFT_X";
					break;
				case 1:
					$r = "LEFT_Y";
					break;
				case 2:
					$r = "RIGHT_X";
					break;
				case 3:
					$r = "RIGHT_Y";
					break;
				case 4:
					$r = "TRIGGER_LEFT";
					break;
				case 5:
					$r = "TRIGGER_RIGHT";
					break;
				default:
					$r = "UNKNOWN (" + axis + ")";
				}
				return $r;
			}(this)),-1,1);
			device.__axis.h[axis] = control1;
			device.__controls.push(control1);
		}
		var control = device.__axis.h[axis];
		control.value = value;
		control.dispatchEvent(new openfl_events_Event("change"));
	}
};
openfl_ui_GameInput.__onGamepadButtonDown = function(gamepad,button) {
	var device = openfl_ui_GameInput.__getDevice(gamepad);
	if(device == null) return;
	if(device.enabled) {
		if(!device.__button.h.hasOwnProperty(button)) {
			var control1 = new openfl_ui_GameInputControl(device,"BUTTON_" + (function($this) {
				var $r;
				switch(button) {
				case 0:
					$r = "A";
					break;
				case 1:
					$r = "B";
					break;
				case 2:
					$r = "X";
					break;
				case 3:
					$r = "Y";
					break;
				case 4:
					$r = "BACK";
					break;
				case 5:
					$r = "GUIDE";
					break;
				case 6:
					$r = "START";
					break;
				case 7:
					$r = "LEFT_STICK";
					break;
				case 8:
					$r = "RIGHT_STICK";
					break;
				case 9:
					$r = "LEFT_SHOULDER";
					break;
				case 10:
					$r = "RIGHT_SHOULDER";
					break;
				case 11:
					$r = "DPAD_UP";
					break;
				case 12:
					$r = "DPAD_DOWN";
					break;
				case 13:
					$r = "DPAD_LEFT";
					break;
				case 14:
					$r = "DPAD_RIGHT";
					break;
				default:
					$r = "UNKNOWN (" + button + ")";
				}
				return $r;
			}(this)),0,1);
			device.__button.h[button] = control1;
			device.__controls.push(control1);
		}
		var control = device.__button.h[button];
		control.value = 1;
		control.dispatchEvent(new openfl_events_Event("change"));
	}
};
openfl_ui_GameInput.__onGamepadButtonUp = function(gamepad,button) {
	var device = openfl_ui_GameInput.__getDevice(gamepad);
	if(device == null) return;
	if(device.enabled) {
		if(!device.__button.h.hasOwnProperty(button)) {
			var control1 = new openfl_ui_GameInputControl(device,"BUTTON_" + (function($this) {
				var $r;
				switch(button) {
				case 0:
					$r = "A";
					break;
				case 1:
					$r = "B";
					break;
				case 2:
					$r = "X";
					break;
				case 3:
					$r = "Y";
					break;
				case 4:
					$r = "BACK";
					break;
				case 5:
					$r = "GUIDE";
					break;
				case 6:
					$r = "START";
					break;
				case 7:
					$r = "LEFT_STICK";
					break;
				case 8:
					$r = "RIGHT_STICK";
					break;
				case 9:
					$r = "LEFT_SHOULDER";
					break;
				case 10:
					$r = "RIGHT_SHOULDER";
					break;
				case 11:
					$r = "DPAD_UP";
					break;
				case 12:
					$r = "DPAD_DOWN";
					break;
				case 13:
					$r = "DPAD_LEFT";
					break;
				case 14:
					$r = "DPAD_RIGHT";
					break;
				default:
					$r = "UNKNOWN (" + button + ")";
				}
				return $r;
			}(this)),0,1);
			device.__button.h[button] = control1;
			device.__controls.push(control1);
		}
		var control = device.__button.h[button];
		control.value = 0;
		control.dispatchEvent(new openfl_events_Event("change"));
	}
};
openfl_ui_GameInput.__onGamepadConnect = function(gamepad) {
	var device = openfl_ui_GameInput.__getDevice(gamepad);
	if(device == null) return;
	var _g = 0;
	var _g1 = openfl_ui_GameInput.__instances;
	while(_g < _g1.length) {
		var instance = _g1[_g];
		++_g;
		instance.dispatchEvent(new openfl_events_GameInputEvent("deviceAdded",null,null,device));
	}
};
openfl_ui_GameInput.__onGamepadDisconnect = function(gamepad) {
	var device = openfl_ui_GameInput.__devices.h[gamepad.__id__];
	if(device != null) {
		if(openfl_ui_GameInput.__devices.h.__keys__[gamepad.__id__] != null) {
			var x = openfl_ui_GameInput.__devices.h[gamepad.__id__];
			HxOverrides.remove(openfl_ui_GameInput.__deviceList,x);
			openfl_ui_GameInput.__devices.remove(gamepad);
		}
		openfl_ui_GameInput.numDevices = openfl_ui_GameInput.__deviceList.length;
		var _g = 0;
		var _g1 = openfl_ui_GameInput.__instances;
		while(_g < _g1.length) {
			var instance = _g1[_g];
			++_g;
			instance.dispatchEvent(new openfl_events_GameInputEvent("deviceRemoved",null,null,device));
		}
	}
};
openfl_ui_GameInput.__super__ = openfl_events_EventDispatcher;
openfl_ui_GameInput.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	__class__: openfl_ui_GameInput
});
var openfl_ui_GameInputControl = function(device,id,minValue,maxValue,value) {
	if(value == null) value = 0;
	openfl_events_EventDispatcher.call(this);
	this.device = device;
	this.id = id;
	this.minValue = minValue;
	this.maxValue = maxValue;
	this.value = value;
};
$hxClasses["openfl.ui.GameInputControl"] = openfl_ui_GameInputControl;
openfl_ui_GameInputControl.__name__ = ["openfl","ui","GameInputControl"];
openfl_ui_GameInputControl.__super__ = openfl_events_EventDispatcher;
openfl_ui_GameInputControl.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	__class__: openfl_ui_GameInputControl
});
var openfl_ui_GameInputDevice = function(id,name) {
	this.__controls = [];
	this.__button = new haxe_ds_IntMap();
	this.__axis = new haxe_ds_IntMap();
	this.id = id;
	this.name = name;
	var control;
	var _g = 0;
	while(_g < 6) {
		var i = _g++;
		control = new openfl_ui_GameInputControl(this,"AXIS_" + i,-1,1);
		this.__axis.h[i] = control;
		this.__controls.push(control);
	}
	var _g1 = 0;
	while(_g1 < 15) {
		var i1 = _g1++;
		control = new openfl_ui_GameInputControl(this,"BUTTON_" + i1,0,1);
		this.__button.h[i1] = control;
		this.__controls.push(control);
	}
};
$hxClasses["openfl.ui.GameInputDevice"] = openfl_ui_GameInputDevice;
openfl_ui_GameInputDevice.__name__ = ["openfl","ui","GameInputDevice"];
openfl_ui_GameInputDevice.prototype = {
	getCachedSamples: function(data,append) {
		if(append == null) append = false;
		return 0;
	}
	,getControlAt: function(i) {
		if(i >= 0 && i < this.__controls.length) return this.__controls[i];
		return null;
	}
	,startCachingSamples: function(numSamples,controls) {
	}
	,stopCachingSamples: function() {
	}
	,get_numControls: function() {
		return this.__controls.length;
	}
	,__class__: openfl_ui_GameInputDevice
	,__properties__: {get_numControls:"get_numControls"}
};
var openfl_ui_Keyboard = function() { };
$hxClasses["openfl.ui.Keyboard"] = openfl_ui_Keyboard;
openfl_ui_Keyboard.__name__ = ["openfl","ui","Keyboard"];
openfl_ui_Keyboard.capsLock = null;
openfl_ui_Keyboard.numLock = null;
openfl_ui_Keyboard.isAccessible = function() {
	return false;
};
openfl_ui_Keyboard.__convertKeyCode = function(key) {
	switch(key) {
	case 8:
		return 8;
	case 9:
		return 9;
	case 13:
		return 13;
	case 27:
		return 27;
	case 32:
		return 32;
	case 33:
		return 49;
	case 34:
		return 222;
	case 35:
		return 51;
	case 36:
		return 52;
	case 37:
		return 53;
	case 38:
		return 55;
	case 39:
		return 222;
	case 40:
		return 57;
	case 41:
		return 48;
	case 42:
		return 56;
	case 44:
		return 188;
	case 45:
		return 189;
	case 46:
		return 190;
	case 47:
		return 191;
	case 48:
		return 48;
	case 49:
		return 49;
	case 50:
		return 50;
	case 51:
		return 51;
	case 52:
		return 52;
	case 53:
		return 53;
	case 54:
		return 54;
	case 55:
		return 55;
	case 56:
		return 56;
	case 57:
		return 57;
	case 58:
		return 186;
	case 59:
		return 186;
	case 60:
		return 60;
	case 61:
		return 187;
	case 62:
		return 190;
	case 63:
		return 191;
	case 64:
		return 50;
	case 91:
		return 219;
	case 92:
		return 220;
	case 93:
		return 221;
	case 94:
		return 54;
	case 95:
		return 189;
	case 96:
		return 192;
	case 97:
		return 65;
	case 98:
		return 66;
	case 99:
		return 67;
	case 100:
		return 68;
	case 101:
		return 69;
	case 102:
		return 70;
	case 103:
		return 71;
	case 104:
		return 72;
	case 105:
		return 73;
	case 106:
		return 74;
	case 107:
		return 75;
	case 108:
		return 76;
	case 109:
		return 77;
	case 110:
		return 78;
	case 111:
		return 79;
	case 112:
		return 80;
	case 113:
		return 81;
	case 114:
		return 82;
	case 115:
		return 83;
	case 116:
		return 84;
	case 117:
		return 85;
	case 118:
		return 86;
	case 119:
		return 87;
	case 120:
		return 88;
	case 121:
		return 89;
	case 122:
		return 90;
	case 127:
		return 46;
	case 1073741881:
		return 20;
	case 1073741882:
		return 112;
	case 1073741883:
		return 113;
	case 1073741884:
		return 114;
	case 1073741885:
		return 115;
	case 1073741886:
		return 116;
	case 1073741887:
		return 117;
	case 1073741888:
		return 118;
	case 1073741889:
		return 119;
	case 1073741890:
		return 120;
	case 1073741891:
		return 121;
	case 1073741892:
		return 122;
	case 1073741893:
		return 123;
	case 1073741894:
		return 301;
	case 1073741895:
		return 145;
	case 1073741896:
		return 19;
	case 1073741897:
		return 45;
	case 1073741898:
		return 36;
	case 1073741899:
		return 33;
	case 1073741901:
		return 35;
	case 1073741902:
		return 34;
	case 1073741903:
		return 39;
	case 1073741904:
		return 37;
	case 1073741905:
		return 40;
	case 1073741906:
		return 38;
	case 1073741907:
		return 144;
	case 1073741908:
		return 111;
	case 1073741909:
		return 106;
	case 1073741910:
		return 109;
	case 1073741911:
		return 107;
	case 1073741912:
		return 108;
	case 1073741913:
		return 97;
	case 1073741914:
		return 98;
	case 1073741915:
		return 99;
	case 1073741916:
		return 100;
	case 1073741917:
		return 101;
	case 1073741918:
		return 102;
	case 1073741919:
		return 103;
	case 1073741920:
		return 104;
	case 1073741921:
		return 105;
	case 1073741922:
		return 96;
	case 1073741923:
		return 110;
	case 1073741925:
		return 302;
	case 1073741928:
		return 124;
	case 1073741929:
		return 125;
	case 1073741930:
		return 126;
	case 1073741982:
		return 13;
	case 1073742044:
		return 110;
	case 1073742048:
		return 17;
	case 1073742049:
		return 16;
	case 1073742050:
		return 18;
	case 1073742051:
		return 15;
	case 1073742052:
		return 17;
	case 1073742053:
		return 16;
	case 1073742054:
		return 18;
	case 1073742055:
		return 15;
	default:
		return key;
	}
};
openfl_ui_Keyboard.__getCharCode = function(key,shift) {
	if(shift == null) shift = false;
	if(!shift) {
		switch(key) {
		case 8:
			return 8;
		case 9:
			return 9;
		case 13:
			return 13;
		case 27:
			return 27;
		case 32:
			return 32;
		case 186:
			return 59;
		case 187:
			return 61;
		case 188:
			return 44;
		case 189:
			return 45;
		case 190:
			return 46;
		case 191:
			return 47;
		case 192:
			return 96;
		case 219:
			return 91;
		case 220:
			return 92;
		case 221:
			return 93;
		case 222:
			return 39;
		}
		if(key >= 48 && key <= 57) return key - 48 + 48;
		if(key >= 65 && key <= 90) return key - 65 + 97;
	} else {
		switch(key) {
		case 48:
			return 41;
		case 49:
			return 33;
		case 50:
			return 64;
		case 51:
			return 35;
		case 52:
			return 36;
		case 53:
			return 37;
		case 54:
			return 94;
		case 55:
			return 38;
		case 56:
			return 42;
		case 57:
			return 40;
		case 186:
			return 58;
		case 187:
			return 43;
		case 188:
			return 60;
		case 189:
			return 95;
		case 190:
			return 62;
		case 191:
			return 63;
		case 192:
			return 126;
		case 219:
			return 123;
		case 220:
			return 124;
		case 221:
			return 125;
		case 222:
			return 34;
		}
		if(key >= 65 && key <= 90) return key - 65 + 65;
	}
	if(key >= 96 && key <= 105) return key - 96 + 48;
	switch(key) {
	case 106:
		return 42;
	case 107:
		return 43;
	case 108:
		return 44;
	case 110:
		return 45;
	case 111:
		return 46;
	case 46:
		return 127;
	case 13:
		return 13;
	case 8:
		return 8;
	}
	return 0;
};
openfl_ui_Keyboard.__getKeyLocation = function(key) {
	switch(key) {
	case 1073742048:case 1073742049:case 1073742050:case 1073742051:
		return 1;
	case 1073742052:case 1073742053:case 1073742054:case 1073742055:
		return 2;
	case 1073741908:case 1073741909:case 1073741910:case 1073741911:case 1073741912:case 1073741913:case 1073741914:case 1073741915:case 1073741916:case 1073741917:case 1073741918:case 1073741919:case 1073741920:case 1073741921:case 1073741922:case 1073741923:case 1073742044:
		return 3;
	default:
		return 0;
	}
};
var openfl_ui_Multitouch = function() { };
$hxClasses["openfl.ui.Multitouch"] = openfl_ui_Multitouch;
openfl_ui_Multitouch.__name__ = ["openfl","ui","Multitouch"];
openfl_ui_Multitouch.__properties__ = {get_supportsTouchEvents:"get_supportsTouchEvents",set_inputMode:"set_inputMode",get_inputMode:"get_inputMode"}
openfl_ui_Multitouch.maxTouchPoints = null;
openfl_ui_Multitouch.supportedGestures = null;
openfl_ui_Multitouch.supportsGestureEvents = null;
openfl_ui_Multitouch.supportsTouchEvents = null;
openfl_ui_Multitouch.get_inputMode = function() {
	return 2;
};
openfl_ui_Multitouch.set_inputMode = function(inMode) {
	if(inMode == 0) return openfl_ui_Multitouch.get_inputMode();
	return inMode;
};
openfl_ui_Multitouch.get_supportsTouchEvents = function() {
	if(('ontouchstart' in document.documentElement) || (window.DocumentTouch && document instanceof DocumentTouch)) return true;
	return false;
};
var openfl_ui__$MultitouchInputMode_MultitouchInputMode_$Impl_$ = {};
$hxClasses["openfl.ui._MultitouchInputMode.MultitouchInputMode_Impl_"] = openfl_ui__$MultitouchInputMode_MultitouchInputMode_$Impl_$;
openfl_ui__$MultitouchInputMode_MultitouchInputMode_$Impl_$.__name__ = ["openfl","ui","_MultitouchInputMode","MultitouchInputMode_Impl_"];
openfl_ui__$MultitouchInputMode_MultitouchInputMode_$Impl_$.fromString = function(value) {
	switch(value) {
	case "gesture":
		return 0;
	case "none":
		return 1;
	case "touchPoint":
		return 2;
	default:
		return null;
	}
};
openfl_ui__$MultitouchInputMode_MultitouchInputMode_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "gesture";
	case 1:
		return "none";
	case 2:
		return "touchPoint";
	default:
		return null;
	}
};
var openfl_utils__$ByteArray_ByteArray_$Impl_$ = {};
$hxClasses["openfl.utils._ByteArray.ByteArray_Impl_"] = openfl_utils__$ByteArray_ByteArray_$Impl_$;
openfl_utils__$ByteArray_ByteArray_$Impl_$.__name__ = ["openfl","utils","_ByteArray","ByteArray_Impl_"];
openfl_utils__$ByteArray_ByteArray_$Impl_$.__properties__ = {set_length:"set_length",get_length:"get_length"}
openfl_utils__$ByteArray_ByteArray_$Impl_$.defaultObjectEncoding = null;
openfl_utils__$ByteArray_ByteArray_$Impl_$._new = function(length) {
	if(length == null) length = 0;
	return new openfl_utils_ByteArrayData(length);
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.get = function(this1,index) {
	return this1.b[index];
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.set = function(this1,index,value) {
	this1.b[index] = value & 255;
	return value;
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.fromArrayBuffer = function(buffer) {
	return openfl_utils_ByteArrayData.fromBytes(haxe_io_Bytes.ofData(buffer));
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes = function(bytes) {
	if(js_Boot.__instanceof(bytes,openfl_utils_ByteArrayData)) return bytes; else return openfl_utils_ByteArrayData.fromBytes(bytes);
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytesData = function(bytesData) {
	return openfl_utils_ByteArrayData.fromBytes(haxe_io_Bytes.ofData(bytesData));
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.toArrayBuffer = function(byteArray) {
	return byteArray.b.bufferValue;
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.toBytes = function(byteArray) {
	return byteArray;
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.toBytesData = function(byteArray) {
	return byteArray.b.bufferValue;
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.toLimeBytes = function(byteArray) {
	return new lime_utils_Bytes(openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(byteArray),byteArray.b.bufferValue);
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length = function(this1) {
	return this1.__length;
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.set_length = function(this1,value) {
	if(value > 0) this1.__resize(value);
	this1.__length = value;
	return value;
};
var openfl_utils_IDataOutput = function() { };
$hxClasses["openfl.utils.IDataOutput"] = openfl_utils_IDataOutput;
openfl_utils_IDataOutput.__name__ = ["openfl","utils","IDataOutput"];
openfl_utils_IDataOutput.prototype = {
	__class__: openfl_utils_IDataOutput
	,__properties__: {set_endian:"set_endian",get_endian:"get_endian"}
};
var openfl_utils_IDataInput = function() { };
$hxClasses["openfl.utils.IDataInput"] = openfl_utils_IDataInput;
openfl_utils_IDataInput.__name__ = ["openfl","utils","IDataInput"];
openfl_utils_IDataInput.prototype = {
	__class__: openfl_utils_IDataInput
	,__properties__: {set_endian:"set_endian",get_endian:"get_endian",get_bytesAvailable:"get_bytesAvailable"}
};
var openfl_utils_ByteArrayData = function(length) {
	if(length == null) length = 0;
	var bytes = haxe_io_Bytes.alloc(length);
	haxe_io_Bytes.call(this,bytes.b.buffer);
	this.__length = length;
	this.__endian = 0;
	this.position = 0;
};
$hxClasses["openfl.utils.ByteArrayData"] = openfl_utils_ByteArrayData;
openfl_utils_ByteArrayData.__name__ = ["openfl","utils","ByteArrayData"];
openfl_utils_ByteArrayData.__interfaces__ = [openfl_utils_IDataOutput,openfl_utils_IDataInput];
openfl_utils_ByteArrayData.fromBytes = function(bytes) {
	var result = new openfl_utils_ByteArrayData();
	result.__fromBytes(bytes);
	return result;
};
openfl_utils_ByteArrayData.__super__ = haxe_io_Bytes;
openfl_utils_ByteArrayData.prototype = $extend(haxe_io_Bytes.prototype,{
	clear: function() {
		this.__length = 0;
		this.position = 0;
	}
	,compress: function(algorithm) {
		this.__length = this.length;
		this.position = this.__length;
	}
	,deflate: function() {
		this.compress(0);
	}
	,inflate: function() {
		this.uncompress(0);
	}
	,readBoolean: function() {
		if(this.position < this.length) return this.get(this.position++) != 0; else {
			throw new js__$Boot_HaxeError(new openfl_errors_EOFError());
			return false;
		}
	}
	,readByte: function() {
		var value = this.readUnsignedByte();
		if((value & 128) != 0) return value - 256; else return value;
	}
	,readBytes: function(bytes,offset,length) {
		if(length == null) length = 0;
		if(offset == null) offset = 0;
		if(length == 0) length = this.__length - this.position;
		if(this.position + length > this.__length) throw new js__$Boot_HaxeError(new openfl_errors_EOFError());
		if(bytes.__length < offset + length) bytes.__resize(offset + length);
		bytes.blit(offset,this,this.position,length);
		this.position += length;
	}
	,readDouble: function() {
		if(this.position + 8 > this.__length) throw new js__$Boot_HaxeError(new openfl_errors_EOFError());
		this.position += 8;
		return this.getDouble(this.position - 8);
	}
	,readFloat: function() {
		if(this.position + 4 > this.__length) throw new js__$Boot_HaxeError(new openfl_errors_EOFError());
		this.position += 4;
		return this.getFloat(this.position - 4);
	}
	,readInt: function() {
		var ch1 = this.readUnsignedByte();
		var ch2 = this.readUnsignedByte();
		var ch3 = this.readUnsignedByte();
		var ch4 = this.readUnsignedByte();
		if(this.__endian == 1) return ch4 << 24 | ch3 << 16 | ch2 << 8 | ch1; else return ch1 << 24 | ch2 << 16 | ch3 << 8 | ch4;
	}
	,readMultiByte: function(length,charSet) {
		return this.readUTFBytes(length);
	}
	,readShort: function() {
		var ch1 = this.readUnsignedByte();
		var ch2 = this.readUnsignedByte();
		var value;
		if(this.__endian == 1) value = ch2 << 8 | ch1; else value = ch1 << 8 | ch2;
		if((value & 32768) != 0) return value - 65536; else return value;
	}
	,readUnsignedByte: function() {
		if(this.position < this.__length) return this.get(this.position++); else {
			throw new js__$Boot_HaxeError(new openfl_errors_EOFError());
			return 0;
		}
	}
	,readUnsignedInt: function() {
		var ch1 = this.readUnsignedByte();
		var ch2 = this.readUnsignedByte();
		var ch3 = this.readUnsignedByte();
		var ch4 = this.readUnsignedByte();
		if(this.__endian == 1) return ch4 << 24 | ch3 << 16 | ch2 << 8 | ch1; else return ch1 << 24 | ch2 << 16 | ch3 << 8 | ch4;
	}
	,readUnsignedShort: function() {
		var ch1 = this.readUnsignedByte();
		var ch2 = this.readUnsignedByte();
		if(this.__endian == 1) return (ch2 << 8) + ch1; else return ch1 << 8 | ch2;
	}
	,readUTF: function() {
		var bytesCount = this.readUnsignedShort();
		return this.readUTFBytes(bytesCount);
	}
	,readUTFBytes: function(length) {
		if(this.position + length > this.__length) throw new js__$Boot_HaxeError(new openfl_errors_EOFError());
		this.position += length;
		return this.getString(this.position - length,length);
	}
	,uncompress: function(algorithm) {
		this.__length = this.length;
		this.position = 0;
	}
	,writeBoolean: function(value) {
		this.writeByte(value?1:0);
	}
	,writeByte: function(value) {
		this.__resize(this.position + 1);
		this.set(this.position++,value & 255);
	}
	,writeBytes: function(bytes,offset,length) {
		if(length == null) length = 0;
		if(offset == null) offset = 0;
		if(openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(bytes) == 0) return;
		if(length == 0) {
			var a = openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(bytes);
			length = a - offset;
		}
		this.__resize(this.position + length);
		this.blit(this.position,bytes,offset,length);
		this.position = this.position + length;
	}
	,writeDouble: function(value) {
		this.__resize(this.position + 8);
		this.setDouble(this.position,value);
		this.position += 8;
	}
	,writeFloat: function(value) {
		this.__resize(this.position + 4);
		this.setFloat(this.position,value);
		this.position += 4;
	}
	,writeInt: function(value) {
		this.__resize(this.position + 4);
		if(this.__endian == 1) {
			this.set(this.position++,value);
			this.set(this.position++,value >> 8);
			this.set(this.position++,value >> 16);
			this.set(this.position++,value >> 24);
		} else {
			this.set(this.position++,value >> 24);
			this.set(this.position++,value >> 16);
			this.set(this.position++,value >> 8);
			this.set(this.position++,value);
		}
	}
	,writeMultiByte: function(value,charSet) {
		this.writeUTFBytes(value);
	}
	,writeShort: function(value) {
		this.__resize(this.position + 2);
		if(this.__endian == 1) {
			this.set(this.position++,value);
			this.set(this.position++,value >> 8);
		} else {
			this.set(this.position++,value >> 8);
			this.set(this.position++,value);
		}
	}
	,writeUnsignedInt: function(value) {
		this.writeInt(value);
	}
	,writeUTF: function(value) {
		var bytes = haxe_io_Bytes.ofString(value);
		this.writeShort(bytes.length);
		this.writeBytes(openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes(bytes));
	}
	,writeUTFBytes: function(value) {
		var bytes = haxe_io_Bytes.ofString(value);
		this.writeBytes(openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes(haxe_io_Bytes.ofString(value)));
	}
	,__fromBytes: function(bytes) {
		this.b = bytes.b;
		this.length = bytes.length;
		this.data = bytes.data;
		this.__length = bytes.length;
	}
	,__resize: function(size) {
		if(size > this.length) {
			var bytes = haxe_io_Bytes.alloc((size + 1) * 3 >> 1);
			bytes.blit(0,this,0,this.length);
			this.b = bytes.b;
			this.length = bytes.length;
			this.data = bytes.data;
		}
		if(this.__length < size) this.__length = size;
	}
	,__setData: function(bytes) {
		this.b = bytes.b;
		this.length = bytes.length;
		this.data = bytes.data;
	}
	,get_bytesAvailable: function() {
		return this.__length - this.position;
	}
	,get_endian: function() {
		return this.__endian;
	}
	,set_endian: function(value) {
		return this.__endian = value;
	}
	,__class__: openfl_utils_ByteArrayData
	,__properties__: {set_endian:"set_endian",get_endian:"get_endian",get_bytesAvailable:"get_bytesAvailable"}
});
var openfl_utils__$CompressionAlgorithm_CompressionAlgorithm_$Impl_$ = {};
$hxClasses["openfl.utils._CompressionAlgorithm.CompressionAlgorithm_Impl_"] = openfl_utils__$CompressionAlgorithm_CompressionAlgorithm_$Impl_$;
openfl_utils__$CompressionAlgorithm_CompressionAlgorithm_$Impl_$.__name__ = ["openfl","utils","_CompressionAlgorithm","CompressionAlgorithm_Impl_"];
openfl_utils__$CompressionAlgorithm_CompressionAlgorithm_$Impl_$.fromString = function(value) {
	switch(value) {
	case "deflate":
		return 0;
	case "lzma":
		return 1;
	case "zlib":
		return 2;
	default:
		return null;
	}
};
openfl_utils__$CompressionAlgorithm_CompressionAlgorithm_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "deflate";
	case 1:
		return "lzma";
	case 2:
		return "zlib";
	default:
		return null;
	}
};
var openfl_utils__$Endian_Endian_$Impl_$ = {};
$hxClasses["openfl.utils._Endian.Endian_Impl_"] = openfl_utils__$Endian_Endian_$Impl_$;
openfl_utils__$Endian_Endian_$Impl_$.__name__ = ["openfl","utils","_Endian","Endian_Impl_"];
openfl_utils__$Endian_Endian_$Impl_$.fromString = function(value) {
	switch(value) {
	case "bigEndian":
		return 0;
	case "littleEndian":
		return 1;
	default:
		return null;
	}
};
openfl_utils__$Endian_Endian_$Impl_$.toString = function(value) {
	switch(value) {
	case 0:
		return "bigEndian";
	case 1:
		return "littleEndian";
	default:
		return null;
	}
};
var openfl_utils__$Object_Object_$Impl_$ = {};
$hxClasses["openfl.utils._Object.Object_Impl_"] = openfl_utils__$Object_Object_$Impl_$;
openfl_utils__$Object_Object_$Impl_$.__name__ = ["openfl","utils","_Object","Object_Impl_"];
openfl_utils__$Object_Object_$Impl_$._new = function() {
	return { };
};
openfl_utils__$Object_Object_$Impl_$.hasOwnProperty = function(this1,name) {
	return this1 != null && Object.prototype.hasOwnProperty.call(this1,name);
};
openfl_utils__$Object_Object_$Impl_$.isPrototypeOf = function(this1,theClass) {
	var c;
	if(this1 == null) c = null; else c = js_Boot.getClass(this1);
	while(c != null) {
		if(c == theClass) return true;
		c = Type.getSuperClass(c);
	}
	return false;
};
openfl_utils__$Object_Object_$Impl_$.iterator = function(this1) {
	var fields = Reflect.fields(this1);
	if(fields == null) fields = [];
	return HxOverrides.iter(fields);
};
openfl_utils__$Object_Object_$Impl_$.propertyIsEnumerable = function(this1,name) {
	return this1 != null && Object.prototype.hasOwnProperty.call(this1,name) && Std["is"](Reflect.field(this1,name),haxe_lang_Iterable);
};
openfl_utils__$Object_Object_$Impl_$.toLocaleString = function(this1) {
	return Std.string(this1);
};
openfl_utils__$Object_Object_$Impl_$.toString = function(this1) {
	return Std.string(this1);
};
openfl_utils__$Object_Object_$Impl_$.valueOf = function(this1) {
	return this1;
};
openfl_utils__$Object_Object_$Impl_$.__get = function(this1,key) {
	return Reflect.field(this1,key);
};
openfl_utils__$Object_Object_$Impl_$.__set = function(this1,key,value) {
	this1[key] = value;
	return value;
};
var haxe_lang_Iterator = function() { };
$hxClasses["haxe.lang.Iterator"] = haxe_lang_Iterator;
haxe_lang_Iterator.__name__ = ["haxe","lang","Iterator"];
haxe_lang_Iterator.prototype = {
	__class__: haxe_lang_Iterator
};
var haxe_lang_Iterable = function() { };
$hxClasses["haxe.lang.Iterable"] = haxe_lang_Iterable;
haxe_lang_Iterable.__name__ = ["haxe","lang","Iterable"];
haxe_lang_Iterable.prototype = {
	__class__: haxe_lang_Iterable
};
var scenes_Scene = function() { };
$hxClasses["scenes.Scene"] = scenes_Scene;
scenes_Scene.__name__ = ["scenes","Scene"];
scenes_Scene.prototype = {
	__class__: scenes_Scene
};
var scenes_CNGames = function() {
	this.sprite4 = new openfl_display_Sprite();
	this.sprite3 = new openfl_display_Sprite();
	this.sprite2 = new openfl_display_Sprite();
	this.sprite1 = new openfl_display_Sprite();
	openfl_display_Sprite.call(this);
	this.bitmapData1 = openfl_Assets.getBitmapData("preloader/CNGames/CNAmarillo.jpg");
	this.bitmap1 = new openfl_display_Bitmap(this.bitmapData1);
	this.bitmapData2 = openfl_Assets.getBitmapData("preloader/CNGames/CNCyan.jpg");
	this.bitmap2 = new openfl_display_Bitmap(this.bitmapData2);
	this.bitmapData3 = openfl_Assets.getBitmapData("preloader/CNGames/CNMagenta.jpg");
	this.bitmap3 = new openfl_display_Bitmap(this.bitmapData3);
	this.bitmapData4 = openfl_Assets.getBitmapData("preloader/CNGames/CNNegro.jpg");
	this.bitmap4 = new openfl_display_Bitmap(this.bitmapData4);
	this.bitmapDataT1 = openfl_Assets.getBitmapData("preloader/CNGames/TrianguloAmarillo.png");
	this.bitmapT1 = new openfl_display_Bitmap(this.bitmapDataT1);
	this.bitmapDataT2 = openfl_Assets.getBitmapData("preloader/CNGames/TrianguloCyan.png");
	this.bitmapT2 = new openfl_display_Bitmap(this.bitmapDataT2);
	this.bitmapDataT3 = openfl_Assets.getBitmapData("preloader/CNGames/TrianguloMagenta.png");
	this.bitmapT3 = new openfl_display_Bitmap(this.bitmapDataT3);
	this.bitmapDataT4 = openfl_Assets.getBitmapData("preloader/CNGames/Triangulo.png");
	this.bitmapT4 = new openfl_display_Bitmap(this.bitmapDataT4);
	this.bitmap1.set_x(this.bitmap2.set_x(this.bitmap3.set_x(this.bitmap4.set_x(640))));
	this.bitmapT1.set_x(this.bitmapT2.set_x(this.bitmapT3.set_x(this.bitmapT4.set_x(-25))));
	this.bitmapT1.set_y(this.bitmapT2.set_y(this.bitmapT3.set_y(this.bitmapT4.set_y(-27))));
	this.addChild(this.bitmap1);
	this.addChild(this.bitmap2);
	this.addChild(this.bitmap3);
	this.addChild(this.bitmap4);
	this.sprite1.addChild(this.bitmapT1);
	this.sprite2.addChild(this.bitmapT2);
	this.sprite3.addChild(this.bitmapT3);
	this.sprite4.addChild(this.bitmapT4);
	this.sprite1.set_x(this.sprite2.set_x(this.sprite3.set_x(this.sprite4.set_x(240))));
	this.sprite1.set_y(this.sprite2.set_y(this.sprite3.set_y(this.sprite4.set_y(317))));
};
$hxClasses["scenes.CNGames"] = scenes_CNGames;
scenes_CNGames.__name__ = ["scenes","CNGames"];
scenes_CNGames.__interfaces__ = [scenes_Scene];
scenes_CNGames.__super__ = openfl_display_Sprite;
scenes_CNGames.prototype = $extend(openfl_display_Sprite.prototype,{
	added: function() {
		utils_SoundLib.playFX("CN0");
		var myActor = motion_Actuate.tween(this.bitmap1,.5,{ x : 0});
		haxe_Timer.delay($bind(this,this.animStep2),120);
	}
	,removed: function() {
	}
	,animStep2: function() {
		var myActor = motion_Actuate.tween(this.bitmap2,.5,{ x : 0});
		haxe_Timer.delay($bind(this,this.animStep3),120);
	}
	,animStep3: function() {
		var myActor = motion_Actuate.tween(this.bitmap3,.5,{ x : 0});
		haxe_Timer.delay($bind(this,this.animStep4),120);
	}
	,animStep4: function() {
		var myActor = motion_Actuate.tween(this.bitmap4,.5,{ x : 0});
		haxe_Timer.delay($bind(this,this.animStep5),500);
	}
	,animStep5: function() {
		utils_SoundLib.playFX("CN");
		this.sprite1.set_scaleX(this.sprite1.set_scaleY(0));
		this.addChild(this.sprite1);
		var myActor = motion_Actuate.tween(this.sprite1,.2,{ scaleX : 1, scaleY : 1});
		myActor.onComplete($bind(this,this.animStep6));
	}
	,animStep6: function() {
		this.sprite2.set_scaleX(0);
		this.addChild(this.sprite2);
		var myActor = motion_Actuate.tween(this.sprite2,.2,{ scaleX : 1});
		myActor.onComplete($bind(this,this.animStep7));
	}
	,animStep7: function() {
		this.sprite3.set_scaleX(this.sprite3.set_scaleY(2));
		this.addChild(this.sprite3);
		var myActor = motion_Actuate.tween(this.sprite3,.2,{ scaleX : 1, scaleY : 1});
		myActor.onComplete($bind(this,this.animStep8));
	}
	,animStep8: function() {
		this.sprite4.set_scaleX(this.sprite4.set_scaleY(0));
		this.addChild(this.sprite4);
		var myActor = motion_Actuate.tween(this.sprite4,.2,{ scaleX : 1.2, scaleY : 1.2});
		myActor.onComplete($bind(this,this.animStep9));
	}
	,animStep9: function() {
		this.removeChild(this.sprite1);
		this.removeChild(this.sprite2);
		this.removeChild(this.sprite3);
		this.removeChild(this.bitmap1);
		this.removeChild(this.bitmap2);
		this.removeChild(this.bitmap3);
		var myActor = motion_Actuate.tween(this.sprite4,.2,{ scaleX : 0, scaleY : 0});
		haxe_Timer.delay($bind(this,this.animStep10),2000);
	}
	,animStep10: function() {
		scenes_Manager.go("mainmenu");
	}
	,__class__: scenes_CNGames
});
var scenes_End = function() {
	openfl_display_Sprite.call(this);
	this.fondo1 = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/intro/intro - fondo1.png"));
	this.fondo2 = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/intro/intro - fondo2.png"),1,true);
	this.fondo3 = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/intro/intro - fondo3.png"),1,true);
	this.personaje1Bitmap = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/end/personajes final 01.png"));
	this.personaje2Bitmap = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/end/personajes final 02.png"));
	this.personaje3Bitmap = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/end/personajes final 03.png"));
	this.personaje4Bitmap = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/end/personajes final 04.png"));
	this.rotor1 = new openfl_display_Sprite();
	this.rotor1.addChild(this.fondo2);
	this.fondo2.set_x(-this.fondo2.get_width() / 2);
	this.fondo2.set_y(-this.fondo2.get_height() / 2);
	this.rotor2 = new openfl_display_Sprite();
	this.rotor2.addChild(this.fondo3);
	this.fondo3.set_x(-this.fondo3.get_width() / 2);
	this.fondo3.set_y(-this.fondo3.get_height() / 2);
	this.fondo1.set_x(-90);
	this.rotor1.set_x(310);
	this.rotor1.set_y(Main.screenHeight);
	this.rotor2.set_x(310);
	this.rotor2.set_y(Main.screenHeight);
	this.personaje1Bitmap.set_x(0);
	this.personaje1Bitmap.set_y(Main.screenHeight);
	this.personaje2Bitmap.set_x(0);
	this.personaje2Bitmap.set_y(Main.screenHeight);
	this.personaje3Bitmap.set_x(0);
	this.personaje3Bitmap.set_y(Main.screenHeight);
	this.personaje4Bitmap.set_x(0);
	this.personaje4Bitmap.set_y(Main.screenHeight);
	this.createPlaySlide();
	this.addElements();
};
$hxClasses["scenes.End"] = scenes_End;
scenes_End.__name__ = ["scenes","End"];
scenes_End.__interfaces__ = [scenes_Scene];
scenes_End.__super__ = openfl_display_Sprite;
scenes_End.prototype = $extend(openfl_display_Sprite.prototype,{
	createPlaySlide: function() {
		this.playSlide = new openfl_display_Sprite();
		this.playSlide.set_x(0);
		this.playSlide.set_y(Main.screenHeight);
		this.playBoard = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/end/cartel final.png"));
		this.endText = new ui_TextFieldBase(utils_Localization.getText("END"));
		this.endText.setFormat(0);
		this.endText.set_x(this.playBoard.get_width() / 5);
		this.endText.set_y(this.playBoard.get_height() / 2 - this.endText.get_height() / 2);
		this.btnPlay = new hud_ButtonGraphic();
		this.btnPlay.setButton("playHTP");
		this.btnPlay.set_x(this.playBoard.get_width() - 141);
		this.btnPlay.set_y(this.playBoard.get_y() + this.btnPlay.get_height() / 2 + 5);
		if(Main.isMobile) this.btnPlay.addEventListener("touchEnd",$bind(this,this.goToMenu)); else this.btnPlay.addEventListener("click",$bind(this,this.goToMenu));
		this.playSlide.addChild(this.playBoard);
		this.playSlide.addChild(this.endText);
		this.playSlide.addChild(this.btnPlay);
	}
	,addElements: function() {
		this.addChild(this.fondo1);
		this.addChild(this.rotor1);
		this.addChild(this.rotor2);
		this.addChild(this.personaje4Bitmap);
		this.addChild(this.personaje3Bitmap);
		this.addChild(this.personaje2Bitmap);
		this.addChild(this.personaje1Bitmap);
		this.addChild(this.playSlide);
	}
	,goToMenu: function(e) {
		scenes_Manager.go("end-menu");
	}
	,added: function() {
		this.addEventListener("enterFrame",$bind(this,this.update));
		this.getIn();
	}
	,getIn: function() {
		motion_Actuate.tween(this.rotor1,4.0,{ y : 300});
		motion_Actuate.tween(this.rotor2,4.0,{ y : 300});
		motion_Actuate.timer(0.5).onComplete($bind(this,this.getInStep2));
		motion_Actuate.timer(2.5).onComplete($bind(this,this.getInStep3));
	}
	,getInStep2: function() {
		this.personaje1Bitmap.set_y(Main.screenHeight * 1.5);
		this.personaje2Bitmap.set_y(Main.screenHeight * 1.5);
		this.personaje3Bitmap.set_y(Main.screenHeight * 1.5);
		this.personaje4Bitmap.set_y(Main.screenHeight * 1.5);
		motion_Actuate.tween(this.personaje1Bitmap,1.00,{ y : Main.screenHeight - this.personaje1Bitmap.get_height()}).delay(1.00);
		motion_Actuate.tween(this.personaje2Bitmap,1.25,{ y : Main.screenHeight - this.personaje2Bitmap.get_height()}).delay(0.75);
		motion_Actuate.tween(this.personaje3Bitmap,1.50,{ y : Main.screenHeight - this.personaje3Bitmap.get_height()}).delay(0.50);
		motion_Actuate.tween(this.personaje4Bitmap,1.75,{ y : Main.screenHeight - this.personaje4Bitmap.get_height()}).delay(0.25);
	}
	,getInStep3: function() {
		this.playSlide.set_y(-Main.screenHeight / 2);
		motion_Actuate.tween(this.playSlide,1.5,{ y : 100});
	}
	,removed: function() {
		this.removeEventListener("enterFrame",$bind(this,this.update));
	}
	,update: function(e) {
		var _g = this.rotor1;
		_g.set_rotation(_g.get_rotation() + 0.1);
		var _g1 = this.rotor2;
		_g1.set_rotation(_g1.get_rotation() + 0.15);
	}
	,__class__: scenes_End
});
var scenes_Gameplay = function() {
	this.blur = new gameplay_Blur();
	this.speedFilterAlreadyOn = false;
	this.game_phase = 0;
	openfl_display_Sprite.call(this);
};
$hxClasses["scenes.Gameplay"] = scenes_Gameplay;
scenes_Gameplay.__name__ = ["scenes","Gameplay"];
scenes_Gameplay.__interfaces__ = [scenes_Scene];
scenes_Gameplay.current = null;
scenes_Gameplay.isBossLevel = null;
scenes_Gameplay.player = null;
scenes_Gameplay.gui = null;
scenes_Gameplay.__super__ = openfl_display_Sprite;
scenes_Gameplay.prototype = $extend(openfl_display_Sprite.prototype,{
	startGame: function() {
		scenes_Gameplay.scrollingSpeed = scenes_Gameplay.SCROLLING;
		scenes_Gameplay.paused = false;
		scenes_Gameplay.gameover = false;
		scenes_Gameplay.player.set_visible(true);
		hud_GUI.score = 0;
		hud_GUI.changeScore(0);
		hud_GUI.level = scenes_Gameplay.actualLevel;
		if(scenes_Gameplay.assetSet == 2 && !Main.isMobile) {
			this.addObject(new gameplay_AnimatedDecoration());
			this.addObject(new gameplay_AnimatedDecoration());
			this.addObject(new gameplay_AnimatedDecoration());
		}
		if(scenes_Gameplay.actualLevel == 1 && !Main.isMobile) motion_Actuate.timer(0.5).onComplete(hud_GUI.showHTP); else motion_Actuate.timer(0.5).onComplete(hud_GUI.showMisionName);
		objects_Enemy.bpool.killAll(true);
		scenes_Gameplay.player.bpool.killAll(true);
		this.setPhase(scenes_Gameplay.GP_INTRO);
	}
	,endGame: function() {
		this.setPhase(scenes_Gameplay.GP_OUTRO);
	}
	,gameOver: function() {
		scenes_Gameplay.gameover = true;
		this.setPhase(scenes_Gameplay.GP_FINISHED);
	}
	,setPhase: function(p) {
		if(p == scenes_Gameplay.GP_PAUSED && this.game_phase == scenes_Gameplay.GP_PAUSED) return;
		this.game_phase_prev = this.game_phase;
		this.game_phase = p;
		var _g = 0;
		var _g1 = this.objects;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			if(js_Boot.__instanceof(o,utils_PhasedGameObject)) (js_Boot.__cast(o , utils_PhasedGameObject)).setPhase(p);
		}
		if(p == scenes_Gameplay.GP_FINISHED) {
			if(scenes_Gameplay.gameover) {
				scenes_Gameplay.player.set_visible(false);
				hud_GUI.gameOver();
			} else {
				scenes_Gameplay.paused = true;
				hud_GUI.levelEnd();
			}
		}
	}
	,focusOut: function(e) {
		scenes_Gameplay.lostFocus = true;
		if(!scenes_Gameplay.paused && scenes_Gameplay.player.energy > 0) {
			if(!hud_GUI.gameover.active && !hud_GUI.levelcomplete.active) {
				motion_Actuate.pauseAll();
				scenes_Gameplay.paused = true;
				hud_GUI.gamePause();
			}
		}
	}
	,focusIn: function(e) {
		scenes_Gameplay.lostFocus = false;
		motion_Actuate.resumeAll();
	}
	,drawBackground: function() {
		this.get_graphics().beginGradientFill(0,[3355443,5730389],[1.0,1.0],[204,255]);
		this.get_graphics().drawRect(0,0,Main.screenWidth,Main.screenHeight);
		this.get_graphics().endFill();
	}
	,added: function() {
		scenes_Gameplay.current = this;
		scenes_Gameplay.paused = true;
		this.particlesLayerUp = new openfl_display_Sprite();
		this.particlesLayerUp.set_name("particlesUp");
		this.particlesLayerDown = new openfl_display_Sprite();
		this.particlesLayerDown.set_name("particlesDown");
		this.particlesUp = new utils_particles_Particles(this.particlesLayerUp);
		this.particlesDown = new utils_particles_Dust(this.particlesLayerDown);
		this.objects = [];
		gameplay_Mine.arrayMines = [];
		this.scrollingBackground = new objects_ScrollingBackground();
		this.scrollingBackground.set_name("scroll");
		this.addObject(this.scrollingBackground);
		this.addChild(this.particlesLayerDown);
		this.scrollingBorderLeft = new objects_ScrollingBorderLeft();
		this.scrollingBorderLeft.set_name("scrollBorderLeft");
		this.addObject(this.scrollingBorderLeft);
		this.scrollingBorderRight = new objects_ScrollingBorderRight();
		this.scrollingBorderRight.set_name("scrollBorderRight");
		this.addObject(this.scrollingBorderRight);
		scenes_Gameplay.actualLevel = scenes_Manager.nextLevel;
		var _g = scenes_Gameplay.actualLevel;
		switch(_g) {
		case 1:case 2:case 3:
			scenes_Gameplay.assetSet = 2;
			break;
		case 4:case 5:case 6:
			scenes_Gameplay.assetSet = 1;
			break;
		case 7:case 8:case 9:
			scenes_Gameplay.assetSet = 3;
			break;
		}
		scenes_Gameplay.isBossLevel = scenes_Gameplay.actualLevel == 3 || scenes_Gameplay.actualLevel == 6 || scenes_Gameplay.actualLevel == 9;
		this.objects.push(this.generator = new objects_Generator());
		this.addObject(scenes_Gameplay.player = new objects_Ben(Math.round(Main.screenWidth / 2),Main.screenHeight + 150));
		scenes_Gameplay.gui = new hud_GUI();
		scenes_Gameplay.gui.set_name("gui");
		utils_LevelLoader.load(scenes_Gameplay.actualLevel,this);
		this.addChild(scenes_Gameplay.player);
		this.addChild(this.particlesLayerUp);
		this.addChild(scenes_Gameplay.gui);
		hud_GUI.energyGauge.fixGauge(scenes_Gameplay.player.energy,100);
		if(Main.isMobile) {
			Main.joypad = new joypad_Joypad();
			Main.joypad.set_name("joypad");
			this.addChild(Main.joypad);
			Main.joypad.showJoystick();
		}
		this.addEventListener("focusOut",$bind(this,this.focusOut));
		this.addEventListener("focusIn",$bind(this,this.focusIn));
		motion_Actuate.timer(1.0).onComplete($bind(this,this.startGame));
		this.lastTick = openfl_Lib.getTimer();
		this.addEventListener("enterFrame",$bind(this,this.update));
	}
	,removed: function() {
		this.removeEventListener("enterFrame",$bind(this,this.update));
		this.removeEventListener("focusOut",$bind(this,this.focusOut));
		this.removeEventListener("focusIn",$bind(this,this.focusIn));
		this.removeAll();
	}
	,update: function(e) {
		var now = openfl_Lib.getTimer();
		var elapsed = now - this.lastTick;
		if(utils_Utils.IS_DEBUG && utils_KeyboardMap.isPressed[16]) elapsed = Math.round(elapsed / 5);
		var objs = this.objects.slice();
		if(!scenes_Gameplay.paused && !scenes_Gameplay.gameover) {
			var _g = 0;
			while(_g < objs.length) {
				var object = objs[_g];
				++_g;
				object.update(elapsed);
			}
			this.zsort();
		} else if(scenes_Gameplay.gameover) scenes_Gameplay.player.update(elapsed);
		if(!Main.isMobile) {
			if(scenes_Gameplay.scrollingSpeed >= 0.2) this.speedFilter(true); else this.speedFilter(false);
		}
		this.lastTick = now;
	}
	,speedFilter: function(on) {
		if(on && !this.speedFilterAlreadyOn) {
			this.blur.set_alpha(0.0);
			this.addObject(this.blur);
			this.speedFilterAlreadyOn = true;
			motion_Actuate.tween(this.blur,0.5,{ alpha : 0.3});
		} else if(!on && this.speedFilterAlreadyOn) {
			motion_Actuate.tween(this.blur,1.0,{ alpha : 0.0}).onComplete($bind(this,this.removeObject),[this.blur]);
			this.speedFilterAlreadyOn = false;
		}
	}
	,zsort: function() {
		var array = [];
		var _g1 = 0;
		var _g = this.get_numChildren();
		while(_g1 < _g) {
			var i = _g1++;
			var child = this.getChildAt(i);
			if(child.get_name() != "gui" && child.get_name() != "joypad" && !StringTools.startsWith(child.get_name(),"scroll") && !StringTools.startsWith(child.get_name(),"particlesDown")) utils_Utils.sortedInsert(array,child,$bind(this,this.sortBy));
		}
		this.setChildIndex(this.getChildByName("scroll"),0);
		this.setChildIndex(this.getChildByName("particlesDown"),1);
		var _g11 = 0;
		var _g2 = array.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this.setChildIndex(array[i1],i1 + 2);
		}
		this.setChildIndex(scenes_Gameplay.gui,this.get_numChildren() - 1);
		this.setChildIndex(this.getChildByName("scrollBorderLeft"),this.get_numChildren() - 2);
		this.setChildIndex(this.getChildByName("scrollBorderRight"),this.get_numChildren() - 3);
		this.setChildIndex(this.getChildByName("particlesUp"),this.get_numChildren() - 4);
		if(Main.isMobile) this.addChild(Main.joypad);
	}
	,sortBy: function(a,b) {
		if(a.get_y() > b.get_y()) return 1; else return -1;
	}
	,addObject: function(obj,add) {
		if(add == null) add = true;
		if(add) this.addChild(obj);
		this.objects.push(obj);
	}
	,removeObject: function(obj) {
		var x = obj;
		HxOverrides.remove(this.objects,x);
		try {
			if(obj.parent != null) obj.parent.removeChild(obj);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,openfl_errors_Error) ) {
			} else throw(e);
		}
	}
	,removeAll: function() {
		var _g = 0;
		var _g1 = this.objects;
		while(_g < _g1.length) {
			var object = _g1[_g];
			++_g;
			this.removeObject(object);
		}
	}
	,__class__: scenes_Gameplay
});
var scenes_LevelSelect = function() {
	openfl_display_Sprite.call(this);
	this.createButtons();
	var bitmap = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/levelselect/cartel - selector de pantalla.png"));
	bitmap.set_x(Main.screenWidth / 2 - bitmap.get_width() / 2);
	bitmap.set_y(Main.screenHeight - bitmap.get_height());
	this.addChild(bitmap);
	this.tf = new ui_TextFieldBase(utils_Localization.getText("LEVEL_SELECT"));
	this.tf.setFormat(0,20);
	this.tf.set_autoSize(0);
	this.tf.set_x(Main.screenWidth / 2 - this.tf.get_width() / 2);
	this.tf.set_y(Main.screenHeight - this.tf.get_height() - 4);
	this.addChild(this.tf);
};
$hxClasses["scenes.LevelSelect"] = scenes_LevelSelect;
scenes_LevelSelect.__name__ = ["scenes","LevelSelect"];
scenes_LevelSelect.__interfaces__ = [scenes_Scene];
scenes_LevelSelect.__super__ = openfl_display_Sprite;
scenes_LevelSelect.prototype = $extend(openfl_display_Sprite.prototype,{
	createButtons: function() {
		this.arrayBtn = [];
		var _g = 0;
		while(_g < 9) {
			var i = _g++;
			this.arrayBtn.push(new hud_ButtonLevel(i));
			this.arrayBtn[i].setText(i + 1);
			this.addChild(this.arrayBtn[i]);
		}
		this.checkSaveData();
		var offsetX = 190;
		var offsetY = 110;
		var _g1 = 0;
		while(_g1 < 3) {
			var column = _g1++;
			var _g11 = 0;
			while(_g11 < 3) {
				var row = _g11++;
				var btn = this.arrayBtn[column * 3 + row];
				btn.set_x(btn.get_width() * row + offsetX);
				btn.set_y(btn.get_height() * column + offsetY);
			}
		}
	}
	,checkSaveData: function() {
		var unlocked = 0;
		var _g = 0;
		while(_g < 9) {
			var i = _g++;
			if(utils_DataManager.arrayData[i].available) {
				this.unlock(i);
				unlocked++;
			} else {
				this.fixText(i);
				this.arrayBtn[i].setScore(utils_DataManager.arrayData[i].score);
			}
		}
		this.arrayBtn[unlocked - 1].imgOver.set_visible(true);
		if(utils_DataManager.arrayData[8].complete) this.arrayBtn[8].imgOver.set_visible(false);
	}
	,unlock: function(lvl) {
		this.arrayBtn[lvl].imgLock.set_visible(false);
		this.arrayBtn[lvl].imgBtn.set_visible(true);
		this.arrayBtn[lvl].setScore(utils_DataManager.arrayData[lvl].score);
	}
	,fixText: function(lvl) {
		this.arrayBtn[lvl].textLevel.setFormat(16777215,64,"Helvetica Rounded LT Black");
		this.arrayBtn[lvl].textLevel.set_x(-24);
		this.arrayBtn[lvl].textLevel.set_y(-45);
	}
	,added: function() {
	}
	,removed: function() {
	}
	,__class__: scenes_LevelSelect
});
var scenes_MainMenu = function() {
	this.kpos = 0;
	this.kdebug = [78,65,78,68,69];
	openfl_display_Sprite.call(this);
	this.titulo = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/intro/nombre juego.png"));
	this.fondo1 = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/intro/intro - fondo1.png"));
	this.fondo2 = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/intro/intro - fondo2.png"),1,true);
	this.fondo3 = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/intro/intro - fondo3.png"),1,true);
	this.ben = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/intro/intro - ben.png"));
	this.aliens = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/intro/intro - aliens.png"));
	this.piso = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/intro/intro - piso.png"));
	this.rotor1 = new openfl_display_Sprite();
	this.rotor1.addChild(this.fondo2);
	this.fondo2.set_x(-this.fondo2.get_width() / 2);
	this.fondo2.set_y(-this.fondo2.get_height() / 2);
	this.rotor2 = new openfl_display_Sprite();
	this.rotor2.addChild(this.fondo3);
	this.fondo3.set_x(-this.fondo3.get_width() / 2);
	this.fondo3.set_y(-this.fondo3.get_height() / 2);
	this.rotor1.set_x(400);
	this.rotor1.set_y(Main.screenHeight);
	this.rotor2.set_x(400);
	this.rotor2.set_y(Main.screenHeight);
	this.aliens.set_x(Main.screenWidth - this.aliens.get_width());
	this.aliens.set_y(Main.screenHeight);
	this.piso.set_x(Main.screenWidth - this.piso.get_width());
	this.piso.set_y(Main.screenHeight);
	this.ben.set_x(Main.screenWidth - this.ben.get_width());
	this.ben.set_y(Main.screenHeight);
	this.titulo.set_y(Main.screenHeight);
	this.btnMute = new hud_ButtonGraphic();
	this.btnMute.setButton("mute");
	this.btnMute.set_x(Main.screenWidth - 35);
	this.btnMute.set_y(-this.btnMute.get_height());
	this.btnMute.addEventListener("click",$bind(this,this.clickMute));
	this.createPlaySlide();
	this.createCredits();
	this.addElements();
};
$hxClasses["scenes.MainMenu"] = scenes_MainMenu;
scenes_MainMenu.__name__ = ["scenes","MainMenu"];
scenes_MainMenu.__interfaces__ = [scenes_Scene];
scenes_MainMenu.__super__ = openfl_display_Sprite;
scenes_MainMenu.prototype = $extend(openfl_display_Sprite.prototype,{
	createPlaySlide: function() {
		this.playSlide = new openfl_display_Sprite();
		this.playSlide.set_x(0);
		this.playSlide.set_y(Main.screenHeight);
		this.playBoard = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/intro/barra - boton play.png"));
		this.btnPlay = new hud_ButtonGraphic();
		this.btnPlay.setButton("play");
		this.btnPlay.set_x(this.playBoard.get_x() + 110);
		this.btnPlay.set_y(this.playBoard.get_y() + 60);
		this.btnPlay.addEventListener("click",$bind(this,this.goToLevelSelect));
		this.playSlide.addChild(this.playBoard);
		this.playSlide.addChild(this.btnPlay);
	}
	,createCredits: function() {
		this.btnCredits = new hud_ButtonGraphic();
		this.btnCredits.setButton("credits");
		this.btnCredits.set_x(30);
		this.btnCredits.set_y(Main.screenHeight - 30);
		this.btnCredits.addEventListener("mouseOver",$bind(this,this.showCredits));
		this.addChild(this.btnCredits);
		this.creditsSlide = new openfl_display_Sprite();
		this.creditsBoard = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/intro/cartel - creditos.png"));
		this.creditsSlide.addChild(this.creditsBoard);
		this.creditsSlide.set_x(-this.creditsSlide.get_width());
		this.creditsSlide.set_y(Main.screenHeight - this.creditsSlide.get_height());
		this.addChild(this.creditsSlide);
		this.creditsSlide.addEventListener("mouseOut",$bind(this,this.hideCredits));
		this.producer = new ui_TextFieldBase(utils_Localization.getText("PRODUCED_BY"));
		this.producer.setFormat(0,9);
		this.producer.set_x(8);
		this.producer.set_y(23);
		this.developer = new ui_TextFieldBase(utils_Localization.getText("DEVELOPED_BY"));
		this.developer.setFormat(0,9);
		this.developer.set_x(247);
		this.developer.set_y(23);
		this.creditsSlide.addChild(this.developer);
		this.creditsSlide.addChild(this.producer);
	}
	,addElements: function() {
		this.addChild(this.fondo1);
		this.addChild(this.rotor1);
		this.addChild(this.rotor2);
		this.addChild(this.playSlide);
		this.addChild(this.btnCredits);
		this.addChild(this.btnMute);
		this.addChild(this.titulo);
		this.addChild(this.aliens);
		this.addChild(this.piso);
		this.addChild(this.ben);
		this.addChild(this.creditsSlide);
		this.btnMute.mouseEnabled = false;
		this.btnCredits.mouseEnabled = false;
		if(!scenes_Manager.levelselect_flag) motion_Actuate.timer(4.0).onComplete($bind(this,this.wakeupButtons));
	}
	,wakeupButtons: function() {
		motion_Actuate.tween(this.btnMute,1.0,{ y : this.btnMute.get_height() / 2 + 10});
		this.btnMute.mouseEnabled = true;
		this.btnCredits.mouseEnabled = true;
	}
	,goToGameplay: function() {
		scenes_Manager.go("gameplay");
	}
	,goToLevelSelect: function(e) {
		this.getOut();
		this.getInLevelSelect();
	}
	,goToEnd: function() {
		scenes_Manager.go("end");
	}
	,clickMute: function(e) {
		utils_SoundLib.musicEnabled = !utils_SoundLib.musicEnabled;
		this.btnMute.imgToogle.set_visible(!utils_SoundLib.musicEnabled);
		utils_SoundLib.muteMusic();
	}
	,showCredits: function(e) {
		motion_Actuate.tween(this.creditsSlide,scenes_MainMenu.ENTER_DURATION,{ x : 0});
	}
	,hideCredits: function(e) {
		motion_Actuate.tween(this.creditsSlide,scenes_MainMenu.ENTER_DURATION,{ x : -this.creditsSlide.get_width()});
	}
	,added: function() {
		this.createLevelSelect();
		this.addEventListener("enterFrame",$bind(this,this.update));
		if(scenes_Manager.levelselect_flag) {
			this.showLevelSelect();
			scenes_Manager.levelselect_flag = false;
			this.selectora.checkSaveData();
		} else this.getIn();
		this.kpos = 0;
	}
	,createLevelSelect: function() {
		this.selectora = new scenes_LevelSelect();
		this.selectora.set_x(Main.screenWidth);
		this.addChild(this.selectora);
		this.btnHome = new hud_ButtonGraphic();
		this.btnHome.setButton("home");
		this.btnHome.set_x(Main.screenWidth - 75);
		this.btnHome.set_y(-this.btnHome.get_height());
		this.btnHome.addEventListener("click",$bind(this,this.getOutLevelSelect));
		this.addChild(this.btnHome);
		this.btnHome.set_visible(false);
	}
	,getIn: function() {
		motion_Actuate.tween(this.rotor1,4.0,{ y : 300});
		motion_Actuate.tween(this.rotor2,4.0,{ y : 300});
		motion_Actuate.timer(0.5).onComplete($bind(this,this.getInStep2));
		motion_Actuate.timer(1.0).onComplete($bind(this,this.getInStep3));
	}
	,getInStep2: function() {
		this.aliens.set_y(Main.screenHeight * 1.5);
		this.piso.set_y(Main.screenHeight * 1.5);
		this.ben.set_y(Main.screenHeight * 1.5);
		motion_Actuate.tween(this.aliens,2.0,{ y : Main.screenHeight - this.aliens.get_height()});
		motion_Actuate.tween(this.piso,2.0,{ y : Main.screenHeight - this.piso.get_height()});
		motion_Actuate.tween(this.ben,2.0,{ y : Main.screenHeight - this.ben.get_height()});
	}
	,getInStep3: function() {
		this.titulo.set_y(Main.screenHeight * 2);
		this.playSlide.set_y(Main.screenHeight * 2);
		motion_Actuate.tween(this.titulo,2.0,{ y : 0});
		motion_Actuate.tween(this.playSlide,2.0,{ y : this.titulo.get_height()});
	}
	,getOut: function() {
		motion_Actuate.tween(this.fondo1,scenes_MainMenu.EXIT_DURATION,{ x : -90});
		motion_Actuate.tween(this.rotor1,scenes_MainMenu.EXIT_DURATION,{ x : 310});
		motion_Actuate.tween(this.rotor2,scenes_MainMenu.EXIT_DURATION,{ x : 310});
		motion_Actuate.tween(this.aliens,scenes_MainMenu.EXIT_DURATION,{ x : -this.aliens.get_width()});
		motion_Actuate.tween(this.piso,scenes_MainMenu.EXIT_DURATION,{ x : -this.piso.get_width()});
		motion_Actuate.tween(this.ben,scenes_MainMenu.EXIT_DURATION,{ x : -this.ben.get_width()});
		motion_Actuate.tween(this.titulo,scenes_MainMenu.EXIT_DURATION,{ x : -this.titulo.get_width()});
		motion_Actuate.tween(this.playSlide,scenes_MainMenu.EXIT_DURATION,{ x : -this.playSlide.get_width()});
	}
	,getInLevelSelect: function() {
		motion_Actuate.tween(this.selectora,scenes_MainMenu.EXIT_DURATION,{ x : 0});
		motion_Actuate.tween(this.btnHome,1.0,{ y : this.btnHome.get_height() / 2 + 10});
		this.btnHome.set_visible(true);
		this.btnCredits.set_visible(false);
	}
	,getOutLevelSelect: function(e) {
		motion_Actuate.tween(this.btnHome,1.0,{ y : -this.btnHome.get_height()});
		motion_Actuate.tween(this.selectora,scenes_MainMenu.EXIT_DURATION,{ x : Main.screenWidth});
		motion_Actuate.tween(this.fondo1,scenes_MainMenu.EXIT_DURATION,{ x : 0});
		motion_Actuate.tween(this.rotor1,scenes_MainMenu.EXIT_DURATION,{ x : 400});
		motion_Actuate.tween(this.rotor2,scenes_MainMenu.EXIT_DURATION,{ x : 400});
		motion_Actuate.tween(this.aliens,scenes_MainMenu.EXIT_DURATION,{ x : Main.screenWidth - this.aliens.get_width()});
		motion_Actuate.tween(this.piso,scenes_MainMenu.EXIT_DURATION,{ x : Main.screenWidth - this.piso.get_width()});
		motion_Actuate.tween(this.ben,scenes_MainMenu.EXIT_DURATION,{ x : Main.screenWidth - this.ben.get_width()});
		motion_Actuate.tween(this.titulo,scenes_MainMenu.EXIT_DURATION,{ x : 0});
		motion_Actuate.tween(this.playSlide,scenes_MainMenu.EXIT_DURATION,{ x : 0});
		this.btnCredits.set_visible(true);
	}
	,showLevelSelect: function() {
		this.fondo1.set_x(-90);
		this.rotor1.set_x(310);
		this.rotor1.set_y(300);
		this.rotor2.set_x(310);
		this.rotor2.set_y(300);
		this.aliens.set_x(-this.aliens.get_width());
		this.aliens.set_y(Main.screenHeight - this.aliens.get_height());
		this.piso.set_x(-this.piso.get_width());
		this.piso.set_y(Main.screenHeight - this.piso.get_height());
		this.ben.set_x(-this.ben.get_width());
		this.ben.set_y(Main.screenHeight - this.ben.get_height());
		this.titulo.set_x(-this.titulo.get_width());
		this.titulo.set_y(0);
		this.playSlide.set_x(-this.playSlide.get_width());
		this.playSlide.set_y(this.titulo.get_height());
		this.selectora.set_x(0);
		this.btnHome.set_visible(true);
		this.btnHome.set_y(-this.btnHome.get_height());
		this.btnMute.set_y(-this.btnMute.get_height());
		motion_Actuate.tween(this.btnHome,1.0,{ y : this.btnHome.get_height() / 2 + 10});
		motion_Actuate.tween(this.btnMute,1.0,{ y : this.btnMute.get_height() / 2 + 10});
		this.btnMute.mouseEnabled = true;
		this.btnCredits.mouseEnabled = true;
		this.btnCredits.set_visible(false);
	}
	,removed: function() {
		this.removeEventListener("enterFrame",$bind(this,this.update));
	}
	,update: function(e) {
		var _g = this.rotor1;
		_g.set_rotation(_g.get_rotation() + 0.1);
		var _g1 = this.rotor2;
		_g1.set_rotation(_g1.get_rotation() + 0.15);
		this.checkDebug();
	}
	,checkDebug: function() {
		if(utils_KeyboardMap.isPressed[this.kdebug[this.kpos]]) this.kdd = true; else {
			if(this.kdd) {
				this.kpos++;
				if(this.kpos >= this.kdebug.length) {
					utils_Utils.IS_DEBUG = true;
					this.kpos = 0;
					utils_SoundLib.playFX("transformA");
					utils_DataManager.unlockAllLevels();
				}
			}
			this.kdd = false;
		}
	}
	,__class__: scenes_MainMenu
});
var scenes_Manager = function(canvas) {
	scenes_Manager.instance = this;
	this.canvas = canvas;
	this.blackRectangle = new openfl_display_Sprite();
	this.blackRectangle.get_graphics().beginFill(0);
	this.blackRectangle.get_graphics().drawRect(0,0,Main.screenWidth,Main.screenHeight);
	this.blackRectangle.get_graphics().endFill();
	this.current = new scenes_CNGames();
	scenes_Manager.sceneLabel = "cngames";
	canvas.addChild(this.current);
	this.current.added();
};
$hxClasses["scenes.Manager"] = scenes_Manager;
scenes_Manager.__name__ = ["scenes","Manager"];
scenes_Manager.sceneLabel = null;
scenes_Manager.instance = null;
scenes_Manager.go = function(destiny) {
	scenes_Manager.instance.goTo(destiny);
};
scenes_Manager.shake = function() {
	scenes_Manager.shakeFinish();
	motion_Actuate.tween(scenes_Manager.instance.canvas,0.5,{ }).onUpdate(scenes_Manager.shakeUpdate).onComplete(scenes_Manager.shakeFinish);
};
scenes_Manager.shakeUpdate = function() {
	scenes_Manager.instance.canvas.set_x(Math.random() * 5 - 5);
	scenes_Manager.instance.canvas.set_y(Math.random() * 5 - 5);
};
scenes_Manager.shakeFinish = function() {
	scenes_Manager.instance.canvas.set_scaleY(scenes_Manager.instance.canvas.set_scaleX(1.0));
	scenes_Manager.instance.canvas.set_x(0);
	scenes_Manager.instance.canvas.set_y(0);
};
scenes_Manager.prototype = {
	goTo: function(destiny) {
		this._nextScene = destiny;
		this.transitionOut();
	}
	,transitionOut: function() {
		this.blackRectangle.set_alpha(0);
		this.canvas.addChild(this.blackRectangle);
		motion_Actuate.tween(this.blackRectangle,1,{ alpha : 1.0}).onComplete($bind(this,this.switchState));
	}
	,transitionIn: function(target) {
		this.canvas.setChildIndex(this.blackRectangle,this.canvas.get_numChildren() - 1);
		this.blackRectangle.set_alpha(1.0);
		motion_Actuate.tween(this.blackRectangle,1,{ alpha : 0.0}).onComplete(($_=this.canvas,$bind($_,$_.removeChild)),[this.blackRectangle]);
	}
	,createNextTarget: function() {
		scenes_Manager.levelselect_flag = false;
		scenes_Manager.sceneLabel = this._nextScene.toLowerCase();
		var _g = scenes_Manager.sceneLabel;
		switch(_g) {
		case "cngames":
			this.target = new scenes_CNGames();
			break;
		case "mainmenu":
			this.target = new scenes_MainMenu();
			motion_Actuate.timer(1).onComplete(utils_SoundLib.playIntroMusic);
			break;
		case "levelselect":
			scenes_Manager.levelselect_flag = true;
			utils_SoundLib.fadeMusic("menu");
			this.target = new scenes_MainMenu();
			break;
		case "gameplay":
			this.target = new scenes_Gameplay();
			utils_SoundLib.fadeMusic("game");
			break;
		case "end":
			this.target = new scenes_End();
			utils_SoundLib.fadeMusic("menu");
			break;
		case "end-menu":
			utils_SoundLib.fadeMusic("menu");
			this.target = new scenes_MainMenu();
			break;
		}
	}
	,switchState: function() {
		var index = this.canvas.getChildIndex(this.current);
		this.canvas.removeChild(this.current);
		this.current.removed();
		this.createNextTarget();
		var sprite;
		sprite = js_Boot.__cast(this.target , openfl_display_Sprite);
		this.canvas.addChildAt(sprite,this.current);
		this.target.added();
		this.current = this.target;
		this.blackRectangle.set_alpha(1.0);
		motion_Actuate.timer(0.01).onComplete($bind(this,this.transitionIn),[this.target]);
	}
	,__class__: scenes_Manager
};
var spritesheet_Spritesheet = function(image,frames,behaviors,imageAlpha) {
	this.sourceImage = image;
	this.sourceImageAlpha = imageAlpha;
	if(frames == null) {
		this.frames = [];
		this.totalFrames = 0;
	} else {
		this.frames = frames;
		this.totalFrames = frames.length;
	}
	if(behaviors == null) this.behaviors = new haxe_ds_StringMap(); else this.behaviors = behaviors;
};
$hxClasses["spritesheet.Spritesheet"] = spritesheet_Spritesheet;
spritesheet_Spritesheet.__name__ = ["spritesheet","Spritesheet"];
spritesheet_Spritesheet.prototype = {
	addBehavior: function(behavior) {
		this.behaviors.set(behavior.name,behavior);
	}
	,addFrame: function(frame) {
		this.frames.push(frame);
		this.totalFrames++;
	}
	,generateBitmaps: function() {
		var _g1 = 0;
		var _g = this.totalFrames;
		while(_g1 < _g) {
			var i = _g1++;
			this.generateBitmap(i);
		}
	}
	,generateBitmap: function(index) {
		var frame = this.frames[index];
		var bitmapData = new openfl_display_BitmapData(frame.width,frame.height,true);
		var sourceRectangle = new openfl_geom_Rectangle(frame.x,frame.y,frame.width,frame.height);
		var targetPoint = new openfl_geom_Point();
		bitmapData.copyPixels(this.sourceImage,sourceRectangle,targetPoint);
		if(this.sourceImageAlpha != null) bitmapData.copyChannel(this.sourceImageAlpha,sourceRectangle,targetPoint,2,8);
		frame.bitmapData = bitmapData;
	}
	,getFrame: function(index,autoGenerate) {
		if(autoGenerate == null) autoGenerate = true;
		var frame = this.frames[index];
		if(frame != null && frame.bitmapData == null && autoGenerate) this.generateBitmap(index);
		return frame;
	}
	,getFrameIDs: function() {
		var ids = [];
		var _g1 = 0;
		var _g = this.totalFrames;
		while(_g1 < _g) {
			var i = _g1++;
			ids.push(i);
		}
		return ids;
	}
	,getFrames: function() {
		return this.frames.slice();
	}
	,merge: function(spritesheet1) {
		var cacheTotalFrames = this.totalFrames;
		var _g1 = 0;
		var _g = spritesheet1.frames.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(spritesheet1.frames[i].bitmapData == null && (spritesheet1.sourceImage != this.sourceImage || spritesheet1.sourceImageAlpha != this.sourceImageAlpha)) spritesheet1.generateBitmap(i);
			this.addFrame(spritesheet1.frames[i]);
		}
		var $it0 = spritesheet1.behaviors.iterator();
		while( $it0.hasNext() ) {
			var behavior = $it0.next();
			if(!this.behaviors.exists(behavior.name)) {
				var clone = behavior.clone();
				clone.name = behavior.name;
				var _g11 = 0;
				var _g2 = behavior.frames.length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					behavior.frames[i1] += cacheTotalFrames;
				}
				this.addBehavior(behavior);
			}
		}
		var ids = [];
		var _g12 = cacheTotalFrames;
		var _g3 = this.totalFrames;
		while(_g12 < _g3) {
			var i2 = _g12++;
			ids.push(i2);
		}
		return ids;
	}
	,updateImage: function(image,imageAlpha) {
		this.sourceImage = image;
		this.sourceImageAlpha = imageAlpha;
		var _g = 0;
		var _g1 = this.frames;
		while(_g < _g1.length) {
			var frame = _g1[_g];
			++_g;
			if(frame.bitmapData != null) frame.bitmapData = null;
		}
	}
	,__class__: spritesheet_Spritesheet
};
var spritesheet_data_BehaviorData = function(name,frames,loop,frameRate,originX,originY) {
	if(originY == null) originY = 0;
	if(originX == null) originX = 0;
	if(frameRate == null) frameRate = 30;
	if(loop == null) loop = false;
	if(name == null) name = "";
	if(name == "") name = "behavior" + spritesheet_data_BehaviorData.uniqueID++;
	if(frames == null) frames = [];
	this.name = name;
	this.frames = frames;
	this.loop = loop;
	this.frameRate = frameRate;
	this.originX = originX;
	this.originY = originY;
	this.frameData = [];
	var _g1 = 0;
	var _g = this.frames.length;
	while(_g1 < _g) {
		var i = _g1++;
		this.frameData.push(null);
	}
};
$hxClasses["spritesheet.data.BehaviorData"] = spritesheet_data_BehaviorData;
spritesheet_data_BehaviorData.__name__ = ["spritesheet","data","BehaviorData"];
spritesheet_data_BehaviorData.prototype = {
	clone: function() {
		return new spritesheet_data_BehaviorData("behavior" + spritesheet_data_BehaviorData.uniqueID++,this.frames.slice(),this.loop,this.frameRate,this.originX,this.originY);
	}
	,__class__: spritesheet_data_BehaviorData
};
var spritesheet_data_SpritesheetFrame = function(x,y,width,height,offsetX,offsetY) {
	if(offsetY == null) offsetY = 0;
	if(offsetX == null) offsetX = 0;
	if(height == null) height = 0;
	if(width == null) width = 0;
	if(y == null) y = 0;
	if(x == null) x = 0;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
	this.offsetX = offsetX;
	this.offsetY = offsetY;
};
$hxClasses["spritesheet.data.SpritesheetFrame"] = spritesheet_data_SpritesheetFrame;
spritesheet_data_SpritesheetFrame.__name__ = ["spritesheet","data","SpritesheetFrame"];
spritesheet_data_SpritesheetFrame.prototype = {
	__class__: spritesheet_data_SpritesheetFrame
};
var spritesheet_importers_BitmapImporter = function() { };
$hxClasses["spritesheet.importers.BitmapImporter"] = spritesheet_importers_BitmapImporter;
spritesheet_importers_BitmapImporter.__name__ = ["spritesheet","importers","BitmapImporter"];
spritesheet_importers_BitmapImporter.create = function(bitmapData,columns,rows,tileWidth,tileHeight,adjustLength,scale) {
	if(scale == null) scale = 1;
	if(adjustLength == null) adjustLength = 0;
	var frames = [];
	var totalLength = rows * columns + adjustLength;
	var _g = 0;
	while(_g < rows) {
		var row = _g++;
		var _g1 = 0;
		while(_g1 < columns) {
			var column = _g1++;
			if(frames.length < totalLength) {
				var x = tileWidth * column;
				var y = tileHeight * row;
				var frame = new spritesheet_data_SpritesheetFrame(x,y,tileWidth,tileHeight,0,0);
				if(scale != 1) {
					var sourceBitmapData = new openfl_display_BitmapData(tileWidth,tileHeight,true,0);
					sourceBitmapData.copyPixels(bitmapData,new openfl_geom_Rectangle(x,y,tileWidth,tileHeight),new openfl_geom_Point());
					var bitmap = new openfl_display_Bitmap(sourceBitmapData);
					bitmap.smoothing = true;
					var matrix = new openfl_geom_Matrix();
					matrix.scale(scale,scale);
					var bitmapData1 = new openfl_display_BitmapData(Math.round(tileWidth * scale),Math.round(tileHeight * scale),true,0);
					bitmapData1.draw(bitmap,matrix);
					frame.bitmapData = bitmapData1;
				}
				frames.push(frame);
			}
		}
	}
	while(frames.length < totalLength) frames.push(new spritesheet_data_SpritesheetFrame());
	return new spritesheet_Spritesheet(bitmapData,frames);
};
var ui_MissionCompleteBoard = function() {
	openfl_display_Sprite.call(this);
	this.draw();
	var titleText = "Mission Completed!";
	this.title = new ui_TextFieldBase(titleText);
	this.title.set_y(-ui_MissionCompleteBoard.HEIGHT / 2);
	this.addChild(this.title);
	var bodyText = "Kill 99 enemies.";
	this.body = new ui_TextFieldBase(bodyText);
	this.body.set_y(-this.body.get_textHeight() / 3);
	this.body.set_textColor(16777215);
	this.addChild(this.body);
	this.set_x(Main.screenWidth - ui_MissionCompleteBoard.WIDTH / 2 - ui_MissionCompleteBoard.PADDING);
	this.set_y(-ui_MissionCompleteBoard.HEIGHT / 2 - ui_MissionCompleteBoard.PADDING);
	motion_Actuate.tween(this,1,{ y : ui_MissionCompleteBoard.HEIGHT / 2 + ui_MissionCompleteBoard.PADDING}).ease(motion_easing_Bounce.get_easeOut()).onComplete($bind(this,this.finishIn));
};
$hxClasses["ui.MissionCompleteBoard"] = ui_MissionCompleteBoard;
ui_MissionCompleteBoard.__name__ = ["ui","MissionCompleteBoard"];
ui_MissionCompleteBoard.__super__ = openfl_display_Sprite;
ui_MissionCompleteBoard.prototype = $extend(openfl_display_Sprite.prototype,{
	finishIn: function() {
		motion_Actuate.timer(1).onComplete($bind(this,this.startOut));
	}
	,startOut: function() {
		motion_Actuate.tween(this,1,{ y : -ui_MissionCompleteBoard.HEIGHT / 2 - ui_MissionCompleteBoard.PADDING}).ease(motion_easing_Quad.get_easeOut()).onComplete($bind(this,this.finishOut));
	}
	,finishOut: function() {
		this.parent.removeChild(this);
	}
	,draw: function() {
		this.get_graphics().clear();
		this.get_graphics().lineStyle(4,ui_MissionCompleteBoard.COLOR);
		this.get_graphics().beginFill(0);
		this.get_graphics().drawRoundRect(-ui_MissionCompleteBoard.WIDTH / 2,-ui_MissionCompleteBoard.HEIGHT / 2,ui_MissionCompleteBoard.WIDTH,ui_MissionCompleteBoard.HEIGHT,ui_MissionCompleteBoard.BORDER_RADIOUS);
		this.get_graphics().endFill();
	}
	,__class__: ui_MissionCompleteBoard
});
var ui_TextFieldBase = function(text) {
	if(text == null) text = "";
	openfl_text_TextField.call(this);
	this.setFormat();
	this.set_text(text);
	this.set_autoSize(0);
	this.set_embedFonts(true);
	this.mouseEnabled = false;
	this.set_selectable(false);
	this.set_x(-this.get_width() / 2);
	this.set_y(-this.get_height() / 2);
};
$hxClasses["ui.TextFieldBase"] = ui_TextFieldBase;
ui_TextFieldBase.__name__ = ["ui","TextFieldBase"];
ui_TextFieldBase.__super__ = openfl_text_TextField;
ui_TextFieldBase.prototype = $extend(openfl_text_TextField.prototype,{
	setFormat: function(color,size,font) {
		if(font == null) font = "Helvetica Rounded LT Black";
		if(size == null) size = 18;
		if(color == null) color = 9358387;
		this.set_defaultTextFormat(new openfl_text_TextFormat(font,size,color));
		var aux = this.get_text();
		this.set_text(aux);
		this.set_autoSize(0);
		this.set_x(-this.get_width() / 2);
		this.set_y(-this.get_height() / 2);
	}
	,__class__: ui_TextFieldBase
});
var ui_buttons_Button = function(_x,_y,_callback,text) {
	if(text == null) text = "";
	openfl_display_Sprite.call(this);
	this.set_x(_x);
	this.set_y(_y);
	this.callback = _callback;
	this.clicked = false;
	if(Main.isMobile) {
		this.addEventListener("touchTap",$bind(this,this.click));
		this.addEventListener("touchBegin",$bind(this,this.down));
		this.addEventListener("touchEnd",$bind(this,this.out));
	} else {
		this.addEventListener("click",$bind(this,this.click));
		this.addEventListener("mouseDown",$bind(this,this.down));
		this.addEventListener("mouseOver",$bind(this,this.over));
		this.addEventListener("mouseOut",$bind(this,this.out));
	}
	if(text != "") {
		this.textField = new ui_TextFieldBase(text);
		this.addChild(this.textField);
	}
	this.updateGraphics();
};
$hxClasses["ui.buttons.Button"] = ui_buttons_Button;
ui_buttons_Button.__name__ = ["ui","buttons","Button"];
ui_buttons_Button.__super__ = openfl_display_Sprite;
ui_buttons_Button.prototype = $extend(openfl_display_Sprite.prototype,{
	updateGraphics: function(state) {
		if(state == null) state = 0;
		this.get_graphics().clear();
		switch(state) {
		case 0:
			if(this.textField != null) this.textField.set_textColor(ui_buttons_Button.COLOR);
			this.get_graphics().lineStyle(4,ui_buttons_Button.COLOR);
			this.get_graphics().beginFill(0,0);
			break;
		case 1:
			if(this.textField != null) this.textField.set_textColor(ui_buttons_Button.COLOR);
			this.get_graphics().lineStyle(4,ui_buttons_Button.COLOR);
			this.get_graphics().beginFill(ui_buttons_Button.COLOR,0.3);
			break;
		case 2:
			if(this.textField != null) this.textField.set_textColor(16777215);
			this.get_graphics().lineStyle(4,16777215);
			this.get_graphics().beginFill(0,0);
			break;
		}
		this.get_graphics().drawRoundRect(-ui_buttons_Button.WIDTH / 2,-ui_buttons_Button.HEIGHT / 2,ui_buttons_Button.WIDTH,ui_buttons_Button.HEIGHT,ui_buttons_Button.BORDER_RADIOUS);
		this.get_graphics().endFill();
	}
	,click: function(e) {
		if(this.clicked == false) {
			this.callback();
			this.clicked = true;
		}
	}
	,out: function(e) {
		this.updateGraphics(ui_buttons_Button.STATE_IDLE);
	}
	,over: function(e) {
		this.updateGraphics(ui_buttons_Button.STATE_OVER);
	}
	,down: function(e) {
		this.updateGraphics(ui_buttons_Button.STATE_DOWN);
	}
	,__class__: ui_buttons_Button
});
var utils_DataManager = function() {
};
$hxClasses["utils.DataManager"] = utils_DataManager;
utils_DataManager.__name__ = ["utils","DataManager"];
utils_DataManager.arrayData = null;
utils_DataManager.init = function() {
	var sharedObject = openfl_net_SharedObject.getLocal(utils_DataManager.SHARED_OBJECT_NAME,"/");
	if(sharedObject.data.arrayData == null) {
		utils_DataManager.arrayData = [];
		var _g = 0;
		while(_g < 9) {
			var i = _g++;
			var levelData = new utils_LevelData();
			utils_DataManager.arrayData.push(levelData);
		}
		utils_DataManager.arrayData[0].available = true;
		sharedObject.data.arrayData = utils_DataManager.arrayData;
		try {
			sharedObject.flush();
		} catch( error ) {
			haxe_CallStack.lastException = error;
			if (error instanceof js__$Boot_HaxeError) error = error.val;
			if( js_Boot.__instanceof(error,openfl_errors_Error) ) {
			} else throw(error);
		}
	} else {
		utils_DataManager.arrayData = [];
		var array = sharedObject.data.arrayData;
		var _g1 = 0;
		var _g2 = array.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			var levelData1 = new utils_LevelData();
			levelData1.parseFromObject(array[i1]);
			utils_DataManager.arrayData.push(levelData1);
		}
	}
};
utils_DataManager.clearData = function() {
	var sharedObject = openfl_net_SharedObject.getLocal(utils_DataManager.SHARED_OBJECT_NAME,"/");
	sharedObject.clear();
	sharedObject.flush();
	utils_DataManager.init();
};
utils_DataManager.reloadData = function() {
	var sharedObject = openfl_net_SharedObject.getLocal(utils_DataManager.SHARED_OBJECT_NAME,"/");
	utils_DataManager.arrayData = [];
	var array = sharedObject.data.arrayData;
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var levelData = new utils_LevelData();
		levelData.parseFromObject(array[i]);
		utils_DataManager.arrayData.push(levelData);
	}
};
utils_DataManager.levelComplete = function() {
	var sharedObject = openfl_net_SharedObject.getLocal(utils_DataManager.SHARED_OBJECT_NAME,"/");
	if(!sharedObject.data.arrayData[hud_GUI.level - 1].complete) sharedObject.data.arrayData[hud_GUI.level - 1].complete = true;
	if(sharedObject.data.arrayData[hud_GUI.level - 1].score < hud_GUI.score) sharedObject.data.arrayData[hud_GUI.level - 1].score = hud_GUI.score;
	if(hud_GUI.level < 9) {
		if(!sharedObject.data.arrayData[hud_GUI.level].available) sharedObject.data.arrayData[hud_GUI.level].available = true;
	}
	sharedObject.flush();
	utils_DataManager.reloadData();
};
utils_DataManager.unlockAllLevels = function() {
	var sharedObject = openfl_net_SharedObject.getLocal(utils_DataManager.SHARED_OBJECT_NAME,"/");
	sharedObject.clear();
	sharedObject.flush();
	utils_DataManager.arrayData = [];
	var _g = 0;
	while(_g < 9) {
		var i = _g++;
		var levelData = new utils_LevelData();
		utils_DataManager.arrayData.push(levelData);
		utils_DataManager.arrayData[i].available = true;
	}
	sharedObject.data.arrayData = utils_DataManager.arrayData;
	try {
		sharedObject.flush();
	} catch( error ) {
		haxe_CallStack.lastException = error;
		if (error instanceof js__$Boot_HaxeError) error = error.val;
		if( js_Boot.__instanceof(error,openfl_errors_Error) ) {
		} else throw(error);
	}
};
utils_DataManager.askHiScore = function(level) {
	if(level == null) level = 1;
	return utils_DataManager.arrayData[level - 1].score;
};
utils_DataManager.prototype = {
	__class__: utils_DataManager
};
var utils_FPS_$Mem = function(inX,inY,inCol) {
	if(inCol == null) inCol = 0;
	if(inY == null) inY = 10.0;
	if(inX == null) inX = 10.0;
	this.memPeak = 0;
	openfl_text_TextField.call(this);
	this.set_x(inX);
	this.set_y(inY);
	this.set_selectable(false);
	this.set_defaultTextFormat(new openfl_text_TextFormat("_sans",12,inCol));
	this.set_text("FPS: ");
	this.times = [];
	this.addEventListener("enterFrame",$bind(this,this.onEnter));
	this.set_width(150);
	this.set_height(70);
};
$hxClasses["utils.FPS_Mem"] = utils_FPS_$Mem;
utils_FPS_$Mem.__name__ = ["utils","FPS_Mem"];
utils_FPS_$Mem.__super__ = openfl_text_TextField;
utils_FPS_$Mem.prototype = $extend(openfl_text_TextField.prototype,{
	onEnter: function(_) {
		var now = haxe_Timer.stamp();
		this.times.push(now);
		while(this.times[0] < now - 1) this.times.shift();
		var mem = Math.round(openfl_system_System.get_totalMemory() / 1024 / 1024 * 100) / 100;
		if(mem > this.memPeak) this.memPeak = mem;
		if(this.get_visible()) this.set_text("FPS: " + this.times.length + "\nMEM: " + mem + " MB\nMEM peak: " + this.memPeak + " MB");
	}
	,__class__: utils_FPS_$Mem
});
var utils_FadeMusic = function() {
	openfl_display_Sprite.call(this);
	this.activate();
};
$hxClasses["utils.FadeMusic"] = utils_FadeMusic;
utils_FadeMusic.__name__ = ["utils","FadeMusic"];
utils_FadeMusic.raiseVolumen = function(myChannel,myVol,faded) {
	if(faded == null) faded = true;
	if(myChannel == null || myChannel.get_soundTransform().volume == myVol) return;
	if(myChannel.get_soundTransform().volume < myVol) {
		if(faded) {
			var newVolume = myChannel.get_soundTransform().volume + utils_FadeMusic.volumenFix;
			if(newVolume > myVol) newVolume = myVol;
			myChannel.set_soundTransform(new openfl_media_SoundTransform(newVolume,-0.0001));
		} else myChannel.set_soundTransform(new openfl_media_SoundTransform(myVol,-0.0001));
	}
};
utils_FadeMusic.lowVolumen = function(myChannel,myVol,faded) {
	if(faded == null) faded = true;
	if(myChannel == null || myChannel.get_soundTransform().volume == myVol) return;
	if(myChannel.get_soundTransform().volume > myVol) {
		if(faded) {
			var newVolume = myChannel.get_soundTransform().volume - utils_FadeMusic.volumenFix;
			if(newVolume < myVol) newVolume = myVol;
			myChannel.set_soundTransform(new openfl_media_SoundTransform(newVolume,-0.0001));
		} else myChannel.set_soundTransform(new openfl_media_SoundTransform(myVol,-0.0001));
	}
};
utils_FadeMusic.fade = function(e) {
	var _g = utils_SoundLib.actual_track;
	switch(_g) {
	case "mute":
		utils_FadeMusic.lowVolumen(utils_SoundLib.channel_menu,0.0,false);
		utils_FadeMusic.lowVolumen(utils_SoundLib.channel_game,0.0,false);
		break;
	case "menu":
		if(!utils_SoundLib.musicEnabled) return;
		utils_FadeMusic.raiseVolumen(utils_SoundLib.channel_menu,1.0,true);
		utils_FadeMusic.lowVolumen(utils_SoundLib.channel_game,0.0,true);
		break;
	case "game":
		if(!utils_SoundLib.musicEnabled) return;
		utils_FadeMusic.lowVolumen(utils_SoundLib.channel_menu,0.0,true);
		utils_FadeMusic.raiseVolumen(utils_SoundLib.channel_game,1.0,true);
		break;
	case "boss":
		if(!utils_SoundLib.musicEnabled) return;
		utils_FadeMusic.raiseVolumen(utils_SoundLib.channel_menu,1.0,true);
		utils_FadeMusic.lowVolumen(utils_SoundLib.channel_game,0.0,true);
		break;
	case "silence":
		if(!utils_SoundLib.musicEnabled) return;
		utils_FadeMusic.lowVolumen(utils_SoundLib.channel_menu,0.0,true);
		utils_FadeMusic.lowVolumen(utils_SoundLib.channel_game,0.0,true);
		break;
	case "boss dead":
		if(!utils_SoundLib.musicEnabled) return;
		utils_FadeMusic.lowVolumen(utils_SoundLib.channel_menu,0.25,true);
		utils_FadeMusic.lowVolumen(utils_SoundLib.channel_game,0.0,true);
		break;
	case "level end":
		if(!utils_SoundLib.musicEnabled) return;
		utils_FadeMusic.lowVolumen(utils_SoundLib.channel_menu,0.0,true);
		utils_FadeMusic.lowVolumen(utils_SoundLib.channel_game,0.25,true);
		break;
	}
};
utils_FadeMusic.__super__ = openfl_display_Sprite;
utils_FadeMusic.prototype = $extend(openfl_display_Sprite.prototype,{
	activate: function() {
		this.addEventListener("enterFrame",utils_FadeMusic.fade);
	}
	,__class__: utils_FadeMusic
});
var utils_KeyboardMap = function() { };
$hxClasses["utils.KeyboardMap"] = utils_KeyboardMap;
utils_KeyboardMap.__name__ = ["utils","KeyboardMap"];
utils_KeyboardMap.isPressed = null;
utils_KeyboardMap.init = function(displayObject) {
	var this1;
	this1 = new Array(utils_KeyboardMap.KEY_CODES_LENGHT);
	utils_KeyboardMap.isPressed = this1;
	var _g1 = 0;
	var _g = utils_KeyboardMap.KEY_CODES_LENGHT;
	while(_g1 < _g) {
		var i = _g1++;
		utils_KeyboardMap.isPressed[i] = false;
	}
	displayObject.stage.addEventListener("keyDown",utils_KeyboardMap.keyDown);
	displayObject.stage.addEventListener("keyUp",utils_KeyboardMap.keyUp);
};
utils_KeyboardMap.keyUp = function(e) {
	utils_KeyboardMap.isPressed[e.keyCode] = false;
};
utils_KeyboardMap.keyDown = function(e) {
	utils_KeyboardMap.isPressed[e.keyCode] = true;
};
utils_KeyboardMap.joypadDown = function(myKey) {
	utils_KeyboardMap.isPressed[myKey] = true;
};
utils_KeyboardMap.joypadUp = function(myKey) {
	utils_KeyboardMap.isPressed[myKey] = false;
};
var utils_LevelData = function() {
	this.available = false;
	this.complete = false;
	this.score = 0;
};
$hxClasses["utils.LevelData"] = utils_LevelData;
utils_LevelData.__name__ = ["utils","LevelData"];
utils_LevelData.prototype = {
	parseFromObject: function(object) {
		this.available = object.available;
		this.complete = object.complete;
		this.score = object.score;
	}
	,__class__: utils_LevelData
};
var utils_LevelLoader = function() {
};
$hxClasses["utils.LevelLoader"] = utils_LevelLoader;
utils_LevelLoader.__name__ = ["utils","LevelLoader"];
utils_LevelLoader.gameplay = null;
utils_LevelLoader.load = function(levelNumber,myGameplay) {
	utils_LevelLoader.gameplay = myGameplay;
	var xml;
	xml = openfl_Assets.getText("levels/level 1.xml");
	switch(levelNumber) {
	case 1:
		xml = openfl_Assets.getText("levels/level 1.xml");
		break;
	case 2:
		xml = openfl_Assets.getText("levels/level 2.xml");
		break;
	case 3:
		xml = openfl_Assets.getText("levels/boss axolote.xml");
		break;
	case 4:
		xml = openfl_Assets.getText("levels/level 4.xml");
		break;
	case 5:
		xml = openfl_Assets.getText("levels/level 5.xml");
		break;
	case 6:
		xml = openfl_Assets.getText("levels/boss abeja.xml");
		break;
	case 7:
		xml = openfl_Assets.getText("levels/level 7.xml");
		break;
	case 8:
		xml = openfl_Assets.getText("levels/level 8.xml");
		break;
	case 9:
		xml = openfl_Assets.getText("levels/boss zombozo.xml");
		break;
	}
	var level = new haxe_xml_Fast(Xml.parse(xml).firstElement());
	if(level.has.resolve("width")) utils_LevelLoader.levelWidth = Std.parseInt(level.att.resolve("width"));
	if(level.has.resolve("height")) utils_LevelLoader.levelHeight = Std.parseInt(level.att.resolve("height"));
	utils_LevelLoader.offsetY = utils_LevelLoader.gridHeight * (utils_LevelLoader.levelHeight - 8) * -1;
	var $it0 = level.get_elements();
	while( $it0.hasNext() ) {
		var node = $it0.next();
		var x = Std.parseInt(node.att.resolve("posx"));
		var y = Std.parseInt(node.att.resolve("posy"));
		var group = Std.parseInt(node.att.resolve("group"));
		var dirx = Std.parseInt(node.att.resolve("dirx"));
		var diry = Std.parseInt(node.att.resolve("diry"));
		var w = Std.parseInt(node.att.resolve("width"));
		var h = Std.parseInt(node.att.resolve("height"));
		var timer = Std.parseInt(node.att.resolve("timer"));
		var _g = node.get_name();
		switch(_g) {
		case "box":
			utils_LevelLoader.createBox(x,y,node.att.resolve("type"));
			break;
		case "item":
			utils_LevelLoader.createItem(x,y,node.att.resolve("type"));
			break;
		case "trap":
			utils_LevelLoader.createTrap(x,y,node.att.resolve("type"));
			break;
		case "decoration":
			utils_LevelLoader.createDecoration(x,y,node.att.resolve("type"));
			break;
		case "soldier":
			utils_LevelLoader.createSoldier(x,y,node.att.resolve("type"),group);
			break;
		case "kamikaze":
			utils_LevelLoader.createKamikaze(x,y,node.att.resolve("type"),group);
			break;
		case "tank":
			utils_LevelLoader.createTank(x,y,node.att.resolve("type"),group);
			break;
		case "wall":
			if(node.att.resolve("type") == "exit") utils_LevelLoader.createExit(x,y,node.att.resolve("type")); else utils_LevelLoader.createSprint(x,y,node.att.resolve("type"));
			break;
		case "speed":
			utils_LevelLoader.createSpeedMod(x,y,node.att.resolve("type"));
			break;
		case "boss":
			utils_LevelLoader.createBoss(x,y,node.att.resolve("type"));
			break;
		}
	}
};
utils_LevelLoader.createBox = function(x,y,myType) {
	utils_LevelLoader.gameplay.addObject(new gameplay_Box(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY,myType));
};
utils_LevelLoader.createItem = function(x,y,myType) {
	if(myType == "omnitrix") utils_LevelLoader.gameplay.addObject(new gameplay_Omnitrix(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY,myType)); else utils_LevelLoader.gameplay.addObject(new gameplay_Collectable(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY,myType));
};
utils_LevelLoader.createTrap = function(x,y,myType) {
	switch(myType) {
	case "spike a":
		utils_LevelLoader.gameplay.addObject(new gameplay_Trap(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY + 30,myType));
		break;
	case "spike b":
		utils_LevelLoader.gameplay.addObject(new gameplay_Trap(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY + 30,myType));
		break;
	case "spike c":
		utils_LevelLoader.gameplay.addObject(new gameplay_Trap(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY + 30,myType));
		break;
	case "spike d":
		utils_LevelLoader.gameplay.addObject(new gameplay_Trap(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY + 30,myType));
		break;
	case "spike e":
		utils_LevelLoader.gameplay.addObject(new gameplay_Trap(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY + 30,myType));
		break;
	case "mine":
		var mine = new gameplay_Mine(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY + 15,myType);
		utils_LevelLoader.gameplay.particlesLayerDown.addChild(mine);
		utils_LevelLoader.gameplay.addObject(mine,false);
		break;
	}
};
utils_LevelLoader.createKamikaze = function(x,y,myType,myGroup) {
	var enemyType = objects_Enemy.TYPE_KAMIKAZE_1;
	switch(myType) {
	case "a":
		enemyType = objects_Enemy.TYPE_KAMIKAZE_1;
		break;
	case "b":
		enemyType = objects_Enemy.TYPE_KAMIKAZE_2;
		break;
	case "c":
		enemyType = objects_Enemy.TYPE_KAMIKAZE_3;
		break;
	case "d":
		enemyType = objects_Enemy.TYPE_KAMIKAZE_4;
		break;
	case "e":
		enemyType = objects_Enemy.TYPE_KAMIKAZE_5;
		break;
	case "f":
		enemyType = objects_Enemy.TYPE_KAMIKAZE_6;
		break;
	case "g":
		enemyType = objects_Enemy.TYPE_KAMIKAZE_7;
		break;
	case "h":
		enemyType = objects_Enemy.TYPE_KAMIKAZE_8;
		break;
	}
	utils_LevelLoader.queueEnemy(x,y,enemyType,myGroup);
};
utils_LevelLoader.createSoldier = function(x,y,myType,myGroup) {
	var enemyType = objects_Enemy.TYPE_SOLDIER_1;
	switch(myType) {
	case "a":
		enemyType = objects_Enemy.TYPE_SOLDIER_1;
		break;
	case "b":
		enemyType = objects_Enemy.TYPE_SOLDIER_2;
		break;
	case "c":
		enemyType = objects_Enemy.TYPE_SOLDIER_3;
		break;
	case "d":
		enemyType = objects_Enemy.TYPE_SOLDIER_4;
		break;
	case "e":
		enemyType = objects_Enemy.TYPE_SOLDIER_5;
		break;
	case "f":
		enemyType = objects_Enemy.TYPE_SOLDIER_6;
		break;
	case "g":
		enemyType = objects_Enemy.TYPE_SOLDIER_7;
		break;
	case "h":
		enemyType = objects_Enemy.TYPE_SOLDIER_8;
		break;
	case "i":
		enemyType = objects_Enemy.TYPE_SOLDIER_9;
		break;
	case "j":
		enemyType = objects_Enemy.TYPE_SOLDIER_10;
		break;
	case "k":
		enemyType = objects_Enemy.TYPE_SOLDIER_11;
		break;
	case "l":
		enemyType = objects_Enemy.TYPE_SOLDIER_12;
		break;
	}
	utils_LevelLoader.queueEnemy(x,y,enemyType,myGroup);
};
utils_LevelLoader.createTank = function(x,y,myType,myGroup) {
	var enemyType = objects_Enemy.TYPE_HEAVY_1;
	switch(myType) {
	case "a":
		enemyType = objects_Enemy.TYPE_HEAVY_1;
		break;
	case "b":
		enemyType = objects_Enemy.TYPE_HEAVY_2;
		break;
	case "c":
		enemyType = objects_Enemy.TYPE_HEAVY_3;
		break;
	case "d":
		enemyType = objects_Enemy.TYPE_HEAVY_4;
		break;
	case "e":
		enemyType = objects_Enemy.TYPE_HEAVY_5;
		break;
	case "f":
		enemyType = objects_Enemy.TYPE_HEAVY_6;
		break;
	}
	utils_LevelLoader.queueEnemy(x,y,enemyType,myGroup);
};
utils_LevelLoader.queueEnemy = function(x,y,type,group) {
	var px = x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX + 15;
	var py = y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY + 30;
	var e;
	switch(type) {
	case 100:
		e = new objects_bosses_Bee(px,py,($_=utils_LevelLoader.gameplay,$bind($_,$_.removeObject)));
		break;
	case 101:
		e = new objects_bosses_Axolotl(px,py,($_=utils_LevelLoader.gameplay,$bind($_,$_.removeObject)));
		break;
	case 102:
		e = new objects_bosses_Zombozo(px,py,($_=utils_LevelLoader.gameplay,$bind($_,$_.removeObject)));
		break;
	default:
		e = new objects_Enemy(px,py,type,($_=utils_LevelLoader.gameplay,$bind($_,$_.removeObject)),group,false);
	}
	utils_LevelLoader.gameplay.addObject(e);
};
utils_LevelLoader.createBoss = function(x,y,myType) {
	var enemyType = objects_Enemy.TYPE_BOSS_1;
	switch(myType) {
	case "a":
		enemyType = objects_Enemy.TYPE_BOSS_1;
		break;
	case "b":
		enemyType = objects_Enemy.TYPE_BOSS_2;
		break;
	case "c":
		enemyType = objects_Enemy.TYPE_BOSS_3;
		break;
	}
	utils_LevelLoader.queueEnemy(x,y,enemyType,0);
};
utils_LevelLoader.createDecoration = function(x,y,myType) {
	if(myType == "wall") utils_LevelLoader.gameplay.addObject(new gameplay_Wall(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY,myType)); else {
		var go = new gameplay_Decoration(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY,myType);
		utils_LevelLoader.gameplay.particlesLayerDown.addChild(go);
		utils_LevelLoader.gameplay.addObject(go,false);
	}
};
utils_LevelLoader.createExit = function(x,y,myType) {
	var watermark = new gameplay_ExitDoor(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY,myType);
	utils_LevelLoader.gameplay.particlesLayerDown.addChild(watermark);
	utils_LevelLoader.gameplay.addObject(watermark,false);
};
utils_LevelLoader.createSprint = function(x,y,myType) {
	var watermark = new gameplay_SpeedMod(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY,myType);
	switch(myType) {
	case "speed up":
		watermark = new gameplay_SpeedMod(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY,myType);
		break;
	case "speed down":
		watermark = new gameplay_SpeedMod(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY,myType);
		break;
	case "speed stop":
		watermark = new gameplay_SpeedMod(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY,myType);
		break;
	}
	utils_LevelLoader.gameplay.addObject(watermark);
};
utils_LevelLoader.createSpeedMod = function(x,y,myType) {
	utils_LevelLoader.gameplay.addObject(new gameplay_SpeedMod(x * utils_LevelLoader.gridWidth + utils_LevelLoader.offsetX,y * utils_LevelLoader.gridHeight + utils_LevelLoader.offsetY,myType));
};
utils_LevelLoader.prototype = {
	__class__: utils_LevelLoader
};
var utils_Localization = function() {
};
$hxClasses["utils.Localization"] = utils_Localization;
utils_Localization.__name__ = ["utils","Localization"];
utils_Localization.xml = null;
utils_Localization.langSelected = null;
utils_Localization.init = function() {
	var myURL = "none";
	utils_Localization.langSelected = "en_US";
	try {
		myURL = window.location.href;
		var myURLArray = myURL.split("?");
		if(myURLArray.length == 2) {
			var myAttributes = myURLArray[1];
			var myAttributeArray = myAttributes.split("&");
			var _g1 = 0;
			var _g = myAttributeArray.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(myAttributeArray[i].indexOf("lang") > -1) {
					var attributeSpliced = myAttributeArray[i].split("=");
					utils_Localization.langSelected = attributeSpliced[1];
				}
			}
		}
	} catch( msg ) {
		haxe_CallStack.lastException = msg;
		if (msg instanceof js__$Boot_HaxeError) msg = msg.val;
		if( js_Boot.__instanceof(msg,String) ) {
		} else throw(msg);
	}
	var xmlString = openfl_Assets.getText("locale/" + utils_Localization.langSelected + ".xml");
	utils_Localization.xml = new haxe_xml_Fast(Xml.parse(xmlString).firstElement());
};
utils_Localization.getText = function(nodeName) {
	return utils_Localization.xml.node.resolve(nodeName.toUpperCase()).get_innerData();
};
utils_Localization.prototype = {
	__class__: utils_Localization
};
var utils_Missions = function() {
	this.missions = [];
};
$hxClasses["utils.Missions"] = utils_Missions;
utils_Missions.__name__ = ["utils","Missions"];
utils_Missions.prototype = {
	check: function() {
		var _g = 0;
		var _g1 = this.missions;
		while(_g < _g1.length) {
			var singleMission = _g1[_g];
			++_g;
			if(singleMission()) {
				var boardCompleted = new ui_MissionCompleteBoard();
				scenes_Manager.instance.current.addChild(boardCompleted);
				HxOverrides.remove(this.missions,singleMission);
			}
		}
	}
	,addMission: function(missionNumber) {
		var f = Reflect.field(this,utils_Missions.NAME_BASE + missionNumber);
		this.missions.push(f);
	}
	,mission1: function() {
		return true;
	}
	,__class__: utils_Missions
};
var utils_Pooler_$utils_$particles_$GenParticle = function() {
	this._inc = 5;
	this._deads = [];
	this._pool = [];
};
$hxClasses["utils.Pooler_utils_particles_GenParticle"] = utils_Pooler_$utils_$particles_$GenParticle;
utils_Pooler_$utils_$particles_$GenParticle.__name__ = ["utils","Pooler_utils_particles_GenParticle"];
utils_Pooler_$utils_$particles_$GenParticle.prototype = {
	kill: function(obj,remove) {
		if(remove == null) remove = true;
		if(!obj.active) {
		}
		if(HxOverrides.indexOf(this._deads,obj,0) < 0) this._deads.splice(0,0,obj); else {
		}
		obj.active = false;
		if(remove) scenes_Gameplay.current.removeObject(obj);
	}
	,create: function() {
		var i = new utils_particles_GenParticle();
		this._pool.push(i);
		i._pool = this;
		i.active = true;
		return i;
	}
	,get: function(add) {
		if(add == null) add = true;
		var n;
		if(this._deads.length == 0) n = this.create(); else n = this._deads.pop();
		if(add) scenes_Gameplay.current.addObject(n);
		n.active = true;
		return n;
	}
	,killAll: function(empty) {
		if(empty == null) empty = false;
		var _g = 0;
		var _g1 = this._pool;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			this.kill(i,true);
		}
		if(empty) {
			this._pool = [];
			this._deads = [];
		}
	}
	,__class__: utils_Pooler_$utils_$particles_$GenParticle
};
var utils_Pooler_$utils_$particles_$ShootDustParticle = function() {
	this._inc = 5;
	this._deads = [];
	this._pool = [];
};
$hxClasses["utils.Pooler_utils_particles_ShootDustParticle"] = utils_Pooler_$utils_$particles_$ShootDustParticle;
utils_Pooler_$utils_$particles_$ShootDustParticle.__name__ = ["utils","Pooler_utils_particles_ShootDustParticle"];
utils_Pooler_$utils_$particles_$ShootDustParticle.prototype = {
	kill: function(obj,remove) {
		if(remove == null) remove = true;
		if(!obj.active) {
		}
		if(HxOverrides.indexOf(this._deads,obj,0) < 0) this._deads.splice(0,0,obj); else {
		}
		obj.active = false;
		if(remove) scenes_Gameplay.current.removeObject(obj);
	}
	,create: function() {
		var i = new utils_particles_ShootDustParticle();
		this._pool.push(i);
		i._pool = this;
		i.active = true;
		return i;
	}
	,get: function(add) {
		if(add == null) add = true;
		var n;
		if(this._deads.length == 0) n = this.create(); else n = this._deads.pop();
		if(add) scenes_Gameplay.current.addObject(n);
		n.active = true;
		return n;
	}
	,killAll: function(empty) {
		if(empty == null) empty = false;
		var _g = 0;
		var _g1 = this._pool;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			this.kill(i,true);
		}
		if(empty) {
			this._pool = [];
			this._deads = [];
		}
	}
	,__class__: utils_Pooler_$utils_$particles_$ShootDustParticle
};
var utils_SoundLib = function() {
};
$hxClasses["utils.SoundLib"] = utils_SoundLib;
utils_SoundLib.__name__ = ["utils","SoundLib"];
utils_SoundLib.playFX = function(id) {
	if(id == null) return;
	switch(id) {
	case "CN":
		utils_SoundLib.playSound("CN");
		break;
	case "CN0":
		utils_SoundLib.playSound("CN0");
		break;
	case "click":
		utils_SoundLib.playSound("MouseClick");
		break;
	case "over":
		utils_SoundLib.playSound("MouseOver");
		break;
	case "coinA":
		utils_SoundLib.playSound("Coin");
		break;
	case "coinB":
		utils_SoundLib.playSound("Coin2");
		break;
	case "omnitrix":
		utils_SoundLib.playSound("Omnitrix");
		break;
	case "orbe":
		utils_SoundLib.playSound("Orbe");
		break;
	case "hitA":
		utils_SoundLib.playSound("Golpe");
		break;
	case "hitB":
		utils_SoundLib.playSound("Golpe2");
		break;
	case "tiro":
		utils_SoundLib.playSound("Tiro");
		break;
	case "bip":
		utils_SoundLib.playSound("Bip");
		break;
	case "boomA":
		utils_SoundLib.playSound("Boom01");
		break;
	case "boomB":
		utils_SoundLib.playSound("Boom02");
		break;
	case "boomC":
		utils_SoundLib.playSound("Boom03");
		break;
	case "shootA":
		utils_SoundLib.playSound("Disparo Stinkfly");
		break;
	case "shootB":
		utils_SoundLib.playSound("Disparo Heatblast");
		break;
	case "shootC":
		utils_SoundLib.playSound("Disparo Overflow");
		break;
	case "transformA":
		utils_SoundLib.playSound("Transformacion Stinkfly");
		break;
	case "transformB":
		utils_SoundLib.playSound("Transformacion Heatblast");
		break;
	case "transformC":
		utils_SoundLib.playSound("Transformacion Overflow");
		break;
	case "axolote":
		utils_SoundLib.playSound("Hydromancer");
		break;
	case "zombozo":
		utils_SoundLib.playSound("Zombozo");
		break;
	case "abeja":
		utils_SoundLib.playSound("ReinaAbeja");
		break;
	case "win":
		utils_SoundLib.playSound("win_Eb");
		break;
	case "loose":
		utils_SoundLib.playSound("lose_Eb");
		break;
	}
};
utils_SoundLib.playSound = function(name) {
	var sound;
	sound = openfl_Assets.getSound("audio/" + "fx/" + name + ".ogg");
	if(utils_Utils.getAttr(sound,"bytesLoaded",0) >= 0 && utils_SoundLib.musicEnabled) {
		var channel = sound.play(0,1,new openfl_media_SoundTransform(1,-0.0001));
	}
};
utils_SoundLib.channel_music = null;
utils_SoundLib.music = null;
utils_SoundLib.channel_menu = null;
utils_SoundLib.music_menu = null;
utils_SoundLib.channel_game = null;
utils_SoundLib.music_game = null;
utils_SoundLib.playIntroMusic = function() {
	utils_SoundLib.music = openfl_Assets.getMusic("audio/" + "music/" + "intro" + ".ogg");
	if(utils_SoundLib.music != null) {
		utils_SoundLib.channel_music = utils_SoundLib.music.play(0,1);
		utils_SoundLib.channel_music.set_soundTransform(utils_SoundLib.fullVolume);
	}
	utils_SoundLib.music_menu = openfl_Assets.getMusic("audio/" + "music/" + "menu" + ".ogg");
	utils_SoundLib.music_game = openfl_Assets.getMusic("audio/" + "music/" + "game" + ".ogg");
	motion_Actuate.timer(3.42).onComplete(utils_SoundLib.initializeChannels);
};
utils_SoundLib.initializeChannels = function() {
	utils_SoundLib.channel_menu = utils_SoundLib.music_menu.play(0,9999);
	utils_SoundLib.channel_game = utils_SoundLib.music_game.play(0,9999);
	utils_SoundLib.channel_menu.set_soundTransform(utils_SoundLib.fullVolume);
	utils_SoundLib.channel_game.set_soundTransform(utils_SoundLib.zeroVolume);
	if(utils_SoundLib.musicEnabled) utils_SoundLib.fadeMusic("menu");
};
utils_SoundLib.fadeMusic = function(type) {
	utils_SoundLib.actual_track = type;
};
utils_SoundLib.playMenuMusic = function() {
	utils_SoundLib.actual_track = "menu";
};
utils_SoundLib.playGameMusic = function() {
	utils_SoundLib.actual_track = "game";
};
utils_SoundLib.muteMusic = function() {
	if(!utils_SoundLib.musicEnabled) utils_SoundLib.actual_track = "mute"; else if(scenes_Manager.sceneLabel == "mainmenu" || scenes_Manager.sceneLabel == "levelselect" || scenes_Manager.sceneLabel == "end-menu") utils_SoundLib.fadeMusic("menu"); else if(scenes_Manager.sceneLabel == "gameplay") utils_SoundLib.fadeMusic("game");
};
utils_SoundLib.playTrack = function(id) {
	if(!utils_SoundLib.musicEnabled) return;
	if(id != null) switch(id) {
	case 0:
		utils_SoundLib.playMusic("intro",false);
		break;
	case 1:
		utils_SoundLib.playMusic("menu",true);
		break;
	case 2:
		utils_SoundLib.playMusic("game",true);
		break;
	}
};
utils_SoundLib.playMusic = function(name,loop) {
	if(loop == null) loop = true;
	if(utils_SoundLib.actual_track == name) return; else utils_SoundLib.stopMusic();
	var loop_value = 1;
	if(loop) loop_value = 9999;
	utils_SoundLib.music = openfl_Assets.getMusic("audio/" + "music/" + name + ".ogg");
	if(utils_SoundLib.music != null) {
		utils_SoundLib.actual_track = name;
		utils_SoundLib.channel_music = utils_SoundLib.music.play(0,loop_value);
	}
};
utils_SoundLib.stopMusic = function() {
	if(utils_SoundLib.channel_music != null) utils_SoundLib.channel_music.stop();
	utils_SoundLib.actual_track = "none";
};
utils_SoundLib.volumeMusic = function(myVol) {
	if(myVol != null) utils_SoundLib.playingVolume = myVol;
	if(utils_SoundLib.musicEnabled) {
		var newVolume = new openfl_media_SoundTransform(utils_SoundLib.playingVolume,-0.0001);
		if(utils_SoundLib.channel_music != null) utils_SoundLib.channel_music.set_soundTransform(newVolume);
	}
};
utils_SoundLib.prototype = {
	__class__: utils_SoundLib
};
var utils_Utils = function() { };
$hxClasses["utils.Utils"] = utils_Utils;
utils_Utils.__name__ = ["utils","Utils"];
utils_Utils.getAttr = function(obj,attr,def) {
	if(Object.prototype.hasOwnProperty.call(obj,attr)) return Reflect.field(obj,attr); else return def;
};
utils_Utils.loadJson = function(filenamejs) {
	var data = { };
	try {
		var text = openfl_Assets.getText(filenamejs);
		if(text == "") return data;
		data = JSON.parse(text);
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
	}
	return data;
};
utils_Utils.amIOffScreen = function(obj) {
	var sw = Main.screenWidth;
	var sh = Main.screenHeight;
	var x = obj.get_x();
	var y = obj.get_y();
	return x > sw + utils_Utils.OFFSCREEN_OFFSET || y > sh + utils_Utils.OFFSCREEN_OFFSET || x + utils_Utils.OFFSCREEN_OFFSET < 0 || y + utils_Utils.OFFSCREEN_OFFSET < 0;
};
utils_Utils.dcos = function(a) {
	return Math.cos(a * utils_Utils.toRad);
};
utils_Utils.dsin = function(a) {
	return Math.sin(a * utils_Utils.toRad);
};
utils_Utils.datan2 = function(x,y) {
	return Math.atan2(x,y) / utils_Utils.toRad;
};
utils_Utils.snapshot = function(target,color) {
	var duplicate;
	if(target.parent == null) {
		var tempSprite = new openfl_display_Sprite();
		tempSprite.addChild(target);
	}
	var rect = target.getBounds(target);
	var bmp = new openfl_display_BitmapData(Math.round(rect.width + 1),Math.round(rect.height),true,0);
	var matrix = new openfl_geom_Matrix();
	matrix.translate(-rect.x,-rect.y);
	bmp.draw(target,matrix,null,null,null,true);
	if(color != null) bmp.colorTransform(bmp.rect,color);
	duplicate = new openfl_display_Bitmap(bmp);
	duplicate.set_x(rect.x);
	duplicate.set_y(rect.y);
	return duplicate;
};
utils_Utils.newCollider = function(w,h,dx,dy,circle) {
	if(circle == null) circle = false;
	if(dy == null) dy = 0;
	if(dx == null) dx = 0;
	if(h == null) h = 20;
	if(w == null) w = 20;
	var collider = new openfl_display_Sprite();
	collider.get_graphics().beginFill(16777215);
	if(circle) collider.get_graphics().drawCircle(w / 2,w / 2,Math.sqrt(w * w + h * h) / 2.0); else collider.get_graphics().drawRect(0,0,w,h);
	collider.get_graphics().endFill();
	collider.set_x(dx - w / 2);
	collider.set_y(dy - h / 2);
	collider.set_alpha(utils_Utils.DEBUG_COLLIDERS?0.75:.0);
	return collider;
};
utils_Utils.fastCircTest = function(a,b) {
	if(a == null || b == null || a.fastRectParent() == null || b.fastRectParent() == null) return false;
	if(a == null || b == null) return false;
	var cax;
	var cay;
	var cbx;
	var cby;
	var dist;
	var dx;
	var dy;
	var ra;
	var rb;
	var rt;
	var abounds = a.fastRect();
	var bbounds = b.fastRect();
	ra = Math.max(abounds.width,abounds.height);
	rb = Math.max(bbounds.width,bbounds.height);
	rt = (ra + rb) / 2.0;
	rt *= rt;
	dist = new openfl_geom_Point(abounds.x - bbounds.x,abounds.y - bbounds.y);
	var sdist = dist.x * dist.x + dist.y * dist.y;
	return rt >= sdist;
};
utils_Utils.circHitTest = function(a,b) {
	if(a == null || b == null || a.parent == null || b.parent == null) return null;
	var cax;
	var cay;
	var cbx;
	var cby;
	var dist;
	var dx;
	var dy;
	var ra;
	var rb;
	var rt;
	var abounds = a.getBounds(a);
	var bbounds = b.getBounds(a);
	cax = abounds.x + abounds.width / 2;
	cay = abounds.y + abounds.height / 2;
	cbx = bbounds.x + bbounds.width / 2;
	cby = bbounds.y + bbounds.height / 2;
	ra = Math.max(abounds.width,abounds.height);
	rb = Math.max(bbounds.width,bbounds.height);
	rt = (ra + rb) / 2.0;
	rt *= rt;
	dist = new openfl_geom_Point(cax - cbx,cay - cby);
	var sdist = dist.x * dist.x + dist.y * dist.y;
	if(rt >= sdist) return dist; else return null;
};
utils_Utils.partition = function(arr,l,h,cmp) {
	var x = arr[h];
	var i = l - 1;
	var aux;
	var _g1 = l;
	var _g = h;
	while(_g1 < _g) {
		var j = _g1++;
		if(arr[j] <= x) {
			i++;
			aux = arr[i];
			arr[i] = arr[j];
			arr[j] = aux;
		}
	}
	aux = arr[i + 1];
	arr[i + 1] = arr[h];
	arr[h] = aux;
	return i + 1;
};
utils_Utils.quickSortIterative = function(arr,l,h,cmp) {
	var stack;
	var length = h - l + 1;
	var this1;
	this1 = new openfl_VectorData();
	var this2;
	this2 = new Array(length);
	this1.data = this2;
	this1.length = length;
	this1.fixed = false;
	stack = this1;
	var top = 0;
	{
		if(!stack.fixed) {
			if(top >= stack.length) stack.length = top + 1;
			if(stack.data.length < stack.length) {
				var data;
				var this3;
				this3 = new Array(stack.data.length + 10);
				data = this3;
				haxe_ds__$Vector_Vector_$Impl_$.blit(stack.data,0,data,0,stack.data.length);
				stack.data = data;
			}
		}
		stack.data[top] = l;
	}
	top++;
	{
		if(!stack.fixed) {
			if(top >= stack.length) stack.length = top + 1;
			if(stack.data.length < stack.length) {
				var data1;
				var this4;
				this4 = new Array(stack.data.length + 10);
				data1 = this4;
				haxe_ds__$Vector_Vector_$Impl_$.blit(stack.data,0,data1,0,stack.data.length);
				stack.data = data1;
			}
		}
		stack.data[top] = h;
	}
	while(top >= 0) {
		h = stack.data[top];
		top--;
		l = stack.data[top];
		top--;
		var p = utils_Utils.partition(arr,l,h,cmp);
		if(p - 1 > l) {
			top++;
			{
				if(!stack.fixed) {
					if(top >= stack.length) stack.length = top + 1;
					if(stack.data.length < stack.length) {
						var data2;
						var this5;
						this5 = new Array(stack.data.length + 10);
						data2 = this5;
						haxe_ds__$Vector_Vector_$Impl_$.blit(stack.data,0,data2,0,stack.data.length);
						stack.data = data2;
					}
				}
				stack.data[top] = l;
			}
			top++;
			{
				if(!stack.fixed) {
					if(top >= stack.length) stack.length = top + 1;
					if(stack.data.length < stack.length) {
						var data3;
						var this6;
						this6 = new Array(stack.data.length + 10);
						data3 = this6;
						haxe_ds__$Vector_Vector_$Impl_$.blit(stack.data,0,data3,0,stack.data.length);
						stack.data = data3;
					}
				}
				stack.data[top] = p - 1;
			}
		}
		if(p + 1 < h) {
			top++;
			{
				if(!stack.fixed) {
					if(top >= stack.length) stack.length = top + 1;
					if(stack.data.length < stack.length) {
						var data4;
						var this7;
						this7 = new Array(stack.data.length + 10);
						data4 = this7;
						haxe_ds__$Vector_Vector_$Impl_$.blit(stack.data,0,data4,0,stack.data.length);
						stack.data = data4;
					}
				}
				stack.data[top] = p + 1;
			}
			top++;
			{
				if(!stack.fixed) {
					if(top >= stack.length) stack.length = top + 1;
					if(stack.data.length < stack.length) {
						var data5;
						var this8;
						this8 = new Array(stack.data.length + 10);
						data5 = this8;
						haxe_ds__$Vector_Vector_$Impl_$.blit(stack.data,0,data5,0,stack.data.length);
						stack.data = data5;
					}
				}
				stack.data[top] = h;
			}
		}
	}
};
utils_Utils.sortedInsert = function(arr,v,cmp) {
	var j = arr.length - 1;
	while(j >= 0 && cmp(arr[j],v) > 0) j--;
	var x = v;
	arr.splice(j + 1,0,x);
};
utils_Utils.insertSort = function(arr,cmp) {
	var tmp;
	var j;
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		tmp = arr[i];
		j = i - 1;
		while(j >= 0 && cmp(arr[j],tmp) > 0) {
			arr[j + 1] = arr[j];
			j--;
		}
		arr[j + 1] = tmp;
	}
};
var utils_particles_Dust = function(d) {
	this.emitB = false;
	this.display = d;
	this.hasListener = false;
	var this1;
	this1 = new Array(utils_particles_Dust.POOL_SIZE);
	this.poolArray = this1;
	this.circularIndex = 0;
	var _g1 = 0;
	var _g = utils_particles_Dust.POOL_SIZE;
	while(_g1 < _g) {
		var i = _g1++;
		var val = new utils_particles_DustParticle();
		this.poolArray[i] = val;
	}
};
$hxClasses["utils.particles.Dust"] = utils_particles_Dust;
utils_particles_Dust.__name__ = ["utils","particles","Dust"];
utils_particles_Dust.prototype = {
	emit: function(px,py) {
		if(Main.isMobile) return;
		this.emitB = true;
		this.px = px;
		this.py = py;
		if(!this.hasListener) {
			this.display.addEventListener("enterFrame",$bind(this,this.update));
			this.hasListener = true;
		}
	}
	,update: function(e) {
		var anyActive = false;
		if(this.emitB) {
			this.circularIndex = (this.circularIndex + 1) % utils_particles_Dust.POOL_SIZE;
			this.poolArray[this.circularIndex].init();
			this.display.addChild(this.poolArray[this.circularIndex]);
			this.poolArray[this.circularIndex].active = true;
			this.poolArray[this.circularIndex].set_x(this.px);
			this.poolArray[this.circularIndex].set_y(this.py);
			this.emitB = false;
		}
		var _g1 = 0;
		var _g = utils_particles_Dust.POOL_SIZE;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.poolArray[i].active) {
				this.poolArray[i].update();
				anyActive = true;
			}
		}
		if(!anyActive) {
			this.display.removeEventListener("enterFrame",$bind(this,this.update));
			this.hasListener = false;
		}
	}
	,__class__: utils_particles_Dust
};
var utils_particles_DustParticle = function() {
	openfl_display_Shape.call(this);
	this.speed = 0;
	this.active = false;
	this.get_graphics().clear();
	if(scenes_Gameplay.assetSet == 2) utils_particles_DustParticle.COLOR = 16777215; else utils_particles_DustParticle.COLOR = 16754253;
	this.get_graphics().beginGradientFill(1,[utils_particles_DustParticle.COLOR,utils_particles_DustParticle.COLOR],[1.0,0.0],[0,255]);
	this.get_graphics().drawCircle(-utils_particles_DustParticle.FINAL_RADIOUS / 2,-utils_particles_DustParticle.FINAL_RADIOUS / 2,utils_particles_DustParticle.FINAL_RADIOUS);
	this.get_graphics().endFill();
};
$hxClasses["utils.particles.DustParticle"] = utils_particles_DustParticle;
utils_particles_DustParticle.__name__ = ["utils","particles","DustParticle"];
utils_particles_DustParticle.__super__ = openfl_display_Shape;
utils_particles_DustParticle.prototype = $extend(openfl_display_Shape.prototype,{
	update: function() {
		var _g = this;
		_g.set_y(_g.get_y() + this.speed * 1.25);
		var _g1 = this;
		_g1.set_x(_g1.get_x() + this.xVar * this.speed);
		this.speed *= utils_particles_DustParticle.ACCELERATION;
		this.set_alpha(utils_particles_DustParticle.INITIAL_ALPHA - this.speed / utils_particles_DustParticle.MAX_SPEED * utils_particles_DustParticle.INITIAL_ALPHA);
		this.set_scaleX(this.set_scaleY(utils_particles_DustParticle.INITIAL_SCALE + this.speed / utils_particles_DustParticle.MAX_SPEED * (1 - utils_particles_DustParticle.INITIAL_SCALE)));
		if(this.speed > utils_particles_DustParticle.MAX_SPEED) {
			this.active = false;
			this.parent.removeChild(this);
		}
	}
	,init: function() {
		this.xVar = Math.random() * 3 - 1.5;
		this.speed = utils_particles_DustParticle.MAX_SPEED * utils_particles_DustParticle.INITIAL_SPEED + Math.random() * (1 - utils_particles_DustParticle.INITIAL_SPEED) * utils_particles_DustParticle.MAX_SPEED;
	}
	,__class__: utils_particles_DustParticle
});
var utils_particles_GenParticle = function() {
	openfl_display_Sprite.call(this);
};
$hxClasses["utils.particles.GenParticle"] = utils_particles_GenParticle;
utils_particles_GenParticle.__name__ = ["utils","particles","GenParticle"];
utils_particles_GenParticle.__interfaces__ = [objects_GameObject];
utils_particles_GenParticle.newConf = function(layer) {
	var c = new utils_particles_GenPartsConf();
	if(layer != null) c.layer = layer;
	c.pool = new utils_Pooler_$utils_$particles_$GenParticle();
	return c;
};
utils_particles_GenParticle.emit = function(conf,x,y) {
	if(Main.isMobile) return;
	var _g1 = 0;
	var _g = Math.round(conf.min_parts + Math.random() * (conf.max_parts - conf.min_parts));
	while(_g1 < _g) {
		var i = _g1++;
		var part = conf.pool.get(false);
		part.set(conf,x,y);
	}
};
utils_particles_GenParticle.__super__ = openfl_display_Sprite;
utils_particles_GenParticle.prototype = $extend(openfl_display_Sprite.prototype,{
	setGraphics: function(conf) {
		this.get_graphics().clear();
		this.get_graphics().beginGradientFill(1,[conf.color,conf.color],[1.0,0.0],[0,255]);
		this.get_graphics().drawCircle(-conf.size / 2,-conf.size / 2,conf.size);
		this.get_graphics().endFill();
	}
	,set: function(conf,px,py) {
		this.p = 0;
		this._conf = conf;
		this.life = conf.min_life + Math.random() * (conf.max_life - conf.min_life);
		this.sp = conf.min_speed + Math.random() * (conf.max_speed - conf.min_speed);
		this.angle = conf.direction - conf.apperture / 2 + Math.random() * conf.apperture;
		this.setGraphics(conf);
		this.set_x(px);
		this.set_y(py);
		this.dx = utils_Utils.dcos(this.angle);
		this.dy = utils_Utils.dsin(this.angle);
		this.set_alpha(conf.start_alpha);
		this.set_scaleX(this.set_scaleY(conf.start_scale));
		this.d_alpha = (conf.end_alpha - conf.start_alpha) / this.life;
		this.d_scale = (conf.end_scale - conf.start_scale) / this.life;
		this.d_speed = (conf.end_speed - this.sp) / this.life;
		conf.layer.addChild(this);
		scenes_Gameplay.current.addObject(this,false);
	}
	,update: function(d) {
		this.p += d / this.life;
		var _g = this;
		_g.set_x(_g.get_x() + this.dx * this.sp * d);
		var _g1 = this;
		_g1.set_y(_g1.get_y() + this.dy * this.sp * d);
		this.sp += this.d_speed * d;
		var _g2 = this;
		_g2.set_alpha(_g2.get_alpha() + this.d_alpha * d);
		this.set_scaleX(this.set_scaleY(this.get_scaleX() + this.d_scale * d));
		if(this.p >= 1.0) this._pool.kill(this);
	}
	,__class__: utils_particles_GenParticle
});
var utils_particles_GenPartsConf = function() {
	this.end_speed = 0.01;
	this.end_scale = 0.01;
	this.end_alpha = 0;
	this.start_scale = 1.0;
	this.start_alpha = 1.0;
	this.size = 10;
	this.color = 831486;
	this.max_parts = 20;
	this.min_parts = 0;
	this.apperture = 360;
	this.direction = -90.0;
	this.min_speed = 0.25;
	this.max_speed = 0.25;
	this.min_life = 100;
	this.max_life = 500;
	this.layer = scenes_Gameplay.current.particlesLayerDown;
	if(this.layer == null) haxe_Log.trace("my layer is null :(",{ fileName : "GenPartsConf.hx", lineNumber : 29, className : "utils.particles.GenPartsConf", methodName : "new"});
};
$hxClasses["utils.particles.GenPartsConf"] = utils_particles_GenPartsConf;
utils_particles_GenPartsConf.__name__ = ["utils","particles","GenPartsConf"];
utils_particles_GenPartsConf.prototype = {
	__class__: utils_particles_GenPartsConf
};
var utils_particles_Particle = function() {
	openfl_display_Shape.call(this);
	this._direction = 0;
	this.speed = 0;
	this.active = false;
	this.setGraphics();
};
$hxClasses["utils.particles.Particle"] = utils_particles_Particle;
utils_particles_Particle.__name__ = ["utils","particles","Particle"];
utils_particles_Particle.__super__ = openfl_display_Shape;
utils_particles_Particle.prototype = $extend(openfl_display_Shape.prototype,{
	setGraphics: function() {
		this.get_graphics().clear();
		this.get_graphics().beginFill(utils_particles_Particle.COLOR,0.8);
		this.get_graphics().drawCircle(0,0,utils_particles_Particle.SIZE);
		this.get_graphics().endFill();
	}
	,update: function() {
		var _g = this;
		_g.set_x(_g.get_x() + this._cos * this.speed);
		var _g1 = this;
		_g1.set_y(_g1.get_y() + this._sin * this.speed);
		this.speed *= utils_particles_Particle.FRICTION;
		this.set_alpha(this.speed / utils_particles_Particle.MAX_SPEED);
		if(this.speed < 1) {
			this.speed = 0;
			this.active = false;
			this.parent.removeChild(this);
		}
	}
	,init: function(radious,colour) {
		if(colour == null) colour = 0;
		this.setDirection(Math.random() * Math.PI * 2);
		this.speed = Math.random() * utils_particles_Particle.MAX_SPEED;
		utils_particles_Particle.SIZE = radious / 2;
		utils_particles_Particle.COLOR = colour;
		this.setGraphics();
	}
	,setDirection: function(d) {
		this._direction = d;
		this._cos = Math.cos(this._direction);
		this._sin = Math.sin(this._direction);
	}
	,getDirection: function() {
		return this._direction;
	}
	,__class__: utils_particles_Particle
});
var utils_particles_Particles = function(d) {
	this.display = d;
	this.circularIndex = 0;
	this.hasListener = false;
	var this1;
	this1 = new Array(utils_particles_Particles.POOL_SIZE);
	this.poolArray = this1;
	var _g1 = 0;
	var _g = utils_particles_Particles.POOL_SIZE;
	while(_g1 < _g) {
		var i = _g1++;
		var val = new utils_particles_Particle();
		this.poolArray[i] = val;
	}
};
$hxClasses["utils.particles.Particles"] = utils_particles_Particles;
utils_particles_Particles.__name__ = ["utils","particles","Particles"];
utils_particles_Particles.prototype = {
	shoot: function(px,py,radious,colour) {
		if(Main.isMobile) return;
		var i = 0;
		while(i < 20) {
			this.circularIndex++;
			i++;
			if(this.circularIndex >= utils_particles_Particles.POOL_SIZE) this.circularIndex = 0;
			this.poolArray[this.circularIndex].init(radious,colour);
			this.display.addChild(this.poolArray[this.circularIndex]);
			this.poolArray[this.circularIndex].active = true;
			this.poolArray[this.circularIndex].set_x(px);
			this.poolArray[this.circularIndex].set_y(py);
		}
		if(!this.hasListener) {
			this.display.addEventListener("enterFrame",$bind(this,this.update));
			this.hasListener = true;
		}
	}
	,update: function(e) {
		var anyActive = false;
		var _g1 = 0;
		var _g = utils_particles_Particles.POOL_SIZE;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.poolArray[i].active) {
				this.poolArray[i].update();
				anyActive = true;
			}
		}
		if(!anyActive) {
			this.display.removeEventListener("enterFrame",$bind(this,this.update));
			this.hasListener = false;
		}
	}
	,__class__: utils_particles_Particles
};
var utils_particles_ShootDustParticle = function() {
	openfl_display_Shape.call(this);
	this.speed = 0;
	this.active = false;
};
$hxClasses["utils.particles.ShootDustParticle"] = utils_particles_ShootDustParticle;
utils_particles_ShootDustParticle.__name__ = ["utils","particles","ShootDustParticle"];
utils_particles_ShootDustParticle.__interfaces__ = [objects_GameObject];
utils_particles_ShootDustParticle.emit = function(pool,layer,x,y,dir,apperture,color) {
	var _g1 = 0;
	var _g = Math.round(Math.random() * 10);
	while(_g1 < _g) {
		var i = _g1++;
		pool.get(false).set(layer,x,y,dir,apperture,color);
	}
};
utils_particles_ShootDustParticle.__super__ = openfl_display_Shape;
utils_particles_ShootDustParticle.prototype = $extend(openfl_display_Shape.prototype,{
	set: function(disp,x,y,dir,apperture,color) {
		this.get_graphics().clear();
		this.get_graphics().beginGradientFill(1,[color,color],[1.0,0.0],[0,255]);
		this.get_graphics().drawCircle(-utils_particles_ShootDustParticle.FINAL_RADIUS / 2,-utils_particles_ShootDustParticle.FINAL_RADIUS / 2,utils_particles_ShootDustParticle.FINAL_RADIUS);
		this.get_graphics().endFill();
		this.set_x(x);
		this.set_y(y);
		this.p = 0;
		this.life = utils_particles_ShootDustParticle.MAX_SPEED;
		this.xVar = Math.random() * 3 - 1.5;
		this.speed = utils_particles_ShootDustParticle.MAX_SPEED * utils_particles_ShootDustParticle.INITIAL_SPEED + Math.random() * (1 - utils_particles_ShootDustParticle.INITIAL_SPEED) * utils_particles_ShootDustParticle.MAX_SPEED;
		disp.addChild(this);
		scenes_Gameplay.current.addObject(this,false);
	}
	,update: function(d) {
		this.p += d / this.life;
		var _g = this;
		_g.set_y(_g.get_y() + this.speed * 1.25);
		var _g1 = this;
		_g1.set_x(_g1.get_x() + this.xVar * this.speed);
		this.speed *= utils_particles_ShootDustParticle.ACCELERATION;
		this.set_alpha(utils_particles_ShootDustParticle.INITIAL_ALPHA - this.speed / utils_particles_ShootDustParticle.MAX_SPEED * utils_particles_ShootDustParticle.INITIAL_ALPHA);
		this.set_scaleX(this.set_scaleY(utils_particles_ShootDustParticle.INITIAL_SCALE + this.speed / utils_particles_ShootDustParticle.MAX_SPEED * (1 - utils_particles_ShootDustParticle.INITIAL_SCALE)));
		if(this.speed > utils_particles_ShootDustParticle.MAX_SPEED) this._pool.kill(this);
	}
	,__class__: utils_particles_ShootDustParticle
});
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
if(Array.prototype.indexOf) HxOverrides.indexOf = function(a,o,i) {
	return Array.prototype.indexOf.call(a,o,i);
};
$hxClasses.Math = Math;
String.prototype.__class__ = $hxClasses.String = String;
String.__name__ = ["String"];
$hxClasses.Array = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses.Date = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses.Int = { __name__ : ["Int"]};
var Dynamic = $hxClasses.Dynamic = { __name__ : ["Dynamic"]};
var Float = $hxClasses.Float = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses.Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses.Class = { __name__ : ["Class"]};
var Enum = { };
haxe_Resource.content = [{ name : "__ASSET__:bitmap_Splash", data : "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQW9BQUFBSGdDQVlBQUFBMTBkemtBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQTJacFZGaDBXRTFNT21OdmJTNWhaRzlpWlM1NGJYQUFBQUFBQUR3L2VIQmhZMnRsZENCaVpXZHBiajBpNzd1L0lpQnBaRDBpVnpWTk1FMXdRMlZvYVVoNmNtVlRlazVVWTNwcll6bGtJajgrSUR4NE9uaHRjRzFsZEdFZ2VHMXNibk02ZUQwaVlXUnZZbVU2Ym5NNmJXVjBZUzhpSUhnNmVHMXdkR3M5SWtGa2IySmxJRmhOVUNCRGIzSmxJRFV1TUMxak1EWXhJRFkwTGpFME1EazBPU3dnTWpBeE1DOHhNaTh3TnkweE1EbzFOem93TVNBZ0lDQWdJQ0FnSWo0Z1BISmtaanBTUkVZZ2VHMXNibk02Y21SbVBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHhPVGs1THpBeUx6SXlMWEprWmkxemVXNTBZWGd0Ym5NaklqNGdQSEprWmpwRVpYTmpjbWx3ZEdsdmJpQnlaR1k2WVdKdmRYUTlJaUlnZUcxc2JuTTZlRzF3VFUwOUltaDBkSEE2THk5dWN5NWhaRzlpWlM1amIyMHZlR0Z3THpFdU1DOXRiUzhpSUhodGJHNXpPbk4wVW1WbVBTSm9kSFJ3T2k4dmJuTXVZV1J2WW1VdVkyOXRMM2hoY0M4eExqQXZjMVI1Y0dVdlVtVnpiM1Z5WTJWU1pXWWpJaUI0Yld4dWN6cDRiWEE5SW1oMGRIQTZMeTl1Y3k1aFpHOWlaUzVqYjIwdmVHRndMekV1TUM4aUlIaHRjRTFOT2s5eWFXZHBibUZzUkc5amRXMWxiblJKUkQwaWVHMXdMbVJwWkRvMlJERTBOa0V6TXpCRU1qaEZOakV4UWprMVFqa3pSak5HTVVJMlJrUkNOQ0lnZUcxd1RVMDZSRzlqZFcxbGJuUkpSRDBpZUcxd0xtUnBaRG96TkRFNE1rSXlSVEk0TWtReE1VVTJPRUZCTkRnNE0wWTBPVE0xTVRNMlF5SWdlRzF3VFUwNlNXNXpkR0Z1WTJWSlJEMGllRzF3TG1scFpEb3pOREU0TWtJeVJESTRNa1F4TVVVMk9FRkJORGc0TTBZME9UTTFNVE0yUXlJZ2VHMXdPa055WldGMGIzSlViMjlzUFNKQlpHOWlaU0JRYUc5MGIzTm9iM0FnUTFNMUxqRWdWMmx1Wkc5M2N5SStJRHg0YlhCTlRUcEVaWEpwZG1Wa1JuSnZiU0J6ZEZKbFpqcHBibk4wWVc1alpVbEVQU0o0YlhBdWFXbGtPalpGTVRRMlFUTXpNRVF5T0VVMk1URkNPVFZDT1ROR00wWXhRalpHUkVJMElpQnpkRkpsWmpwa2IyTjFiV1Z1ZEVsRVBTSjRiWEF1Wkdsa09qWkVNVFEyUVRNek1FUXlPRVUyTVRGQ09UVkNPVE5HTTBZeFFqWkdSRUkwSWk4K0lEd3ZjbVJtT2tSbGMyTnlhWEIwYVc5dVBpQThMM0prWmpwU1JFWStJRHd2ZURwNGJYQnRaWFJoUGlBOFAzaHdZV05yWlhRZ1pXNWtQU0p5SWo4K1NFd0F5d0FBRmRwSlJFRlVlTnJzM1ZGc1hmVjl3UEdUTFZsNFd1eXBYY3RMRTRJNjJqNWd3enF0cWpUSFl3NFNWQmlMSkZRTkRVMlZNS1N1VkV5RVVXM0FzaVdicUFncUE3YXBnNHhBbXFDUkJpV09vRkxKbU9OSzAxUjFFUE93am5XVXBDOXMwclE0ZTZxbVR1eitiam1wTWVmZWMrNjV4L2NlWDM4K2twdlc5cld2Lzc2OTkrdi9PZi8vV2IxMlRmSk9BZ0RBaXZFTGhnQUFRQUFDQUNBQUFRQVFnQUFBQ0VBQUFBUWdBQUFDRUFBQUFRZ0FnQUFFQUVBQUFnQWdBQUVBRUlBQUFBaEFBQUFFSUFDQUFBUUFRQUFDQUNBQUFRQVFnQUFBQ0VBQUFBUWdBQUFDRUFBQUFRZ0FnQUFFQUVBQUFnQWdBQUVBRUlBQUFBaEFBQUFFSUFDQUFBUUFRQUFDQUNBQUFRQVFnQUFBQ0VBQUFBUWdBQUFDRUFBQUFRZ0FnQUFFQUVBQUFnQWdBQUVBRUlBQUFBaEFBQUFCQ0FDQUFBUUFRQUFDQUNBQUFRQVFnQUFBQ0VBQUFBUWdBQUFDRUFBQUFRZ0FnQUFFQUVBQUFnQWdBQUVBRUlBQUFBaEFBQUFCQ0FDQUFBUUFRQUFDQUNBQUFRQVFnQUFBQ0VBQUFBUWdBQUFDRUFBQUFRZ0FnQUFFQUVBQUFnQWdBQUVBRUlBQUFBSVFBQUFCQ0FDQUFBUUFRQUFDQUNBQUFRQVFnQUFBQ0VBQUFBUWdBQUFDRUFBQUFRZ0FnQUFFQUVBQUFnQWdBQUVBRUlBQUFBSVFBQUFCQ0FDQUFBUUFRQUFDQUNBQUFRQVFnQUFBQ0VBQUFBUWdBQUFDRUFBQUFRZ0FnQUFFQUVBQUFnQWdBQUVBRUlBQUFBSVFBQUFCQ0FDQUFBUUFRQUFDQUNBQUFRQVFnQUFBQ0VBQUFBUWdBQUFDRUFBQUFRZ0FnQUFFQUVBQUFnQWdBQUVBQkNBQUFBSVFBQUFCQ0FDQUFBUUFRQUFDQUNBQUFRQVFnQUFBQ0VBQUFBUWdBQUFDRUFBQUFRZ0FnQUFFQUVBQUFnQWdBQUVBQkNBQUFBSVFBQUFCQ0FDQUFBUUFRQUFDQUNBQUFRQVFnQUFBQ0VBQUFBUWdBQUFDRUFBQUFRZ0FnQUFFQUVBQUFnQUlRQUFBQkNBQUFBSVFBQUFCQ0FDQUFBUUFRQUFDQUNBQUFRQVFnQUFBQ0VBQUFBUWdBQUFDRUFBQUFRZ0FnQUFFQUVBQUFnQUlRQUFBQkNBQUFBSVFBQUFCQ0FDQUFBUUFRQUFDQUNBQUFRQVFnQUFBQ0VBQUFBUWdBQUFDRUFBQUFRZ0FnQUFFQUJDQUFBQUlRQUFBQkNBQUFBSVFBQUFCQ0FDQUFBUUFRQUFDQUNBQUFRQVFnQUFBQ0VBQUFBUWdBQUFDRUFBQUFRZ0FnQUFFQUJDQUFBQUlRQUFBQkNBQUFBSVFBQUFCQ0FDQUFBUUFRQUFDQUNBQUFRQVFnQUFBQ0VBQUFBUWdBQUFDRUFDQUxLc05BZlRIL2o5N0tMbjIybC92K0hiMy85RlhrMWRmL2VjbHVVOVhYTEV4dWU1M0pwcjNLLzN2QzczeTk2ZVRDL01Ya3RjYTMvLzR0NDRsYjczMW8wcSs3NUhubmsrR2g0WUxmLzdCcC80bU9YNzhXRmZmTTM3R29lSGhydS83L0lVTHBYNGYzZjcraTk2KzZGanR1ZmUrNUxyckpqcStQM0ZmNGo0VkhmTjRUTVgzdVdManh1WmpiUEhqSy8yYWNiL1R4MWQ4M2wvKzFUZmU5L1hpc2ZqbEw5MlpYR2o4RG9ET3JGcTdKbm5ITUVEdi9lUi95LzFmTDE1c0R6ejh0VXJ2Uzd3bzc5bHozL3VDTDArOFlIY2JZL0U5WC9yMnl4M2RKbDd3UC9HeEswdS84RWRRL09DTk55c2R3NGlWR0k5NEt6SWUzZjcrTzduOWJaKzdOZmMrbGIwLzRiSmZXdFgyNDd0Mi8yNHpNQmNIWDU3NE9SODU4TFhtN1NONHM5eDR3K1pMNFFnVTV4QXdyR0F4SXhQeEZXK2R4bDhhYnpGN0Y3Y3ZNNXRWMXZEd2NETUt5b3JacDZwRjNNUjlpdkdJdU96bS9sVnQvNTgvMUJ5elhvdkhSNHhGek41MUduOGhvdkZmL3ZYTlVqT1RnQUFFTWtTZ3ZGZ3kvTEplNlAveG43N2ZmTUh1NWYydnEvU1FaWXhKbWZCWml2dHp6NTc3ZXZvOVk4WXUvakRvOXVlUGNLM2lNUW9JUUZqeElrN2lyZXBab1hqUnp6cFhhNm1pcHU1aEVMT2lFWUc5bkIxdHBYbU9Ydy9HS3g1VDhSam81UjhEZ0FBRUNzVGZVczZleGRmdVZRUnUyYkt0OXVNZFFmUmlqdytSdC92ZEwvV2g0Q2VXK1BFRkNFQlkxc3F1NUgzclIrVlgzc2FzVEM5ZW5OT1Qvb3VJRmNWbEYzUEU5eWtUTlBNOVhqV2FSdURDKzlydDc3L003ZHNkQ2k1N2Z4YmVMZ0p6T1VRNVlCVXcxRUxlQ3N3cVZ2Nm1oeU43cWRNVm1tWHVZOW14V1Jpb3JWYVlWaTFXNHNhSzNLcC8vNTB1NHNuN3ZlUjl2YXhWdnhGK3NRQ20xNndDaG5Mc0F3Z3J4Qk1kSEphTkdibDBIN2FGZTdHbEsxMkx6cnJGak5ESHI3cXk4UGN0TXpzWnR5a1RnQXR2a3hlQXJTSWp4aU9pOVphdDJ3ck5mTVhuSEd5RVZiK0RKWDR2bi83VUp5dmJQeThlRDUwOHZtTFc4SVZHREMrY1BidzBsbzB4NnNlS1pSQ0F3TUNKU0NweURsb0VRZXk3MWk2b1lqWXFacy9pVUdMZUMzVzhxTWZuRmdtMCtGcTNsRGg4bUM0RzZVZFVwWUVjTTNzUmRrZU9QcDg3SnJIZllyOERNRDBVWEhRRDV5S1ByeUxSbG00YTNlcm5QL2p1NHl1QzNIbUVzTFNjQXdnclFKSHo4U0wrUG5QRDVrS3hGcDhUbjF0a0Jxbm9DM203aUlqWnlIYnFjTjVaUkUyUk1ZbFlyY1BXTUZXdENvN2ZXWkV0WnVKM0dMT09lZkViNC9kN1g3cXorWlkzbHZIeGJzNkpCUUVJREt6MHNtNUY0cStUaFFEeHVVV0NKNzUza1VCckY0b1JEZTN1VzluRklGV0wreGd6cUhtMmJLM0hRb2txVmdVWE9XUWJ2NzhJdWs1RU1GNytvVjlwbm0vWTZpMCtYdFhsQ0VFQUFnT2x5R0hWaUpZeXEwQ0xCczgxT1llZjI4MktSV0RHSWRZWGNpNWxWcGREaGpFN21oY2xkYm15UlJVYlJCYzV0YURUK0FNRUlOQ2x2TU44RVN2ZHJEQXVGRHc1OTZIZERPRXJyL3pza0dIZW9jTTZuVE4yL0Z2SHVncmlYdXIyVUhEZWJkUEZSSUFBQkhvb2I0WW03L3k2SXZLK1JydjdrSGRkM3pUOFlyYXhYVWpVNmNvZ2FiUzIrNW5ycEp0RHdYbW5GOWlpQlFRZzBHTkZGaHRVOFFKZDVHdTBpc0M4bWJ1RmgzN3padGJxc2dueGF3VU9wL2N5Vm8vbkhENHZleWk0eU0vUUtvYmplNzc5bi8vZDNBT3htN2RlNzIwSkFoQ29md0J1ekEvQXNsZUE2UFJyRExXWVlXb1hnSzh1dWtwSVhsalZaVEhJaFI1ZmFhUklrT1p0K2JKVTF3cHVOUmJ4Mkt6aWQzVnRqUTZuZ3dBRUtDQnZTNVRGQ3o5aUppc3ZydXdmbHkzTzFjd0w5VjVjS3hnUWdNQUtWeVRXSWhJWHZ1VXRLQkNBclgwNVp6VnVGYXVDRnhPVVVFK3VCQUlEck1nbXVYRUlyZHZEd0VVT0hTNitMMFgyQnl4empkNStYaGxrNFgybzRuZFR0ZlJLSE8zR05RNEZGejJFWGVSY3gxanhiQ0VJMUk4WlFCamtBQ3l3L1VZVjUzMFZPUTlyOFgxWnlzMlErNzBZcE14NDlFcVJiWHVLenRvVkNjVzY3SGtJQ0VCWVVWNHRzSENpVzNsZkkrcytMT1doMm40dkJzbUw2aW9XM25TanlvMlppK3pQbVBXN2lCblF1aTJXQVFFSURJeThGK2c0WEZua1dzR3R4RzA3M1FzdVp1aVcrbnE0L1RvWE1HSW43K29yci9VNUFPUDMwYzNtMysvNVdnWDJQTXc2cnpCbUlmTXU5ZVlLSWlBQWdReXhCMXFyL2RGaWo3V0lyTHdYNkJBdjBHVzIwNGpiRkRsUGIvRnEzbHQ2Y0MzY2ZnVmdqR1dSYStQMlcxekNyNHJEMEVWK2xqSmJ6TVFZbGprSEZCQ0FNUER5cnJBUmU2M0ZDM1NSYzc1ZS9QYkxIVVZnZkc3Y0prOTg3NFdIUElzcy9xaENQNjRNRXRHWk41dWFYdHU0MytKK1ZESERsbmVGbHRTUm84OFhmbnlsajBjcmlFRUFBbDBvY3JndmZkRXRjamc0UGlkbUg0dThRQy8rM25remN4RW03UTRMcG05NUd4dUhYaTBHaVhHSU1ZbDk5UExFekZ0ZFZIVW91T2pqS3g0emVZK3ZDUGRPL3hnQk9yZHE3WnJrSGNNQS9SV0hiTnVKYSsxbXpScTlsRE1EZCtNTm15OGRvdnZCRzI4V1B1OHVJaXkrWjh6c3BMTTdjZHQ0NjJTQlJjd09mZnBUbjN6UCsrTFFkTHZieC9jdE1qTVY5eVYrcGp4eG5sbmVZb084OFkvWXpGcTQwZW1ZeFAzNHhNZXVmTi85S2ZMOTIwVldQQTdhelhhMnUzMGFacDJja3hrQnZsZ25qNjk0VE1WbC9SYWVucERPMkphSjlxejdBd2hBcUtVNHZ5bWQ1VmlxUTVVTEF6Qyt4MHNGRHRsV0tZMi9UZzduUmZ4RkJCWVI0VkowcGlpaTY3YnR0MTRhanlQUFBaOE1EdzB2NmZpMys5azZ1ZThMM2ZhNVc1dC9ESlM1ZlZhUWwzbHNaQVZYUHg1ZkFoREtjd2dZK2lROU1iNVg4UkhoVStTd2FWWFNXYk80Qm5BbjUzTEZZZFIwRVV0VzRFUTRwd3RkT2dtZ3VBOExnenRtbW5vNS9oRitDOE8yN0NITzlQck9aUmZ0dEhwc2RIc291TXFWeFlBQUJDb1VMOUJGWjllNmpaMXVZeUNDYlNnakhKZmp1V0VSd25YZjBxU0tWY0VSL1hWWTRBSUlRR0NSVGc2eGxvMC8rN2U5ZHp5eURydldUVldyZ3VNUWRTLyt5QUFFSUZBaUFwZmljSEI4VGZIMzg2QmFidU5SMVdIYytKbXJQQndjczRxdUp3d0NFS2hBdkVESHpGUVZMNnp4TmVKck9RZnNaK0dYanUxeUhJODRGRnpGcGVvaWZtTVJVcmVIbFdNMk1XWVZnV3F0TmdUUUgvRWl1NVRuczBXSXhQVlc4KzVEdkVqSE5pYnBvb2hPdzYvVkZqV3B1QS94OFhURmJlSDdQNTk5LytNK2wxbTRFZU9SaGsxY2lpMytkeFViRGNmWGlhOFhYenYrTFhvT1hNUmhtZDkvR3V4bGJsOGs3T0xuK1V6ak1SR0xiYksyZFNseVpabUY5L1hqVjExNWFZUHNUcmFhaVhDOC93OS9mazVoUEI1YTNWK2djN2FCQVM1cFhxVmo2N2JrbWtaWVJMQXREcTMwcWlMcFBtNVZYRXFNbFNPQ3RibnkrcnFKNW1ybWhVR1loblFFWmp6T0ZzZHFjOC9GamU4UHlQa0ZZUThJUUFBQVduQU9JQUNBQUFRQVFBQUNBQ0FBQVFBUWdBQUFDRUFBQUFRZ0FBQUNFQUFBQVFnQWdBQUVBRUFBQWdBZ0FBRUFFSUFBQUFoQUFBQUJDQUNBQUFRQVFBQUNBQ0FBQVFBUWdBQUExTmhxUThCeWMvWFZJOG5ZcHZGa1pHUTBXYjkrdzZYM3gvc0FsdExzbVpsTC8vMzgrWFBOdHpPTjkzMTM5b3pCWVZsWnRYWk44bzVob081K2EyeFRjdnZ0TzVPYkpxZVNvYUVoQXdMVXl2ejhmREk3TzVOTW56eVJmUFB3TXdZRUFRamRodDlUQncrOVo2WVBvTTVpVnZEeHh4NU5ubmo4THd3R0FoQTZFWWQ1bjJ5RVh4em1CVmlPWWxid2psMDdrMU9uVGhvTWFzY2lFR3JuOHp1K2tIem45SXo0QTVhMU9GM2wyUEVUeWNNSHZtNHdxQjB6Z05SS1BGSGU5Wlc3eTl6MHFORURlbVI3cHplSXhTUGJ0azRsRnk5ZU5Ib0lRRmpvL2dmK3VQRzJ0MURvTlo1TS8yNTJkdVo3YzJmUC90Zjh4Zm4vaS9lOWZIckdZeGxZVXBzbnhsZkZ2MFByaG41eFpIVDBBMWVQalA3YTJOajQ1TkRRME9WNVlSZ1JlUDNtM3phSUNFQkl4V0hmV096Ukx2ek9uejkzOXZDemh3NDNJdkUvakJoUUo3dDM3YnpzZ1FmMzNyVisvWWJSZGlIWWVBNUw3dGo5UlFPR0FJUlk4UEc5NzU5dEdYN3hIL3YzN2IxSCtBRjF0MjNMMU9vbkR4NTZxTjJNWUNNV2JSV0RBR1JsVzdkdVhmTEdEOCsxMnR1dk9ldlgrSXY2WVNNRkxDZXpaMllteHphTmZ6WXJBbU4xOFBVVDQ4bnJyODhaS1ByR0ttRDZLclo2RVgvQW9HbkUzL1QwOUlsdkpCa0wxT0k1NzhuMnA3eUFBR1J3eFNiUGs1TlRtUjlyL0lYOHR2Z0RsclBHODl2czNOelowMWtSR050Y3hiblBJQUJaY1I1b3ZlTDM2TGF0VS9jYUlXQzVhNFRlMC9FSGJlWno0SU43RFJBQ2tKVWxadi9HTm8xbnh0L2pqejM2b0MxZGdFRnh4NjZkWDAweVpnSGpFcGRtQVJHQXJDaXRObnVPOC80YUgzdlRDQUdENHRqeEV6K052VXV6UGpaNTg1UUJRZ0N5Y295TmpXZTkrMmpzODJkMGdFR3piOS9lVTBuR0xHQ2NCeDI3SVlBQVpPRGRkTlBOclZiK0p2YjZBd1pSbk5ZU1J6ZzYrSU1ZQkNDRFpXUjBOUFA5NzI2WkFEQ1FwaytlZUtHVDUwUVFnQXlVVm4vdHpwNlpzU3NxTUxBYXozSG5rNHpEd0dZQUVZQ3NDT3MzYk1oNjk5RzV1YlAvWTNTQVFSV0xRVHA0VGdRQnlJQUY0UHJzSnp0YnZ3Q2VFMEVBQWdBZ0FBRUFFSUFBQUFoQTZtMzJ6RXptK3pkUGpLOHlPc0JLTXpkMzFpQWdBRm14dG8rTWpQNnlZUUFHMWJZdFU2dXozbjl4ZnQ3Z0lBQVpmTE96TTVudmJ3VGdCcU1EREtxUjBkRVB4Qis3Ulo4VFFRQXlVTTYwT0FSODArVFVEcU1EREtyR2M5d05XZStmTytzUU1BS1FGZUM3czJjeTN6ODBOSFQ1N2wwN0x6TkN3Q0FhR1JtZHlIcS9HVUFFSUN2RzRXY1BaYjE3K3dNUDdyM0w2QUFEK0p3M2t2WCs2ZWtUeWNXTEZ3MFFBcENWb2RWaDRQWHJONHp1MzdmM3cwWUlHQlN4dzhHTzIzZitRWkp4L3QvMHlSTUdpTDVZdFhaTjR2SmI5TVViUDN3cjh4Skk4L1B6and3TkRlMHhRc0FnbUpzNys4V1JrZEcvelhpdVM2NzY2QVl6Z1BTRkdVRDZadCtmN3MxOGY1d0xHRStZUmdoWTd1TFFiNnR6Ly9idjJ5dis2QnN6Z1BUVmQxNytoMlJzMDNqV2g0NDJJdkIwNDRuemFhTUVMRWZUMHlmR0ppZW43a3d5RHYyZVAzOHV1ZXFqVnhna0JDQXIwMGMrc2o3NXQzOC8xK3JEUitmbjU5OTJPQmhZYnQ0OTdEdVJGWDloODhSNHl4MFJvQmNjQXFhdmZ2emo4OG1lZSs1dTllSHRjVGk0OGUrUnh1ZXNNMXBBM2NXQ2o4WWZyZ2ZheGQvamp6MHEvdWc3TTREVXdwTlBQWjNzdUgxbnUwOXBIaEp1UEhFKzk5VEJRejh4WWtDZHhHWGU3dnJLM1RlT2JSci9iS3Z3QzNIZDM5LzhqV3NNR0FJUVVnOGYrSHJTZUFMTis3VG1ZZUhEeng3NjY5a3pNK2VQSFQveFV5TUg5RVBNOWsxT1RtMmN2SG5xbHRqQ3FsMzRoY1p6VnJKdDY1U0ZId2hBV096ek83NlFQSFh3VU5GUFAyckVnRDdiWHVTVFl2UDdPM2JiM0lENldHMElxSk52SG42bStlK0JSeDZON1dBcWVlSUY2S2M0NSsvZVBiOXZJS2dWaTBDb1pRUmVQekhlUEZjR1lMbUtyVjYyYlprU2Z3aEFLT3IxMStlYUowckhrMmZzbGcrd25NUW16N0hQMzZsVEp3MEdBaEE2RlUrZUgvN1Y0V1QzcnAxbUJJRmFpeG0vMk5icVF4OGNhZ1RnbnhnUWFzMGlFSmFWMkRoNjh1YXA1dFZEUmtaR002OGxETkNyNER0Lzdsd3lPenVUUFB2TW9lYStwaUFBQVFDb0pZZUFBUUFFSUFBQUFoQUFBQUVJQUlBQUJBQkFBQUlBSUFBQkFCQ0FBQUFJUUFBQUJDQUFBQUlRQUFBQkNBQ0FBQVFBUUFBQ0FBaEFBQUFFSUFBQUFoQUFBQUVJQUlBQUJBQkFBQUlBSUFBQkFCQ0FBQUFJUUFBQUJDQUFBQUlRQUFBQkNBQ0FBQVFBUUFBQ0FBaEFBQUFFSUFBQUFoQUFBQUVJQUlBQUJBQkFBQUlBSUFBQkFCQ0FBQUFJUUFBQUJDQUFBQUlRQUFBQkNBQ0FBQVFBRUlBQUFBaEFBQUFFSUFBQUFoQUFBQUVJQUlBQUJBQkFBQUlBSUFBQkFCQ0FBQUFJUUFBQUJDQUFBQUlRQUFBQkNBQ0FBQVFBRUlBQUFBaEFBQUFFSUFBQUFoQUFBQUVJQUlBQUJBQkFBQUlBSUFBQkFCQ0FBQUFJUUFBQUJDQUFBQUlRQUFBQkNBQWdBQUVBRUlBQUFBaEFBQUFFSUFBQUFoQUFBQUVJQUlBQUJBQkFBQUlBSUFBQkFCQ0FBQUFJUUFBQUJDQUFBQUlRQUFBQkNBQWdBQUVBRUlBQUFBaEFBQUFFSUFBQUFoQUFBQUVJQUlBQUJBQkFBQUlBSUFBQkFCQ0FBQUFJUUFBQUJDQUFBQUlRQUFBQkNBQWdBQUVBRUlBQUFBaEFBQUFFSUFBQUFoQUFBQUVJQUlBQUJBQkFBQUlBSUFBQkFCQ0FBQUFJUUFBQUJDQUFBQUlRQUVBQUFnQWdBQUVBRUlBQUFBaEFBQUFFSUFBQUFoQUFBQUVJQUlBQUJBQkFBQUlBSUFBQkFCQ0FBQUFJUUFBQUJDQUFBQUlRQUVBQUFnQWdBQUVBRUlBQUFBaEFBQUFFSUFBQUFoQUFBQUVJQUlBQUJBQkFBQUlBSUFBQkFCQ0FBQUFJUUFBQUJDQUFnQUFFQUVBQUFnQWdBQUVBRUlBQUFBaEFBQUFFSUFBQUFoQUFBQUVJQUlBQUJBQkFBQUlBSUFBQkFCQ0FBQUFJUUFBQUJDQUFnQUFFQUVBQUFnQWdBQUVBRUlBQUFBaEFBQUFFSUFBQUFoQUFBQUVJQUlBQUJBQkFBQUlBSUFBQkFCQ0FBQUFJUUFBQUFXZ0lBQUFFSUFBQUFoQUFBQUVJQUlBQUJBQkFBQUlBSUFBQkFCQ0FBQUFJUUFBQUJDQUFBQUlRQUFBQkNBQ0FBQVFBUUFBQ0FBaEFBQUFFSUFBQUFoQUFBQUVJQUlBQUJBQkFBQUlBSUFBQkFCQ0FBQUFJUUFBQUJDQUFBQUlRQUFBQkNBQ0FBQVFBSUVuK1g0QUJBSG91R014bDFRVStBQUFBQUVsRlRrU3VRbUND"},{ name : "__ASSET__:bitmap_Bar", data : "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQWFjQUFBQlFDQVlBQUFDOUQ3cU5BQUFHa2tsRVFWUjRuTzNkTVc0aVN4Ukc0WG96Q1JudHpKbTlBeHlTMmFFenZBUXZoYVY0QjlnaEVYSkloR1lGT0NTanlYQjBYL0o2MU1iQWc5OWR4YTNTT2RKSU05YklyUys2NnFhcEcyNXViaXlFRVAzUGNybTBGT0hCZ3djUG5qdzh4L285SG8vSDArazBwT2p4OFRISmRmQm80ZEhDbzRWSHF6VFB3ZGJydGZYNy9laVR1Ti92MjNxOWpqNXQ4ZURCZ3dkUEhwNWovYXFxS2p3OVBZWFliVGFiOFByNkd2MDZlTFR3YU9IUndxTlZtdWRvWm1hTHhTTDZKQTRoMkdBd1NESng4ZURCZ3dkUEhwNURoZVl2ZzhFZ0NYaXhXQ1NCNGNHREJ3K2VQRHo3K2owZWo4Y2hoTkRyOWNMYjIxdUkzWGE3VFhKYmlrY0xqeFllTFR4YXBYbjI5WStaV2ZPUHFxckNack9KZnRIMWVoMnFxb3ArSFR4YWVMVHdhT0hSS3MyejI5ODdweEJDV0sxV1lUNmZSNy9vOWZWMUdBNkgwYStEUnd1UEZoNHRQRnFsZWI3VmZzYTNYQzZUUE1lOHVibEo4c3dTRHg0OGVQRGs0ZGt0N1A3Zy92NCtDWGcybXlVQjRzR0RCdytlUER6dHZnMm55V1NTQkRzYWpaSUE4ZURCZ3dkUEhwNTIzNGFUV1hubk4rSEJnd2NQbmp3OFRWOWVpR2lxNnpxOHY3L3Yvcmp6cXFvS0R3OFAwYStEUnd1UEZoNHRQRnFsZVpxK3ZFcmVWTmQxdUxxNmluN3hmcjhmNnJxT2ZoMDhXbmkwOEdqaDBTck4wN1QzenFuWDY0V1BqNC93NTgrZnFCZi8vUHdNdDdlMzRlN3VMdXAxOEdqaDBjS2poVWVyTk0vZkRqM3ZtODFtU1o1ajN0L2ZKM2wraVFjUEhqeDQ4dkNZSFhnaG9xbTBEOXJ3NE1HREIwOGVucjJQOVpxcXFrcHlmbE5kMTBuT2I4S2poVWNManhZZXJkSThSKytjU2x0c2hRY1BIang0OHZEOENrY3FiYkVWSGkwOFduaTA4R2lWNWpsNjUyUlczbUlyUEhqdzRNSGozL08vdzhtc3ZQT2I4T0RCZ3dlUGI4L1JGeUxhcGZpZ0xZU1FiTEVWSGkwOFduaTA4R2lWNE5sN1FzUytTbHRzaFVjTGp4WWVMVHhhSlhoT3ZuTXFiYkVWSGkwOFduaTA4R2dWNFRuMStWOXBpNjN3NE1HREI0OWZ6OG5EeWN4c05Cb2xBVThtazFoZVBIanc0TUdUZ2Vmbzk1eDJlMzUrUHVlL3k3Mjh2Q1M1RGg0dFBGcDR0UEJvWmU4NWQ1cVZkbjRUSGp4NDhPRHg1em41aFlpbTBoWmI0ZEhDbzRWSEM0OVd6cDZUWHlWdkttMnhGUjR0UEZwNHRQQm81ZXc1Kzg2cHRNVldlTFR3YU9IUndxT1Z0VWQ1RmxqYVlpczhlUERnd2VQTEl3MG5NN1BCWUpBRXZGZ3N1dlRpd1lNSEQ1NE1QR2MvMW12cTlYcEp6bS9hYnJkSnpxUENvNFZIQzQ4V0hxMHNQZXBVSzIyeEZSNDhlUERnOGVNNTYwdTQ3VXBiYklWSEM0OFdIaTA4V2xsNmZqTFpTamkvQ1E4ZVBIancrUFA4YURpWmxiUFlDZzhlUEhqdytQSElMMFMwSzJHeFZUczhXbmkwOEdqaDBjckZjL1lKRWZzcVliRlZPenhhZUxUd2FPSFJ5c1hUeVozVGRydE5jbjVUcjlkTGNoNFZIaTA4V25pMDhHaGw0L254ZzBITDc0TTJQSGp3NE1IajI5UEpjRExMZjdFVkhqeDQ4T0R4NDVHLzU3UmI5b3V0ZHNLamhVY0xqeFllclN3OEhRN2pyQmRiNGNHREJ3OGVQNTVPWG9ob041MU91L3gxQjN0OGZFeHlIVHhhZUxUd2FPSFI4dXpwNUZYeXBwd1hXKzBManhZZUxUeGFlTFM4ZXpxOWM4cDZzZFdlOEdqaDBjS2poVWZMdmFmTFo1aG0rUzYyd29NSER4NDhmanlkRHllelBCZGI0Y0dEQnc4ZVA1N09YNGdJSWRQRlZrZkNvNFZIQzQ4V0hpMjNuaGlUT01mRlZuanc0TUdEeDQ4bjJwM1RhclVLOC9tODYxLzlwYy9QejNCOWZSMkd3MkhVNitEUndxT0ZSd3VQbGx0UHJHbWN5L2xOZVBEZ3dZUEhueWZhY0RMTGE3RVZIang0OE9EeDQ0bnlXSzlkTG91dFRnMlBGaDR0UEZwNHRGeDU0czVpLytjMzRjR0RCdzhlZjU3b2QwNTFYU2RaYkZWVlZaSkZYWGkwOEdqaDBjS2o1Y29UZXhKNy9LQU5EeDQ4ZVBENDlrUWZUbVo1TExiQ2d3Y1BIangrUEVtR2srZnptL0Rnd1lNSGp6OVBrdUZrNXV1RE5qeDQ4T0RCNDlzVC9ZV0lkcDRYV3luaDBjS2poVWNMajlhbFBaMHVHenlXOThWVzU0WkhDNDhXSGkwOFdoNDh5ZTZjM0MrMk9qTThXbmkwOEdqaDBYTGhTZklBODc4V2kwV1M1NWlEd1FBUEhqeDQ4R1RzU1RxY3pQd3V0c0tEQnc4ZVBINDhTVitJQ01IeFlpc3hQRnA0dFBCbzRkRzZxQ2ZKK0czbGRiRVZIang0OE9EeDQ3bkluWlBMeFZaaWVMVHdhT0hSd3FOMVVVLzAwYnNuVCtjMzRjR0RCdzhlZjU2TERDY3pmNHV0OE9EQmd3ZVBIOC9GaHROa01rbUNIWTFHZVBEZ3dZTW5NOC9GaHBPWmovT2I4T0RCZ3dlUFAwL3lGeUxhdVZwczFVRjR0UEJvNGRIQ281WGNrMlRrSG9nUER2SGd3WU1Ieno3UFJlK2NxcXBLY243VFpyTkpjaDRWSGkwOFduaTA4R2lsOWx6MHpzbk16MklyUEhqdzRNSGp4L012R2ZIZjdFcTI1dzBBQUFBQVNVVk9SSzVDWUlJPQ"},{ name : "LIME_font_Helvetica", data : "b3k0Omhhc2hxOjExMW95Njphc2NlbnRkMTAyNHk0OmRhdGFhZDQzMC4wOGQ3NjEuODU2ZDQzMC4wOGQ2ODYuMDc5ZDQwNy4wNGQ2NTEuMjY0ZDM4NGQ2MTYuNDQ4ZDM0MC45OTJkNjE2LjQ0OGQyOTcuOTg0ZDYxNi40NDhkMjc0Ljk0NGQ2NTEuMjY0ZDI1MS45MDRkNjg2LjA3OWQyNTEuOTA0ZDc2MS44NTZkMjUxLjkwNGQ4MjkuNDRkMjc0Ljk0NGQ4NjIuNzJkMjk3Ljk4NGQ4OTZkMzQwLjk5MmQ4OTZkMzg0ZDg5NmQ0MDcuMDRkODYyLjcyZDQzMC4wOGQ4MjkuNDRkNDMwLjA4ZDc2MS44NTZkNDAuOTZkNzU1LjcxMmQ0MC45NmQ2ODMuMDA4ZDY0ZDYzMC4yNzFkODcuMDRkNTc3LjUzNmQxMjhkNTQyLjcyZDE2OC45NmQ1MDcuOTA0ZDIyMy4yMzJkNDkxLjUyZDI3Ny41MDRkNDc1LjEzNWQzNDAuOTkyZDQ3NS4xMzVkNDAzLjQ1NmQ0NzUuMTM1ZDQ1OC4yNGQ0OTEuNTJkNTEzLjAyNGQ1MDcuOTA0ZDU1My45ODRkNTQyLjcyZDU5NC45NDRkNTc3LjUzNmQ2MTcuOTg0ZDYzMC4yNzFkNjQxLjAyNGQ2ODMuMDA4ZDY0MS4wMjRkNzU1LjcxMmQ2NDEuMDI0ZDgyOC40MTVkNjE3Ljk4NGQ4ODEuNjY0ZDU5NC45NDRkOTM0LjkxMmQ1NTMuOTg0ZDk2OS43MjhkNTEzLjAyNGQxMDA0LjU0NGQ0NTguMjRkMTAyMC45MjhkNDAzLjQ1NmQxMDM3LjMxMWQzNDAuOTkyZDEwMzcuMzExZDI3Ny41MDRkMTAzNy4zMTFkMjIzLjIzMmQxMDIwLjkyOGQxNjguOTZkMTAwNC41NDRkMTI4ZDk2OS43MjhkODcuMDRkOTM0LjkxMmQ2NGQ4ODEuNjY0ZDQwLjk2ZDgyOC40MTVkNDAuOTZkNzU1LjcxMmh5Njpfd2lkdGhkNjgxLjk4NHk0OnhNYXhkNjQxLjAyNHk0OnhNaW5kNDAuOTZ5NDp5TWF4ZDU0OC44NjR5NDp5TWluZC0xMy4zMTJ5NzpfaGVpZ2h0ZDUwNy45MDR5NzpsZWFkaW5nZDIyNy4zMjh5NzpkZXNjZW50ZDIyNy4zMjh5ODpjaGFyQ29kZWkxMTF5MTU6bGVmdHNpZGVCZWFyaW5nZDQwLjk2eTEyOmFkdmFuY2VXaWR0aGQ2ODEuOTg0eTg6Y29tbWFuZHNhaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjIyM29SMWQxMDI0UjJhZDUyLjIyNGQ1MDQuODMyZDUyLjIyNGQzODcuMDcyZDEyMi4zNjhkMzI4LjE5MmQxOTIuNTEyZDI2OS4zMTJkMzIxLjUzNmQyNjkuMzEyZDQ1OC43NTJkMjY5LjMxMmQ1MjkuNDA4ZDMyMi41NTlkNjAwLjA2NGQzNzUuODA4ZDYwMC4wNjRkNDY1LjkxOWQ2MDAuMDY0ZDUyMi4yNGQ1NzAuMzY4ZDU1OC4wNzlkNTQwLjY3MmQ1OTMuOTJkNDg4LjQ0OGQ2MDguMjU2ZDQ4OC40NDhkNjEwLjMwNGQ1MjYuMzM2ZDYxMi4zNTJkNTU0LjQ5NmQ2MjguNzM2ZDU4Mi42NTZkNjQ1LjEyZDYwMi4xMTJkNjcwLjIwOGQ2MjEuNTY4ZDY5NS4yOTZkNjMxLjI5NmQ3MjguMDY0ZDY0MS4wMjRkNzYwLjgzMmQ2NDEuMDI0ZDc5NS42NDhkNjQxLjAyNGQ4NDUuODI0ZDYyNS42NjRkODg5Ljg1NmQ2MTAuMzA0ZDkzMy44ODhkNTgxLjYzMmQ5NjYuNjU2ZDU1Mi45NmQ5OTkuNDI0ZDUxMC45NzZkMTAxOC4zNjhkNDY4Ljk5MmQxMDM3LjMxMWQ0MTYuNzY4ZDEwMzcuMzExZDM5Ni4yODhkMTAzNy4zMTFkMzc2LjMyZDEwMzQuMjRkMzU2LjM1MmQxMDMxLjE2N2QzNDAuNDhkMTAyMi40NjRkMzI0LjYwOGQxMDEzLjc2ZDMxNC44OGQ5OTguNGQzMDUuMTUyZDk4My4wNGQzMDUuMTUyZDk1Ny40NGQzMDUuMTUyZDkzMy44ODhkMzIxLjAyNGQ5MTQuOTQ0ZDMzNi44OTZkODk2ZDM1OS40MjRkODk2ZDM3MS43MTJkODk2ZDM4Mi45NzZkODkzLjQ0ZDM5NC4yNGQ4OTAuODhkNDAzLjQ1NmQ4ODAuNjRkNDEyLjY3MmQ4NzAuNGQ0MTguMzA0ZDg1MC45NDRkNDIzLjkzNmQ4MzEuNDg4ZDQyMy45MzZkNzk4LjcyZDQyMy45MzZkNzQ1LjQ3MmQ0MTEuNjQ4ZDcyMi40MzJkMzk5LjM2ZDY5OS4zOTJkMzg2LjA0OGQ2OTEuMmQzNzQuNzg0ZDY4NC4wMzFkMzYwLjk2ZDY3OS45MzVkMzQ3LjEzNmQ2NzUuODM5ZDMzNC44NDhkNjY5LjE4NGQzMjIuNTZkNjYyLjUyOGQzMTMuODU2ZDY1MS4yNjRkMzA1LjE1MmQ2NDBkMzA1LjE1MmQ2MTkuNTJkMzA1LjE1MmQ1OTYuOTkyZDMxNC44OGQ1ODIuMTQ0ZDMyNC42MDhkNTY3LjI5NmQzNTEuMjMyZDU1OS4xMDRkMzYxLjQ3MmQ1NTYuMDMxZDM2OS42NjRkNTUxLjQyNGQzNzcuODU2ZDU0Ni44MTZkMzgzLjQ4OGQ1MzguNjI0ZDM4OS4xMmQ1MzAuNDMyZDM5Mi4xOTJkNTE3LjEyZDM5NS4yNjRkNTAzLjgwOGQzOTUuMjY0ZDQ4My4zMjhkMzk1LjI2NGQ0NDkuNTM1ZDM3OC44OGQ0MjcuMDA4ZDM2Mi40OTZkNDA0LjQ4ZDMyNi42NTZkNDA0LjQ4ZDI5NC45MTJkNDA0LjQ4ZDI3OS4wNGQ0MjMuNDI0ZDI2My4xNjhkNDQyLjM2N2QyNjMuMTY4ZDQ3Ny4xODNkMjYzLjE2OGQ5MzIuODY0ZDI2My4xNjhkOTg3LjEzNmQyMzMuNDcyZDEwMTIuMjI0ZDIwMy43NzZkMTAzNy4zMTFkMTU3LjY5NmQxMDM3LjMxMWQxMTEuNjE2ZDEwMzcuMzExZDgxLjkyZDEwMTIuMjI0ZDUyLjIyNGQ5ODcuMTM2ZDUyLjIyNGQ5MzIuODY0ZDUyLjIyNGQ1MDQuODMyaFIzZDY4MS45ODRSNGQ2NDEuMDI0UjVkNTIuMjI0UjZkNzU0LjY4OFI3ZC0xMy4zMTJSOGQ3MDIuNDY0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTIyM1IxMmQ1Mi4yMjRSMTNkNjgxLjk4NFIxNGFpMWkzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTJoZzoxMTBvUjFkMTAyNFIyYWQ0MTguODE2ZDczMS4xMzZkNDE4LjgxNmQ2NDEuMDI0ZDM0MC45OTJkNjQxLjAyNGQzMDIuMDhkNjQxLjAyNGQyODIuNjI0ZDY2OS4xODRkMjYzLjE2OGQ2OTcuMzQ0ZDI2My4xNjhkNzQ1LjQ3MmQyNjMuMTY4ZDkzMi44NjRkMjYzLjE2OGQ5ODcuMTM2ZDIzMy40NzJkMTAxMi4yMjRkMjAzLjc3NmQxMDM3LjMxMWQxNTcuNjk2ZDEwMzcuMzExZDExMS42MTZkMTAzNy4zMTFkODEuOTJkMTAxMi4yMjRkNTIuMjI0ZDk4Ny4xMzZkNTIuMjI0ZDkzMi44NjRkNTIuMjI0ZDU3NS40ODhkNTIuMjI0ZDUyNi4zMzZkNzYuOGQ1MDAuNzM2ZDEwMS4zNzZkNDc1LjEzNWQxNTMuNmQ0NzUuMTM1ZDIwMC43MDRkNDc1LjEzNWQyMjEuNjk2ZDUwMC43MzZkMjQyLjY4OGQ1MjYuMzM2ZDI0Ny44MDhkNTc0LjQ2NGQyNDkuODU2ZDU3NC40NjRkMjc2LjQ4ZDUyNi4zMzZkMzE5LjQ4OGQ1MDAuNzM2ZDM2Mi40OTZkNDc1LjEzNWQ0MjMuOTM2ZDQ3NS4xMzVkNDc5LjIzMmQ0NzUuMTM1ZDUxOC4xNDRkNDkxLjAwOGQ1NTcuMDU2ZDUwNi44OGQ1ODEuNjMyZDUzNC41MjhkNjA2LjIwOGQ1NjIuMTc1ZDYxNy45ODRkNjAwLjA2NGQ2MjkuNzZkNjM3Ljk1MmQ2MjkuNzZkNjgxLjk4M2Q2MjkuNzZkOTMyLjg2NGQ2MjkuNzZkOTg3LjEzNmQ2MDAuMDY0ZDEwMTIuMjI0ZDU3MC4zNjhkMTAzNy4zMTFkNTI0LjI4OGQxMDM3LjMxMWQ0NzguMjA4ZDEwMzcuMzExZDQ0OC41MTJkMTAxMi4yMjRkNDE4LjgxNmQ5ODcuMTM2ZDQxOC44MTZkOTMyLjg2NGQ0MTguODE2ZDczMS4xMzZoUjNkNjgxLjk4NFI0ZDYyOS43NlI1ZDUyLjIyNFI2ZDU0OC44NjRSN2QtMTMuMzEyUjhkNDk2LjY0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTExMFIxMmQ1Mi4yMjRSMTNkNjgxLjk4NFIxNGFpMWkzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTJoZzoyMjJvUjFkMTAyNFIyYWQ0NDMuMzkyZDcyNy4wNGQ0NTcuNzI4ZDcyNy4wNGQ0NzIuMDY0ZDcyMi40MzJkNDg2LjRkNzE3LjgyNGQ0OTcuNjY0ZDcwOC42MDhkNTA4LjkyOGQ2OTkuMzkyZDUxNi4wOTZkNjg1LjA1NmQ1MjMuMjY0ZDY3MC43MmQ1MjMuMjY0ZDY1Mi4yODhkNTIzLjI2NGQ2MTUuNDI0ZDQ5OS4yZDU5NC45NDRkNDc1LjEzNmQ1NzQuNDY0ZDQzMi4xMjhkNTc0LjQ2NGQzMTMuMzQ0ZDU3NC40NjRkMzEzLjM0NGQ3MjcuMDRkNDQzLjM5MmQ3MjcuMDRkODMuOTY4ZDM5Ni4yODhkODMuOTY4ZDMzNi44OTVkMTEzLjY2NGQzMDUuMTUxZDE0My4zNmQyNzMuNDA4ZDE5OC42NTZkMjczLjQwOGQyNTMuOTUyZDI3My40MDhkMjgzLjY0OGQzMDUuMTUxZDMxMy4zNDRkMzM2Ljg5NWQzMTMuMzQ0ZDM5Ni4yODhkNDMxLjEwNGQzOTYuMjg4ZDQ5OC42ODhkMzk2LjI4OGQ1NTcuNTY4ZDQwOC4wNjNkNjE2LjQ0OGQ0MTkuODRkNjU5LjQ1NmQ0NDkuMDI0ZDcwMi40NjRkNDc4LjIwN2Q3MjcuNTUyZDUyNy4zNmQ3NTIuNjRkNTc2LjUxMmQ3NTIuNjRkNjUxLjI2NGQ3NTIuNjRkNzI2LjAxNmQ3MjcuNTUyZDc3NC42NTZkNzAyLjQ2NGQ4MjMuMjk2ZDY1OS40NTZkODUyLjQ4ZDYxNi40NDhkODgxLjY2NGQ1NTcuNTY4ZDg5My40NGQ0OTguNjg4ZDkwNS4yMTZkNDMxLjEwNGQ5MDUuMjE2ZDMxMy4zNDRkOTA1LjIxNmQzMTMuMzQ0ZDkxNC40MzJkMzEzLjM0NGQ5NzMuODI0ZDI4My42NDhkMTAwNS41NjhkMjUzLjk1MmQxMDM3LjMxMWQxOTguNjU2ZDEwMzcuMzExZDE0My4zNmQxMDM3LjMxMWQxMTMuNjY0ZDEwMDUuNTY4ZDgzLjk2OGQ5NzMuODI0ZDgzLjk2OGQ5MTQuNDMyZDgzLjk2OGQzOTYuMjg4aFIzZDc5Ni42NzJSNGQ3NTIuNjRSNWQ4My45NjhSNmQ3NTAuNTkyUjdkLTEzLjMxMlI4ZDY2Ni42MjRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjIyUjEyZDgzLjk2OFIxM2Q3OTYuNjcyUjE0YWkxaTNpM2kzaTNpM2kzaTJpMmkyaTFpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kyaTJpM2kzaTNpM2kyaGc6MTA5b1IxZDEwMjRSMmFkNzU3Ljc2ZDczMS4xMzZkNzU3Ljc2ZDY4MC45NmQ3NDAuODY0ZDY2MC45OTJkNzIzLjk2OGQ2NDEuMDI0ZDY4OC4xMjhkNjQxLjAyNGQ2NjEuNTA0ZDY0MS4wMjRkNjM5LjQ4OGQ2NjYuNjI0ZDYxNy40NzJkNjkyLjIyM2Q2MTcuNDcyZDczNy4yOGQ2MTcuNDcyZDkzMi44NjRkNjE3LjQ3MmQ5ODcuMTM2ZDU4Ny43NzZkMTAxMi4yMjRkNTU4LjA4ZDEwMzcuMzExZDUxMmQxMDM3LjMxMWQ0NjUuOTJkMTAzNy4zMTFkNDM2LjIyNGQxMDEyLjIyNGQ0MDYuNTI4ZDk4Ny4xMzZkNDA2LjUyOGQ5MzIuODY0ZDQwNi41MjhkNzMxLjEzNmQ0MDYuNTI4ZDY4MC45NmQzODkuNjMyZDY2MC45OTJkMzcyLjczNmQ2NDEuMDI0ZDMzNi44OTZkNjQxLjAyNGQzMTAuMjcyZDY0MS4wMjRkMjg4LjI1NmQ2NjYuNjI0ZDI2Ni4yNGQ2OTIuMjIzZDI2Ni4yNGQ3MzcuMjhkMjY2LjI0ZDkzMi44NjRkMjY2LjI0ZDk4Ny4xMzZkMjM2LjU0NGQxMDEyLjIyNGQyMDYuODQ4ZDEwMzcuMzExZDE2MC43NjhkMTAzNy4zMTFkMTE0LjY4OGQxMDM3LjMxMWQ4NC45OTJkMTAxMi4yMjRkNTUuMjk2ZDk4Ny4xMzZkNTUuMjk2ZDkzMi44NjRkNTUuMjk2ZDU3NS40ODhkNTUuMjk2ZDUyNi4zMzZkNzkuODcyZDUwMC43MzZkMTA0LjQ0OGQ0NzUuMTM1ZDE1Ni42NzJkNDc1LjEzNWQyMDMuNzc2ZDQ3NS4xMzVkMjI0Ljc2OGQ1MDAuNzM2ZDI0NS43NmQ1MjYuMzM2ZDI1MC44OGQ1NzQuNDY0ZDI1Mi45MjhkNTc0LjQ2NGQyNzkuNTUyZDUyNi4zMzZkMzIyLjU2ZDUwMC43MzZkMzY1LjU2OGQ0NzUuMTM1ZDQyNy4wMDhkNDc1LjEzNWQ0NTIuNjA4ZDQ3NS4xMzVkNDc4LjIwOGQ0ODEuMjhkNTAzLjgwOGQ0ODcuNDI0ZDUyNS4zMTJkNDk5LjcxMmQ1NDYuODE2ZDUxMmQ1NjIuNjg4ZDUzMS40NTZkNTc4LjU2ZDU1MC45MTJkNTg1LjcyOGQ1NzguNTZkNjE5LjUyZDUyMi4yNGQ2NjMuNTUyZDQ5OC42ODhkNzA3LjU4NGQ0NzUuMTM1ZDc2My45MDRkNDc1LjEzNWQ4MTguMTc2ZDQ3NS4xMzVkODU3LjA4OGQ0OTEuMDA4ZDg5NmQ1MDYuODhkOTIwLjU3NmQ1MzQuNTI4ZDk0NS4xNTJkNTYyLjE3NWQ5NTYuOTI4ZDYwMC4wNjRkOTY4LjcwNGQ2MzcuOTUyZDk2OC43MDRkNjgxLjk4M2Q5NjguNzA0ZDkzMi44NjRkOTY4LjcwNGQ5ODcuMTM2ZDkzOS4wMDhkMTAxMi4yMjRkOTA5LjMxMmQxMDM3LjMxMWQ4NjMuMjMyZDEwMzcuMzExZDgxNy4xNTJkMTAzNy4zMTFkNzg3LjQ1NmQxMDEyLjIyNGQ3NTcuNzZkOTg3LjEzNmQ3NTcuNzZkOTMyLjg2NGQ3NTcuNzZkNzMxLjEzNmhSM2QxMDI0UjRkOTY4LjcwNFI1ZDU1LjI5NlI2ZDU0OC44NjRSN2QtMTMuMzEyUjhkNDkzLjU2OFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxMDlSMTJkNTUuMjk2UjEzZDEwMjRSMTRhaTFpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjIyMW9SMWQxMDI0UjJhZDM2OS42NjRkNTAuMTc1ZDM5NS4yNjRkMjcuNjQ4ZDQwOC41NzZkMjIuMDE1ZDQyMS44ODhkMTYuMzg0ZDQzNy4yNDhkMTYuMzg0ZDQ0Ny40ODhkMTYuMzg0ZDQ1OS4yNjRkMjAuOTkxZDQ3MS4wNGQyNS42ZDQ4MC4yNTZkMzQuMzAzZDQ4OS40NzJkNDMuMDA3ZDQ5NS42MTZkNTQuMjcxZDUwMS43NmQ2NS41MzVkNTAxLjc2ZDc4Ljg0N2Q1MDEuNzZkMTA5LjU2N2Q0NzMuMDg4ZDEzMy4xMmQzODguMDk2ZDIwNS44MjNkMzc0Ljc4NGQyMTcuMDg3ZDM2NS41NjhkMjIzLjc0NGQzNTYuMzUyZDIzMC4zOTlkMzQ4LjY3MmQyMzMuOTg0ZDM0MC45OTJkMjM3LjU2N2QzMzQuMzM2ZDIzOC41OTFkMzI3LjY4ZDIzOS42MTZkMzIwLjUxMmQyMzkuNjE2ZDMwOS4yNDhkMjM5LjYxNmQyOTcuOTg0ZDIzNS4wMDhkMjg2LjcyZDIzMC4zOTlkMjc3LjUwNGQyMjEuNjk2ZDI2OC4yODhkMjEyLjk5MWQyNjIuMTQ0ZDIwMS43MjdkMjU2ZDE5MC40NjNkMjU2ZDE3Ny4xNTFkMjU2ZDE0Ni40MzJkMjg0LjY3MmQxMjIuODhkMzY5LjY2NGQ1MC4xNzVkNDM2LjIyNGQzNDUuMDg3ZDQ1My42MzJkMzA5LjI0N2Q0ODEuNzkyZDI5MS4zMjhkNTA5Ljk1MmQyNzMuNDA4ZDU0NS43OTJkMjczLjQwOGQ1NzAuMzY4ZDI3My40MDhkNTkwLjg0OGQyODIuNjI0ZDYxMS4zMjhkMjkxLjg0ZDYyNi4xNzZkMzA3LjE5OWQ2NDEuMDI0ZDMyMi41NTlkNjQ5LjcyOGQzNDMuMDM5ZDY1OC40MzJkMzYzLjUyZDY1OC40MzJkMzg1LjAyNGQ2NTguNDMyZDQwMy40NTZkNjUwLjc1MmQ0MjEuODg4ZDY0My4wNzJkNDQwLjMxOWQ2MjguNzM2ZDQ2NS45MTlkNDU4Ljc1MmQ3NTkuODA4ZDQ1OC43NTJkOTEwLjMzNmQ0NTguNzUyZDk2OS43MjhkNDI3LjUyZDEwMDMuNTJkMzk2LjI4OGQxMDM3LjMxMWQzNDAuOTkyZDEwMzcuMzExZDI4NS42OTZkMTAzNy4zMTFkMjU0LjQ2NGQxMDAzLjUyZDIyMy4yMzJkOTY5LjcyOGQyMjMuMjMyZDkxMC4zMzZkMjIzLjIzMmQ3NTkuODA4ZDUzLjI0OGQ0NjUuOTE5ZDM4LjkxMmQ0NDAuMzE5ZDMxLjIzMmQ0MjEuODg4ZDIzLjU1MmQ0MDMuNDU2ZDIzLjU1MmQzODUuMDI0ZDIzLjU1MmQzNjMuNTJkMzIuMjU2ZDM0My4wMzlkNDAuOTZkMzIyLjU1OWQ1NS44MDhkMzA3LjE5OWQ3MC42NTZkMjkxLjg0ZDkxLjEzNmQyODIuNjI0ZDExMS42MTZkMjczLjQwOGQxMzYuMTkyZDI3My40MDhkMTcyLjAzMmQyNzMuNDA4ZDIwMC4xOTJkMjkxLjMyOGQyMjguMzUyZDMwOS4yNDdkMjQ1Ljc2ZDM0NS4wODdkMzQwLjk5MmQ1NDIuNzJkNDM2LjIyNGQzNDUuMDg3aFIzZDY4MS45ODRSNGQ2NTguNDMyUjVkMjMuNTUyUjZkMTAwNy42MTZSN2QtMTMuMzEyUjhkOTg0LjA2NFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMjFSMTJkMjMuNTUyUjEzZDY4MS45ODRSMTRhaTFpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTNpM2kzaTNpMmkyaTNpM2kzaTNpMmkyaTNpM2kzaTNpM2kzaTNpM2kyaTJoZzoxMDhvUjFkMTAyNFIyYWQ1NS4yOTZkMzc3Ljg1NmQ1NS4yOTZkMzIzLjU4M2Q4NC45OTJkMjk4LjQ5NmQxMTQuNjg4ZDI3My40MDhkMTYwLjc2OGQyNzMuNDA4ZDIwNi44NDhkMjczLjQwOGQyMzYuNTQ0ZDI5OC40OTZkMjY2LjI0ZDMyMy41ODNkMjY2LjI0ZDM3Ny44NTZkMjY2LjI0ZDkzMi44NjRkMjY2LjI0ZDk4Ny4xMzZkMjM2LjU0NGQxMDEyLjIyNGQyMDYuODQ4ZDEwMzcuMzExZDE2MC43NjhkMTAzNy4zMTFkMTE0LjY4OGQxMDM3LjMxMWQ4NC45OTJkMTAxMi4yMjRkNTUuMjk2ZDk4Ny4xMzZkNTUuMjk2ZDkzMi44NjRkNTUuMjk2ZDM3Ny44NTZoUjNkMzIxLjUzNlI0ZDI2Ni4yNFI1ZDU1LjI5NlI2ZDc1MC41OTJSN2QtMTMuMzEyUjhkNjk1LjI5NlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxMDhSMTJkNTUuMjk2UjEzZDMyMS41MzZSMTRhaTFpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjIyMG9SMWQxMDI0UjJhZDQ1NS42OGQxMjhkNDU1LjY4ZDg5LjA4N2Q0ODIuODE2ZDYxLjk1MmQ1MDkuOTUyZDM0LjgxNmQ1NDguODY0ZDM0LjgxNmQ1ODcuNzc2ZDM0LjgxNmQ2MTQuOTEyZDYxLjk1MmQ2NDIuMDQ4ZDg5LjA4N2Q2NDIuMDQ4ZDEyOGQ2NDIuMDQ4ZDE2Ni45MTJkNjE0LjkxMmQxOTQuMDQ4ZDU4Ny43NzZkMjIxLjE4M2Q1NDguODY0ZDIyMS4xODNkNTA5Ljk1MmQyMjEuMTgzZDQ4Mi44MTZkMTk0LjA0OGQ0NTUuNjhkMTY2LjkxMmQ0NTUuNjhkMTI4ZDIwOS45MmQxMjhkMjA5LjkyZDg5LjA4N2QyMzcuMDU2ZDYxLjk1MmQyNjQuMTkyZDM0LjgxNmQzMDMuMTA0ZDM0LjgxNmQzNDIuMDE2ZDM0LjgxNmQzNjkuMTUyZDYxLjk1MmQzOTYuMjg4ZDg5LjA4N2QzOTYuMjg4ZDEyOGQzOTYuMjg4ZDE2Ni45MTJkMzY5LjE1MmQxOTQuMDQ4ZDM0Mi4wMTZkMjIxLjE4M2QzMDMuMTA0ZDIyMS4xODNkMjY0LjE5MmQyMjEuMTgzZDIzNy4wNTZkMTk0LjA0OGQyMDkuOTJkMTY2LjkxMmQyMDkuOTJkMTI4ZDU0NC43NjhkNDAwLjM4NGQ1NDQuNzY4ZDM0MC45OTFkNTc2ZDMwNy4xOTlkNjA3LjIzMmQyNzMuNDA4ZDY2Mi41MjhkMjczLjQwOGQ3MTcuODI0ZDI3My40MDhkNzQ5LjA1NmQzMDcuMTk5ZDc4MC4yODhkMzQwLjk5MWQ3ODAuMjg4ZDQwMC4zODRkNzgwLjI4OGQ3MzguMzA0ZDc4MC4yODhkODIyLjI3MWQ3NTMuNjY0ZDg4MC4xMjdkNzI3LjA0ZDkzNy45ODRkNjc5LjQyNGQ5NzMuODI0ZDYzMS44MDhkMTAwOS42NjRkNTY2Ljc4NGQxMDI1LjUzNmQ1MDEuNzZkMTA0MS40MDdkNDI1Ljk4NGQxMDQxLjQwN2QzNTAuMjA4ZDEwNDEuNDA3ZDI4NS4xODRkMTAyNS41MzZkMjIwLjE2ZDEwMDkuNjY0ZDE3Mi41NDRkOTczLjgyNGQxMjQuOTI4ZDkzNy45ODRkOTguMzA0ZDg4MC4xMjdkNzEuNjhkODIyLjI3MWQ3MS42OGQ3MzguMzA0ZDcxLjY4ZDQwMC4zODRkNzEuNjhkMzQwLjk5MWQxMDIuOTEyZDMwNy4xOTlkMTM0LjE0NGQyNzMuNDA4ZDE4OS40NGQyNzMuNDA4ZDI0NC43MzZkMjczLjQwOGQyNzUuOTY4ZDMwNy4xOTlkMzA3LjJkMzQwLjk5MWQzMDcuMmQ0MDAuMzg0ZDMwNy4yZDczNi4yNTZkMzA3LjJkNzk0LjYyNGQzMzUuMzZkODI4LjkyOGQzNjMuNTJkODYzLjIzMmQ0MjUuOTg0ZDg2My4yMzJkNDg4LjQ0OGQ4NjMuMjMyZDUxNi42MDhkODI4LjkyOGQ1NDQuNzY4ZDc5NC42MjRkNTQ0Ljc2OGQ3MzYuMjU2ZDU0NC43NjhkNDAwLjM4NGhSM2Q4NTEuOTY4UjRkNzgwLjI4OFI1ZDcxLjY4UjZkOTg5LjE4NFI3ZC0xNy40MDhSOGQ5MTcuNTA0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTIyMFIxMmQ3MS42OFIxM2Q4NTEuOTY4UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kyaGc6MTA3b1IxZDEwMjRSMmFkMzc3Ljg1NmQ1MTkuMTY4ZDM5OC4zMzZkNDkzLjU2OGQ0MTcuMjhkNDg0LjM1MmQ0MzYuMjI0ZDQ3NS4xMzVkNDU4Ljc1MmQ0NzUuMTM1ZDQ3Ni4xNmQ0NzUuMTM1ZDQ5My4wNTZkNDgxLjI4ZDUwOS45NTJkNDg3LjQyNGQ1MjIuNzUyZDQ5OS4yZDUzNS41NTJkNTEwLjk3NmQ1NDMuNzQ0ZDUyNy4zNmQ1NTEuOTM2ZDU0My43NDNkNTUxLjkzNmQ1NjMuMmQ1NTEuOTM2ZDU4MC42MDhkNTQwLjY3MmQ2MDEuMDg4ZDUyOS40MDhkNjIxLjU2OGQ1MTMuMDI0ZDYzNi45MjhkNDQ0LjQxNmQ3MDIuNDY0ZDU0Ni44MTZkODQ4Ljg5NmQ1NjQuMjI0ZDg3My40NzJkNTc1LjQ4OGQ4OTcuMDI0ZDU4Ni43NTJkOTIwLjU3NmQ1ODYuNzUyZDk0My4xMDRkNTg2Ljc1MmQ5NjQuNjA4ZDU3OC4wNDhkOTgyLjAxNmQ1NjkuMzQ0ZDk5OS40MjRkNTU1LjAwOGQxMDExLjcxMmQ1NDAuNjcyZDEwMjRkNTIxLjcyOGQxMDMwLjY1NmQ1MDIuNzg0ZDEwMzcuMzExZDQ4MS4yOGQxMDM3LjMxMWQ0NjAuOGQxMDM3LjMxMWQ0NDUuOTUyZDEwMzMuMjE1ZDQzMS4xMDRkMTAyOS4xMTlkNDE3Ljc5MmQxMDE4LjM2OGQ0MDQuNDhkMTAwNy42MTZkMzkxLjE2OGQ5ODguMTZkMzc3Ljg1NmQ5NjguNzA0ZDM2MC40NDhkOTM5LjAwOGQzMDMuMTA0ZDg0MC43MDRkMjU3LjAyNGQ4ODQuNzM2ZDI1Ny4wMjRkOTMxLjg0ZDI1Ny4wMjRkOTg3LjEzNmQyMzAuNGQxMDEyLjIyNGQyMDMuNzc2ZDEwMzcuMzExZDE1NC42MjRkMTAzNy4zMTFkMTA1LjQ3MmQxMDM3LjMxMWQ3OC44NDhkMTAxMi4yMjRkNTIuMjI0ZDk4Ny4xMzZkNTIuMjI0ZDkzMS44NGQ1Mi4yMjRkMzc4Ljg4ZDUyLjIyNGQzMjMuNTgzZDc4Ljg0OGQyOTguNDk2ZDEwNS40NzJkMjczLjQwOGQxNTQuNjI0ZDI3My40MDhkMjAzLjc3NmQyNzMuNDA4ZDIzMC40ZDI5OC40OTZkMjU3LjAyNGQzMjMuNTgzZDI1Ny4wMjRkMzc4Ljg4ZDI1Ny4wMjRkNjY0LjU3NmQyNTkuMDcyZDY2NC41NzZkMzc3Ljg1NmQ1MTkuMTY4aFIzZDYwNy4yMzJSNGQ1ODYuNzUyUjVkNTIuMjI0UjZkNzUwLjU5MlI3ZC0xMy4zMTJSOGQ2OTguMzY4UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTEwN1IxMmQ1Mi4yMjRSMTNkNjA3LjIzMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpMmkyaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkyaTJpM2kzaTNpM2kyaTNpM2kzaTNpMmkyaTJoZzoyMTlvUjFkMTAyNFIyYWQyNDAuNjRkMTY3LjkzNmQyNDAuNjRkMTYxLjc5MmQyNDMuNzEyZDE1My4wODdkMjQ2Ljc4NGQxNDQuMzg0ZDI1NmQxMzMuMTJkMjY1LjIxNmQxMjEuODU2ZDI4MS42ZDEwNS45ODRkMjk3Ljk4NGQ5MC4xMTFkMzI0LjYwOGQ2OS42MzFkMzQ2LjExMmQ1Mi4yMjNkMzYwLjQ0OGQ0MS45ODNkMzc0Ljc4NGQzMS43NDRkMzg1LjUzNmQyNi4xMTFkMzk2LjI4OGQyMC40OGQ0MDUuNTA0ZDE4Ljk0M2Q0MTQuNzJkMTcuNDA4ZDQyNS45ODRkMTcuNDA4ZDQzNy4yNDhkMTcuNDA4ZDQ0Ni40NjRkMTguOTQzZDQ1NS42OGQyMC40OGQ0NjYuNDMyZDI2LjExMWQ0NzcuMTg0ZDMxLjc0NGQ0OTEuNTJkNDEuOTgzZDUwNS44NTZkNTIuMjIzZDUyNy4zNmQ2OS42MzFkNTUzLjk4NGQ5MC4xMTFkNTcwLjM2OGQxMDUuOTg0ZDU4Ni43NTJkMTIxLjg1NmQ1OTUuOTY4ZDEzMy4xMmQ2MDUuMTg0ZDE0NC4zODRkNjA4LjI1NmQxNTMuMDg3ZDYxMS4zMjhkMTYxLjc5MmQ2MTEuMzI4ZDE2Ny45MzZkNjExLjMyOGQxODkuNDM5ZDU5Ni40OGQyMDguODk1ZDU4MS42MzJkMjI4LjM1MWQ1NTMuOTg0ZDIyOC4zNTFkNTQ1Ljc5MmQyMjguMzUxZDUzNS4wNGQyMjQuNzY4ZDUyNC4yODhkMjIxLjE4M2Q1MDkuOTUyZDIxMS40NTZkNDk1LjYxNmQyMDEuNzI3ZDQ3NS4xMzZkMTg1Ljg1NmQ0NTQuNjU2ZDE2OS45ODRkNDI1Ljk4NGQxNDUuNDA4ZDM5Ny4zMTJkMTY5Ljk4NGQzNzYuODMyZDE4NS44NTZkMzU2LjM1MmQyMDEuNzI3ZDM0Mi4wMTZkMjExLjQ1NmQzMjcuNjhkMjIxLjE4M2QzMTYuOTI4ZDIyNC43NjhkMzA2LjE3NmQyMjguMzUxZDI5Ny45ODRkMjI4LjM1MWQyNzAuMzM2ZDIyOC4zNTFkMjU1LjQ4OGQyMDguODk1ZDI0MC42NGQxODkuNDM5ZDI0MC42NGQxNjcuOTM2ZDU0NC43NjhkNDAwLjM4NGQ1NDQuNzY4ZDM0MC45OTFkNTc2ZDMwNy4xOTlkNjA3LjIzMmQyNzMuNDA4ZDY2Mi41MjhkMjczLjQwOGQ3MTcuODI0ZDI3My40MDhkNzQ5LjA1NmQzMDcuMTk5ZDc4MC4yODhkMzQwLjk5MWQ3ODAuMjg4ZDQwMC4zODRkNzgwLjI4OGQ3MzguMzA0ZDc4MC4yODhkODIyLjI3MWQ3NTMuNjY0ZDg4MC4xMjdkNzI3LjA0ZDkzNy45ODRkNjc5LjQyNGQ5NzMuODI0ZDYzMS44MDhkMTAwOS42NjRkNTY2Ljc4NGQxMDI1LjUzNmQ1MDEuNzZkMTA0MS40MDdkNDI1Ljk4NGQxMDQxLjQwN2QzNTAuMjA4ZDEwNDEuNDA3ZDI4NS4xODRkMTAyNS41MzZkMjIwLjE2ZDEwMDkuNjY0ZDE3Mi41NDRkOTczLjgyNGQxMjQuOTI4ZDkzNy45ODRkOTguMzA0ZDg4MC4xMjdkNzEuNjhkODIyLjI3MWQ3MS42OGQ3MzguMzA0ZDcxLjY4ZDQwMC4zODRkNzEuNjhkMzQwLjk5MWQxMDIuOTEyZDMwNy4xOTlkMTM0LjE0NGQyNzMuNDA4ZDE4OS40NGQyNzMuNDA4ZDI0NC43MzZkMjczLjQwOGQyNzUuOTY4ZDMwNy4xOTlkMzA3LjJkMzQwLjk5MWQzMDcuMmQ0MDAuMzg0ZDMwNy4yZDczNi4yNTZkMzA3LjJkNzk0LjYyNGQzMzUuMzZkODI4LjkyOGQzNjMuNTJkODYzLjIzMmQ0MjUuOTg0ZDg2My4yMzJkNDg4LjQ0OGQ4NjMuMjMyZDUxNi42MDhkODI4LjkyOGQ1NDQuNzY4ZDc5NC42MjRkNTQ0Ljc2OGQ3MzYuMjU2ZDU0NC43NjhkNDAwLjM4NGhSM2Q4NTEuOTY4UjRkNzgwLjI4OFI1ZDcxLjY4UjZkMTAwNi41OTJSN2QtMTcuNDA4UjhkOTM0LjkxMlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMTlSMTJkNzEuNjhSMTNkODUxLjk2OFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTJoZzoxMDZvUjFkMTAyNFIyYWQ4MC44OTZkMzM2Ljg5NWQ4MC44OTZkMjk0LjkxMmQxMDkuNTY4ZDI2Ni4yNGQxMzguMjRkMjM3LjU2N2QxODAuMjI0ZDIzNy41NjdkMjIyLjIwOGQyMzcuNTY3ZDI1MC44OGQyNjYuMjRkMjc5LjU1MmQyOTQuOTEyZDI3OS41NTJkMzM2Ljg5NWQyNzkuNTUyZDM3OC44OGQyNTAuODhkNDA3LjU1MmQyMjIuMjA4ZDQzNi4yMjNkMTgwLjIyNGQ0MzYuMjIzZDEzOC4yNGQ0MzYuMjIzZDEwOS41NjhkNDA3LjU1MmQ4MC44OTZkMzc4Ljg4ZDgwLjg5NmQzMzYuODk1ZDc0Ljc1MmQ1NzkuNTg0ZDc0Ljc1MmQ1MjUuMzEyZDEwNC40NDhkNTAwLjIyM2QxMzQuMTQ0ZDQ3NS4xMzVkMTgwLjIyNGQ0NzUuMTM1ZDIyNi4zMDRkNDc1LjEzNWQyNTZkNTAwLjIyM2QyODUuNjk2ZDUyNS4zMTJkMjg1LjY5NmQ1NzkuNTg0ZDI4NS42OTZkMTA2MS44ODhkMjg1LjY5NmQxMTM0LjU5MmQyMzkuNjE2ZDExODAuMTZkMTkzLjUzNmQxMjI1LjcyOGQ5OS4zMjhkMTIyNS43MjhkNzQuNzUyZDEyMjUuNzI4ZDUzLjc2ZDEyMjIuMTQ0ZDMyLjc2OGQxMjE4LjU2ZDE3LjQwOGQxMjA4LjgzMWQyLjA0OGQxMTk5LjEwNGQtNy4xNjhkMTE4Mi4yMDhkLTE2LjM4NGQxMTY1LjMxMmQtMTYuMzg0ZDExMzkuNzEyZC0xNi4zODRkMTExMS4wNGQtMS4wMjRkMTA5OC43NTJkMTQuMzM2ZDEwODYuNDY0ZDQ3LjEwNGQxMDgxLjM0NGQ2NS41MzZkMTA3OC4yNzJkNzAuMTQ0ZDEwNzQuNjg4ZDc0Ljc1MmQxMDcxLjEwNGQ3NC43NTJkMTA2NC45NmQ3NC43NTJkNTc5LjU4NGhSM2QzNDAuOTkyUjRkMjg1LjY5NlI1ZC0xNi4zODRSNmQ3ODYuNDMyUjdkLTIwMS43MjhSOGQ4MDIuODE2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTEwNlIxMmQtMTYuMzg0UjEzZDM0MC45OTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmhnOjIxOG9SMWQxMDI0UjJhZDQ1NC42NTZkNTAuMTc1ZDQ4MC4yNTZkMjcuNjQ4ZDQ5My41NjhkMjIuMDE1ZDUwNi44OGQxNi4zODRkNTIyLjI0ZDE2LjM4NGQ1MzIuNDhkMTYuMzg0ZDU0NC4yNTZkMjAuOTkxZDU1Ni4wMzJkMjUuNmQ1NjUuMjQ4ZDM0LjMwM2Q1NzQuNDY0ZDQzLjAwN2Q1ODAuNjA4ZDU0LjI3MWQ1ODYuNzUyZDY1LjUzNWQ1ODYuNzUyZDc4Ljg0N2Q1ODYuNzUyZDEwOS41NjdkNTU4LjA4ZDEzMy4xMmQ0NzMuMDg4ZDIwNS44MjNkNDU5Ljc3NmQyMTcuMDg3ZDQ1MC41NmQyMjMuNzQ0ZDQ0MS4zNDRkMjMwLjM5OWQ0MzMuNjY0ZDIzMy45ODRkNDI1Ljk4NGQyMzcuNTY3ZDQxOS4zMjhkMjM4LjU5MWQ0MTIuNjcyZDIzOS42MTZkNDA1LjUwNGQyMzkuNjE2ZDM5NC4yNGQyMzkuNjE2ZDM4Mi45NzZkMjM1LjAwOGQzNzEuNzEyZDIzMC4zOTlkMzYyLjQ5NmQyMjEuNjk2ZDM1My4yOGQyMTIuOTkxZDM0Ny4xMzZkMjAxLjcyN2QzNDAuOTkyZDE5MC40NjNkMzQwLjk5MmQxNzcuMTUxZDM0MC45OTJkMTQ2LjQzMmQzNjkuNjY0ZDEyMi44OGQ0NTQuNjU2ZDUwLjE3NWQ1NDQuNzY4ZDQwMC4zODRkNTQ0Ljc2OGQzNDAuOTkxZDU3NmQzMDcuMTk5ZDYwNy4yMzJkMjczLjQwOGQ2NjIuNTI4ZDI3My40MDhkNzE3LjgyNGQyNzMuNDA4ZDc0OS4wNTZkMzA3LjE5OWQ3ODAuMjg4ZDM0MC45OTFkNzgwLjI4OGQ0MDAuMzg0ZDc4MC4yODhkNzM4LjMwNGQ3ODAuMjg4ZDgyMi4yNzFkNzUzLjY2NGQ4ODAuMTI3ZDcyNy4wNGQ5MzcuOTg0ZDY3OS40MjRkOTczLjgyNGQ2MzEuODA4ZDEwMDkuNjY0ZDU2Ni43ODRkMTAyNS41MzZkNTAxLjc2ZDEwNDEuNDA3ZDQyNS45ODRkMTA0MS40MDdkMzUwLjIwOGQxMDQxLjQwN2QyODUuMTg0ZDEwMjUuNTM2ZDIyMC4xNmQxMDA5LjY2NGQxNzIuNTQ0ZDk3My44MjRkMTI0LjkyOGQ5MzcuOTg0ZDk4LjMwNGQ4ODAuMTI3ZDcxLjY4ZDgyMi4yNzFkNzEuNjhkNzM4LjMwNGQ3MS42OGQ0MDAuMzg0ZDcxLjY4ZDM0MC45OTFkMTAyLjkxMmQzMDcuMTk5ZDEzNC4xNDRkMjczLjQwOGQxODkuNDRkMjczLjQwOGQyNDQuNzM2ZDI3My40MDhkMjc1Ljk2OGQzMDcuMTk5ZDMwNy4yZDM0MC45OTFkMzA3LjJkNDAwLjM4NGQzMDcuMmQ3MzYuMjU2ZDMwNy4yZDc5NC42MjRkMzM1LjM2ZDgyOC45MjhkMzYzLjUyZDg2My4yMzJkNDI1Ljk4NGQ4NjMuMjMyZDQ4OC40NDhkODYzLjIzMmQ1MTYuNjA4ZDgyOC45MjhkNTQ0Ljc2OGQ3OTQuNjI0ZDU0NC43NjhkNzM2LjI1NmQ1NDQuNzY4ZDQwMC4zODRoUjNkODUxLjk2OFI0ZDc4MC4yODhSNWQ3MS42OFI2ZDEwMDcuNjE2UjdkLTE3LjQwOFI4ZDkzNS45MzZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjE4UjEyZDcxLjY4UjEzZDg1MS45NjhSMTRhaTFpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjEwNW9SMWQxMDI0UjJhZDYxLjQ0ZDMzNi44OTVkNjEuNDRkMjk0LjkxMmQ5MC4xMTJkMjY2LjI0ZDExOC43ODRkMjM3LjU2N2QxNjAuNzY4ZDIzNy41NjdkMjAyLjc1MmQyMzcuNTY3ZDIzMS40MjRkMjY2LjI0ZDI2MC4wOTZkMjk0LjkxMmQyNjAuMDk2ZDMzNi44OTVkMjYwLjA5NmQzNzguODhkMjMxLjQyNGQ0MDcuNTUyZDIwMi43NTJkNDM2LjIyM2QxNjAuNzY4ZDQzNi4yMjNkMTE4Ljc4NGQ0MzYuMjIzZDkwLjExMmQ0MDcuNTUyZDYxLjQ0ZDM3OC44OGQ2MS40NGQzMzYuODk1ZDU1LjI5NmQ1NzkuNTg0ZDU1LjI5NmQ1MjUuMzEyZDg0Ljk5MmQ1MDAuMjIzZDExNC42ODhkNDc1LjEzNWQxNjAuNzY4ZDQ3NS4xMzVkMjA2Ljg0OGQ0NzUuMTM1ZDIzNi41NDRkNTAwLjIyM2QyNjYuMjRkNTI1LjMxMmQyNjYuMjRkNTc5LjU4NGQyNjYuMjRkOTMyLjg2NGQyNjYuMjRkOTg3LjEzNmQyMzYuNTQ0ZDEwMTIuMjI0ZDIwNi44NDhkMTAzNy4zMTFkMTYwLjc2OGQxMDM3LjMxMWQxMTQuNjg4ZDEwMzcuMzExZDg0Ljk5MmQxMDEyLjIyNGQ1NS4yOTZkOTg3LjEzNmQ1NS4yOTZkOTMyLjg2NGQ1NS4yOTZkNTc5LjU4NGhSM2QzMjEuNTM2UjRkMjY2LjI0UjVkNTUuMjk2UjZkNzg2LjQzMlI3ZC0xMy4zMTJSOGQ3MzEuMTM2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTEwNVIxMmQ1NS4yOTZSMTNkMzIxLjUzNlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTJpM2kzaTNpM2kyaGc6MjE3b1IxZDEwMjRSMmFkMjkzLjg4OGQxMzMuMTJkMjY1LjIxNmQxMDkuNTY3ZDI2NS4yMTZkNzguODQ3ZDI2NS4yMTZkNjUuNTM1ZDI3MS4zNmQ1NC4yNzFkMjc3LjUwNGQ0My4wMDdkMjg2LjcyZDM0LjMwM2QyOTUuOTM2ZDI1LjZkMzA3LjJkMjAuOTkxZDMxOC40NjRkMTYuMzg0ZDMyOS43MjhkMTYuMzg0ZDMzNi44OTZkMTYuMzg0ZDM0My41NTJkMTcuNDA4ZDM1MC4yMDhkMTguNDMyZDM1Ny44ODhkMjIuMDE1ZDM2NS41NjhkMjUuNmQzNzQuNzg0ZDMyLjI1NWQzODRkMzguOTEyZDM5Ny4zMTJkNTAuMTc1ZDQ4Mi4zMDRkMTIyLjg4ZDUxMC45NzZkMTQ2LjQzMmQ1MTAuOTc2ZDE3Ny4xNTFkNTEwLjk3NmQxOTAuNDYzZDUwNC44MzJkMjAxLjcyN2Q0OTguNjg4ZDIxMi45OTFkNDg5LjQ3MmQyMjEuNjk2ZDQ4MC4yNTZkMjMwLjM5OWQ0NjguNDhkMjM1LjAwOGQ0NTYuNzA0ZDIzOS42MTZkNDQ2LjQ2NGQyMzkuNjE2ZDQzMS4xMDRkMjM5LjYxNmQ0MTcuNzkyZDIzMy45ODRkNDA0LjQ4ZDIyOC4zNTFkMzc4Ljg4ZDIwNS44MjNkMjkzLjg4OGQxMzMuMTJkNTQ0Ljc2OGQ0MDAuMzg0ZDU0NC43NjhkMzQwLjk5MWQ1NzZkMzA3LjE5OWQ2MDcuMjMyZDI3My40MDhkNjYyLjUyOGQyNzMuNDA4ZDcxNy44MjRkMjczLjQwOGQ3NDkuMDU2ZDMwNy4xOTlkNzgwLjI4OGQzNDAuOTkxZDc4MC4yODhkNDAwLjM4NGQ3ODAuMjg4ZDczOC4zMDRkNzgwLjI4OGQ4MjIuMjcxZDc1My42NjRkODgwLjEyN2Q3MjcuMDRkOTM3Ljk4NGQ2NzkuNDI0ZDk3My44MjRkNjMxLjgwOGQxMDA5LjY2NGQ1NjYuNzg0ZDEwMjUuNTM2ZDUwMS43NmQxMDQxLjQwN2Q0MjUuOTg0ZDEwNDEuNDA3ZDM1MC4yMDhkMTA0MS40MDdkMjg1LjE4NGQxMDI1LjUzNmQyMjAuMTZkMTAwOS42NjRkMTcyLjU0NGQ5NzMuODI0ZDEyNC45MjhkOTM3Ljk4NGQ5OC4zMDRkODgwLjEyN2Q3MS42OGQ4MjIuMjcxZDcxLjY4ZDczOC4zMDRkNzEuNjhkNDAwLjM4NGQ3MS42OGQzNDAuOTkxZDEwMi45MTJkMzA3LjE5OWQxMzQuMTQ0ZDI3My40MDhkMTg5LjQ0ZDI3My40MDhkMjQ0LjczNmQyNzMuNDA4ZDI3NS45NjhkMzA3LjE5OWQzMDcuMmQzNDAuOTkxZDMwNy4yZDQwMC4zODRkMzA3LjJkNzM2LjI1NmQzMDcuMmQ3OTQuNjI0ZDMzNS4zNmQ4MjguOTI4ZDM2My41MmQ4NjMuMjMyZDQyNS45ODRkODYzLjIzMmQ0ODguNDQ4ZDg2My4yMzJkNTE2LjYwOGQ4MjguOTI4ZDU0NC43NjhkNzk0LjYyNGQ1NDQuNzY4ZDczNi4yNTZkNTQ0Ljc2OGQ0MDAuMzg0aFIzZDg1MS45NjhSNGQ3ODAuMjg4UjVkNzEuNjhSNmQxMDA3LjYxNlI3ZC0xNy40MDhSOGQ5MzUuOTM2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTIxN1IxMmQ3MS42OFIxM2Q4NTEuOTY4UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTJoZzoxMDRvUjFkMTAyNFIyYWQ0MTguODE2ZDczMS4xMzZkNDE4LjgxNmQ2NDEuMDI0ZDM0MC45OTJkNjQxLjAyNGQzMDIuMDhkNjQxLjAyNGQyODIuNjI0ZDY2OS4xODRkMjYzLjE2OGQ2OTcuMzQ0ZDI2My4xNjhkNzQ1LjQ3MmQyNjMuMTY4ZDkzMi44NjRkMjYzLjE2OGQ5ODcuMTM2ZDIzMy40NzJkMTAxMi4yMjRkMjAzLjc3NmQxMDM3LjMxMWQxNTcuNjk2ZDEwMzcuMzExZDExMS42MTZkMTAzNy4zMTFkODEuOTJkMTAxMi4yMjRkNTIuMjI0ZDk4Ny4xMzZkNTIuMjI0ZDkzMi44NjRkNTIuMjI0ZDM3Ny44NTZkNTIuMjI0ZDMyMy41ODNkODEuOTJkMjk4LjQ5NmQxMTEuNjE2ZDI3My40MDhkMTU3LjY5NmQyNzMuNDA4ZDIwMy43NzZkMjczLjQwOGQyMzMuNDcyZDI5OC40OTZkMjYzLjE2OGQzMjMuNTgzZDI2My4xNjhkMzc3Ljg1NmQyNjMuMTY4ZDU1OC4wNzlkMjY1LjIxNmQ1NTguMDc5ZDI5My44ODhkNTE2LjA5NmQzMzEuNzc2ZDQ5NS42MTZkMzY5LjY2NGQ0NzUuMTM1ZDQyMy45MzZkNDc1LjEzNWQ0NzkuMjMyZDQ3NS4xMzVkNTE4LjE0NGQ0OTEuMDA4ZDU1Ny4wNTZkNTA2Ljg4ZDU4MS42MzJkNTM0LjUyOGQ2MDYuMjA4ZDU2Mi4xNzVkNjE3Ljk4NGQ2MDAuMDY0ZDYyOS43NmQ2MzcuOTUyZDYyOS43NmQ2ODEuOTgzZDYyOS43NmQ5MzIuODY0ZDYyOS43NmQ5ODcuMTM2ZDYwMC4wNjRkMTAxMi4yMjRkNTcwLjM2OGQxMDM3LjMxMWQ1MjQuMjg4ZDEwMzcuMzExZDQ3OC4yMDhkMTAzNy4zMTFkNDQ4LjUxMmQxMDEyLjIyNGQ0MTguODE2ZDk4Ny4xMzZkNDE4LjgxNmQ5MzIuODY0ZDQxOC44MTZkNzMxLjEzNmhSM2Q2ODEuOTg0UjRkNjI5Ljc2UjVkNTIuMjI0UjZkNzUwLjU5MlI3ZC0xMy4zMTJSOGQ2OTguMzY4UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTEwNFIxMmQ1Mi4yMjRSMTNkNjgxLjk4NFIxNGFpMWkzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTJpMmkzaTNpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjIxNm9SMWQxMDI0UjJhZDUxMC45NzZkNDgzLjMyOGQ0NzYuMTZkNDUzLjYzMWQ0MjUuOTg0ZDQ1My42MzFkMzUyLjI1NmQ0NTMuNjMxZDMxNi40MTZkNTA5LjQzOWQyODAuNTc2ZDU2NS4yNDhkMjgwLjU3NmQ2NTUuMzZkMjgwLjU3NmQ2NzEuNzQzZDI4Mi4xMTJkNjg2LjU5MmQyODMuNjQ4ZDcwMS40NGQyODUuNjk2ZDcxNS43NzZkNTEwLjk3NmQ0ODMuMzI4ZDM0MC45OTJkODI3LjM5MmQzNzMuNzZkODU3LjA4OGQ0MjUuOTg0ZDg1Ny4wODhkNDk5LjcxMmQ4NTcuMDg4ZDUzNS41NTJkODAxLjI4ZDU3MS4zOTJkNzQ1LjQ3MmQ1NzEuMzkyZDY1NS4zNmQ1NzEuMzkyZDYyMy42MTZkNTY2LjI3MmQ1OTQuOTQ0ZDM0MC45OTJkODI3LjM5MmQ3MTQuNzUyZDI3Mi4zODRkNzI2LjAxNmQyNjEuMTJkNzQwLjg2NGQyNTMuOTUyZDc1NS43MTJkMjQ2Ljc4NGQ3NzEuMDcyZDI0Ni43ODRkNzkzLjZkMjQ2Ljc4NGQ4MTEuMDA4ZDI2Mi42NTVkODI4LjQxNmQyNzguNTI4ZDgyOC40MTZkMzAwLjAzMmQ4MjguNDE2ZDMxNS4zOTFkODIwLjIyNGQzMjguMTkyZDgxMi4wMzJkMzQwLjk5MWQ3OTEuNTUyZDM2Mi40OTZkNzM3LjI4ZDQxOC44MTZkNzcwLjA0OGQ0NjMuODcxZDc4OC40OGQ1MjIuNzUxZDgwNi45MTJkNTgxLjYzMmQ4MDYuOTEyZDY1NS4zNmQ4MDYuOTEyZDc1NS43MTJkNzc1LjE2OGQ4MjguNDE1ZDc0My40MjRkOTAxLjEyZDY5MC42ODhkOTQ4LjczNmQ2MzcuOTUyZDk5Ni4zNTJkNTY4LjgzMmQxMDE4Ljg4ZDQ5OS43MTJkMTA0MS40MDdkNDI1Ljk4NGQxMDQxLjQwN2QzNjMuNTJkMTA0MS40MDdkMzA1LjE1MmQxMDI1LjAyM2QyNDYuNzg0ZDEwMDguNjRkMTk3LjYzMmQ5NzUuODcyZDEzNy4yMTZkMTAzOC4zMzZkMTI1Ljk1MmQxMDQ5LjZkMTExLjEwNGQxMDU2Ljc2OGQ5Ni4yNTZkMTA2My45MzZkODAuODk2ZDEwNjMuOTM2ZDU4LjM2OGQxMDYzLjkzNmQ0MC45NmQxMDQ4LjA2NGQyMy41NTJkMTAzMi4xOTJkMjMuNTUyZDEwMTAuNjg4ZDIzLjU1MmQ5OTUuMzI4ZDMxLjc0NGQ5ODIuNTI4ZDM5LjkzNmQ5NjkuNzI4ZDYwLjQxNmQ5NDguMjI0ZDExMi42NGQ4OTMuOTUyZDgwLjg5NmQ4NDcuODcyZDYyLjk3NmQ3ODguOTkyZDQ1LjA1NmQ3MzAuMTEyZDQ1LjA1NmQ2NTUuMzZkNDUuMDU2ZDU1OS4xMDRkNzcuMzEyZDQ4Ni40ZDEwOS41NjhkNDEzLjY5NmQxNjIuMzA0ZDM2NS41NjhkMjE1LjA0ZDMxNy40MzlkMjgzLjY0OGQyOTMuMzc2ZDM1Mi4yNTZkMjY5LjMxMmQ0MjUuOTg0ZDI2OS4zMTJkNDg3LjQyNGQyNjkuMzEyZDU0NS4yOGQyODUuNjk2ZDYwMy4xMzZkMzAyLjA4ZDY1Mi4yODhkMzM2Ljg5NWQ3MTQuNzUyZDI3Mi4zODRoUjNkODUxLjk2OFI0ZDgyOC40MTZSNWQyMy41NTJSNmQ3NzcuMjE2UjdkLTM5LjkzNlI4ZDc1My42NjRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjE2UjEyZDIzLjU1MlIxM2Q4NTEuOTY4UjE0YWkxaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kyaTFpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kyaGc6MTAzb1IxZDEwMjRSMmFkNDMzLjE1MmQ3MzUuMjMyZDQzMy4xNTJkNzEyLjcwNGQ0MjguNTQ0ZDY5Mi4yMjNkNDIzLjkzNmQ2NzEuNzQzZDQxMy42OTZkNjU2LjM4NGQ0MDMuNDU2ZDY0MS4wMjRkMzg2LjU2ZDYzMS44MDhkMzY5LjY2NGQ2MjIuNTkyZDM0NS4wODhkNjIyLjU5MmQyOTUuOTM2ZDYyMi41OTJkMjc2LjQ4ZDY1Mi44ZDI1Ny4wMjRkNjgzLjAwOGQyNTcuMDI0ZDczNS4yMzJkMjU3LjAyNGQ3ODcuNDU2ZDI3Ni40OGQ4MTcuNjY0ZDI5NS45MzZkODQ3Ljg3MmQzNDUuMDg4ZDg0Ny44NzJkMzY5LjY2NGQ4NDcuODcyZDM4Ni41NmQ4MzguNjU2ZDQwMy40NTZkODI5LjQ0ZDQxMy42OTZkODE0LjA3OWQ0MjMuOTM2ZDc5OC43MmQ0MjguNTQ0ZDc3OC4yNGQ0MzMuMTUyZDc1Ny43NmQ0MzMuMTUyZDczNS4yMzJkNDI0Ljk2ZDkxNS40NTZkNDIyLjkxMmQ5MTUuNDU2ZDQwNi41MjhkOTU0LjM2N2QzNjUuNTY4ZDk3MS43NzZkMzI0LjYwOGQ5ODkuMTg0ZDI3NS40NTZkOTg5LjE4NGQyMzguNTkyZDk4OS4xODRkMTk4LjE0NGQ5NzUuODcyZDE1Ny42OTZkOTYyLjU2ZDEyMy45MDRkOTMyLjM1MmQ5MC4xMTJkOTAyLjE0NGQ2OC4wOTZkODUzLjUwNGQ0Ni4wOGQ4MDQuODY0ZDQ2LjA4ZDczMy4xODRkNDYuMDhkNjgwLjk2ZDYxLjQ0ZDYzMy44NTZkNzYuOGQ1ODYuNzUyZDEwNy4wMDhkNTUxLjQyNGQxMzcuMjE2ZDUxNi4wOTZkMTgwLjczNmQ0OTUuNjE2ZDIyNC4yNTZkNDc1LjEzNWQyNzkuNTUyZDQ3NS4xMzVkMzAyLjA4ZDQ3NS4xMzVkMzI4LjE5MmQ0ODAuNzY4ZDM1NC4zMDRkNDg2LjRkMzc3LjM0NGQ0OTguMTc2ZDQwMC4zODRkNTA5Ljk1MmQ0MTcuNzkyZDUyNy44NzJkNDM1LjJkNTQ1Ljc5MWQ0NDEuMzQ0ZDU3MS4zOTJkNDQzLjM5MmQ1NzEuMzkyZDQ0My4zOTJkNTMwLjQzMmQ0NjYuNDMyZDUwMi43ODRkNDg5LjQ3MmQ0NzUuMTM1ZDUzNS41NTJkNDc1LjEzNWQ2MjkuNzZkNDc1LjEzNWQ2MjkuNzZkNTc3LjUzNmQ2MjkuNzZkMTAwOC42NGQ2MjkuNzZkMTA3MS4xMDRkNjA3Ljc0NGQxMTE0LjYyNGQ1ODUuNzI4ZDExNTguMTQ0ZDU0Ni4zMDRkMTE4NC43NjhkNTA2Ljg4ZDEyMTEuMzkyZDQ1MS41ODRkMTIyMy42OGQzOTYuMjg4ZDEyMzUuOTY4ZDMyOS43MjhkMTIzNS45NjhkMjUzLjk1MmQxMjM1Ljk2OGQyMDQuOGQxMjIyLjY1NmQxNTUuNjQ4ZDEyMDkuMzQ0ZDEyNy40ODhkMTE5MC40ZDk5LjMyOGQxMTcxLjQ1NmQ4OC4wNjRkMTE0OS45NTJkNzYuOGQxMTI4LjQ0OGQ3Ni44ZDExMTMuMDg4ZDc2LjhkMTA4MC4zMmQ5Ny4yOGQxMDU3Ljc5MmQxMTcuNzZkMTAzNS4yNjNkMTUzLjZkMTAzNS4yNjNkMTcyLjAzMmQxMDM1LjI2M2QxODguOTI4ZDEwNDUuNTAzZDIwNS44MjRkMTA1NS43NDRkMjI0LjI1NmQxMDY4LjAzMmQyNDIuNjg4ZDEwODAuMzJkMjYzLjY4ZDEwOTAuNTZkMjg0LjY3MmQxMTAwLjhkMzEyLjMyZDExMDAuOGQzNzYuODMyZDExMDAuOGQ0MDAuODk2ZDEwNzIuMTI4ZDQyNC45NmQxMDQzLjQ1NWQ0MjQuOTZkOTg2LjExMmQ0MjQuOTZkOTE1LjQ1NmhSM2Q2ODEuOTg0UjRkNjI5Ljc2UjVkNDYuMDhSNmQ1NDguODY0UjdkLTIxMS45NjhSOGQ1MDIuNzg0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTEwM1IxMmQ0Ni4wOFIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTFpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmhnOjIxNW9SMWQxMDI0UjJhZDQ0OC41MTJkNTAxLjc2ZDQ2Ny45NjhkNDgyLjMwNGQ0ODkuNDcyZDQ4Mi4zMDRkNTAxLjc2ZDQ4Mi4zMDRkNTE0LjU2ZDQ4OC45NmQ1MjcuMzZkNDk1LjYxNmQ1MzcuNmQ1MDUuODU2ZDU0Ny44NGQ1MTYuMDk2ZDU1My45ODRkNTI5LjQwOGQ1NjAuMTI4ZDU0Mi43MmQ1NjAuMTI4ZDU1NS4wMDhkNTYwLjEyOGQ1NjYuMjcxZDU1NC40OTZkNTc2ZDU0OC44NjRkNTg1LjcyOGQ1NDAuNjcyZDU5My45MmQzOTkuMzZkNzM0LjIwOGQ1NDAuNjcyZDg3NS41MmQ1NjAuMTI4ZDg5NC45NzZkNTYwLjEyOGQ5MTYuNDhkNTYwLjEyOGQ5MjguNzY4ZDU1My40NzJkOTQxLjU2OGQ1NDYuODE2ZDk1NC4zNjdkNTM2LjU3NmQ5NjQuNjA4ZDUyNi4zMzZkOTc0Ljg0OGQ1MTMuMDI0ZDk4MC45OTJkNDk5LjcxMmQ5ODcuMTM2ZDQ4Ny40MjRkOTg3LjEzNmQ0NzYuMTZkOTg3LjEzNmQ0NjYuNDMyZDk4MS41MDRkNDU2LjcwNGQ5NzUuODcyZDQ0OC41MTJkOTY3LjY4ZDMwNy4yZDgyNi4zNjdkMTY1Ljg4OGQ5NjcuNjhkMTU3LjY5NmQ5NzUuODcyZDE0Ny45NjhkOTgxLjUwNGQxMzguMjRkOTg3LjEzNmQxMjYuOTc2ZDk4Ny4xMzZkMTE0LjY4OGQ5ODcuMTM2ZDEwMS4zNzZkOTgwLjk5MmQ4OC4wNjRkOTc0Ljg0OGQ3Ny44MjRkOTY0LjYwOGQ2Ny41ODRkOTU0LjM2N2Q2MC45MjhkOTQxLjU2OGQ1NC4yNzJkOTI4Ljc2OGQ1NC4yNzJkOTE2LjQ4ZDU0LjI3MmQ4OTQuOTc2ZDczLjcyOGQ4NzUuNTJkMjE1LjA0ZDczNC4yMDhkNzMuNzI4ZDU5My45MmQ2NS41MzZkNTg1LjcyOGQ1OS45MDRkNTc2ZDU0LjI3MmQ1NjYuMjcxZDU0LjI3MmQ1NTUuMDA4ZDU0LjI3MmQ1NDIuNzJkNjAuNDE2ZDUyOS40MDhkNjYuNTZkNTE2LjA5NmQ3Ni44ZDUwNS44NTZkODcuMDRkNDk1LjYxNmQ5OS44NGQ0ODguOTZkMTEyLjY0ZDQ4Mi4zMDRkMTI0LjkyOGQ0ODIuMzA0ZDE0Ni40MzJkNDgyLjMwNGQxNjUuODg4ZDUwMS43NmQzMDcuMmQ2NDIuMDQ4ZDQ0OC41MTJkNTAxLjc2aFIzZDYxNC40UjRkNTYwLjEyOFI1ZDU0LjI3MlI2ZDU0MS42OTZSN2QzNi44NjRSOGQ0ODcuNDI0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTIxNVIxMmQ1NC4yNzJSMTNkNjE0LjRSMTRhaTFpM2kzaTNpM2kzaTNpM2kyaTJpM2kzaTNpM2kzaTNpM2kyaTJpM2kzaTNpM2kzaTNpM2kyaTJpM2kzaTNpM2kzaTNpM2kyaTJoZzoxMDJvUjFkMTAyNFIyYWQxMDQuNDQ4ZDQ0OC41MTFkMTA0LjQ0OGQzNTguNGQxNTEuNTUyZDMxMy44NTZkMTk4LjY1NmQyNjkuMzEyZDI4OC43NjhkMjY5LjMxMmQzMzMuODI0ZDI2OS4zMTJkMzYyLjQ5NmQyNzUuOTY3ZDM5MS4xNjhkMjgyLjYyNGQ0MDcuNTUyZDI5My4zNzZkNDIzLjkzNmQzMDQuMTI3ZDQzMC4wOGQzMTguNDYzZDQzNi4yMjRkMzMyLjc5OWQ0MzYuMjI0ZDM0OS4xODNkNDM2LjIyNGQzODYuMDQ4ZDQxNC43MmQ0MDQuNDhkMzkzLjIxNmQ0MjIuOTEyZDMzMi44ZDQyMi45MTJkMzIyLjU2ZDQyMi45MTJkMzE1LjkwNGQ0MjkuMDU2ZDMwOS4yNDhkNDM1LjE5OWQzMDkuMjQ4ZDQ0Ny40ODdkMzA5LjI0OGQ0ODguNDQ4ZDM2Mi40OTZkNDg4LjQ0OGQ0MjguMDMyZDQ4OC40NDhkNDI4LjAzMmQ1NDkuODg3ZDQyOC4wMzJkNjExLjMyOGQzNjIuNDk2ZDYxMS4zMjhkMzA5LjI0OGQ2MTEuMzI4ZDMwOS4yNDhkOTMxLjg0ZDMwOS4yNDhkOTg3LjEzNmQyODIuNjI0ZDEwMTIuMjI0ZDI1NmQxMDM3LjMxMWQyMDYuODQ4ZDEwMzcuMzExZDE1Ny42OTZkMTAzNy4zMTFkMTMxLjA3MmQxMDEyLjIyNGQxMDQuNDQ4ZDk4Ny4xMzZkMTA0LjQ0OGQ5MzEuODRkMTA0LjQ0OGQ2MTEuMzI4ZDY1LjUzNmQ2MTEuMzI4ZDBkNjExLjMyOGQwZDU0OS44ODdkMGQ0ODguNDQ4ZDY1LjUzNmQ0ODguNDQ4ZDEwNC40NDhkNDg4LjQ0OGQxMDQuNDQ4ZDQ0OC41MTFoUjNkNDM2LjIyNFI0ZDQzNi4yMjRSNWQwUjZkNzU0LjY4OFI3ZC0xMy4zMTJSOGQ3NTQuNjg4UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTEwMlIxMmQwUjEzZDQzNi4yMjRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTJpM2kzaTJpMmkzaTNpM2kzaTJpMmkzaTNpMmkyaGc6MjE0b1IxZDEwMjRSMmFkMjA5LjkyZDEyOGQyMDkuOTJkODkuMDg3ZDIzNy4wNTZkNjEuOTUyZDI2NC4xOTJkMzQuODE2ZDMwMy4xMDRkMzQuODE2ZDM0Mi4wMTZkMzQuODE2ZDM2OS4xNTJkNjEuOTUyZDM5Ni4yODhkODkuMDg3ZDM5Ni4yODhkMTI4ZDM5Ni4yODhkMTY2LjkxMmQzNjkuMTUyZDE5NC4wNDhkMzQyLjAxNmQyMjEuMTgzZDMwMy4xMDRkMjIxLjE4M2QyNjQuMTkyZDIyMS4xODNkMjM3LjA1NmQxOTQuMDQ4ZDIwOS45MmQxNjYuOTEyZDIwOS45MmQxMjhkNDU1LjY4ZDEyOGQ0NTUuNjhkODkuMDg3ZDQ4Mi44MTZkNjEuOTUyZDUwOS45NTJkMzQuODE2ZDU0OC44NjRkMzQuODE2ZDU4Ny43NzZkMzQuODE2ZDYxNC45MTJkNjEuOTUyZDY0Mi4wNDhkODkuMDg3ZDY0Mi4wNDhkMTI4ZDY0Mi4wNDhkMTY2LjkxMmQ2MTQuOTEyZDE5NC4wNDhkNTg3Ljc3NmQyMjEuMTgzZDU0OC44NjRkMjIxLjE4M2Q1MDkuOTUyZDIyMS4xODNkNDgyLjgxNmQxOTQuMDQ4ZDQ1NS42OGQxNjYuOTEyZDQ1NS42OGQxMjhkNTcxLjM5MmQ2NTUuMzZkNTcxLjM5MmQ1NjUuMjQ4ZDUzNS41NTJkNTA5LjQzOWQ0OTkuNzEyZDQ1My42MzFkNDI1Ljk4NGQ0NTMuNjMxZDM1Mi4yNTZkNDUzLjYzMWQzMTYuNDE2ZDUwOS40MzlkMjgwLjU3NmQ1NjUuMjQ4ZDI4MC41NzZkNjU1LjM2ZDI4MC41NzZkNzQ1LjQ3MmQzMTYuNDE2ZDgwMS4yOGQzNTIuMjU2ZDg1Ny4wODhkNDI1Ljk4NGQ4NTcuMDg4ZDQ5OS43MTJkODU3LjA4OGQ1MzUuNTUyZDgwMS4yOGQ1NzEuMzkyZDc0NS40NzJkNTcxLjM5MmQ2NTUuMzZkNDUuMDU2ZDY1NS4zNmQ0NS4wNTZkNTU5LjEwNGQ3Ny4zMTJkNDg2LjRkMTA5LjU2OGQ0MTMuNjk2ZDE2Mi4zMDRkMzY1LjU2OGQyMTUuMDRkMzE3LjQzOWQyODMuNjQ4ZDI5My4zNzZkMzUyLjI1NmQyNjkuMzEyZDQyNS45ODRkMjY5LjMxMmQ0OTkuNzEyZDI2OS4zMTJkNTY4LjMyZDI5My4zNzZkNjM2LjkyOGQzMTcuNDM5ZDY4OS42NjRkMzY1LjU2OGQ3NDIuNGQ0MTMuNjk2ZDc3NC42NTZkNDg2LjRkODA2LjkxMmQ1NTkuMTA0ZDgwNi45MTJkNjU1LjM2ZDgwNi45MTJkNzU1LjcxMmQ3NzUuMTY4ZDgyOC40MTVkNzQzLjQyNGQ5MDEuMTJkNjkwLjY4OGQ5NDguNzM2ZDYzNy45NTJkOTk2LjM1MmQ1NjguODMyZDEwMTguODhkNDk5LjcxMmQxMDQxLjQwN2Q0MjUuOTg0ZDEwNDEuNDA3ZDM1Mi4yNTZkMTA0MS40MDdkMjgzLjEzNmQxMDE4Ljg4ZDIxNC4wMTZkOTk2LjM1MmQxNjEuMjhkOTQ4LjczNmQxMDguNTQ0ZDkwMS4xMmQ3Ni44ZDgyOC40MTVkNDUuMDU2ZDc1NS43MTJkNDUuMDU2ZDY1NS4zNmhSM2Q4NTEuOTY4UjRkODA2LjkxMlI1ZDQ1LjA1NlI2ZDk4OS4xODRSN2QtMTcuNDA4UjhkOTQ0LjEyOFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMTRSMTJkNDUuMDU2UjEzZDg1MS45NjhSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjEwMW9SMWQxMDI0UjJhZDQ0OS41MzZkNjk4LjM2N2Q0NDkuNTM2ZDY3MC43MmQ0NDEuMzQ0ZDY1MS43NzZkNDMzLjE1MmQ2MzIuODMyZDQxOS44NGQ2MjAuNTQ0ZDQwNi41MjhkNjA4LjI1NmQzODguNjA4ZDYwMy4xMzZkMzcwLjY4OGQ1OTguMDE2ZDM1MS4yMzJkNTk4LjAxNmQzMzMuODI0ZDU5OC4wMTZkMzE2LjQxNmQ2MDMuMTM2ZDI5OS4wMDhkNjA4LjI1NmQyODUuMTg0ZDYyMC4wMzFkMjcxLjM2ZDYzMS44MDhkMjYyLjE0NGQ2NTEuMjY0ZDI1Mi45MjhkNjcwLjcyZDI1MS45MDRkNjk4LjM2N2Q0NDkuNTM2ZDY5OC4zNjdkNjE2LjQ0OGQ5MTguNTI4ZDYxNi40NDhkOTQwLjAzMmQ2MDIuMTEyZDk2MS41MzZkNTg3Ljc3NmQ5ODMuMDRkNTU1LjAwOGQ5OTkuOTM2ZDUyMi4yNGQxMDE2LjgzMmQ0NzAuMDE2ZDEwMjcuMDcxZDQxNy43OTJkMTAzNy4zMTFkMzQwLjk5MmQxMDM3LjMxMWQyNzcuNTA0ZDEwMzcuMzExZDIyMy4yMzJkMTAyMC45MjhkMTY4Ljk2ZDEwMDQuNTQ0ZDEyOGQ5NjkuNzI4ZDg3LjA0ZDkzNC45MTJkNjRkODgxLjY2NGQ0MC45NmQ4MjguNDE1ZDQwLjk2ZDc1NS43MTJkNDAuOTZkNjgzLjAwOGQ2NGQ2MzAuMjcxZDg3LjA0ZDU3Ny41MzZkMTI4ZDU0Mi43MmQxNjguOTZkNTA3LjkwNGQyMjMuMjMyZDQ5MS41MmQyNzcuNTA0ZDQ3NS4xMzVkMzQwLjk5MmQ0NzUuMTM1ZDQyOS4wNTZkNDc1LjEzNWQ0ODguNDQ4ZDUwMS43NmQ1NDcuODRkNTI4LjM4NGQ1ODMuMTY4ZDU2Ni4yNzFkNjE4LjQ5NmQ2MDQuMTZkNjMzLjM0NGQ2NDUuNjMyZDY0OC4xOTJkNjg3LjEwNGQ2NDguMTkyZDcxNi44ZDY0OC4xOTJkNzY0LjkyOGQ2MjUuMTUyZDc4My44NzJkNjAyLjExMmQ4MDIuODE2ZDU1MC45MTJkODAyLjgxNmQyNTEuOTA0ZDgwMi44MTZkMjU2ZDg1NC4wMTZkMjg0LjE2ZDg4NC4yMjNkMzEyLjMyZDkxNC40MzJkMzY0LjU0NGQ5MTQuNDMyZDM5My4yMTZkOTE0LjQzMmQ0MTYuNzY4ZDkwNC4xOTJkNDQwLjMyZDg5My45NTJkNDYyLjMzNmQ4ODEuNjY0ZDQ4NC4zNTJkODY5LjM3NmQ1MDUuMzQ0ZDg1OS4xMzZkNTI2LjMzNmQ4NDguODk2ZDU1MC45MTJkODQ4Ljg5NmQ1NzguNTZkODQ4Ljg5NmQ1OTcuNTA0ZDg3MC45MTJkNjE2LjQ0OGQ4OTIuOTI4ZDYxNi40NDhkOTE4LjUyOGhSM2Q2ODEuOTg0UjRkNjQ4LjE5MlI1ZDQwLjk2UjZkNTQ4Ljg2NFI3ZC0xMy4zMTJSOGQ1MDcuOTA0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTEwMVIxMmQ0MC45NlIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNoZzoyMTNvUjFkMTAyNFIyYWQyMzUuNTJkMTUwLjUyOGQyMzUuNTJkMTMzLjEyZDI0My4yZDExNS4xOTlkMjUwLjg4ZDk3LjI3OWQyNjUuMjE2ZDgyLjQzMmQyNzkuNTUyZDY3LjU4M2QyOTkuNTJkNTguMzY3ZDMxOS40ODhkNDkuMTUxZDM0My4wNGQ0OS4xNTFkMzY4LjY0ZDQ5LjE1MWQzODguNjA4ZDU0LjI3MWQ0MDguNTc2ZDU5LjM5MWQ0MjQuNDQ4ZDY1LjUzNWQ0NDAuMzJkNzEuNjc5ZDQ1My4xMmQ3Ni43OTlkNDY1LjkyZDgxLjkxOWQ0NzcuMTg0ZDgxLjkxOWQ0OTAuNDk2ZDgxLjkxOWQ0OTkuNzEyZDc2Ljc5OWQ1MDguOTI4ZDcxLjY3OWQ1MTcuNjMyZDY1LjUzNWQ1MjYuMzM2ZDU5LjM5MWQ1MzYuMDY0ZDU0LjI3MWQ1NDUuNzkyZDQ5LjE1MWQ1NjEuMTUyZDQ5LjE1MWQ1ODMuNjhkNDkuMTUxZDYwMC4wNjRkNjUuNTM1ZDYxNi40NDhkODEuOTE5ZDYxNi40NDhkMTA3LjUxOWQ2MTYuNDQ4ZDEyNC45MjhkNjA4Ljc2OGQxNDMuMzZkNjAxLjA4OGQxNjEuNzkyZDU4Ni43NTJkMTc2LjEyN2Q1NzIuNDE2ZDE5MC40NjNkNTUyLjQ0OGQxOTkuNjc5ZDUzMi40OGQyMDguODk1ZDUwOC45MjhkMjA4Ljg5NWQ0ODMuMzI4ZDIwOC44OTVkNDYzLjM2ZDIwMy43NzVkNDQzLjM5MmQxOTguNjU1ZDQyNy41MmQxOTIuNTExZDQxMS42NDhkMTg2LjM2N2QzOTguODQ4ZDE4MS4yNDdkMzg2LjA0OGQxNzYuMTI3ZDM3NC43ODRkMTc2LjEyN2QzNjAuNDQ4ZDE3Ni4xMjdkMzUxLjc0NGQxODEuMjQ3ZDM0My4wNGQxODYuMzY3ZDMzNC4zMzZkMTkyLjUxMWQzMjUuNjMyZDE5OC42NTVkMzE1LjkwNGQyMDMuNzc1ZDMwNi4xNzZkMjA4Ljg5NWQyOTAuODE2ZDIwOC44OTVkMjY4LjI4OGQyMDguODk1ZDI1MS45MDRkMTkyLjUxMWQyMzUuNTJkMTc2LjEyN2QyMzUuNTJkMTUwLjUyOGQ1NzEuMzkyZDY1NS4zNmQ1NzEuMzkyZDU2NS4yNDhkNTM1LjU1MmQ1MDkuNDM5ZDQ5OS43MTJkNDUzLjYzMWQ0MjUuOTg0ZDQ1My42MzFkMzUyLjI1NmQ0NTMuNjMxZDMxNi40MTZkNTA5LjQzOWQyODAuNTc2ZDU2NS4yNDhkMjgwLjU3NmQ2NTUuMzZkMjgwLjU3NmQ3NDUuNDcyZDMxNi40MTZkODAxLjI4ZDM1Mi4yNTZkODU3LjA4OGQ0MjUuOTg0ZDg1Ny4wODhkNDk5LjcxMmQ4NTcuMDg4ZDUzNS41NTJkODAxLjI4ZDU3MS4zOTJkNzQ1LjQ3MmQ1NzEuMzkyZDY1NS4zNmQ0NS4wNTZkNjU1LjM2ZDQ1LjA1NmQ1NTkuMTA0ZDc3LjMxMmQ0ODYuNGQxMDkuNTY4ZDQxMy42OTZkMTYyLjMwNGQzNjUuNTY4ZDIxNS4wNGQzMTcuNDM5ZDI4My42NDhkMjkzLjM3NmQzNTIuMjU2ZDI2OS4zMTJkNDI1Ljk4NGQyNjkuMzEyZDQ5OS43MTJkMjY5LjMxMmQ1NjguMzJkMjkzLjM3NmQ2MzYuOTI4ZDMxNy40MzlkNjg5LjY2NGQzNjUuNTY4ZDc0Mi40ZDQxMy42OTZkNzc0LjY1NmQ0ODYuNGQ4MDYuOTEyZDU1OS4xMDRkODA2LjkxMmQ2NTUuMzZkODA2LjkxMmQ3NTUuNzEyZDc3NS4xNjhkODI4LjQxNWQ3NDMuNDI0ZDkwMS4xMmQ2OTAuNjg4ZDk0OC43MzZkNjM3Ljk1MmQ5OTYuMzUyZDU2OC44MzJkMTAxOC44OGQ0OTkuNzEyZDEwNDEuNDA3ZDQyNS45ODRkMTA0MS40MDdkMzUyLjI1NmQxMDQxLjQwN2QyODMuMTM2ZDEwMTguODhkMjE0LjAxNmQ5OTYuMzUyZDE2MS4yOGQ5NDguNzM2ZDEwOC41NDRkOTAxLjEyZDc2LjhkODI4LjQxNWQ0NS4wNTZkNzU1LjcxMmQ0NS4wNTZkNjU1LjM2aFIzZDg1MS45NjhSNGQ4MDYuOTEyUjVkNDUuMDU2UjZkOTc0Ljg0OFI3ZC0xNy40MDhSOGQ5MjkuNzkyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTIxM1IxMmQ0NS4wNTZSMTNkODUxLjk2OFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjEwMG9SMWQxMDI0UjJhZDQyOC4wMzJkNzU2LjczNmQ0MjguMDMyZDcwMC40MTVkNDA0Ljk5MmQ2NzAuNzJkMzgxLjk1MmQ2NDEuMDI0ZDM0Ny4xMzZkNjQxLjAyNGQzMTkuNDg4ZDY0MS4wMjRkMzAxLjU2OGQ2NTEuMjY0ZDI4My42NDhkNjYxLjUwNGQyNzIuMzg0ZDY3OC40ZDI2MS4xMmQ2OTUuMjk2ZDI1Ni41MTJkNzE3LjMxMmQyNTEuOTA0ZDczOS4zMjhkMjUxLjkwNGQ3NjEuODU2ZDI1MS45MDRkNzgzLjM2ZDI1NmQ4MDQuODY0ZDI2MC4wOTZkODI2LjM2N2QyNzAuMzM2ZDg0NC4yODhkMjgwLjU3NmQ4NjIuMjA4ZDI5OC40OTZkODcyLjk2ZDMxNi40MTZkODgzLjcxMmQzNDMuMDRkODgzLjcxMmQzODkuMTJkODgzLjcxMmQ0MDguNTc2ZDg0OC44OTZkNDI4LjAzMmQ4MTQuMDc5ZDQyOC4wMzJkNzU2LjczNmQ0MjQuOTZkMzc4Ljg4ZDQyNC45NmQzMjMuNTgzZDQ1MS41ODRkMjk4LjQ5NmQ0NzguMjA4ZDI3My40MDhkNTI3LjM2ZDI3My40MDhkNTc2LjUxMmQyNzMuNDA4ZDYwMy4xMzZkMjk4LjQ5NmQ2MjkuNzZkMzIzLjU4M2Q2MjkuNzZkMzc4Ljg4ZDYyOS43NmQ5MzQuOTEyZDYyOS43NmQxMDM3LjMxMWQ1MzUuNTUyZDEwMzcuMzExZDQ4OS40NzJkMTAzNy4zMTFkNDY2LjQzMmQxMDA5LjY2NGQ0NDMuMzkyZDk4Mi4wMTZkNDQzLjM5MmQ5NDEuMDU2ZDQ0MS4zNDRkOTQxLjA1NmQ0MzUuMmQ5NjYuNjU2ZDQxNy43OTJkOTg0LjU3NmQ0MDAuMzg0ZDEwMDIuNDk2ZDM3Ny4zNDRkMTAxNC4yNzJkMzU0LjMwNGQxMDI2LjA0OGQzMjguNzA0ZDEwMzEuNjhkMzAzLjEwNGQxMDM3LjMxMWQyODAuNTc2ZDEwMzcuMzExZDIyNS4yOGQxMDM3LjMxMWQxODAuNzM2ZDEwMTcuMzQ0ZDEzNi4xOTJkOTk3LjM3NmQxMDUuNDcyZDk2MC41MTJkNzQuNzUyZDkyMy42NDhkNTcuODU2ZDg3MS40MjRkNDAuOTZkODE5LjJkNDAuOTZkNzU0LjY4OGQ0MC45NmQ3MTUuNzc2ZDUyLjczNmQ2NjcuMTM2ZDY0LjUxMmQ2MTguNDk2ZDkxLjY0OGQ1NzZkMTE4Ljc4NGQ1MzMuNTAzZDE2My4zMjhkNTA0LjMxOWQyMDcuODcyZDQ3NS4xMzVkMjc0LjQzMmQ0NzUuMTM1ZDMyNi42NTZkNDc1LjEzNWQzNjMuMDA4ZDQ5Ny42NjRkMzk5LjM2ZDUyMC4xOTJkNDIyLjkxMmQ1NTcuMDU2ZDQyNC45NmQ1NTcuMDU2ZDQyNC45NmQzNzguODhoUjNkNjgxLjk4NFI0ZDYyOS43NlI1ZDQwLjk2UjZkNzUwLjU5MlI3ZC0xMy4zMTJSOGQ3MDkuNjMyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTEwMFIxMmQ0MC45NlIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kyaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpMmhnOjIxMm9SMWQxMDI0UjJhZDI0MC42NGQxNjcuOTM2ZDI0MC42NGQxNjEuNzkyZDI0My43MTJkMTUzLjA4N2QyNDYuNzg0ZDE0NC4zODRkMjU2ZDEzMy4xMmQyNjUuMjE2ZDEyMS44NTZkMjgxLjZkMTA1Ljk4NGQyOTcuOTg0ZDkwLjExMWQzMjQuNjA4ZDY5LjYzMWQzNDYuMTEyZDUyLjIyM2QzNjAuNDQ4ZDQxLjk4M2QzNzQuNzg0ZDMxLjc0NGQzODUuNTM2ZDI2LjExMWQzOTYuMjg4ZDIwLjQ4ZDQwNS41MDRkMTguOTQzZDQxNC43MmQxNy40MDhkNDI1Ljk4NGQxNy40MDhkNDM3LjI0OGQxNy40MDhkNDQ2LjQ2NGQxOC45NDNkNDU1LjY4ZDIwLjQ4ZDQ2Ni40MzJkMjYuMTExZDQ3Ny4xODRkMzEuNzQ0ZDQ5MS41MmQ0MS45ODNkNTA1Ljg1NmQ1Mi4yMjNkNTI3LjM2ZDY5LjYzMWQ1NTMuOTg0ZDkwLjExMWQ1NzAuMzY4ZDEwNS45ODRkNTg2Ljc1MmQxMjEuODU2ZDU5NS45NjhkMTMzLjEyZDYwNS4xODRkMTQ0LjM4NGQ2MDguMjU2ZDE1My4wODdkNjExLjMyOGQxNjEuNzkyZDYxMS4zMjhkMTY3LjkzNmQ2MTEuMzI4ZDE4OS40MzlkNTk2LjQ4ZDIwOC44OTVkNTgxLjYzMmQyMjguMzUxZDU1My45ODRkMjI4LjM1MWQ1NDUuNzkyZDIyOC4zNTFkNTM1LjA0ZDIyNC43NjhkNTI0LjI4OGQyMjEuMTgzZDUwOS45NTJkMjExLjQ1NmQ0OTUuNjE2ZDIwMS43MjdkNDc1LjEzNmQxODUuODU2ZDQ1NC42NTZkMTY5Ljk4NGQ0MjUuOTg0ZDE0NS40MDhkMzk3LjMxMmQxNjkuOTg0ZDM3Ni44MzJkMTg1Ljg1NmQzNTYuMzUyZDIwMS43MjdkMzQyLjAxNmQyMTEuNDU2ZDMyNy42OGQyMjEuMTgzZDMxNi45MjhkMjI0Ljc2OGQzMDYuMTc2ZDIyOC4zNTFkMjk3Ljk4NGQyMjguMzUxZDI3MC4zMzZkMjI4LjM1MWQyNTUuNDg4ZDIwOC44OTVkMjQwLjY0ZDE4OS40MzlkMjQwLjY0ZDE2Ny45MzZkNTcxLjM5MmQ2NTUuMzZkNTcxLjM5MmQ1NjUuMjQ4ZDUzNS41NTJkNTA5LjQzOWQ0OTkuNzEyZDQ1My42MzFkNDI1Ljk4NGQ0NTMuNjMxZDM1Mi4yNTZkNDUzLjYzMWQzMTYuNDE2ZDUwOS40MzlkMjgwLjU3NmQ1NjUuMjQ4ZDI4MC41NzZkNjU1LjM2ZDI4MC41NzZkNzQ1LjQ3MmQzMTYuNDE2ZDgwMS4yOGQzNTIuMjU2ZDg1Ny4wODhkNDI1Ljk4NGQ4NTcuMDg4ZDQ5OS43MTJkODU3LjA4OGQ1MzUuNTUyZDgwMS4yOGQ1NzEuMzkyZDc0NS40NzJkNTcxLjM5MmQ2NTUuMzZkNDUuMDU2ZDY1NS4zNmQ0NS4wNTZkNTU5LjEwNGQ3Ny4zMTJkNDg2LjRkMTA5LjU2OGQ0MTMuNjk2ZDE2Mi4zMDRkMzY1LjU2OGQyMTUuMDRkMzE3LjQzOWQyODMuNjQ4ZDI5My4zNzZkMzUyLjI1NmQyNjkuMzEyZDQyNS45ODRkMjY5LjMxMmQ0OTkuNzEyZDI2OS4zMTJkNTY4LjMyZDI5My4zNzZkNjM2LjkyOGQzMTcuNDM5ZDY4OS42NjRkMzY1LjU2OGQ3NDIuNGQ0MTMuNjk2ZDc3NC42NTZkNDg2LjRkODA2LjkxMmQ1NTkuMTA0ZDgwNi45MTJkNjU1LjM2ZDgwNi45MTJkNzU1LjcxMmQ3NzUuMTY4ZDgyOC40MTVkNzQzLjQyNGQ5MDEuMTJkNjkwLjY4OGQ5NDguNzM2ZDYzNy45NTJkOTk2LjM1MmQ1NjguODMyZDEwMTguODhkNDk5LjcxMmQxMDQxLjQwN2Q0MjUuOTg0ZDEwNDEuNDA3ZDM1Mi4yNTZkMTA0MS40MDdkMjgzLjEzNmQxMDE4Ljg4ZDIxNC4wMTZkOTk2LjM1MmQxNjEuMjhkOTQ4LjczNmQxMDguNTQ0ZDkwMS4xMmQ3Ni44ZDgyOC40MTVkNDUuMDU2ZDc1NS43MTJkNDUuMDU2ZDY1NS4zNmhSM2Q4NTEuOTY4UjRkODA2LjkxMlI1ZDQ1LjA1NlI2ZDEwMDYuNTkyUjdkLTE3LjQwOFI4ZDk2MS41MzZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjEyUjEyZDQ1LjA1NlIxM2Q4NTEuOTY4UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6OTlvUjFkMTAyNFIyYWQ0MC45NmQ3NTUuNzEyZDQwLjk2ZDY4My4wMDhkNjRkNjMwLjI3MWQ4Ny4wNGQ1NzcuNTM2ZDEyOGQ1NDIuNzJkMTY4Ljk2ZDUwNy45MDRkMjIzLjIzMmQ0OTEuNTJkMjc3LjUwNGQ0NzUuMTM1ZDM0MC45OTJkNDc1LjEzNWQzOTYuMjg4ZDQ3NS4xMzVkNDQxLjM0NGQ0ODcuNDI0ZDQ4Ni40ZDQ5OS43MTJkNTE4LjY1NmQ1MTkuNjhkNTUwLjkxMmQ1MzkuNjQ3ZDU2OC4zMmQ1NjUuNzZkNTg1LjcyOGQ1OTEuODcyZDU4NS43MjhkNjE5LjUyZDU4NS43MjhkNjU1LjM2ZDU2My43MTJkNjc2LjM1MmQ1NDEuNjk2ZDY5Ny4zNDRkNTA5Ljk1MmQ2OTcuMzQ0ZDQ4OS40NzJkNjk3LjM0NGQ0NzMuNmQ2ODUuNTY4ZDQ1Ny43MjhkNjczLjc5MWQ0NDEuMzQ0ZDY1OS45NjhkNDI0Ljk2ZDY0Ni4xNDRkNDA0Ljk5MmQ2MzQuMzY3ZDM4NS4wMjRkNjIyLjU5MmQzNTcuMzc2ZDYyMi41OTJkMzI0LjYwOGQ2MjIuNTkyZDMwNC4xMjhkNjM0Ljg4ZDI4My42NDhkNjQ3LjE2OGQyNzIuMzg0ZDY2NS41OTlkMjYxLjEyZDY4NC4wMzFkMjU2LjUxMmQ3MDcuMDcyZDI1MS45MDRkNzMwLjExMmQyNTEuOTA0ZDc1MS42MTZkMjUxLjkwNGQ3NzguMjRkMjU2LjUxMmQ4MDIuODE2ZDI2MS4xMmQ4MjcuMzkyZDI3Mi4zODRkODQ2Ljg0OGQyODMuNjQ4ZDg2Ni4zMDRkMzAyLjA4ZDg3OC4wNzlkMzIwLjUxMmQ4ODkuODU2ZDM0OC4xNmQ4ODkuODU2ZDM3NC43ODRkODg5Ljg1NmQzOTQuNzUyZDg3OC4wNzlkNDE0LjcyZDg2Ni4zMDRkNDMzLjE1MmQ4NTIuNDhkNDUxLjU4NGQ4MzguNjU2ZDQ2OS41MDRkODI2Ljg4ZDQ4Ny40MjRkODE1LjEwNGQ1MDguOTI4ZDgxNS4xMDRkNTQ2LjgxNmQ4MTUuMTA0ZDU2Ny4yOTZkODQwLjE5MmQ1ODcuNzc2ZDg2NS4yOGQ1ODcuNzc2ZDg5Mi45MjhkNTg3Ljc3NmQ5MDkuMzEyZDU3NS40ODhkOTMzLjg4OGQ1NjMuMmQ5NTguNDY0ZDUzNC41MjhkOTgxLjUwNGQ1MDUuODU2ZDEwMDQuNTQ0ZDQ1OC43NTJkMTAyMC45MjhkNDExLjY0OGQxMDM3LjMxMWQzNDAuOTkyZDEwMzcuMzExZDI3Ny41MDRkMTAzNy4zMTFkMjIzLjIzMmQxMDIwLjkyOGQxNjguOTZkMTAwNC41NDRkMTI4ZDk2OS43MjhkODcuMDRkOTM0LjkxMmQ2NGQ4ODEuNjY0ZDQwLjk2ZDgyOC40MTVkNDAuOTZkNzU1LjcxMmhSM2Q2MjUuNjY0UjRkNTg3Ljc3NlI1ZDQwLjk2UjZkNTQ4Ljg2NFI3ZC0xMy4zMTJSOGQ1MDcuOTA0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTk5UjEyZDQwLjk2UjEzZDYyNS42NjRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzoyMTFvUjFkMTAyNFIyYWQ0NTQuNjU2ZDUwLjE3NWQ0ODAuMjU2ZDI3LjY0OGQ0OTMuNTY4ZDIyLjAxNWQ1MDYuODhkMTYuMzg0ZDUyMi4yNGQxNi4zODRkNTMyLjQ4ZDE2LjM4NGQ1NDQuMjU2ZDIwLjk5MWQ1NTYuMDMyZDI1LjZkNTY1LjI0OGQzNC4zMDNkNTc0LjQ2NGQ0My4wMDdkNTgwLjYwOGQ1NC4yNzFkNTg2Ljc1MmQ2NS41MzVkNTg2Ljc1MmQ3OC44NDdkNTg2Ljc1MmQxMDkuNTY3ZDU1OC4wOGQxMzMuMTJkNDczLjA4OGQyMDUuODIzZDQ1OS43NzZkMjE3LjA4N2Q0NTAuNTZkMjIzLjc0NGQ0NDEuMzQ0ZDIzMC4zOTlkNDMzLjY2NGQyMzMuOTg0ZDQyNS45ODRkMjM3LjU2N2Q0MTkuMzI4ZDIzOC41OTFkNDEyLjY3MmQyMzkuNjE2ZDQwNS41MDRkMjM5LjYxNmQzOTQuMjRkMjM5LjYxNmQzODIuOTc2ZDIzNS4wMDhkMzcxLjcxMmQyMzAuMzk5ZDM2Mi40OTZkMjIxLjY5NmQzNTMuMjhkMjEyLjk5MWQzNDcuMTM2ZDIwMS43MjdkMzQwLjk5MmQxOTAuNDYzZDM0MC45OTJkMTc3LjE1MWQzNDAuOTkyZDE0Ni40MzJkMzY5LjY2NGQxMjIuODhkNDU0LjY1NmQ1MC4xNzVkNTcxLjM5MmQ2NTUuMzZkNTcxLjM5MmQ1NjUuMjQ4ZDUzNS41NTJkNTA5LjQzOWQ0OTkuNzEyZDQ1My42MzFkNDI1Ljk4NGQ0NTMuNjMxZDM1Mi4yNTZkNDUzLjYzMWQzMTYuNDE2ZDUwOS40MzlkMjgwLjU3NmQ1NjUuMjQ4ZDI4MC41NzZkNjU1LjM2ZDI4MC41NzZkNzQ1LjQ3MmQzMTYuNDE2ZDgwMS4yOGQzNTIuMjU2ZDg1Ny4wODhkNDI1Ljk4NGQ4NTcuMDg4ZDQ5OS43MTJkODU3LjA4OGQ1MzUuNTUyZDgwMS4yOGQ1NzEuMzkyZDc0NS40NzJkNTcxLjM5MmQ2NTUuMzZkNDUuMDU2ZDY1NS4zNmQ0NS4wNTZkNTU5LjEwNGQ3Ny4zMTJkNDg2LjRkMTA5LjU2OGQ0MTMuNjk2ZDE2Mi4zMDRkMzY1LjU2OGQyMTUuMDRkMzE3LjQzOWQyODMuNjQ4ZDI5My4zNzZkMzUyLjI1NmQyNjkuMzEyZDQyNS45ODRkMjY5LjMxMmQ0OTkuNzEyZDI2OS4zMTJkNTY4LjMyZDI5My4zNzZkNjM2LjkyOGQzMTcuNDM5ZDY4OS42NjRkMzY1LjU2OGQ3NDIuNGQ0MTMuNjk2ZDc3NC42NTZkNDg2LjRkODA2LjkxMmQ1NTkuMTA0ZDgwNi45MTJkNjU1LjM2ZDgwNi45MTJkNzU1LjcxMmQ3NzUuMTY4ZDgyOC40MTVkNzQzLjQyNGQ5MDEuMTJkNjkwLjY4OGQ5NDguNzM2ZDYzNy45NTJkOTk2LjM1MmQ1NjguODMyZDEwMTguODhkNDk5LjcxMmQxMDQxLjQwN2Q0MjUuOTg0ZDEwNDEuNDA3ZDM1Mi4yNTZkMTA0MS40MDdkMjgzLjEzNmQxMDE4Ljg4ZDIxNC4wMTZkOTk2LjM1MmQxNjEuMjhkOTQ4LjczNmQxMDguNTQ0ZDkwMS4xMmQ3Ni44ZDgyOC40MTVkNDUuMDU2ZDc1NS43MTJkNDUuMDU2ZDY1NS4zNmhSM2Q4NTEuOTY4UjRkODA2LjkxMlI1ZDQ1LjA1NlI2ZDEwMDcuNjE2UjdkLTE3LjQwOFI4ZDk2Mi41NlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMTFSMTJkNDUuMDU2UjEzZDg1MS45NjhSMTRhaTFpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6OThvUjFkMTAyNFIyYWQyNTMuOTUyZDc1Ni43MzZkMjUzLjk1MmQ4MTQuMDc5ZDI3My40MDhkODQ4Ljg5NmQyOTIuODY0ZDg4My43MTJkMzM4Ljk0NGQ4ODMuNzEyZDM2NS41NjhkODgzLjcxMmQzODMuNDg4ZDg3Mi45NmQ0MDEuNDA4ZDg2Mi4yMDhkNDExLjY0OGQ4NDQuMjg4ZDQyMS44ODhkODI2LjM2N2Q0MjUuOTg0ZDgwNC44NjRkNDMwLjA4ZDc4My4zNmQ0MzAuMDhkNzYxLjg1NmQ0MzAuMDhkNzM5LjMyOGQ0MjUuNDcyZDcxNy4zMTJkNDIwLjg2NGQ2OTUuMjk2ZDQwOS42ZDY3OC40ZDM5OC4zMzZkNjYxLjUwNGQzODAuNDE2ZDY1MS4yNjRkMzYyLjQ5NmQ2NDEuMDI0ZDMzNC44NDhkNjQxLjAyNGQzMDAuMDMyZDY0MS4wMjRkMjc2Ljk5MmQ2NzAuNzJkMjUzLjk1MmQ3MDAuNDE1ZDI1My45NTJkNzU2LjczNmQ1Mi4yMjRkMzc4Ljg4ZDUyLjIyNGQzMjMuNTgzZDc4Ljg0OGQyOTguNDk2ZDEwNS40NzJkMjczLjQwOGQxNTQuNjI0ZDI3My40MDhkMjAzLjc3NmQyNzMuNDA4ZDIzMC40ZDI5OC40OTZkMjU3LjAyNGQzMjMuNTgzZDI1Ny4wMjRkMzc4Ljg4ZDI1Ny4wMjRkNTU3LjA1NmQyNTkuMDcyZDU1Ny4wNTZkMjgyLjYyNGQ1MjAuMTkyZDMxOC45NzZkNDk3LjY2NGQzNTUuMzI4ZDQ3NS4xMzVkNDA3LjU1MmQ0NzUuMTM1ZDQ3My4wODhkNDc1LjEzNWQ1MTguMTQ0ZDUwNC4zMTlkNTYzLjJkNTMzLjUwM2Q1OTAuMzM2ZDU3NmQ2MTcuNDcyZDYxOC40OTZkNjI5LjI0OGQ2NjcuMTM2ZDY0MS4wMjRkNzE1Ljc3NmQ2NDEuMDI0ZDc1NC42ODhkNjQxLjAyNGQ4MTkuMmQ2MjQuMTI4ZDg3MS40MjRkNjA3LjIzMmQ5MjMuNjQ4ZDU3Ni41MTJkOTYwLjUxMmQ1NDUuNzkyZDk5Ny4zNzZkNTAxLjI0OGQxMDE3LjM0NGQ0NTYuNzA0ZDEwMzcuMzExZDQwMS40MDhkMTAzNy4zMTFkMzc4Ljg4ZDEwMzcuMzExZDM1My4yOGQxMDMxLjY4ZDMyNy42OGQxMDI2LjA0OGQzMDQuNjRkMTAxNC4yNzJkMjgxLjZkMTAwMi40OTZkMjY0LjE5MmQ5ODQuNTc2ZDI0Ni43ODRkOTY2LjY1NmQyNDAuNjRkOTQxLjA1NmQyMzguNTkyZDk0MS4wNTZkMjM4LjU5MmQ5ODIuMDE2ZDIxNS41NTJkMTAwOS42NjRkMTkyLjUxMmQxMDM3LjMxMWQxNDYuNDMyZDEwMzcuMzExZDUyLjIyNGQxMDM3LjMxMWQ1Mi4yMjRkOTM0LjkxMmQ1Mi4yMjRkMzc4Ljg4aFIzZDY4MS45ODRSNGQ2NDEuMDI0UjVkNTIuMjI0UjZkNzUwLjU5MlI3ZC0xMy4zMTJSOGQ2OTguMzY4UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTk4UjEyZDUyLjIyNFIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kyaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpMmhnOjIxMG9SMWQxMDI0UjJhZDI5My44ODhkMTMzLjEyZDI2NS4yMTZkMTA5LjU2N2QyNjUuMjE2ZDc4Ljg0N2QyNjUuMjE2ZDY1LjUzNWQyNzEuMzZkNTQuMjcxZDI3Ny41MDRkNDMuMDA3ZDI4Ni43MmQzNC4zMDNkMjk1LjkzNmQyNS42ZDMwNy4yZDIwLjk5MWQzMTguNDY0ZDE2LjM4NGQzMjkuNzI4ZDE2LjM4NGQzMzYuODk2ZDE2LjM4NGQzNDMuNTUyZDE3LjQwOGQzNTAuMjA4ZDE4LjQzMmQzNTcuODg4ZDIyLjAxNWQzNjUuNTY4ZDI1LjZkMzc0Ljc4NGQzMi4yNTVkMzg0ZDM4LjkxMmQzOTcuMzEyZDUwLjE3NWQ0ODIuMzA0ZDEyMi44OGQ1MTAuOTc2ZDE0Ni40MzJkNTEwLjk3NmQxNzcuMTUxZDUxMC45NzZkMTkwLjQ2M2Q1MDQuODMyZDIwMS43MjdkNDk4LjY4OGQyMTIuOTkxZDQ4OS40NzJkMjIxLjY5NmQ0ODAuMjU2ZDIzMC4zOTlkNDY4LjQ4ZDIzNS4wMDhkNDU2LjcwNGQyMzkuNjE2ZDQ0Ni40NjRkMjM5LjYxNmQ0MzEuMTA0ZDIzOS42MTZkNDE3Ljc5MmQyMzMuOTg0ZDQwNC40OGQyMjguMzUxZDM3OC44OGQyMDUuODIzZDI5My44ODhkMTMzLjEyZDU3MS4zOTJkNjU1LjM2ZDU3MS4zOTJkNTY1LjI0OGQ1MzUuNTUyZDUwOS40MzlkNDk5LjcxMmQ0NTMuNjMxZDQyNS45ODRkNDUzLjYzMWQzNTIuMjU2ZDQ1My42MzFkMzE2LjQxNmQ1MDkuNDM5ZDI4MC41NzZkNTY1LjI0OGQyODAuNTc2ZDY1NS4zNmQyODAuNTc2ZDc0NS40NzJkMzE2LjQxNmQ4MDEuMjhkMzUyLjI1NmQ4NTcuMDg4ZDQyNS45ODRkODU3LjA4OGQ0OTkuNzEyZDg1Ny4wODhkNTM1LjU1MmQ4MDEuMjhkNTcxLjM5MmQ3NDUuNDcyZDU3MS4zOTJkNjU1LjM2ZDQ1LjA1NmQ2NTUuMzZkNDUuMDU2ZDU1OS4xMDRkNzcuMzEyZDQ4Ni40ZDEwOS41NjhkNDEzLjY5NmQxNjIuMzA0ZDM2NS41NjhkMjE1LjA0ZDMxNy40MzlkMjgzLjY0OGQyOTMuMzc2ZDM1Mi4yNTZkMjY5LjMxMmQ0MjUuOTg0ZDI2OS4zMTJkNDk5LjcxMmQyNjkuMzEyZDU2OC4zMmQyOTMuMzc2ZDYzNi45MjhkMzE3LjQzOWQ2ODkuNjY0ZDM2NS41NjhkNzQyLjRkNDEzLjY5NmQ3NzQuNjU2ZDQ4Ni40ZDgwNi45MTJkNTU5LjEwNGQ4MDYuOTEyZDY1NS4zNmQ4MDYuOTEyZDc1NS43MTJkNzc1LjE2OGQ4MjguNDE1ZDc0My40MjRkOTAxLjEyZDY5MC42ODhkOTQ4LjczNmQ2MzcuOTUyZDk5Ni4zNTJkNTY4LjgzMmQxMDE4Ljg4ZDQ5OS43MTJkMTA0MS40MDdkNDI1Ljk4NGQxMDQxLjQwN2QzNTIuMjU2ZDEwNDEuNDA3ZDI4My4xMzZkMTAxOC44OGQyMTQuMDE2ZDk5Ni4zNTJkMTYxLjI4ZDk0OC43MzZkMTA4LjU0NGQ5MDEuMTJkNzYuOGQ4MjguNDE1ZDQ1LjA1NmQ3NTUuNzEyZDQ1LjA1NmQ2NTUuMzZoUjNkODUxLjk2OFI0ZDgwNi45MTJSNWQ0NS4wNTZSNmQxMDA3LjYxNlI3ZC0xNy40MDhSOGQ5NjIuNTZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjEwUjEyZDQ1LjA1NlIxM2Q4NTEuOTY4UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjk3b1IxZDEwMjRSMmFkNDI0Ljk2ZDc4My4zNmQ0MTMuNjk2ZDc5NS42NDhkMzk2LjI4OGQ4MDEuMjhkMzc4Ljg4ZDgwNi45MTJkMzU5LjkzNmQ4MDkuOTg0ZDM0MC45OTJkODEzLjA1NmQzMjIuMDQ4ZDgxNS42MTZkMzAzLjEwNGQ4MTguMTc1ZDI4OC43NjhkODI0LjMxOWQyNzUuNDU2ZDgyOS40NGQyNjcuNzc2ZDg0MC4xOTJkMjYwLjA5NmQ4NTAuOTQ0ZDI2MC4wOTZkODY4LjM1MmQyNjAuMDk2ZDg5MS45MDRkMjc5LjU1MmQ5MDYuMjRkMjk5LjAwOGQ5MjAuNTc2ZDMyNC42MDhkOTIwLjU3NmQzNDcuMTM2ZDkyMC41NzZkMzY1LjU2OGQ5MTQuNDMyZDM4NGQ5MDguMjg4ZDM5Ny4zMTJkODk3LjUzNmQ0MTAuNjI0ZDg4Ni43ODRkNDE3Ljc5MmQ4NzIuOTZkNDI0Ljk2ZDg1OS4xMzZkNDI0Ljk2ZDg0My43NzZkNDI0Ljk2ZDc4My4zNmQ2MjkuNzZkODY3LjMyOGQ2MjkuNzZkODk0Ljk3NmQ2MzIuODMyZDkxOS4wNGQ2MzUuOTA0ZDk0My4xMDRkNjM1LjkwNGQ5NjIuNTZkNjM1LjkwNGQ5ODIuMDE2ZDYyNy43MTJkOTk2LjM1MmQ2MTkuNTJkMTAxMC42ODhkNjA1LjY5NmQxMDE5LjkwNGQ1OTEuODcyZDEwMjkuMTE5ZDU3My45NTJkMTAzMy4yMTVkNTU2LjAzMmQxMDM3LjMxMWQ1MzcuNmQxMDM3LjMxMWQ0ODMuMzI4ZDEwMzcuMzExZDQ1OS43NzZkMTAxMi43MzZkNDM2LjIyNGQ5ODguMTZkNDMxLjEwNGQ5NTIuMzE5ZDQwMC4zODRkOTk4LjRkMzQ5LjE4NGQxMDE3Ljg1NmQyOTcuOTg0ZDEwMzcuMzExZDI0Mi42ODhkMTAzNy4zMTFkMTk4LjY1NmQxMDM3LjMxMWQxNjIuMzA0ZDEwMjguMDk2ZDEyNS45NTJkMTAxOC44OGQ5OS4zMjhkOTk4LjkxMmQ3Mi43MDRkOTc4Ljk0NGQ1Ny44NTZkOTQ3LjJkNDMuMDA4ZDkxNS40NTZkNDMuMDA4ZDg3MS40MjRkNDMuMDA4ZDgzNy42MzJkNTUuODA4ZDgwOC45NmQ2OC42MDhkNzgwLjI4OGQ5OS44NGQ3NTguMjcxZDEzMS4wNzJkNzM2LjI1NmQxODMuMjk2ZDcyMS45MmQyMzUuNTJkNzA3LjU4NGQzMTQuMzY4ZDcwMi40NjRkMzczLjc2ZDY5OC4zNjdkMzk5LjM2ZDY4Ny42MTZkNDI0Ljk2ZDY3Ni44NjRkNDI0Ljk2ZDY1MC4yNGQ0MjQuOTZkNTk4LjAxNmQzMzkuOTY4ZDU5OC4wMTZkMzA2LjE3NmQ1OTguMDE2ZDI4My4xMzZkNjA5LjI4ZDI2MC4wOTZkNjIwLjU0NGQyNDAuNjRkNjM0LjM2N2QyMjEuMTg0ZDY0OC4xOTJkMjAxLjcyOGQ2NTkuNDU2ZDE4Mi4yNzJkNjcwLjcyZDE1NS42NDhkNjcwLjcyZDEyMy45MDRkNjcwLjcyZDEwNi40OTZkNjUzLjgyNGQ4OS4wODhkNjM2LjkyOGQ4OS4wODhkNjA1LjE4NGQ4OS4wODhkNTc1LjQ4OGQxMDguNTQ0ZDU1MS40MjRkMTI4ZDUyNy4zNmQxNjIuODE2ZDUxMC40NjNkMTk3LjYzMmQ0OTMuNTY4ZDI0NC4yMjRkNDg0LjM1MmQyOTAuODE2ZDQ3NS4xMzVkMzQ2LjExMmQ0NzUuMTM1ZDM4OC4wOTZkNDc1LjEzNWQ0MzcuNzZkNDgxLjI4ZDQ4Ny40MjRkNDg3LjQyNGQ1MjkuOTJkNTA0LjMxOWQ1NzIuNDE2ZDUyMS4yMTZkNjAxLjA4OGQ1NTIuNDQ4ZDYyOS43NmQ1ODMuNjhkNjI5Ljc2ZDYzMi44MzJkNjI5Ljc2ZDg2Ny4zMjhoUjNkNjgxLjk4NFI0ZDYzNS45MDRSNWQ0My4wMDhSNmQ1NDguODY0UjdkLTEzLjMxMlI4ZDUwNS44NTZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpOTdSMTJkNDMuMDA4UjEzZDY4MS45ODRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaGc6MjA5b1IxZDEwMjRSMmFkMjM2LjU0NGQxNTAuNTI4ZDIzNi41NDRkMTMzLjEyZDI0NC4yMjRkMTE1LjE5OWQyNTEuOTA0ZDk3LjI3OWQyNjYuMjRkODIuNDMyZDI4MC41NzZkNjcuNTgzZDMwMC41NDRkNTguMzY3ZDMyMC41MTJkNDkuMTUxZDM0NC4wNjRkNDkuMTUxZDM2OS42NjRkNDkuMTUxZDM4OS42MzJkNTQuMjcxZDQwOS42ZDU5LjM5MWQ0MjUuNDcyZDY1LjUzNWQ0NDEuMzQ0ZDcxLjY3OWQ0NTQuMTQ0ZDc2Ljc5OWQ0NjYuOTQ0ZDgxLjkxOWQ0NzguMjA4ZDgxLjkxOWQ0OTEuNTJkODEuOTE5ZDUwMC43MzZkNzYuNzk5ZDUwOS45NTJkNzEuNjc5ZDUxOC42NTZkNjUuNTM1ZDUyNy4zNmQ1OS4zOTFkNTM3LjA4OGQ1NC4yNzFkNTQ2LjgxNmQ0OS4xNTFkNTYyLjE3NmQ0OS4xNTFkNTg0LjcwNGQ0OS4xNTFkNjAxLjA4OGQ2NS41MzVkNjE3LjQ3MmQ4MS45MTlkNjE3LjQ3MmQxMDcuNTE5ZDYxNy40NzJkMTI0LjkyOGQ2MDkuNzkyZDE0My4zNmQ2MDIuMTEyZDE2MS43OTJkNTg3Ljc3NmQxNzYuMTI3ZDU3My40NGQxOTAuNDYzZDU1My40NzJkMTk5LjY3OWQ1MzMuNTA0ZDIwOC44OTVkNTA5Ljk1MmQyMDguODk1ZDQ4NC4zNTJkMjA4Ljg5NWQ0NjQuMzg0ZDIwMy43NzVkNDQ0LjQxNmQxOTguNjU1ZDQyOC41NDRkMTkyLjUxMWQ0MTIuNjcyZDE4Ni4zNjdkMzk5Ljg3MmQxODEuMjQ3ZDM4Ny4wNzJkMTc2LjEyN2QzNzUuODA4ZDE3Ni4xMjdkMzYxLjQ3MmQxNzYuMTI3ZDM1Mi43NjhkMTgxLjI0N2QzNDQuMDY0ZDE4Ni4zNjdkMzM1LjM2ZDE5Mi41MTFkMzI2LjY1NmQxOTguNjU1ZDMxNi45MjhkMjAzLjc3NWQzMDcuMmQyMDguODk1ZDI5MS44NGQyMDguODk1ZDI2OS4zMTJkMjA4Ljg5NWQyNTIuOTI4ZDE5Mi41MTFkMjM2LjU0NGQxNzYuMTI3ZDIzNi41NDRkMTUwLjUyOGQ1NDcuODRkMzg3LjA3MmQ1NDcuODRkMzM0Ljg0N2Q1NzguMDQ4ZDMwMi4wOGQ2MDguMjU2ZDI2OS4zMTJkNjYyLjUyOGQyNjkuMzEyZDcxNi44ZDI2OS4zMTJkNzQ3LjAwOGQzMDIuMDhkNzc3LjIxNmQzMzQuODQ3ZDc3Ny4yMTZkMzg3LjA3MmQ3NzcuMjE2ZDkyOC43NjhkNzc3LjIxNmQ5ODkuMTg0ZDczOC44MTZkMTAxNS4yOTZkNzAwLjQxNmQxMDQxLjQwN2Q2NDQuMDk2ZDEwNDEuNDA3ZDYyMC41NDRkMTA0MS40MDdkNjAyLjExMmQxMDM3LjMxMWQ1ODMuNjhkMTAzMy4yMTVkNTY3LjI5NmQxMDIyLjk3NmQ1NTAuOTEyZDEwMTIuNzM2ZDUzNS4wNGQ5OTQuODE2ZDUxOS4xNjhkOTc2Ljg5NmQ1MDIuNzg0ZDk0OS4yNDhkMzA3LjJkNjI3LjcxMmQzMDUuMTUyZDYyNy43MTJkMzA1LjE1MmQ5MTguNTI4ZDMwNS4xNTJkOTc3LjkyZDI3NS40NTZkMTAwOS42NjRkMjQ1Ljc2ZDEwNDEuNDA3ZDE5MC40NjRkMTA0MS40MDdkMTM1LjE2OGQxMDQxLjQwN2QxMDUuNDcyZDEwMDkuNjY0ZDc1Ljc3NmQ5NzcuOTJkNzUuNzc2ZDkxOC41MjhkNzUuNzc2ZDM5NS4yNjRkNzUuNzc2ZDMzNC44NDdkMTA5LjU2OGQzMDIuMDhkMTQzLjM2ZDI2OS4zMTJkMjEwLjk0NGQyNjkuMzEyZDI1My45NTJkMjY5LjMxMmQyODUuMTg0ZDI4Ni4yMDdkMzE2LjQxNmQzMDMuMTA0ZDMzOC45NDRkMzQwLjk5MWQ1NDUuNzkyZDY5NS4yOTZkNTQ3Ljg0ZDY5NS4yOTZkNTQ3Ljg0ZDM4Ny4wNzJoUjNkODUyLjk5MlI0ZDc3Ny4yMTZSNWQ3NS43NzZSNmQ5NzQuODQ4UjdkLTE3LjQwOFI4ZDg5OS4wNzJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjA5UjEyZDc1Ljc3NlIxM2Q4NTIuOTkyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpMmkyaTJpM2kzaTNpM2kyaTNpM2kzaTNpMmkyaTJoZzo5Nm9SMWQxMDI0UjJhZDEwLjI0ZDMzOS45NjdkLTE4LjQzMmQzMTYuNDE1ZC0xOC40MzJkMjg1LjY5NmQtMTguNDMyZDI3Mi4zODRkLTEyLjI4OGQyNjEuMTJkLTYuMTQ0ZDI0OS44NTZkMy4wNzJkMjQxLjE1MWQxMi4yODhkMjMyLjQ0N2QyMy41NTJkMjI3Ljg0ZDM0LjgxNmQyMjMuMjMxZDQ2LjA4ZDIyMy4yMzFkNTMuMjQ4ZDIyMy4yMzFkNTkuOTA0ZDIyNC4yNTVkNjYuNTZkMjI1LjI3OWQ3NC4yNGQyMjguODY0ZDgxLjkyZDIzMi40NDdkOTEuMTM2ZDIzOS4xMDNkMTAwLjM1MmQyNDUuNzZkMTEzLjY2NGQyNTcuMDI0ZDE5OC42NTZkMzI5LjcyN2QyMjcuMzI4ZDM1My4yOGQyMjcuMzI4ZDM4NGQyMjcuMzI4ZDM5Ny4zMTJkMjIxLjE4NGQ0MDguNTc2ZDIxNS4wNGQ0MTkuODRkMjA1LjgyNGQ0MjguNTQ0ZDE5Ni42MDhkNDM3LjI0N2QxODQuODMyZDQ0MS44NTZkMTczLjA1NmQ0NDYuNDYzZDE2Mi44MTZkNDQ2LjQ2M2QxNDcuNDU2ZDQ0Ni40NjNkMTM0LjE0NGQ0NDAuODMyZDEyMC44MzJkNDM1LjE5OWQ5NS4yMzJkNDEyLjY3MmQxMC4yNGQzMzkuOTY3aFIzZDI4NC42NzJSNGQyMjcuMzI4UjVkLTE4LjQzMlI2ZDgwMC43NjhSN2Q1NzcuNTM2UjhkODE5LjJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpOTZSMTJkLTE4LjQzMlIxM2QyODQuNjcyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kyaGc6MjA4b1IxZDEwMjRSMmFkMzAwLjAzMmQ4MzkuNjhkMzUyLjI1NmQ4MzkuNjhkNDAzLjQ1NmQ4MzkuNjhkNDM2LjIyNGQ4MjcuMzkyZDQ2OC45OTJkODE1LjEwNGQ0ODguNDQ4ZDc5MS41NTJkNTA3LjkwNGQ3NjhkNTE1LjA3MmQ3MzMuNjk1ZDUyMi4yNGQ2OTkuMzkyZDUyMi4yNGQ2NTUuMzZkNTIyLjI0ZDYxMS4zMjhkNTE1LjA3MmQ1NzcuMDI0ZDUwNy45MDRkNTQyLjcyZDQ4OC40NDhkNTE5LjE2OGQ0NjguOTkyZDQ5NS42MTZkNDM2LjIyNGQ0ODMuMzI4ZDQwMy40NTZkNDcxLjAzOWQzNTIuMjU2ZDQ3MS4wMzlkMzAwLjAzMmQ0NzEuMDM5ZDMwMC4wMzJkNTg2Ljc1MmQzMzEuNzc2ZDU4Ni43NTJkMzY0LjU0NGQ1ODYuNzUyZDM4NGQ2MDQuMTZkNDAzLjQ1NmQ2MjEuNTY4ZDQwMy40NTZkNjU0LjMzNmQ0MDMuNDU2ZDY4Ny4xMDRkMzg0ZDcwNC41MTJkMzY0LjU0NGQ3MjEuOTJkMzMxLjc3NmQ3MjEuOTJkMzAwLjAzMmQ3MjEuOTJkMzAwLjAzMmQ4MzkuNjhkNzAuNjU2ZDcyMS45MmQ1NS4yOTZkNzIxLjkyZDIyLjUyOGQ3MjEuOTJkMy4wNzJkNzA0LjUxMmQtMTYuMzg0ZDY4Ny4xMDRkLTE2LjM4NGQ2NTQuMzM2ZC0xNi4zODRkNjIxLjU2OGQzLjA3MmQ2MDQuMTZkMjIuNTI4ZDU4Ni43NTJkNTUuMjk2ZDU4Ni43NTJkNzAuNjU2ZDU4Ni43NTJkNzAuNjU2ZDQyNy4wMDhkNzAuNjU2ZDM1My4yOGQxMDMuNDI0ZDMyMGQxMzYuMTkyZDI4Ni43MmQyMDQuOGQyODYuNzJkNDIyLjkxMmQyODYuNzJkNTAyLjc4NGQyODYuNzJkNTY1LjI0OGQzMTQuMzY3ZDYyNy43MTJkMzQyLjAxNWQ2NzAuMjA4ZDM5MS4xNjhkNzEyLjcwNGQ0NDAuMzE5ZDczNS4yMzJkNTA3LjkwNGQ3NTcuNzZkNTc1LjQ4OGQ3NTcuNzZkNjU1LjM2ZDc1Ny43NmQ3MzUuMjMyZDczNS4yMzJkODAyLjgxNmQ3MTIuNzA0ZDg3MC40ZDY3MC4yMDhkOTE5LjU1MmQ2MjcuNzEyZDk2OC43MDRkNTY1LjI0OGQ5OTYuMzUyZDUwMi43ODRkMTAyNGQ0MjIuOTEyZDEwMjRkMjA0LjhkMTAyNGQxMzYuMTkyZDEwMjRkMTAzLjQyNGQ5OTAuNzJkNzAuNjU2ZDk1Ny40NGQ3MC42NTZkODgzLjcxMmQ3MC42NTZkNzIxLjkyaFIzZDc5Ni42NzJSNGQ3NTcuNzZSNWQtMTYuMzg0UjZkNzM3LjI4UjdkMFI4ZDc1My42NjRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjA4UjEyZC0xNi4zODRSMTNkNzk2LjY3MlIxNGFpMWkyaTNpM2kzaTNpM2kzaTNpM2kyaTJpMmkzaTNpM2kzaTJpMmkxaTJpM2kzaTNpM2kyaTJpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTJoZzo5NW9SMWQxMDI0UjJhZDBkMTE1MmQtMTIuMjg4ZDExNTJkLTIwLjk5MmQxMTQ1LjM0NGQtMjkuNjk2ZDExMzguNjg4ZC0yOS42OTZkMTEyNi40ZC0yOS42OTZkMTExNC4xMTJkLTIwLjk5MmQxMTA3LjQ1NmQtMTIuMjg4ZDExMDAuOGQwZDExMDAuOGQ1MTJkMTEwMC44ZDUyNC4yODhkMTEwMC44ZDUzMi45OTJkMTEwNy40NTZkNTQxLjY5NmQxMTE0LjExMmQ1NDEuNjk2ZDExMjYuNGQ1NDEuNjk2ZDExMzguNjg4ZDUzMi45OTJkMTE0NS4zNDRkNTI0LjI4OGQxMTUyZDUxMmQxMTUyZDBkMTE1MmhSM2Q1MTJSNGQ1NDEuNjk2UjVkLTI5LjY5NlI2ZC03Ni44UjdkLTEyOFI4ZC00Ny4xMDRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpOTVSMTJkLTI5LjY5NlIxM2Q1MTJSMTRhaTFpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjIwN29SMWQxMDI0UjJhZDIyOC4zNTJkMTI4ZDIyOC4zNTJkODkuMDg3ZDI1NS40ODhkNjEuOTUyZDI4Mi42MjRkMzQuODE2ZDMyMS41MzZkMzQuODE2ZDM2MC40NDhkMzQuODE2ZDM4Ny41ODRkNjEuOTUyZDQxNC43MmQ4OS4wODdkNDE0LjcyZDEyOGQ0MTQuNzJkMTY2LjkxMmQzODcuNTg0ZDE5NC4wNDhkMzYwLjQ0OGQyMjEuMTgzZDMyMS41MzZkMjIxLjE4M2QyODIuNjI0ZDIyMS4xODNkMjU1LjQ4OGQxOTQuMDQ4ZDIyOC4zNTJkMTY2LjkxMmQyMjguMzUyZDEyOGQtMTcuNDA4ZDEyOGQtMTcuNDA4ZDg5LjA4N2Q5LjcyOGQ2MS45NTJkMzYuODY0ZDM0LjgxNmQ3NS43NzZkMzQuODE2ZDExNC42ODhkMzQuODE2ZDE0MS44MjRkNjEuOTUyZDE2OC45NmQ4OS4wODdkMTY4Ljk2ZDEyOGQxNjguOTZkMTY2LjkxMmQxNDEuODI0ZDE5NC4wNDhkMTE0LjY4OGQyMjEuMTgzZDc1Ljc3NmQyMjEuMTgzZDM2Ljg2NGQyMjEuMTgzZDkuNzI4ZDE5NC4wNDhkLTE3LjQwOGQxNjYuOTEyZC0xNy40MDhkMTI4ZDgwLjg5NmQ0MDAuMzg0ZDgwLjg5NmQzNDAuOTkxZDExMi4xMjhkMzA3LjE5OWQxNDMuMzZkMjczLjQwOGQxOTguNjU2ZDI3My40MDhkMjUzLjk1MmQyNzMuNDA4ZDI4NS4xODRkMzA3LjE5OWQzMTYuNDE2ZDM0MC45OTFkMzE2LjQxNmQ0MDAuMzg0ZDMxNi40MTZkOTEwLjMzNmQzMTYuNDE2ZDk2OS43MjhkMjg1LjE4NGQxMDAzLjUyZDI1My45NTJkMTAzNy4zMTFkMTk4LjY1NmQxMDM3LjMxMWQxNDMuMzZkMTAzNy4zMTFkMTEyLjEyOGQxMDAzLjUyZDgwLjg5NmQ5NjkuNzI4ZDgwLjg5NmQ5MTAuMzM2ZDgwLjg5NmQ0MDAuMzg0aFIzZDM5Ny4zMTJSNGQ0MTQuNzJSNWQtMTcuNDA4UjZkOTg5LjE4NFI3ZC0xMy4zMTJSOGQxMDA2LjU5MlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMDdSMTJkLTE3LjQwOFIxM2QzOTcuMzEyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpMmkzaTNpM2kzaTJoZzo5NG9SMWQxMDI0UjJhZDMwNy4yZDQ1NS42NzlkMTkxLjQ4OGQ2NjcuNjQ3ZDE3Ny4xNTJkNjkzLjI0OGQxNjAuNzY4ZDcwMC45MjhkMTQ0LjM4NGQ3MDguNjA4ZDEyMC44MzJkNzA4LjYwOGQ4OC4wNjRkNzA4LjYwOGQ3OC4zMzZkNjk1LjgwOGQ2OC42MDhkNjgzLjAwOGQ2OC42MDhkNjcxLjc0M2Q2OC42MDhkNjUyLjI4OGQ4MS45MmQ2MjYuNjg4ZDIzOS42MTZkMzM5Ljk2N2QyNTMuOTUyZDMxMy4zNDNkMjcwLjMzNmQzMDQuNjRkMjg2LjcyZDI5NS45MzZkMzA3LjJkMjk1LjkzNmQzMjcuNjhkMjk1LjkzNmQzNDQuMDY0ZDMwNC42NGQzNjAuNDQ4ZDMxMy4zNDNkMzc0Ljc4NGQzMzkuOTY3ZDUzMi40OGQ2MjYuNjg4ZDU0NS43OTJkNjUyLjI4OGQ1NDUuNzkyZDY3MS43NDNkNTQ1Ljc5MmQ2ODMuMDA4ZDUzNi4wNjRkNjk1LjgwOGQ1MjYuMzM2ZDcwOC42MDhkNDkzLjU2OGQ3MDguNjA4ZDQ3MC4wMTZkNzA4LjYwOGQ0NTMuNjMyZDcwMC45MjhkNDM3LjI0OGQ2OTMuMjQ4ZDQyMi45MTJkNjY3LjY0N2QzMDcuMmQ0NTUuNjc5aFIzZDYxNC40UjRkNTQ1Ljc5MlI1ZDY4LjYwOFI2ZDcyOC4wNjRSN2QzMTUuMzkyUjhkNjU5LjQ1NlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk5NFIxMmQ2OC42MDhSMTNkNjE0LjRSMTRhaTFpMmkzaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kzaTJoZzoyMDZvUjFkMTAyNFIyYWQxMy4zMTJkMTY3LjkzNmQxMy4zMTJkMTYxLjc5MmQxNi4zODRkMTUzLjA4N2QxOS40NTZkMTQ0LjM4NGQyOC42NzJkMTMzLjEyZDM3Ljg4OGQxMjEuODU2ZDU0LjI3MmQxMDUuOTg0ZDcwLjY1NmQ5MC4xMTFkOTcuMjhkNjkuNjMxZDExOC43ODRkNTIuMjIzZDEzMy4xMmQ0MS45ODNkMTQ3LjQ1NmQzMS43NDRkMTU4LjIwOGQyNi4xMTFkMTY4Ljk2ZDIwLjQ4ZDE3OC4xNzZkMTguOTQzZDE4Ny4zOTJkMTcuNDA4ZDE5OC42NTZkMTcuNDA4ZDIwOS45MmQxNy40MDhkMjE5LjEzNmQxOC45NDNkMjI4LjM1MmQyMC40OGQyMzkuMTA0ZDI2LjExMWQyNDkuODU2ZDMxLjc0NGQyNjQuMTkyZDQxLjk4M2QyNzguNTI4ZDUyLjIyM2QzMDAuMDMyZDY5LjYzMWQzMjYuNjU2ZDkwLjExMWQzNDMuMDRkMTA1Ljk4NGQzNTkuNDI0ZDEyMS44NTZkMzY4LjY0ZDEzMy4xMmQzNzcuODU2ZDE0NC4zODRkMzgwLjkyOGQxNTMuMDg3ZDM4NGQxNjEuNzkyZDM4NGQxNjcuOTM2ZDM4NGQxODkuNDM5ZDM2OS4xNTJkMjA4Ljg5NWQzNTQuMzA0ZDIyOC4zNTFkMzI2LjY1NmQyMjguMzUxZDMxOC40NjRkMjI4LjM1MWQzMDcuNzEyZDIyNC43NjhkMjk2Ljk2ZDIyMS4xODNkMjgyLjYyNGQyMTEuNDU2ZDI2OC4yODhkMjAxLjcyN2QyNDcuODA4ZDE4NS44NTZkMjI3LjMyOGQxNjkuOTg0ZDE5OC42NTZkMTQ1LjQwOGQxNjkuOTg0ZDE2OS45ODRkMTQ5LjUwNGQxODUuODU2ZDEyOS4wMjRkMjAxLjcyN2QxMTQuNjg4ZDIxMS40NTZkMTAwLjM1MmQyMjEuMTgzZDg5LjZkMjI0Ljc2OGQ3OC44NDhkMjI4LjM1MWQ3MC42NTZkMjI4LjM1MWQ0My4wMDhkMjI4LjM1MWQyOC4xNmQyMDguODk1ZDEzLjMxMmQxODkuNDM5ZDEzLjMxMmQxNjcuOTM2ZDgwLjg5NmQ0MDAuMzg0ZDgwLjg5NmQzNDAuOTkxZDExMi4xMjhkMzA3LjE5OWQxNDMuMzZkMjczLjQwOGQxOTguNjU2ZDI3My40MDhkMjUzLjk1MmQyNzMuNDA4ZDI4NS4xODRkMzA3LjE5OWQzMTYuNDE2ZDM0MC45OTFkMzE2LjQxNmQ0MDAuMzg0ZDMxNi40MTZkOTEwLjMzNmQzMTYuNDE2ZDk2OS43MjhkMjg1LjE4NGQxMDAzLjUyZDI1My45NTJkMTAzNy4zMTFkMTk4LjY1NmQxMDM3LjMxMWQxNDMuMzZkMTAzNy4zMTFkMTEyLjEyOGQxMDAzLjUyZDgwLjg5NmQ5NjkuNzI4ZDgwLjg5NmQ5MTAuMzM2ZDgwLjg5NmQ0MDAuMzg0aFIzZDM5Ny4zMTJSNGQzODRSNWQxMy4zMTJSNmQxMDA2LjU5MlI3ZC0xMy4zMTJSOGQ5OTMuMjhSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjA2UjEyZDEzLjMxMlIxM2QzOTcuMzEyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTJpM2kzaTNpM2kyaGc6OTNvUjFkMTAyNFIyYWQxNTMuNmQ0MzQuMTc1ZDg2LjAxNmQ0MzQuMTc1ZDUzLjI0OGQ0MzQuMTc1ZDMyLjI1NmQ0MTUuNzQ0ZDExLjI2NGQzOTcuMzEyZDExLjI2NGQzNjAuNDQ4ZDExLjI2NGQzMjIuNTU5ZDM2Ljg2NGQzMDQuNjRkNjIuNDY0ZDI4Ni43MmQxMDUuNDcyZDI4Ni43MmQyMTQuMDE2ZDI4Ni43MmQyMzguNTkyZDI4Ni43MmQyNjAuNjA4ZDI5MS4zMjhkMjgyLjYyNGQyOTUuOTM2ZDI5OS4wMDhkMzA2LjY4OGQzMTUuMzkyZDMxNy40MzlkMzI0LjYwOGQzMzYuMzg0ZDMzMy44MjRkMzU1LjMyOGQzMzMuODI0ZDM4NGQzMzMuODI0ZDExMDQuODk2ZDMzMy44MjRkMTEzMy41NjhkMzI0LjYwOGQxMTUyLjUxMmQzMTUuMzkyZDExNzEuNDU2ZDI5OS4wMDhkMTE4Mi4yMDhkMjgyLjYyNGQxMTkyLjk2ZDI2MC42MDhkMTE5Ny41NjhkMjM4LjU5MmQxMjAyLjE3NmQyMTQuMDE2ZDEyMDIuMTc2ZDEwNS40NzJkMTIwMi4xNzZkNjIuNDY0ZDEyMDIuMTc2ZDM2Ljg2NGQxMTg0LjI1NmQxMS4yNjRkMTE2Ni4zMzZkMTEuMjY0ZDExMjguNDQ4ZDExLjI2NGQxMDkxLjU4NGQzMi4yNTZkMTA3My4xNTJkNTMuMjQ4ZDEwNTQuNzJkODYuMDE2ZDEwNTQuNzJkMTUzLjZkMTA1NC43MmQxNTMuNmQ0MzQuMTc1aFIzZDM5OC4zMzZSNGQzMzMuODI0UjVkMTEuMjY0UjZkNzM3LjI4UjdkLTE3OC4xNzZSOGQ3MjYuMDE2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTkzUjEyZDExLjI2NFIxM2QzOTguMzM2UjE0YWkxaTJpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kyaTJoZzoyMDVvUjFkMTAyNFIyYWQyMjcuMzI4ZDUwLjE3NWQyNTIuOTI4ZDI3LjY0OGQyNjYuMjRkMjIuMDE1ZDI3OS41NTJkMTYuMzg0ZDI5NC45MTJkMTYuMzg0ZDMwNS4xNTJkMTYuMzg0ZDMxNi45MjhkMjAuOTkxZDMyOC43MDRkMjUuNmQzMzcuOTJkMzQuMzAzZDM0Ny4xMzZkNDMuMDA3ZDM1My4yOGQ1NC4yNzFkMzU5LjQyNGQ2NS41MzVkMzU5LjQyNGQ3OC44NDdkMzU5LjQyNGQxMDkuNTY3ZDMzMC43NTJkMTMzLjEyZDI0NS43NmQyMDUuODIzZDIzMi40NDhkMjE3LjA4N2QyMjMuMjMyZDIyMy43NDRkMjE0LjAxNmQyMzAuMzk5ZDIwNi4zMzZkMjMzLjk4NGQxOTguNjU2ZDIzNy41NjdkMTkyZDIzOC41OTFkMTg1LjM0NGQyMzkuNjE2ZDE3OC4xNzZkMjM5LjYxNmQxNjYuOTEyZDIzOS42MTZkMTU1LjY0OGQyMzUuMDA4ZDE0NC4zODRkMjMwLjM5OWQxMzUuMTY4ZDIyMS42OTZkMTI1Ljk1MmQyMTIuOTkxZDExOS44MDhkMjAxLjcyN2QxMTMuNjY0ZDE5MC40NjNkMTEzLjY2NGQxNzcuMTUxZDExMy42NjRkMTQ2LjQzMmQxNDIuMzM2ZDEyMi44OGQyMjcuMzI4ZDUwLjE3NWQ4MC44OTZkNDAwLjM4NGQ4MC44OTZkMzQwLjk5MWQxMTIuMTI4ZDMwNy4xOTlkMTQzLjM2ZDI3My40MDhkMTk4LjY1NmQyNzMuNDA4ZDI1My45NTJkMjczLjQwOGQyODUuMTg0ZDMwNy4xOTlkMzE2LjQxNmQzNDAuOTkxZDMxNi40MTZkNDAwLjM4NGQzMTYuNDE2ZDkxMC4zMzZkMzE2LjQxNmQ5NjkuNzI4ZDI4NS4xODRkMTAwMy41MmQyNTMuOTUyZDEwMzcuMzExZDE5OC42NTZkMTAzNy4zMTFkMTQzLjM2ZDEwMzcuMzExZDExMi4xMjhkMTAwMy41MmQ4MC44OTZkOTY5LjcyOGQ4MC44OTZkOTEwLjMzNmQ4MC44OTZkNDAwLjM4NGhSM2QzOTcuMzEyUjRkMzU5LjQyNFI1ZDgwLjg5NlI2ZDEwMDcuNjE2UjdkLTEzLjMxMlI4ZDkyNi43MlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMDVSMTJkODAuODk2UjEzZDM5Ny4zMTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTJpM2kzaTNpM2kyaGc6OTJvUjFkMTAyNFIyYWQ0NC4wMzJkNDQwLjMxOWQzMC43MmQ0MDIuNDMyZDIzLjA0ZDM3OC4zNjdkMTUuMzZkMzU0LjMwNGQxNS4zNmQzMzkuOTY3ZDE1LjM2ZDMyMS41MzVkMjIuNTI4ZDMwOC4yMjNkMjkuNjk2ZDI5NC45MTJkNDAuNDQ4ZDI4Ni4yMDdkNTEuMmQyNzcuNTA0ZDY0LjUxMmQyNzMuNDA4ZDc3LjgyNGQyNjkuMzEyZDkwLjExMmQyNjkuMzEyZDEwNi40OTZkMjY5LjMxMmQxMTcuNzZkMjcxLjg3MWQxMjkuMDI0ZDI3NC40MzJkMTM3LjIxNmQyODIuMTExZDE0NS40MDhkMjg5Ljc5MmQxNTIuMDY0ZDMwMi41OTJkMTU4LjcyZDMxNS4zOTFkMTY1Ljg4OGQzMzYuODk1ZDM1NC4zMDRkODcwLjRkMzY3LjYxNmQ5MDguMjg4ZDM3NS4yOTZkOTMyLjM1MmQzODIuOTc2ZDk1Ni40MTVkMzgyLjk3NmQ5NzAuNzUyZDM4Mi45NzZkOTg5LjE4NGQzNzUuODA4ZDEwMDIuNDk2ZDM2OC42NGQxMDE1LjgwOGQzNTcuODg4ZDEwMjQuNTEyZDM0Ny4xMzZkMTAzMy4yMTVkMzMzLjgyNGQxMDM3LjMxMWQzMjAuNTEyZDEwNDEuNDA3ZDMwOC4yMjRkMTA0MS40MDdkMjkwLjgxNmQxMDQxLjQwN2QyODAuMDY0ZDEwMzguODQ4ZDI2OS4zMTJkMTAzNi4yODhkMjYxLjEyZDEwMjguNjA4ZDI1Mi45MjhkMTAyMC45MjhkMjQ2LjI3MmQxMDA4LjEyOGQyMzkuNjE2ZDk5NS4zMjhkMjMyLjQ0OGQ5NzMuODI0ZDQ0LjAzMmQ0NDAuMzE5aFIzZDM5OC4zMzZSNGQzODIuOTc2UjVkMTUuMzZSNmQ3NTQuNjg4UjdkLTE3LjQwOFI4ZDczOS4zMjhSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpOTJSMTJkMTUuMzZSMTNkMzk4LjMzNlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaGc6MjA0b1IxZDEwMjRSMmFkNjYuNTZkMTMzLjEyZDM3Ljg4OGQxMDkuNTY3ZDM3Ljg4OGQ3OC44NDdkMzcuODg4ZDY1LjUzNWQ0NC4wMzJkNTQuMjcxZDUwLjE3NmQ0My4wMDdkNTkuMzkyZDM0LjMwM2Q2OC42MDhkMjUuNmQ3OS44NzJkMjAuOTkxZDkxLjEzNmQxNi4zODRkMTAyLjRkMTYuMzg0ZDEwOS41NjhkMTYuMzg0ZDExNi4yMjRkMTcuNDA4ZDEyMi44OGQxOC40MzJkMTMwLjU2ZDIyLjAxNWQxMzguMjRkMjUuNmQxNDcuNDU2ZDMyLjI1NWQxNTYuNjcyZDM4LjkxMmQxNjkuOTg0ZDUwLjE3NWQyNTQuOTc2ZDEyMi44OGQyODMuNjQ4ZDE0Ni40MzJkMjgzLjY0OGQxNzcuMTUxZDI4My42NDhkMTkwLjQ2M2QyNzcuNTA0ZDIwMS43MjdkMjcxLjM2ZDIxMi45OTFkMjYyLjE0NGQyMjEuNjk2ZDI1Mi45MjhkMjMwLjM5OWQyNDEuMTUyZDIzNS4wMDhkMjI5LjM3NmQyMzkuNjE2ZDIxOS4xMzZkMjM5LjYxNmQyMDMuNzc2ZDIzOS42MTZkMTkwLjQ2NGQyMzMuOTg0ZDE3Ny4xNTJkMjI4LjM1MWQxNTEuNTUyZDIwNS44MjNkNjYuNTZkMTMzLjEyZDgwLjg5NmQ0MDAuMzg0ZDgwLjg5NmQzNDAuOTkxZDExMi4xMjhkMzA3LjE5OWQxNDMuMzZkMjczLjQwOGQxOTguNjU2ZDI3My40MDhkMjUzLjk1MmQyNzMuNDA4ZDI4NS4xODRkMzA3LjE5OWQzMTYuNDE2ZDM0MC45OTFkMzE2LjQxNmQ0MDAuMzg0ZDMxNi40MTZkOTEwLjMzNmQzMTYuNDE2ZDk2OS43MjhkMjg1LjE4NGQxMDAzLjUyZDI1My45NTJkMTAzNy4zMTFkMTk4LjY1NmQxMDM3LjMxMWQxNDMuMzZkMTAzNy4zMTFkMTEyLjEyOGQxMDAzLjUyZDgwLjg5NmQ5NjkuNzI4ZDgwLjg5NmQ5MTAuMzM2ZDgwLjg5NmQ0MDAuMzg0aFIzZDM5Ny4zMTJSNGQzMTYuNDE2UjVkMzcuODg4UjZkMTAwNy42MTZSN2QtMTMuMzEyUjhkOTY5LjcyOFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMDRSMTJkMzcuODg4UjEzZDM5Ny4zMTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTJpM2kzaTNpM2kyaGc6OTFvUjFkMTAyNFIyYWQ2NC41MTJkMzg0ZDY0LjUxMmQzNTUuMzI4ZDczLjcyOGQzMzYuMzg0ZDgyLjk0NGQzMTcuNDM5ZDk5LjMyOGQzMDYuNjg4ZDExNS43MTJkMjk1LjkzNmQxMzcuNzI4ZDI5MS4zMjhkMTU5Ljc0NGQyODYuNzJkMTg0LjMyZDI4Ni43MmQyOTIuODY0ZDI4Ni43MmQzMzUuODcyZDI4Ni43MmQzNjEuNDcyZDMwNC42NGQzODcuMDcyZDMyMi41NTlkMzg3LjA3MmQzNjAuNDQ4ZDM4Ny4wNzJkMzk3LjMxMmQzNjYuMDhkNDE1Ljc0NGQzNDUuMDg4ZDQzNC4xNzVkMzEyLjMyZDQzNC4xNzVkMjQ0LjczNmQ0MzQuMTc1ZDI0NC43MzZkMTA1NC43MmQzMTIuMzJkMTA1NC43MmQzNDUuMDg4ZDEwNTQuNzJkMzY2LjA4ZDEwNzMuMTUyZDM4Ny4wNzJkMTA5MS41ODRkMzg3LjA3MmQxMTI4LjQ0OGQzODcuMDcyZDExNjYuMzM2ZDM2MS40NzJkMTE4NC4yNTZkMzM1Ljg3MmQxMjAyLjE3NmQyOTIuODY0ZDEyMDIuMTc2ZDE4NC4zMmQxMjAyLjE3NmQxNTkuNzQ0ZDEyMDIuMTc2ZDEzNy43MjhkMTE5Ny41NjhkMTE1LjcxMmQxMTkyLjk2ZDk5LjMyOGQxMTgyLjIwOGQ4Mi45NDRkMTE3MS40NTZkNzMuNzI4ZDExNTIuNTEyZDY0LjUxMmQxMTMzLjU2OGQ2NC41MTJkMTEwNC44OTZkNjQuNTEyZDM4NGhSM2QzOTguMzM2UjRkMzg3LjA3MlI1ZDY0LjUxMlI2ZDczNy4yOFI3ZC0xNzguMTc2UjhkNjcyLjc2OFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk5MVIxMmQ2NC41MTJSMTNkMzk4LjMzNlIxNGFpMWkzaTNpM2kzaTJpM2kzaTNpM2kyaTJpMmkzaTNpM2kzaTJpM2kzaTNpM2kyaGc6MjAzb1IxZDEwMjRSMmFkMzk5LjM2ZDEyOGQzOTkuMzZkODkuMDg3ZDQyNi40OTZkNjEuOTUyZDQ1My42MzJkMzQuODE2ZDQ5Mi41NDRkMzQuODE2ZDUzMS40NTZkMzQuODE2ZDU1OC41OTJkNjEuOTUyZDU4NS43MjhkODkuMDg3ZDU4NS43MjhkMTI4ZDU4NS43MjhkMTY2LjkxMmQ1NTguNTkyZDE5NC4wNDhkNTMxLjQ1NmQyMjEuMTgzZDQ5Mi41NDRkMjIxLjE4M2Q0NTMuNjMyZDIyMS4xODNkNDI2LjQ5NmQxOTQuMDQ4ZDM5OS4zNmQxNjYuOTEyZDM5OS4zNmQxMjhkMTUzLjZkMTI4ZDE1My42ZDg5LjA4N2QxODAuNzM2ZDYxLjk1MmQyMDcuODcyZDM0LjgxNmQyNDYuNzg0ZDM0LjgxNmQyODUuNjk2ZDM0LjgxNmQzMTIuODMyZDYxLjk1MmQzMzkuOTY4ZDg5LjA4N2QzMzkuOTY4ZDEyOGQzMzkuOTY4ZDE2Ni45MTJkMzEyLjgzMmQxOTQuMDQ4ZDI4NS42OTZkMjIxLjE4M2QyNDYuNzg0ZDIyMS4xODNkMjA3Ljg3MmQyMjEuMTgzZDE4MC43MzZkMTk0LjA0OGQxNTMuNmQxNjYuOTEyZDE1My42ZDEyOGQ4My45NjhkNDI3LjAwOGQ4My45NjhkMzUzLjI4ZDExNi43MzZkMzIwZDE0OS41MDRkMjg2LjcyZDIxOC4xMTJkMjg2LjcyZDU5Mi44OTZkMjg2LjcyZDY0Ni4xNDRkMjg2LjcyZDY3MC43MmQzMTAuMjcxZDY5NS4yOTZkMzMzLjgyM2Q2OTUuMjk2ZDM3Mi43MzZkNjk1LjI5NmQ0MTEuNjQ4ZDY3MC43MmQ0MzUuMTk5ZDY0Ni4xNDRkNDU4Ljc1MWQ1OTIuODk2ZDQ1OC43NTFkMzE5LjQ4OGQ0NTguNzUxZDMxOS40ODhkNTYyLjE3NWQ1MzguNjI0ZDU2Mi4xNzVkNTkxLjg3MmQ1NjIuMTc1ZDYxNi40NDhkNTg1LjcyOGQ2NDEuMDI0ZDYwOS4yOGQ2NDEuMDI0ZDY0OC4xOTJkNjQxLjAyNGQ2ODcuMTA0ZDYxNi40NDhkNzEwLjY1NmQ1OTEuODcyZDczNC4yMDhkNTM4LjYyNGQ3MzQuMjA4ZDMxOS40ODhkNzM0LjIwOGQzMTkuNDg4ZDg1MS45NjhkNjA0LjE2ZDg1MS45NjhkNjU3LjQwOGQ4NTEuOTY4ZDY4MS45ODRkODc1LjUyZDcwNi41NmQ4OTkuMDcyZDcwNi41NmQ5MzcuOTg0ZDcwNi41NmQ5NzYuODk2ZDY4MS45ODRkMTAwMC40NDhkNjU3LjQwOGQxMDI0ZDYwNC4xNmQxMDI0ZDIxOC4xMTJkMTAyNGQxNDkuNTA0ZDEwMjRkMTE2LjczNmQ5OTAuNzJkODMuOTY4ZDk1Ny40NGQ4My45NjhkODgzLjcxMmQ4My45NjhkNDI3LjAwOGhSM2Q3MzkuMzI4UjRkNzA2LjU2UjVkODMuOTY4UjZkOTg5LjE4NFI3ZDBSOGQ5MDUuMjE2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTIwM1IxMmQ4My45NjhSMTNkNzM5LjMyOFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpMmkzaTNpM2kzaTJpMmkyaTNpM2kzaTNpMmkyaTJpM2kzaTNpM2kyaTNpM2kyaGc6OTBvUjFkMTAyNFIyYWQ2MDkuMjhkODM5LjY4ZDcxNi44ZDgzOS42OGQ3MTYuOGQ5MzEuODRkNzE2LjhkMTAyNGQ2MDkuMjhkMTAyNGQxMzguMjRkMTAyNGQ3Ny44MjRkMTAyNGQ1MC4xNzZkOTkzLjc5MmQyMi41MjhkOTYzLjU4NGQyMi41MjhkOTIwLjU3NmQyMi41MjhkOTA2LjI0ZDI1LjZkODkyLjkyOGQyOC42NzJkODc5LjYxNmQzNi4zNTJkODY1Ljc5MmQ0NC4wMzJkODUxLjk2OGQ1Ni4zMmQ4MzYuMDk2ZDY4LjYwOGQ4MjAuMjIzZDg4LjA2NGQ3OTguNzJkMzgyLjk3NmQ0NzEuMDM5ZDE1My42ZDQ3MS4wMzlkOTUuMjMyZDQ3MS4wMzlkNjguMDk2ZDQ0NS45NTJkNDAuOTZkNDIwLjg2NGQ0MC45NmQzNzguODhkNDAuOTZkMzM2Ljg5NWQ2OC4wOTZkMzExLjgwOGQ5NS4yMzJkMjg2LjcyZDE1My42ZDI4Ni43MmQ1OTguMDE2ZDI4Ni43MmQ2NTQuMzM2ZDI4Ni43MmQ2NzkuOTM2ZDMxNi45MjhkNzA1LjUzNmQzNDcuMTM1ZDcwNS41MzZkMzkwLjE0NGQ3MDUuNTM2ZDQxNS43NDRkNjk1LjI5NmQ0MzcuNzZkNjg1LjA1NmQ0NTkuNzc1ZDY1OC40MzJkNDg5LjQ3MmQzNDMuMDRkODM5LjY4ZDYwOS4yOGQ4MzkuNjhoUjNkNzM5LjMyOFI0ZDcxNi44UjVkMjIuNTI4UjZkNzM3LjI4UjdkMFI4ZDcxNC43NTJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpOTBSMTJkMjIuNTI4UjEzZDczOS4zMjhSMTRhaTFpM2kzaTJpM2kzaTNpM2kzaTNpMmkyaTNpM2kzaTNpMmkzaTNpM2kzaTJpMmhnOjIwMm9SMWQxMDI0UjJhZDE4NC4zMmQxNjcuOTM2ZDE4NC4zMmQxNjEuNzkyZDE4Ny4zOTJkMTUzLjA4N2QxOTAuNDY0ZDE0NC4zODRkMTk5LjY4ZDEzMy4xMmQyMDguODk2ZDEyMS44NTZkMjI1LjI4ZDEwNS45ODRkMjQxLjY2NGQ5MC4xMTFkMjY4LjI4OGQ2OS42MzFkMjg5Ljc5MmQ1Mi4yMjNkMzA0LjEyOGQ0MS45ODNkMzE4LjQ2NGQzMS43NDRkMzI5LjIxNmQyNi4xMTFkMzM5Ljk2OGQyMC40OGQzNDkuMTg0ZDE4Ljk0M2QzNTguNGQxNy40MDhkMzY5LjY2NGQxNy40MDhkMzgwLjkyOGQxNy40MDhkMzkwLjE0NGQxOC45NDNkMzk5LjM2ZDIwLjQ4ZDQxMC4xMTJkMjYuMTExZDQyMC44NjRkMzEuNzQ0ZDQzNS4yZDQxLjk4M2Q0NDkuNTM2ZDUyLjIyM2Q0NzEuMDRkNjkuNjMxZDQ5Ny42NjRkOTAuMTExZDUxNC4wNDhkMTA1Ljk4NGQ1MzAuNDMyZDEyMS44NTZkNTM5LjY0OGQxMzMuMTJkNTQ4Ljg2NGQxNDQuMzg0ZDU1MS45MzZkMTUzLjA4N2Q1NTUuMDA4ZDE2MS43OTJkNTU1LjAwOGQxNjcuOTM2ZDU1NS4wMDhkMTg5LjQzOWQ1NDAuMTZkMjA4Ljg5NWQ1MjUuMzEyZDIyOC4zNTFkNDk3LjY2NGQyMjguMzUxZDQ4OS40NzJkMjI4LjM1MWQ0NzguNzJkMjI0Ljc2OGQ0NjcuOTY4ZDIyMS4xODNkNDUzLjYzMmQyMTEuNDU2ZDQzOS4yOTZkMjAxLjcyN2Q0MTguODE2ZDE4NS44NTZkMzk4LjMzNmQxNjkuOTg0ZDM2OS42NjRkMTQ1LjQwOGQzNDAuOTkyZDE2OS45ODRkMzIwLjUxMmQxODUuODU2ZDMwMC4wMzJkMjAxLjcyN2QyODUuNjk2ZDIxMS40NTZkMjcxLjM2ZDIyMS4xODNkMjYwLjYwOGQyMjQuNzY4ZDI0OS44NTZkMjI4LjM1MWQyNDEuNjY0ZDIyOC4zNTFkMjE0LjAxNmQyMjguMzUxZDE5OS4xNjhkMjA4Ljg5NWQxODQuMzJkMTg5LjQzOWQxODQuMzJkMTY3LjkzNmQ4My45NjhkNDI3LjAwOGQ4My45NjhkMzUzLjI4ZDExNi43MzZkMzIwZDE0OS41MDRkMjg2LjcyZDIxOC4xMTJkMjg2LjcyZDU5Mi44OTZkMjg2LjcyZDY0Ni4xNDRkMjg2LjcyZDY3MC43MmQzMTAuMjcxZDY5NS4yOTZkMzMzLjgyM2Q2OTUuMjk2ZDM3Mi43MzZkNjk1LjI5NmQ0MTEuNjQ4ZDY3MC43MmQ0MzUuMTk5ZDY0Ni4xNDRkNDU4Ljc1MWQ1OTIuODk2ZDQ1OC43NTFkMzE5LjQ4OGQ0NTguNzUxZDMxOS40ODhkNTYyLjE3NWQ1MzguNjI0ZDU2Mi4xNzVkNTkxLjg3MmQ1NjIuMTc1ZDYxNi40NDhkNTg1LjcyOGQ2NDEuMDI0ZDYwOS4yOGQ2NDEuMDI0ZDY0OC4xOTJkNjQxLjAyNGQ2ODcuMTA0ZDYxNi40NDhkNzEwLjY1NmQ1OTEuODcyZDczNC4yMDhkNTM4LjYyNGQ3MzQuMjA4ZDMxOS40ODhkNzM0LjIwOGQzMTkuNDg4ZDg1MS45NjhkNjA0LjE2ZDg1MS45NjhkNjU3LjQwOGQ4NTEuOTY4ZDY4MS45ODRkODc1LjUyZDcwNi41NmQ4OTkuMDcyZDcwNi41NmQ5MzcuOTg0ZDcwNi41NmQ5NzYuODk2ZDY4MS45ODRkMTAwMC40NDhkNjU3LjQwOGQxMDI0ZDYwNC4xNmQxMDI0ZDIxOC4xMTJkMTAyNGQxNDkuNTA0ZDEwMjRkMTE2LjczNmQ5OTAuNzJkODMuOTY4ZDk1Ny40NGQ4My45NjhkODgzLjcxMmQ4My45NjhkNDI3LjAwOGhSM2Q3MzkuMzI4UjRkNzA2LjU2UjVkODMuOTY4UjZkMTAwNi41OTJSN2QwUjhkOTIyLjYyNFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMDJSMTJkODMuOTY4UjEzZDczOS4zMjhSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kyaTNpM2kzaTNpMmkyaTJpM2kzaTNpM2kyaTJpMmkzaTNpM2kzaTJpM2kzaTJoZzo4OW9SMWQxMDI0UjJhZDQzNi4yMjRkMzQ1LjA4N2Q0NTMuNjMyZDMwOS4yNDdkNDgxLjc5MmQyOTEuMzI4ZDUwOS45NTJkMjczLjQwOGQ1NDUuNzkyZDI3My40MDhkNTcwLjM2OGQyNzMuNDA4ZDU5MC44NDhkMjgyLjYyNGQ2MTEuMzI4ZDI5MS44NGQ2MjYuMTc2ZDMwNy4xOTlkNjQxLjAyNGQzMjIuNTU5ZDY0OS43MjhkMzQzLjAzOWQ2NTguNDMyZDM2My41MmQ2NTguNDMyZDM4NS4wMjRkNjU4LjQzMmQ0MDMuNDU2ZDY1MC43NTJkNDIxLjg4OGQ2NDMuMDcyZDQ0MC4zMTlkNjI4LjczNmQ0NjUuOTE5ZDQ1OC43NTJkNzU5LjgwOGQ0NTguNzUyZDkxMC4zMzZkNDU4Ljc1MmQ5NjkuNzI4ZDQyNy41MmQxMDAzLjUyZDM5Ni4yODhkMTAzNy4zMTFkMzQwLjk5MmQxMDM3LjMxMWQyODUuNjk2ZDEwMzcuMzExZDI1NC40NjRkMTAwMy41MmQyMjMuMjMyZDk2OS43MjhkMjIzLjIzMmQ5MTAuMzM2ZDIyMy4yMzJkNzU5LjgwOGQ1My4yNDhkNDY1LjkxOWQzOC45MTJkNDQwLjMxOWQzMS4yMzJkNDIxLjg4OGQyMy41NTJkNDAzLjQ1NmQyMy41NTJkMzg1LjAyNGQyMy41NTJkMzYzLjUyZDMyLjI1NmQzNDMuMDM5ZDQwLjk2ZDMyMi41NTlkNTUuODA4ZDMwNy4xOTlkNzAuNjU2ZDI5MS44NGQ5MS4xMzZkMjgyLjYyNGQxMTEuNjE2ZDI3My40MDhkMTM2LjE5MmQyNzMuNDA4ZDE3Mi4wMzJkMjczLjQwOGQyMDAuMTkyZDI5MS4zMjhkMjI4LjM1MmQzMDkuMjQ3ZDI0NS43NmQzNDUuMDg3ZDM0MC45OTJkNTQyLjcyZDQzNi4yMjRkMzQ1LjA4N2hSM2Q2ODEuOTg0UjRkNjU4LjQzMlI1ZDIzLjU1MlI2ZDc1MC41OTJSN2QtMTMuMzEyUjhkNzI3LjA0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTg5UjEyZDIzLjU1MlIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kyaTJpM2kzaTNpM2kyaTJpM2kzaTNpM2kzaTNpM2kzaTJpMmhnOjIwMW9SMWQxMDI0UjJhZDM5OC4zMzZkNTAuMTc1ZDQyMy45MzZkMjcuNjQ4ZDQzNy4yNDhkMjIuMDE1ZDQ1MC41NmQxNi4zODRkNDY1LjkyZDE2LjM4NGQ0NzYuMTZkMTYuMzg0ZDQ4Ny45MzZkMjAuOTkxZDQ5OS43MTJkMjUuNmQ1MDguOTI4ZDM0LjMwM2Q1MTguMTQ0ZDQzLjAwN2Q1MjQuMjg4ZDU0LjI3MWQ1MzAuNDMyZDY1LjUzNWQ1MzAuNDMyZDc4Ljg0N2Q1MzAuNDMyZDEwOS41NjdkNTAxLjc2ZDEzMy4xMmQ0MTYuNzY4ZDIwNS44MjNkNDAzLjQ1NmQyMTcuMDg3ZDM5NC4yNGQyMjMuNzQ0ZDM4NS4wMjRkMjMwLjM5OWQzNzcuMzQ0ZDIzMy45ODRkMzY5LjY2NGQyMzcuNTY3ZDM2My4wMDhkMjM4LjU5MWQzNTYuMzUyZDIzOS42MTZkMzQ5LjE4NGQyMzkuNjE2ZDMzNy45MmQyMzkuNjE2ZDMyNi42NTZkMjM1LjAwOGQzMTUuMzkyZDIzMC4zOTlkMzA2LjE3NmQyMjEuNjk2ZDI5Ni45NmQyMTIuOTkxZDI5MC44MTZkMjAxLjcyN2QyODQuNjcyZDE5MC40NjNkMjg0LjY3MmQxNzcuMTUxZDI4NC42NzJkMTQ2LjQzMmQzMTMuMzQ0ZDEyMi44OGQzOTguMzM2ZDUwLjE3NWQ4My45NjhkNDI3LjAwOGQ4My45NjhkMzUzLjI4ZDExNi43MzZkMzIwZDE0OS41MDRkMjg2LjcyZDIxOC4xMTJkMjg2LjcyZDU5Mi44OTZkMjg2LjcyZDY0Ni4xNDRkMjg2LjcyZDY3MC43MmQzMTAuMjcxZDY5NS4yOTZkMzMzLjgyM2Q2OTUuMjk2ZDM3Mi43MzZkNjk1LjI5NmQ0MTEuNjQ4ZDY3MC43MmQ0MzUuMTk5ZDY0Ni4xNDRkNDU4Ljc1MWQ1OTIuODk2ZDQ1OC43NTFkMzE5LjQ4OGQ0NTguNzUxZDMxOS40ODhkNTYyLjE3NWQ1MzguNjI0ZDU2Mi4xNzVkNTkxLjg3MmQ1NjIuMTc1ZDYxNi40NDhkNTg1LjcyOGQ2NDEuMDI0ZDYwOS4yOGQ2NDEuMDI0ZDY0OC4xOTJkNjQxLjAyNGQ2ODcuMTA0ZDYxNi40NDhkNzEwLjY1NmQ1OTEuODcyZDczNC4yMDhkNTM4LjYyNGQ3MzQuMjA4ZDMxOS40ODhkNzM0LjIwOGQzMTkuNDg4ZDg1MS45NjhkNjA0LjE2ZDg1MS45NjhkNjU3LjQwOGQ4NTEuOTY4ZDY4MS45ODRkODc1LjUyZDcwNi41NmQ4OTkuMDcyZDcwNi41NmQ5MzcuOTg0ZDcwNi41NmQ5NzYuODk2ZDY4MS45ODRkMTAwMC40NDhkNjU3LjQwOGQxMDI0ZDYwNC4xNmQxMDI0ZDIxOC4xMTJkMTAyNGQxNDkuNTA0ZDEwMjRkMTE2LjczNmQ5OTAuNzJkODMuOTY4ZDk1Ny40NGQ4My45NjhkODgzLjcxMmQ4My45NjhkNDI3LjAwOGhSM2Q3MzkuMzI4UjRkNzA2LjU2UjVkODMuOTY4UjZkMTAwNy42MTZSN2QwUjhkOTIzLjY0OFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMDFSMTJkODMuOTY4UjEzZDczOS4zMjhSMTRhaTFpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTJpMWkzaTNpMmkzaTNpM2kzaTJpMmkyaTNpM2kzaTNpMmkyaTJpM2kzaTNpM2kyaTNpM2kyaGc6ODhvUjFkMTAyNFIyYWQ1NS4yOTZkNDQ0LjQxNWQ0NC4wMzJkNDI3LjAwOGQzOC45MTJkNDExLjY0OGQzMy43OTJkMzk2LjI4OGQzMy43OTJkMzgwLjkyOGQzMy43OTJkMzU2LjM1MmQ0My4wMDhkMzM2LjM4NGQ1Mi4yMjRkMzE2LjQxNWQ2Ny4wNzJkMzAyLjU5MmQ4MS45MmQyODguNzY4ZDEwMS4zNzZkMjgxLjA4N2QxMjAuODMyZDI3My40MDhkMTQyLjMzNmQyNzMuNDA4ZDE2OC45NmQyNzMuNDA4ZDE5Ni4wOTZkMjg2LjIwN2QyMjMuMjMyZDI5OS4wMDhkMjM3LjU2OGQzMjUuNjMxZDMyMi41NmQ0ODAuMjU2ZDQwNy41NTJkMzI1LjYzMWQ0MjEuODg4ZDI5OS4wMDhkNDQ5LjAyNGQyODYuMjA3ZDQ3Ni4xNmQyNzMuNDA4ZDUwMi43ODRkMjczLjQwOGQ1MjQuMjg4ZDI3My40MDhkNTQzLjc0NGQyODEuMDg3ZDU2My4yZDI4OC43NjhkNTc4LjA0OGQzMDIuNTkyZDU5Mi44OTZkMzE2LjQxNWQ2MDIuMTEyZDMzNi4zODRkNjExLjMyOGQzNTYuMzUyZDYxMS4zMjhkMzgwLjkyOGQ2MTEuMzI4ZDM5Ni4yODhkNjA2LjIwOGQ0MTEuNjQ4ZDYwMS4wODhkNDI3LjAwOGQ1ODkuODI0ZDQ0NC40MTVkNDU4Ljc1MmQ2NDMuMDcyZDYwMi4xMTJkODYyLjIwOGQ2MTMuMzc2ZDg3OS42MTZkNjIxLjU2OGQ4OTYuNTEyZDYyOS43NmQ5MTMuNDA4ZDYyOS43NmQ5MzIuODY0ZDYyOS43NmQ5NjEuNTM2ZDYxNy45ODRkOTgxLjUwNGQ2MDYuMjA4ZDEwMDEuNDcyZDU4OS4zMTJkMTAxMy43NmQ1NzIuNDE2ZDEwMjYuMDQ4ZDU1Mi40NDhkMTAzMS42OGQ1MzIuNDhkMTAzNy4zMTFkNTE2LjA5NmQxMDM3LjMxMWQ0ODMuMzI4ZDEwMzcuMzExZDQ1Ni43MDRkMTAyMC40MTZkNDMwLjA4ZDEwMDMuNTJkNDEyLjY3MmQ5NzIuOGQzMjIuNTZkODEzLjA1NmQyMzIuNDQ4ZDk3Mi44ZDIxNS4wNGQxMDAzLjUyZDE4OC40MTZkMTAyMC40MTZkMTYxLjc5MmQxMDM3LjMxMWQxMjkuMDI0ZDEwMzcuMzExZDExMi42NGQxMDM3LjMxMWQ5Mi42NzJkMTAzMS42OGQ3Mi43MDRkMTAyNi4wNDhkNTUuODA4ZDEwMTMuNzZkMzguOTEyZDEwMDEuNDcyZDI3LjEzNmQ5ODEuNTA0ZDE1LjM2ZDk2MS41MzZkMTUuMzZkOTMyLjg2NGQxNS4zNmQ5MTMuNDA4ZDIzLjU1MmQ4OTYuNTEyZDMxLjc0NGQ4NzkuNjE2ZDQzLjAwOGQ4NjIuMjA4ZDE4Ni4zNjhkNjQzLjA3MmQ1NS4yOTZkNDQ0LjQxNWhSM2Q2NDUuMTJSNGQ2MjkuNzZSNWQxNS4zNlI2ZDc1MC41OTJSN2QtMTMuMzEyUjhkNzM1LjIzMlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk4OFIxMmQxNS4zNlIxM2Q2NDUuMTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTJpMmkzaTNpM2kzaTNpM2kzaTNpMmkyaTNpM2kzaTNpM2kzaTNpM2kyaTJpM2kzaTNpM2kzaTNpM2kzaTJpMmhnOjIwMG9SMWQxMDI0UjJhZDIzNy41NjhkMTMzLjEyZDIwOC44OTZkMTA5LjU2N2QyMDguODk2ZDc4Ljg0N2QyMDguODk2ZDY1LjUzNWQyMTUuMDRkNTQuMjcxZDIyMS4xODRkNDMuMDA3ZDIzMC40ZDM0LjMwM2QyMzkuNjE2ZDI1LjZkMjUwLjg4ZDIwLjk5MWQyNjIuMTQ0ZDE2LjM4NGQyNzMuNDA4ZDE2LjM4NGQyODAuNTc2ZDE2LjM4NGQyODcuMjMyZDE3LjQwOGQyOTMuODg4ZDE4LjQzMmQzMDEuNTY4ZDIyLjAxNWQzMDkuMjQ4ZDI1LjZkMzE4LjQ2NGQzMi4yNTVkMzI3LjY4ZDM4LjkxMmQzNDAuOTkyZDUwLjE3NWQ0MjUuOTg0ZDEyMi44OGQ0NTQuNjU2ZDE0Ni40MzJkNDU0LjY1NmQxNzcuMTUxZDQ1NC42NTZkMTkwLjQ2M2Q0NDguNTEyZDIwMS43MjdkNDQyLjM2OGQyMTIuOTkxZDQzMy4xNTJkMjIxLjY5NmQ0MjMuOTM2ZDIzMC4zOTlkNDEyLjE2ZDIzNS4wMDhkNDAwLjM4NGQyMzkuNjE2ZDM5MC4xNDRkMjM5LjYxNmQzNzQuNzg0ZDIzOS42MTZkMzYxLjQ3MmQyMzMuOTg0ZDM0OC4xNmQyMjguMzUxZDMyMi41NmQyMDUuODIzZDIzNy41NjhkMTMzLjEyZDgzLjk2OGQ0MjcuMDA4ZDgzLjk2OGQzNTMuMjhkMTE2LjczNmQzMjBkMTQ5LjUwNGQyODYuNzJkMjE4LjExMmQyODYuNzJkNTkyLjg5NmQyODYuNzJkNjQ2LjE0NGQyODYuNzJkNjcwLjcyZDMxMC4yNzFkNjk1LjI5NmQzMzMuODIzZDY5NS4yOTZkMzcyLjczNmQ2OTUuMjk2ZDQxMS42NDhkNjcwLjcyZDQzNS4xOTlkNjQ2LjE0NGQ0NTguNzUxZDU5Mi44OTZkNDU4Ljc1MWQzMTkuNDg4ZDQ1OC43NTFkMzE5LjQ4OGQ1NjIuMTc1ZDUzOC42MjRkNTYyLjE3NWQ1OTEuODcyZDU2Mi4xNzVkNjE2LjQ0OGQ1ODUuNzI4ZDY0MS4wMjRkNjA5LjI4ZDY0MS4wMjRkNjQ4LjE5MmQ2NDEuMDI0ZDY4Ny4xMDRkNjE2LjQ0OGQ3MTAuNjU2ZDU5MS44NzJkNzM0LjIwOGQ1MzguNjI0ZDczNC4yMDhkMzE5LjQ4OGQ3MzQuMjA4ZDMxOS40ODhkODUxLjk2OGQ2MDQuMTZkODUxLjk2OGQ2NTcuNDA4ZDg1MS45NjhkNjgxLjk4NGQ4NzUuNTJkNzA2LjU2ZDg5OS4wNzJkNzA2LjU2ZDkzNy45ODRkNzA2LjU2ZDk3Ni44OTZkNjgxLjk4NGQxMDAwLjQ0OGQ2NTcuNDA4ZDEwMjRkNjA0LjE2ZDEwMjRkMjE4LjExMmQxMDI0ZDE0OS41MDRkMTAyNGQxMTYuNzM2ZDk5MC43MmQ4My45NjhkOTU3LjQ0ZDgzLjk2OGQ4ODMuNzEyZDgzLjk2OGQ0MjcuMDA4aFIzZDczOS4zMjhSNGQ3MDYuNTZSNWQ4My45NjhSNmQxMDA3LjYxNlI3ZDBSOGQ5MjMuNjQ4UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTIwMFIxMmQ4My45NjhSMTNkNzM5LjMyOFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpMmkxaTNpM2kyaTNpM2kzaTNpMmkyaTJpM2kzaTNpM2kyaTJpMmkzaTNpM2kzaTJpM2kzaTJoZzo4N29SMWQxMDI0UjJhZDc0Mi40ZDM2Ny42MTZkNzUwLjU5MmQzMTQuMzY3ZDc4MS44MjRkMjkzLjg4OGQ4MTMuMDU2ZDI3My40MDhkODU0LjAxNmQyNzMuNDA4ZDkwMS4xMmQyNzMuNDA4ZDkzMC44MTZkMzAyLjA4ZDk2MC41MTJkMzMwLjc1MWQ5NjAuNTEyZDM3NS44MDhkOTYwLjUxMmQzOTkuMzZkOTUzLjM0NGQ0MzMuNjY0ZDk0Ni4xNzZkNDY3Ljk2N2Q5MzQuOTEyZDUxMmQ4MzEuNDg4ZDkzMS44NGQ4MTkuMmQ5ODIuMDE2ZDc5MC4wMTZkMTAwOS42NjRkNzYwLjgzMmQxMDM3LjMxMWQ3MDguNjA4ZDEwMzcuMzExZDY3Mi43NjhkMTAzNy4zMTFkNjIwLjU0NGQxMDM3LjMxMWQ1OTQuNDMyZDEwMTAuMTc2ZDU2OC4zMmQ5ODMuMDRkNTU4LjA4ZDkyOC43NjhkNDkzLjU2OGQ1ODYuNzUyZDQ5MS41MmQ1ODYuNzUyZDQyNy4wMDhkOTI4Ljc2OGQ0MTYuNzY4ZDk4My4wNGQzOTAuNjU2ZDEwMTAuMTc2ZDM2NC41NDRkMTAzNy4zMTFkMzEyLjMyZDEwMzcuMzExZDI3Ni40OGQxMDM3LjMxMWQyMjQuMjU2ZDEwMzcuMzExZDE5NS4wNzJkMTAwOS42NjRkMTY1Ljg4OGQ5ODIuMDE2ZDE1My42ZDkzMS44NGQ1MC4xNzZkNTEyZDM4LjkxMmQ0NjcuOTY3ZDMxLjc0NGQ0MzMuNjY0ZDI0LjU3NmQzOTkuMzZkMjQuNTc2ZDM3NS44MDhkMjQuNTc2ZDMzMC43NTFkNTQuMjcyZDMwMi4wOGQ4My45NjhkMjczLjQwOGQxMzEuMDcyZDI3My40MDhkMTcyLjAzMmQyNzMuNDA4ZDIwMy4yNjRkMjkzLjg4OGQyMzQuNDk2ZDMxNC4zNjdkMjQyLjY4OGQzNjcuNjE2ZDMwNy4yZDc2OS4wMjRkMzA5LjI0OGQ3NjkuMDI0ZDM3My43NmQzODcuMDcyZDM3OC44OGQzNTYuMzUyZDM4Ni41NmQzMzQuODQ3ZDM5NC4yNGQzMTMuMzQzZDQwNy41NTJkMjk5LjUyZDQyMC44NjRkMjg1LjY5NmQ0NDEuMzQ0ZDI3OS41NTJkNDYxLjgyNGQyNzMuNDA4ZDQ5Mi41NDRkMjczLjQwOGQ1MjMuMjY0ZDI3My40MDhkNTQzLjc0NGQyNzkuNTUyZDU2NC4yMjRkMjg1LjY5NmQ1NzcuNTM2ZDI5OS41MmQ1OTAuODQ4ZDMxMy4zNDNkNTk4LjUyOGQzMzQuODQ3ZDYwNi4yMDhkMzU2LjM1MmQ2MTEuMzI4ZDM4Ny4wNzJkNjc1Ljg0ZDc2OS4wMjRkNjc3Ljg4OGQ3NjkuMDI0ZDc0Mi40ZDM2Ny42MTZoUjNkOTg1LjA4OFI0ZDk2MC41MTJSNWQyNC41NzZSNmQ3NTAuNTkyUjdkLTEzLjMxMlI4ZDcyNi4wMTZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpODdSMTJkMjQuNTc2UjEzZDk4NS4wODhSMTRhaTFpM2kzaTNpM2kzaTNpMmkzaTNpMmkzaTNpMmkyaTJpM2kzaTJpM2kzaTJpM2kzaTNpM2kzaTNpMmkyaTJpM2kzaTNpM2kzaTNpM2kzaTJpMmkyaGc6MTk5b1IxZDEwMjRSMmFkNDUuMDU2ZDY1NS4zNmQ0NS4wNTZkNTU5LjEwNGQ3Ny4zMTJkNDg2LjRkMTA5LjU2OGQ0MTMuNjk2ZDE2Mi4zMDRkMzY1LjU2OGQyMTUuMDRkMzE3LjQzOWQyODMuNjQ4ZDI5My4zNzZkMzUyLjI1NmQyNjkuMzEyZDQyNS45ODRkMjY5LjMxMmQ0OTEuNTJkMjY5LjMxMmQ1NDcuMzI4ZDI4Ni43MmQ2MDMuMTM2ZDMwNC4xMjdkNjQ0LjA5NmQzMzMuMzEyZDY4NS4wNTZkMzYyLjQ5NmQ3MDguMDk2ZDM5OS44NzFkNzMxLjEzNmQ0MzcuMjQ3ZDczMS4xMzZkNDc3LjE4M2Q3MzEuMTM2ZDUyMS4yMTZkNzAwLjQxNmQ1NDkuODg3ZDY2OS42OTZkNTc4LjU2ZDYxOS41MmQ1NzguNTZkNjAzLjEzNmQ1NzguNTZkNTkxLjM2ZDU3Ni41MTJkNTc5LjU4NGQ1NzQuNDY0ZDU2OS44NTZkNTY3LjgwOGQ1NjAuMTI4ZDU2MS4xNTJkNTUwLjkxMmQ1NDguODY0ZDU0MS42OTZkNTM2LjU3NmQ1MjkuNDA4ZDUxNy4xMmQ1MDUuODU2ZDQ3OS4yMzJkNDc5LjIzMmQ0NjYuNDMyZDQ1Mi42MDhkNDUzLjYzMWQ0MTMuNjk2ZDQ1My42MzFkMzg2LjA0OGQ0NTMuNjMxZDM2MS45ODRkNDY2Ljk0M2QzMzcuOTJkNDgwLjI1NmQzMTkuNDg4ZDUwNS44NTZkMzAxLjA1NmQ1MzEuNDU2ZDI5MC44MTZkNTY4LjgzMmQyODAuNTc2ZDYwNi4yMDhkMjgwLjU3NmQ2NTUuMzZkMjgwLjU3NmQ3NDUuNDcyZDMxNi40MTZkODAxLjI4ZDM1Mi4yNTZkODU3LjA4OGQ0MjUuOTg0ZDg1Ny4wODhkNDQyLjM2OGQ4NTcuMDg4ZDQ1NS4xNjhkODU0LjAxNmQ0NjcuOTY4ZDg1MC45NDRkNDgwLjI1NmQ4NDIuNzUyZDQ5Mi41NDRkODM0LjU2ZDUwNi4zNjhkODE5LjJkNTIwLjE5MmQ4MDMuODRkNTM3LjZkNzc5LjI2NGQ1NzIuNDE2ZDczMC4xMTJkNjIzLjYxNmQ3MzAuMTEyZDY2OS42OTZkNzMwLjExMmQ3MDEuNDRkNzU4Ljc4NGQ3MzMuMTg0ZDc4Ny40NTZkNzMzLjE4NGQ4MzMuNTM2ZDczMy4xODRkODgxLjY2NGQ3MDMuNDg4ZDkyMC41NzZkNjczLjc5MmQ5NTkuNDg4ZDYyOC43MzZkOTg2LjExMmQ1ODMuNjhkMTAxMi43MzZkNTI5LjQwOGQxMDI3LjA3MWQ0NzUuMTM2ZDEwNDEuNDA3ZDQyNS45ODRkMTA0MS40MDdkNDE1Ljc0NGQxMDQxLjQwN2Q0MDcuNTUyZDEwNDkuNmQ0MDIuNDMyZDEwNTcuNzkyZDM5Ny4zMTJkMTA2NS45ODRkMzkyLjE5MmQxMDc0LjE3NmQ0MDEuNDA4ZDEwNzMuMTUyZDQxMS4xMzZkMTA3Mi4xMjhkNDIwLjg2NGQxMDcxLjEwNGQ0MzIuMTI4ZDEwNzEuMTA0ZDQ2NS45MmQxMDcxLjEwNGQ0OTMuMDU2ZDEwODkuMDI0ZDUyMC4xOTJkMTEwNi45NDRkNTIwLjE5MmQxMTQ3LjkwNGQ1MjAuMTkyZDExNjYuMzM2ZDUxMy4wMjRkMTE4My43NDRkNTA1Ljg1NmQxMjAxLjE1MmQ0ODcuOTM2ZDEyMTQuNDY0ZDQ3MC4wMTZkMTIyNy43NzZkNDQwLjgzMmQxMjM1Ljk2OGQ0MTEuNjQ4ZDEyNDQuMTZkMzY4LjY0ZDEyNDQuMTZkMzExLjI5NmQxMjQ0LjE2ZDI5MC44MTZkMTIzMS44NzJkMjcwLjMzNmQxMjE5LjU4NGQyNzAuMzM2ZDEyMDIuMTc2ZDI3MC4zMzZkMTE4Ny44NGQyNzYuNDhkMTE4MC4xNmQyODIuNjI0ZDExNzIuNDhkMjk3Ljk4NGQxMTcyLjQ4ZDMxMi4zMmQxMTcyLjQ4ZDMyNi42NTZkMTE3Ny42ZDM0MC45OTJkMTE4Mi43MmQzNjQuNTQ0ZDExODIuNzJkMzc4Ljg4ZDExODIuNzJkMzg4LjA5NmQxMTc1LjA0ZDM5Ny4zMTJkMTE2Ny4zNmQzOTcuMzEyZDExNTMuMDI0ZDM5Ny4zMTJkMTE0Mi43ODRkMzkxLjE2OGQxMTM1LjEwNGQzODUuMDI0ZDExMjcuNDI0ZDM3My43NmQxMTI3LjQyNGQzNDMuMDRkMTEyNy40MjRkMzE0LjM2OGQxMTI3LjQyNGQzMTQuMzY4ZDExMDQuODk2ZDMxNC4zNjhkMTA5OS43NzZkMzE1LjM5MmQxMDk0LjY1NmQzMTYuNDE2ZDEwODkuNTM2ZDMyMC41MTJkMTA4MS44NTZkMzI0LjYwOGQxMDc0LjE3NmQzMzIuMjg4ZDEwNjMuNDI0ZDMzOS45NjhkMTA1Mi42NzJkMzU0LjMwNGQxMDM1LjI2M2QyOTAuODE2ZDEwMjYuMDQ4ZDIzNS4wMDhkOTk4LjRkMTc5LjJkOTcwLjc1MmQxMzYuNzA0ZDkyNC4xNmQ5NC4yMDhkODc3LjU2OGQ2OS42MzJkODEwLjQ5NmQ0NS4wNTZkNzQzLjQyNGQ0NS4wNTZkNjU1LjM2aFIzZDc1OC43ODRSNGQ3MzMuMTg0UjVkNDUuMDU2UjZkNzU0LjY4OFI3ZC0yMjAuMTZSOGQ3MDkuNjMyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE5OVIxMmQ0NS4wNTZSMTNkNzU4Ljc4NFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaGc6ODZvUjFkMTAyNFIyYWQ0ODEuMjhkMzU0LjMwNGQ0ODcuNDI0ZDMzMS43NzVkNDk5LjJkMzE2LjQxNWQ1MTAuOTc2ZDMwMS4wNTZkNTI2LjMzNmQyOTEuMzI4ZDU0MS42OTZkMjgxLjZkNTU4LjU5MmQyNzcuNTA0ZDU3NS40ODhkMjczLjQwOGQ1OTEuODcyZDI3My40MDhkNjEzLjM3NmQyNzMuNDA4ZDYzMy44NTZkMjgwLjU3NmQ2NTQuMzM2ZDI4Ny43NDRkNjY5LjY5NmQzMDEuMDU2ZDY4NS4wNTZkMzE0LjM2N2Q2OTQuMjcyZDMzMi43OTlkNzAzLjQ4OGQzNTEuMjMyZDcwMy40ODhkMzcyLjczNmQ3MDMuNDg4ZDM5Mi4xOTJkNjk5LjkwNGQ0MDguMDYzZDY5Ni4zMmQ0MjMuOTM2ZDY4OC4xMjhkNDQ5LjUzNWQ1MTcuMTJkOTQyLjA4ZDUwNi44OGQ5NzIuOGQ0OTQuMDhkOTkxLjIzMmQ0ODEuMjhkMTAwOS42NjRkNDYzLjg3MmQxMDE5LjkwNGQ0NDYuNDY0ZDEwMzAuMTQ0ZDQyMy40MjRkMTAzMy43MjhkNDAwLjM4NGQxMDM3LjMxMWQzNjkuNjY0ZDEwMzcuMzExZDMzOC45NDRkMTAzNy4zMTFkMzE1LjkwNGQxMDMzLjcyOGQyOTIuODY0ZDEwMzAuMTQ0ZDI3NS40NTZkMTAxOS45MDRkMjU4LjA0OGQxMDA5LjY2NGQyNDUuMjQ4ZDk5MS4yMzJkMjMyLjQ0OGQ5NzIuOGQyMjIuMjA4ZDk0Mi4wOGQ1MS4yZDQ0OS41MzVkNDMuMDA4ZDQyMy45MzZkMzkuNDI0ZDQwOC4wNjNkMzUuODRkMzkyLjE5MmQzNS44NGQzNzIuNzM2ZDM1Ljg0ZDM1MS4yMzJkNDUuMDU2ZDMzMi43OTlkNTQuMjcyZDMxNC4zNjdkNjkuNjMyZDMwMS4wNTZkODQuOTkyZDI4Ny43NDRkMTA1LjQ3MmQyODAuNTc2ZDEyNS45NTJkMjczLjQwOGQxNDcuNDU2ZDI3My40MDhkMTYzLjg0ZDI3My40MDhkMTgwLjczNmQyNzcuNTA0ZDE5Ny42MzJkMjgxLjZkMjEyLjk5MmQyOTEuMzI4ZDIyOC4zNTJkMzAxLjA1NmQyNDAuMTI4ZDMxNi40MTVkMjUxLjkwNGQzMzEuNzc1ZDI1OC4wNDhkMzU0LjMwNGQzNjguNjRkNzc4LjI0ZDM3MC42ODhkNzc4LjI0ZDQ4MS4yOGQzNTQuMzA0aFIzZDczOS4zMjhSNGQ3MDMuNDg4UjVkMzUuODRSNmQ3NTAuNTkyUjdkLTEzLjMxMlI4ZDcxNC43NTJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpODZSMTJkMzUuODRSMTNkNzM5LjMyOFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTJpMmhnOjE5OG9SMWQxMDI0UjJhZDQzOC4yNzJkNDU4Ljc1MWQzNzYuODMyZDQ1OC43NTFkMjg3Ljc0NGQ3NjYuOTc2ZDQzOC4yNzJkNzY2Ljk3NmQ0MzguMjcyZDQ1OC43NTFkMjQzLjcxMmQ5MjAuNTc2ZDIyNS4yOGQ5ODUuMDg4ZDE5OS42OGQxMDExLjJkMTc0LjA4ZDEwMzcuMzExZDEyNC45MjhkMTAzNy4zMTFkNzguODQ4ZDEwMzcuMzExZDQ4LjY0ZDEwMTEuNzEyZDE4LjQzMmQ5ODYuMTEyZDE4LjQzMmQ5MzYuOTZkMTguNDMyZDkyNS42OTZkMjAuOTkyZDkxMS44NzJkMjMuNTUyZDg5OC4wNDhkMjguNjcyZDg3OC4wNzlkMzMuNzkyZDg1OC4xMTJkNDIuNDk2ZDgzMC45NzZkNTEuMmQ4MDMuODRkNjMuNDg4ZDc2NS45NTJkMTgyLjI3MmQzOTIuMTkyZDE5MS40ODhkMzYxLjQ3MmQyMDEuNzI4ZDM0MS41MDRkMjExLjk2OGQzMjEuNTM1ZDIyNC43NjhkMzA5LjI0N2QyMzcuNTY4ZDI5Ni45NmQyNTQuNDY0ZDI5MS44NGQyNzEuMzZkMjg2LjcyZDI5NS45MzZkMjg2LjcyZDg2OS4zNzZkMjg2LjcyZDkyMi42MjRkMjg2LjcyZDk0Ny4yZDMxMC4yNzFkOTcxLjc3NmQzMzMuODIzZDk3MS43NzZkMzcyLjczNmQ5NzEuNzc2ZDQxMS42NDhkOTQ3LjJkNDM1LjE5OWQ5MjIuNjI0ZDQ1OC43NTFkODY5LjM3NmQ0NTguNzUxZDY2Ny42NDhkNDU4Ljc1MWQ2NjcuNjQ4ZDU2Mi4xNzVkODM3LjYzMmQ1NjIuMTc1ZDg5MC44OGQ1NjIuMTc1ZDkxNS40NTZkNTg1LjcyOGQ5NDAuMDMyZDYwOS4yOGQ5NDAuMDMyZDY0OC4xOTJkOTQwLjAzMmQ2ODcuMTA0ZDkxNS40NTZkNzEwLjY1NmQ4OTAuODhkNzM0LjIwOGQ4MzcuNjMyZDczNC4yMDhkNjY3LjY0OGQ3MzQuMjA4ZDY2Ny42NDhkODUxLjk2OGQ4NjkuMzc2ZDg1MS45NjhkOTIyLjYyNGQ4NTEuOTY4ZDk0Ny4yZDg3NS41MmQ5NzEuNzc2ZDg5OS4wNzJkOTcxLjc3NmQ5MzcuOTg0ZDk3MS43NzZkOTc2Ljg5NmQ5NDcuMmQxMDAwLjQ0OGQ5MjIuNjI0ZDEwMjRkODY5LjM3NmQxMDI0ZDUzNy42ZDEwMjRkNTA5Ljk1MmQxMDI0ZDQ5MS4wMDhkMTAxNS44MDhkNDcyLjA2NGQxMDA3LjYxNmQ0NjAuOGQ5OTMuNzkyZDQ0OS41MzZkOTc5Ljk2OGQ0NDQuOTI4ZDk2MS4wMjRkNDQwLjMyZDk0Mi4wOGQ0MzkuMjk2ZDkyMC41NzZkMjQzLjcxMmQ5MjAuNTc2aFIzZDEwMDQuNTQ0UjRkOTcxLjc3NlI1ZDE4LjQzMlI2ZDczNy4yOFI3ZC0xMy4zMTJSOGQ3MTguODQ4UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE5OFIxMmQxOC40MzJSMTNkMTAwNC41NDRSMTRhaTFpMmkyaTJpMmkxaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTJpMmkyaTNpM2kzaTNpMmkyaTJpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjg1b1IxZDEwMjRSMmFkNTQ0Ljc2OGQ0MDAuMzg0ZDU0NC43NjhkMzQwLjk5MWQ1NzZkMzA3LjE5OWQ2MDcuMjMyZDI3My40MDhkNjYyLjUyOGQyNzMuNDA4ZDcxNy44MjRkMjczLjQwOGQ3NDkuMDU2ZDMwNy4xOTlkNzgwLjI4OGQzNDAuOTkxZDc4MC4yODhkNDAwLjM4NGQ3ODAuMjg4ZDczOC4zMDRkNzgwLjI4OGQ4MjIuMjcxZDc1My42NjRkODgwLjEyN2Q3MjcuMDRkOTM3Ljk4NGQ2NzkuNDI0ZDk3My44MjRkNjMxLjgwOGQxMDA5LjY2NGQ1NjYuNzg0ZDEwMjUuNTM2ZDUwMS43NmQxMDQxLjQwN2Q0MjUuOTg0ZDEwNDEuNDA3ZDM1MC4yMDhkMTA0MS40MDdkMjg1LjE4NGQxMDI1LjUzNmQyMjAuMTZkMTAwOS42NjRkMTcyLjU0NGQ5NzMuODI0ZDEyNC45MjhkOTM3Ljk4NGQ5OC4zMDRkODgwLjEyN2Q3MS42OGQ4MjIuMjcxZDcxLjY4ZDczOC4zMDRkNzEuNjhkNDAwLjM4NGQ3MS42OGQzNDAuOTkxZDEwMi45MTJkMzA3LjE5OWQxMzQuMTQ0ZDI3My40MDhkMTg5LjQ0ZDI3My40MDhkMjQ0LjczNmQyNzMuNDA4ZDI3NS45NjhkMzA3LjE5OWQzMDcuMmQzNDAuOTkxZDMwNy4yZDQwMC4zODRkMzA3LjJkNzM2LjI1NmQzMDcuMmQ3OTQuNjI0ZDMzNS4zNmQ4MjguOTI4ZDM2My41MmQ4NjMuMjMyZDQyNS45ODRkODYzLjIzMmQ0ODguNDQ4ZDg2My4yMzJkNTE2LjYwOGQ4MjguOTI4ZDU0NC43NjhkNzk0LjYyNGQ1NDQuNzY4ZDczNi4yNTZkNTQ0Ljc2OGQ0MDAuMzg0aFIzZDg1MS45NjhSNGQ3ODAuMjg4UjVkNzEuNjhSNmQ3NTAuNTkyUjdkLTE3LjQwOFI4ZDY3OC45MTJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpODVSMTJkNzEuNjhSMTNkODUxLjk2OFIxNGFpMWkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjE5N29SMWQxMDI0UjJhZDI5NS45MzZkMTIxLjg1NmQyOTUuOTM2ZDE0NC4zODRkMzExLjgwOGQxNjAuMjU1ZDMyNy42OGQxNzYuMTI3ZDM1MC4yMDhkMTc2LjEyN2QzNzIuNzM2ZDE3Ni4xMjdkMzg4LjYwOGQxNjAuMjU1ZDQwNC40OGQxNDQuMzg0ZDQwNC40OGQxMjEuODU2ZDQwNC40OGQ5OS4zMjdkMzg4LjYwOGQ4My40NTZkMzcyLjczNmQ2Ny41ODNkMzUwLjIwOGQ2Ny41ODNkMzI3LjY4ZDY3LjU4M2QzMTEuODA4ZDgzLjQ1NmQyOTUuOTM2ZDk5LjMyN2QyOTUuOTM2ZDEyMS44NTZkMzUxLjIzMmQ1MDcuOTA0ZDM0OS4xODRkNTA3LjkwNGQyNjkuMzEyZDc3Ny4yMTZkNDMxLjEwNGQ3NzcuMjE2ZDM1MS4yMzJkNTA3LjkwNGQyMjguMzUyZDEyMS44NTZkMjI4LjM1MmQ5Ni4yNTVkMjM4LjA4ZDc0LjI0ZDI0Ny44MDhkNTIuMjIzZDI2NC4xOTJkMzUuODRkMjgwLjU3NmQxOS40NTZkMzAyLjU5MmQ5LjcyN2QzMjQuNjA4ZDBkMzUwLjIwOGQwZDM3NS44MDhkMGQzOTcuODI0ZDkuNzI3ZDQxOS44NGQxOS40NTZkNDM2LjIyNGQzNS44NGQ0NTIuNjA4ZDUyLjIyM2Q0NjIuMzM2ZDc0LjI0ZDQ3Mi4wNjRkOTYuMjU1ZDQ3Mi4wNjRkMTIxLjg1NmQ0NzIuMDY0ZDE0Ny40NTZkNDYyLjMzNmQxNjkuNDcxZDQ1Mi42MDhkMTkxLjQ4N2Q0MzYuMjI0ZDIwNy44NzFkNDE5Ljg0ZDIyNC4yNTVkMzk3LjgyNGQyMzMuOTg0ZDM3NS44MDhkMjQzLjcxMmQzNTAuMjA4ZDI0My43MTJkMzI0LjYwOGQyNDMuNzEyZDMwMi41OTJkMjMzLjk4NGQyODAuNTc2ZDIyNC4yNTVkMjY0LjE5MmQyMDcuODcxZDI0Ny44MDhkMTkxLjQ4N2QyMzguMDhkMTY5LjQ3MWQyMjguMzUyZDE0Ny40NTZkMjI4LjM1MmQxMjEuODU2ZDIyNi4zMDRkOTI0LjY3MmQyMDkuOTJkOTc4Ljk0NGQyMDAuNzA0ZDEwMTAuNjg4ZDE3MS41MmQxMDI0ZDE0Mi4zMzZkMTAzNy4zMTFkMTE0LjY4OGQxMDM3LjMxMWQ5NC4yMDhkMTAzNy4zMTFkNzUuMjY0ZDEwMzAuMTQ0ZDU2LjMyZDEwMjIuOTc2ZDQwLjk2ZDEwMTAuMTc2ZDI1LjZkOTk3LjM3NmQxNi4zODRkOTc5Ljk2OGQ3LjE2OGQ5NjIuNTZkNy4xNjhkOTQyLjA4ZDcuMTY4ZDkxNi40OGQxOC45NDRkODc5LjEwNGQzMC43MmQ4NDEuNzI4ZDQ0LjAzMmQ4MDQuODY0ZDIwMC43MDRkMzY4LjY0ZDIxOC4xMTJkMzIyLjU1OWQyNDMuMmQyOTcuOTg0ZDI2OC4yODhkMjczLjQwOGQzMTMuMzQ0ZDI3My40MDhkMzg3LjA3MmQyNzMuNDA4ZDQzMi4xMjhkMjczLjQwOGQ0NTcuMjE2ZDI5Ny45ODRkNDgyLjMwNGQzMjIuNTU5ZDQ5OS43MTJkMzY4LjY0ZDY1Ni4zODRkODA0Ljg2NGQ2NjkuNjk2ZDg0MS43MjhkNjgxLjQ3MmQ4NzkuMTA0ZDY5My4yNDhkOTE2LjQ4ZDY5My4yNDhkOTQyLjA4ZDY5My4yNDhkOTYyLjU2ZDY4NC4wMzJkOTc5Ljk2OGQ2NzQuODE2ZDk5Ny4zNzZkNjU5LjQ1NmQxMDEwLjE3NmQ2NDQuMDk2ZDEwMjIuOTc2ZDYyNC42NGQxMDMwLjE0NGQ2MDUuMTg0ZDEwMzcuMzExZDU4NS43MjhkMTAzNy4zMTFkNTU4LjA4ZDEwMzcuMzExZDUyOC44OTZkMTAyNGQ0OTkuNzEyZDEwMTAuNjg4ZDQ5MC40OTZkOTc4Ljk0NGQ0NzQuMTEyZDkyNC42NzJkMjI2LjMwNGQ5MjQuNjcyaFIzZDcwMC40MTZSNGQ2OTMuMjQ4UjVkNy4xNjhSNmQxMDI0UjdkLTEzLjMxMlI4ZDEwMTYuODMyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE5N1IxMmQ3LjE2OFIxM2Q3MDAuNDE2UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTJpMmkyaTJpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTFpMmkzaTNpM2kzaTNpM2kzaTNpMmkzaTNpMmkzaTNpMmkzaTNpM2kzaTNpM2kzaTNpMmkyaGc6ODRvUjFkMTAyNFIyYWQxMDkuNTY4ZDQ3Ny4xODNkNTkuMzkyZDQ3Ny4xODNkMzYuMzUyZDQ1MS4wNzJkMTMuMzEyZDQyNC45NmQxMy4zMTJkMzgxLjk1MmQxMy4zMTJkMzM4Ljk0M2QzNy4zNzZkMzEyLjgzMmQ2MS40NGQyODYuNzJkMTE3Ljc2ZDI4Ni43MmQ2MjEuNTY4ZDI4Ni43MmQ2NzcuODg4ZDI4Ni43MmQ3MDEuOTUyZDMxMi44MzJkNzI2LjAxNmQzMzguOTQzZDcyNi4wMTZkMzgxLjk1MmQ3MjYuMDE2ZDQyNC45NmQ3MDIuOTc2ZDQ1MS4wNzJkNjc5LjkzNmQ0NzcuMTgzZDYyOS43NmQ0NzcuMTgzZDQ4Ny40MjRkNDc3LjE4M2Q0ODcuNDI0ZDkxMC4zMzZkNDg3LjQyNGQ5NjkuNzI4ZDQ1Ni4xOTJkMTAwMy41MmQ0MjQuOTZkMTAzNy4zMTFkMzY5LjY2NGQxMDM3LjMxMWQzMTQuMzY4ZDEwMzcuMzExZDI4My4xMzZkMTAwMy41MmQyNTEuOTA0ZDk2OS43MjhkMjUxLjkwNGQ5MTAuMzM2ZDI1MS45MDRkNDc3LjE4M2QxMDkuNTY4ZDQ3Ny4xODNoUjNkNzM5LjMyOFI0ZDcyNi4wMTZSNWQxMy4zMTJSNmQ3MzcuMjhSN2QtMTMuMzEyUjhkNzIzLjk2OFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk4NFIxMmQxMy4zMTJSMTNkNzM5LjMyOFIxNGFpMWkzaTNpM2kzaTJpM2kzaTNpM2kyaTJpM2kzaTNpM2kyaTJoZzoxOTZvUjFkMTAyNFIyYWQzNTEuMjMyZDUwNy45MDRkMzQ5LjE4NGQ1MDcuOTA0ZDI2OS4zMTJkNzc3LjIxNmQ0MzEuMTA0ZDc3Ny4yMTZkMzUxLjIzMmQ1MDcuOTA0ZDM3OS45MDRkMTI4ZDM3OS45MDRkODkuMDg3ZDQwNy4wNGQ2MS45NTJkNDM0LjE3NmQzNC44MTZkNDczLjA4OGQzNC44MTZkNTEyZDM0LjgxNmQ1MzkuMTM2ZDYxLjk1MmQ1NjYuMjcyZDg5LjA4N2Q1NjYuMjcyZDEyOGQ1NjYuMjcyZDE2Ni45MTJkNTM5LjEzNmQxOTQuMDQ4ZDUxMmQyMjEuMTgzZDQ3My4wODhkMjIxLjE4M2Q0MzQuMTc2ZDIyMS4xODNkNDA3LjA0ZDE5NC4wNDhkMzc5LjkwNGQxNjYuOTEyZDM3OS45MDRkMTI4ZDEzNC4xNDRkMTI4ZDEzNC4xNDRkODkuMDg3ZDE2MS4yOGQ2MS45NTJkMTg4LjQxNmQzNC44MTZkMjI3LjMyOGQzNC44MTZkMjY2LjI0ZDM0LjgxNmQyOTMuMzc2ZDYxLjk1MmQzMjAuNTEyZDg5LjA4N2QzMjAuNTEyZDEyOGQzMjAuNTEyZDE2Ni45MTJkMjkzLjM3NmQxOTQuMDQ4ZDI2Ni4yNGQyMjEuMTgzZDIyNy4zMjhkMjIxLjE4M2QxODguNDE2ZDIyMS4xODNkMTYxLjI4ZDE5NC4wNDhkMTM0LjE0NGQxNjYuOTEyZDEzNC4xNDRkMTI4ZDIyNi4zMDRkOTI0LjY3MmQyMDkuOTJkOTc4Ljk0NGQyMDAuNzA0ZDEwMTAuNjg4ZDE3MS41MmQxMDI0ZDE0Mi4zMzZkMTAzNy4zMTFkMTE0LjY4OGQxMDM3LjMxMWQ5NC4yMDhkMTAzNy4zMTFkNzUuMjY0ZDEwMzAuMTQ0ZDU2LjMyZDEwMjIuOTc2ZDQwLjk2ZDEwMTAuMTc2ZDI1LjZkOTk3LjM3NmQxNi4zODRkOTc5Ljk2OGQ3LjE2OGQ5NjIuNTZkNy4xNjhkOTQyLjA4ZDcuMTY4ZDkxNi40OGQxOC45NDRkODc5LjEwNGQzMC43MmQ4NDEuNzI4ZDQ0LjAzMmQ4MDQuODY0ZDIwMC43MDRkMzY4LjY0ZDIxOC4xMTJkMzIyLjU1OWQyNDMuMmQyOTcuOTg0ZDI2OC4yODhkMjczLjQwOGQzMTMuMzQ0ZDI3My40MDhkMzg3LjA3MmQyNzMuNDA4ZDQzMi4xMjhkMjczLjQwOGQ0NTcuMjE2ZDI5Ny45ODRkNDgyLjMwNGQzMjIuNTU5ZDQ5OS43MTJkMzY4LjY0ZDY1Ni4zODRkODA0Ljg2NGQ2NjkuNjk2ZDg0MS43MjhkNjgxLjQ3MmQ4NzkuMTA0ZDY5My4yNDhkOTE2LjQ4ZDY5My4yNDhkOTQyLjA4ZDY5My4yNDhkOTYyLjU2ZDY4NC4wMzJkOTc5Ljk2OGQ2NzQuODE2ZDk5Ny4zNzZkNjU5LjQ1NmQxMDEwLjE3NmQ2NDQuMDk2ZDEwMjIuOTc2ZDYyNC42NGQxMDMwLjE0NGQ2MDUuMTg0ZDEwMzcuMzExZDU4NS43MjhkMTAzNy4zMTFkNTU4LjA4ZDEwMzcuMzExZDUyOC44OTZkMTAyNGQ0OTkuNzEyZDEwMTAuNjg4ZDQ5MC40OTZkOTc4Ljk0NGQ0NzQuMTEyZDkyNC42NzJkMjI2LjMwNGQ5MjQuNjcyaFIzZDcwMC40MTZSNGQ2OTMuMjQ4UjVkNy4xNjhSNmQ5ODkuMTg0UjdkLTEzLjMxMlI4ZDk4Mi4wMTZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTk2UjEyZDcuMTY4UjEzZDcwMC40MTZSMTRhaTFpMmkyaTJpMmkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kxaTJpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTJpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTJpMmhnOjgzb1IxZDEwMjRSMmFkNDU2LjcwNGQ4MTQuMDc5ZDQ1Ni43MDRkNzkxLjU1MmQ0NDAuODMyZDc4MC4yODhkNDI0Ljk2ZDc2OS4wMjRkMzkyLjE5MmQ3NTkuODA4ZDIzNS41MmQ3MTQuNzUyZDE0Ni40MzJkNjg5LjE1MmQ5OS44NGQ2MzcuNDRkNTMuMjQ4ZDU4NS43MjhkNTMuMjQ4ZDUwNy45MDRkNTMuMjQ4ZDQ2MS44MjNkNjkuMTJkNDE4LjgxNmQ4NC45OTJkMzc1LjgwOGQxMTkuODA4ZDM0Mi41MjhkMTU0LjYyNGQzMDkuMjQ3ZDIwOC44OTZkMjg5LjI4ZDI2My4xNjhkMjY5LjMxMmQzMzkuOTY4ZDI2OS4zMTJkMzkxLjE2OGQyNjkuMzEyZDQ0Ni40NjRkMjc2LjQ4ZDUwMS43NmQyODMuNjQ4ZDU0Ny4zMjhkMzAxLjA1NmQ1OTIuODk2ZDMxOC40NjNkNjIyLjU5MmQzNDkuMTgzZDY1Mi4yODhkMzc5LjkwNGQ2NTIuMjg4ZDQyNS45ODRkNjUyLjI4OGQ0NjguOTkxZDYyMy4xMDRkNDk0LjA4ZDU5My45MmQ1MTkuMTY4ZDU0OS44ODhkNTE5LjE2OGQ1MjAuMTkyZDUxOS4xNjhkNTAyLjI3MmQ1MDUuMzQzZDQ4NC4zNTJkNDkxLjUyZDQ2NS45MmQ0NzQuNjI0ZDQ0Ny40ODhkNDU3LjcyN2Q0MjIuNGQ0NDMuMzkxZDM5Ny4zMTJkNDI5LjA1NmQzNTMuMjhkNDI5LjA1NmQzMjMuNTg0ZDQyOS4wNTZkMzAwLjAzMmQ0NDAuODMyZDI3Ni40OGQ0NTIuNjA3ZDI3Ni40OGQ0NzguMjA3ZDI3Ni40OGQ1MDIuNzg0ZDI5Ni45NmQ1MTUuNTg0ZDMxNy40NGQ1MjguMzg0ZDM1NS4zMjhkNTM4LjYyNGQ0NzcuMTg0ZDU3MS4zOTJkNTIzLjI2NGQ1ODMuNjhkNTYxLjY2NGQ2MDEuNTk5ZDYwMC4wNjRkNjE5LjUyZDYyNy43MTJkNjQ1LjYzMmQ2NTUuMzZkNjcxLjc0M2Q2NzAuNzJkNzA3LjA3MmQ2ODYuMDhkNzQyLjRkNjg2LjA4ZDc5MC41MjhkNjg2LjA4ZDg1Ni4wNjRkNjU5Ljk2OGQ5MDMuNjhkNjMzLjg1NmQ5NTEuMjk2ZDU5MS4zNmQ5ODIuMDE2ZDU0OC44NjRkMTAxMi43MzZkNDkzLjU2OGQxMDI3LjA3MWQ0MzguMjcyZDEwNDEuNDA3ZDM3OS45MDRkMTA0MS40MDdkMjg2LjcyZDEwNDEuNDA3ZDIyNC43NjhkMTAyMi45NzZkMTYyLjgxNmQxMDA0LjU0NGQxMjUuNDRkOTc3LjkyZDg4LjA2NGQ5NTEuMjk2ZDcyLjE5MmQ5MjAuMDY0ZDU2LjMyZDg4OC44MzJkNTYuMzJkODY0LjI1NmQ1Ni4zMmQ4MjEuMjQ4ZDg0LjQ4ZDc5NC42MjRkMTEyLjY0ZDc2OGQxNTUuNjQ4ZDc2OGQxODcuMzkyZDc2OGQyMDcuODcyZDc4NC44OTZkMjI4LjM1MmQ4MDEuNzkyZDI0OC44MzJkODIxLjc2ZDI2OS4zMTJkODQxLjcyOGQyOTUuOTM2ZDg1OC42MjRkMzIyLjU2ZDg3NS41MmQzNjUuNTY4ZDg3NS41MmQ0MDEuNDA4ZDg3NS41MmQ0MjkuMDU2ZDg2MS42OTZkNDU2LjcwNGQ4NDcuODcyZDQ1Ni43MDRkODE0LjA3OWhSM2Q3MzkuMzI4UjRkNjg2LjA4UjVkNTMuMjQ4UjZkNzU0LjY4OFI3ZC0xNy40MDhSOGQ3MDEuNDRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpODNSMTJkNTMuMjQ4UjEzZDczOS4zMjhSMTRhaTFpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6MTk1b1IxZDEwMjRSMmFkMzUxLjIzMmQ1MDcuOTA0ZDM0OS4xODRkNTA3LjkwNGQyNjkuMzEyZDc3Ny4yMTZkNDMxLjEwNGQ3NzcuMjE2ZDM1MS4yMzJkNTA3LjkwNGQxNTkuNzQ0ZDE1MC41MjhkMTU5Ljc0NGQxMzMuMTJkMTY3LjQyNGQxMTUuMTk5ZDE3NS4xMDRkOTcuMjc5ZDE4OS40NGQ4Mi40MzJkMjAzLjc3NmQ2Ny41ODNkMjIzLjc0NGQ1OC4zNjdkMjQzLjcxMmQ0OS4xNTFkMjY3LjI2NGQ0OS4xNTFkMjkyLjg2NGQ0OS4xNTFkMzEyLjgzMmQ1NC4yNzFkMzMyLjhkNTkuMzkxZDM0OC42NzJkNjUuNTM1ZDM2NC41NDRkNzEuNjc5ZDM3Ny4zNDRkNzYuNzk5ZDM5MC4xNDRkODEuOTE5ZDQwMS40MDhkODEuOTE5ZDQxNC43MmQ4MS45MTlkNDIzLjkzNmQ3Ni43OTlkNDMzLjE1MmQ3MS42NzlkNDQxLjg1NmQ2NS41MzVkNDUwLjU2ZDU5LjM5MWQ0NjAuMjg4ZDU0LjI3MWQ0NzAuMDE2ZDQ5LjE1MWQ0ODUuMzc2ZDQ5LjE1MWQ1MDcuOTA0ZDQ5LjE1MWQ1MjQuMjg4ZDY1LjUzNWQ1NDAuNjcyZDgxLjkxOWQ1NDAuNjcyZDEwNy41MTlkNTQwLjY3MmQxMjQuOTI4ZDUzMi45OTJkMTQzLjM2ZDUyNS4zMTJkMTYxLjc5MmQ1MTAuOTc2ZDE3Ni4xMjdkNDk2LjY0ZDE5MC40NjNkNDc2LjY3MmQxOTkuNjc5ZDQ1Ni43MDRkMjA4Ljg5NWQ0MzMuMTUyZDIwOC44OTVkNDA3LjU1MmQyMDguODk1ZDM4Ny41ODRkMjAzLjc3NWQzNjcuNjE2ZDE5OC42NTVkMzUxLjc0NGQxOTIuNTExZDMzNS44NzJkMTg2LjM2N2QzMjMuMDcyZDE4MS4yNDdkMzEwLjI3MmQxNzYuMTI3ZDI5OS4wMDhkMTc2LjEyN2QyODQuNjcyZDE3Ni4xMjdkMjc1Ljk2OGQxODEuMjQ3ZDI2Ny4yNjRkMTg2LjM2N2QyNTguNTZkMTkyLjUxMWQyNDkuODU2ZDE5OC42NTVkMjQwLjEyOGQyMDMuNzc1ZDIzMC40ZDIwOC44OTVkMjE1LjA0ZDIwOC44OTVkMTkyLjUxMmQyMDguODk1ZDE3Ni4xMjhkMTkyLjUxMWQxNTkuNzQ0ZDE3Ni4xMjdkMTU5Ljc0NGQxNTAuNTI4ZDIyNi4zMDRkOTI0LjY3MmQyMDkuOTJkOTc4Ljk0NGQyMDAuNzA0ZDEwMTAuNjg4ZDE3MS41MmQxMDI0ZDE0Mi4zMzZkMTAzNy4zMTFkMTE0LjY4OGQxMDM3LjMxMWQ5NC4yMDhkMTAzNy4zMTFkNzUuMjY0ZDEwMzAuMTQ0ZDU2LjMyZDEwMjIuOTc2ZDQwLjk2ZDEwMTAuMTc2ZDI1LjZkOTk3LjM3NmQxNi4zODRkOTc5Ljk2OGQ3LjE2OGQ5NjIuNTZkNy4xNjhkOTQyLjA4ZDcuMTY4ZDkxNi40OGQxOC45NDRkODc5LjEwNGQzMC43MmQ4NDEuNzI4ZDQ0LjAzMmQ4MDQuODY0ZDIwMC43MDRkMzY4LjY0ZDIxOC4xMTJkMzIyLjU1OWQyNDMuMmQyOTcuOTg0ZDI2OC4yODhkMjczLjQwOGQzMTMuMzQ0ZDI3My40MDhkMzg3LjA3MmQyNzMuNDA4ZDQzMi4xMjhkMjczLjQwOGQ0NTcuMjE2ZDI5Ny45ODRkNDgyLjMwNGQzMjIuNTU5ZDQ5OS43MTJkMzY4LjY0ZDY1Ni4zODRkODA0Ljg2NGQ2NjkuNjk2ZDg0MS43MjhkNjgxLjQ3MmQ4NzkuMTA0ZDY5My4yNDhkOTE2LjQ4ZDY5My4yNDhkOTQyLjA4ZDY5My4yNDhkOTYyLjU2ZDY4NC4wMzJkOTc5Ljk2OGQ2NzQuODE2ZDk5Ny4zNzZkNjU5LjQ1NmQxMDEwLjE3NmQ2NDQuMDk2ZDEwMjIuOTc2ZDYyNC42NGQxMDMwLjE0NGQ2MDUuMTg0ZDEwMzcuMzExZDU4NS43MjhkMTAzNy4zMTFkNTU4LjA4ZDEwMzcuMzExZDUyOC44OTZkMTAyNGQ0OTkuNzEyZDEwMTAuNjg4ZDQ5MC40OTZkOTc4Ljk0NGQ0NzQuMTEyZDkyNC42NzJkMjI2LjMwNGQ5MjQuNjcyaFIzZDcwMC40MTZSNGQ2OTMuMjQ4UjVkNy4xNjhSNmQ5NzQuODQ4UjdkLTEzLjMxMlI4ZDk2Ny42OFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxOTVSMTJkNy4xNjhSMTNkNzAwLjQxNlIxNGFpMWkyaTJpMmkyaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTJpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTJpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTJpMmhnOjgyb1IxZDEwMjRSMmFkNDE3Ljc5MmQ2MDguMjU2ZDQ3MC4wMTZkNjA4LjI1NmQ0OTIuMDMyZDU5MS4zNmQ1MTQuMDQ4ZDU3NC40NjRkNTE0LjA0OGQ1MzYuNTc2ZDUxNC4wNDhkNDk4LjY4OGQ0OTIuMDMyZDQ4MS43OTJkNDcwLjAxNmQ0NjQuODk1ZDQxNy43OTJkNDY0Ljg5NWQzMDAuMDMyZDQ2NC44OTVkMzAwLjAzMmQ2MDguMjU2ZDQxNy43OTJkNjA4LjI1NmQ3MC42NTZkNDI3LjAwOGQ3MC42NTZkMzUzLjI4ZDEwNC40NDhkMzIwZDEzOC4yNGQyODYuNzJkMjE1LjA0ZDI4Ni43MmQ0NzYuMTZkMjg2LjcyZDU0My43NDRkMjg2LjcyZDU5Mi44OTZkMzAzLjYxNmQ2NDIuMDQ4ZDMyMC41MTFkNjc0LjMwNGQzNDkuMTgzZDcwNi41NmQzNzcuODU2ZDcyMS45MmQ0MTUuNzQ0ZDczNy4yOGQ0NTMuNjMxZDczNy4yOGQ0OTUuNjE2ZDczNy4yOGQ1NjguMzE5ZDY5Ni44MzJkNjEzLjM3NmQ2NTYuMzg0ZDY1OC40MzJkNTg3Ljc3NmQ2NzEuNzQzZDU4Ny43NzZkNjczLjc5MWQ2NDQuMDk2ZDY3Ny44ODdkNjc5LjkzNmQ3MDAuOTI4ZDcxNS43NzZkNzIzLjk2OGQ3MjMuOTY4ZDc4Mi4zMzZkNzMyLjE2ZDg0My43NzZkNzM2LjI1NmQ4NzAuNGQ3MzkuMzI4ZDg5Ny4wMjRkNzQyLjRkOTIzLjY0OGQ3NDIuNGQ5NDcuMmQ3NDIuNGQ5NjguNzA0ZDczMy4xODRkOTg1LjA4OGQ3MjMuOTY4ZDEwMDEuNDcyZDcwOC42MDhkMTAxMy4yNDhkNjkzLjI0OGQxMDI1LjAyM2Q2NzQuMzA0ZDEwMzEuMTY3ZDY1NS4zNmQxMDM3LjMxMWQ2MzYuOTI4ZDEwMzcuMzExZDU4NS43MjhkMTAzNy4zMTFkNTQ5LjM3NmQxMDEzLjc2ZDUxMy4wMjRkOTkwLjIwOGQ1MDYuODhkOTM1LjkzNmQ0OTUuNjE2ZDgzOC42NTZkNDkwLjQ5NmQ3OTQuNjI0ZDQ2MS44MjRkNzc4LjI0ZDQzMy4xNTJkNzYxLjg1NmQzOTIuMTkyZDc2MS44NTZkMzAwLjAzMmQ3NjEuODU2ZDMwMC4wMzJkOTE0LjQzMmQzMDAuMDMyZDk3My44MjRkMjcwLjMzNmQxMDA1LjU2OGQyNDAuNjRkMTAzNy4zMTFkMTg1LjM0NGQxMDM3LjMxMWQxMzAuMDQ4ZDEwMzcuMzExZDEwMC4zNTJkMTAwNS41NjhkNzAuNjU2ZDk3My44MjRkNzAuNjU2ZDkxNC40MzJkNzAuNjU2ZDQyNy4wMDhoUjNkNzk2LjY3MlI0ZDc0Mi40UjVkNzAuNjU2UjZkNzM3LjI4UjdkLTEzLjMxMlI4ZDY2Ni42MjRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpODJSMTJkNzAuNjU2UjEzZDc5Ni42NzJSMTRhaTFpM2kzaTNpM2kyaTJpMmkxaTNpM2kyaTNpM2kzaTNpM2kzaTJpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTJpMmkzaTNpM2kzaTJoZzoxOTRvUjFkMTAyNFIyYWQzNTEuMjMyZDUwNy45MDRkMzQ5LjE4NGQ1MDcuOTA0ZDI2OS4zMTJkNzc3LjIxNmQ0MzEuMTA0ZDc3Ny4yMTZkMzUxLjIzMmQ1MDcuOTA0ZDE2NC44NjRkMTY3LjkzNmQxNjQuODY0ZDE2MS43OTJkMTY3LjkzNmQxNTMuMDg3ZDE3MS4wMDhkMTQ0LjM4NGQxODAuMjI0ZDEzMy4xMmQxODkuNDRkMTIxLjg1NmQyMDUuODI0ZDEwNS45ODRkMjIyLjIwOGQ5MC4xMTFkMjQ4LjgzMmQ2OS42MzFkMjcwLjMzNmQ1Mi4yMjNkMjg0LjY3MmQ0MS45ODNkMjk5LjAwOGQzMS43NDRkMzA5Ljc2ZDI2LjExMWQzMjAuNTEyZDIwLjQ4ZDMyOS43MjhkMTguOTQzZDMzOC45NDRkMTcuNDA4ZDM1MC4yMDhkMTcuNDA4ZDM2MS40NzJkMTcuNDA4ZDM3MC42ODhkMTguOTQzZDM3OS45MDRkMjAuNDhkMzkwLjY1NmQyNi4xMTFkNDAxLjQwOGQzMS43NDRkNDE1Ljc0NGQ0MS45ODNkNDMwLjA4ZDUyLjIyM2Q0NTEuNTg0ZDY5LjYzMWQ0NzguMjA4ZDkwLjExMWQ0OTQuNTkyZDEwNS45ODRkNTEwLjk3NmQxMjEuODU2ZDUyMC4xOTJkMTMzLjEyZDUyOS40MDhkMTQ0LjM4NGQ1MzIuNDhkMTUzLjA4N2Q1MzUuNTUyZDE2MS43OTJkNTM1LjU1MmQxNjcuOTM2ZDUzNS41NTJkMTg5LjQzOWQ1MjAuNzA0ZDIwOC44OTVkNTA1Ljg1NmQyMjguMzUxZDQ3OC4yMDhkMjI4LjM1MWQ0NzAuMDE2ZDIyOC4zNTFkNDU5LjI2NGQyMjQuNzY4ZDQ0OC41MTJkMjIxLjE4M2Q0MzQuMTc2ZDIxMS40NTZkNDE5Ljg0ZDIwMS43MjdkMzk5LjM2ZDE4NS44NTZkMzc4Ljg4ZDE2OS45ODRkMzUwLjIwOGQxNDUuNDA4ZDMyMS41MzZkMTY5Ljk4NGQzMDEuMDU2ZDE4NS44NTZkMjgwLjU3NmQyMDEuNzI3ZDI2Ni4yNGQyMTEuNDU2ZDI1MS45MDRkMjIxLjE4M2QyNDEuMTUyZDIyNC43NjhkMjMwLjRkMjI4LjM1MWQyMjIuMjA4ZDIyOC4zNTFkMTk0LjU2ZDIyOC4zNTFkMTc5LjcxMmQyMDguODk1ZDE2NC44NjRkMTg5LjQzOWQxNjQuODY0ZDE2Ny45MzZkMjI2LjMwNGQ5MjQuNjcyZDIwOS45MmQ5NzguOTQ0ZDIwMC43MDRkMTAxMC42ODhkMTcxLjUyZDEwMjRkMTQyLjMzNmQxMDM3LjMxMWQxMTQuNjg4ZDEwMzcuMzExZDk0LjIwOGQxMDM3LjMxMWQ3NS4yNjRkMTAzMC4xNDRkNTYuMzJkMTAyMi45NzZkNDAuOTZkMTAxMC4xNzZkMjUuNmQ5OTcuMzc2ZDE2LjM4NGQ5NzkuOTY4ZDcuMTY4ZDk2Mi41NmQ3LjE2OGQ5NDIuMDhkNy4xNjhkOTE2LjQ4ZDE4Ljk0NGQ4NzkuMTA0ZDMwLjcyZDg0MS43MjhkNDQuMDMyZDgwNC44NjRkMjAwLjcwNGQzNjguNjRkMjE4LjExMmQzMjIuNTU5ZDI0My4yZDI5Ny45ODRkMjY4LjI4OGQyNzMuNDA4ZDMxMy4zNDRkMjczLjQwOGQzODcuMDcyZDI3My40MDhkNDMyLjEyOGQyNzMuNDA4ZDQ1Ny4yMTZkMjk3Ljk4NGQ0ODIuMzA0ZDMyMi41NTlkNDk5LjcxMmQzNjguNjRkNjU2LjM4NGQ4MDQuODY0ZDY2OS42OTZkODQxLjcyOGQ2ODEuNDcyZDg3OS4xMDRkNjkzLjI0OGQ5MTYuNDhkNjkzLjI0OGQ5NDIuMDhkNjkzLjI0OGQ5NjIuNTZkNjg0LjAzMmQ5NzkuOTY4ZDY3NC44MTZkOTk3LjM3NmQ2NTkuNDU2ZDEwMTAuMTc2ZDY0NC4wOTZkMTAyMi45NzZkNjI0LjY0ZDEwMzAuMTQ0ZDYwNS4xODRkMTAzNy4zMTFkNTg1LjcyOGQxMDM3LjMxMWQ1NTguMDhkMTAzNy4zMTFkNTI4Ljg5NmQxMDI0ZDQ5OS43MTJkMTAxMC42ODhkNDkwLjQ5NmQ5NzguOTQ0ZDQ3NC4xMTJkOTI0LjY3MmQyMjYuMzA0ZDkyNC42NzJoUjNkNzAwLjQxNlI0ZDY5My4yNDhSNWQ3LjE2OFI2ZDEwMDYuNTkyUjdkLTEzLjMxMlI4ZDk5OS40MjRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTk0UjEyZDcuMTY4UjEzZDcwMC40MTZSMTRhaTFpMmkyaTJpMmkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkyaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kyaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kyaTJoZzo4MW9SMWQxMDI0UjJhZDQzOC4yNzJkODMxLjQ4OGQ0MjAuODY0ZDgxNC4wNzlkNDExLjEzNmQ3OTYuMTZkNDAxLjQwOGQ3NzguMjRkNDAxLjQwOGQ3NjQuOTI4ZDQwMS40MDhkNzM0LjIwOGQ0MjQuNDQ4ZDcxMi4xOTJkNDQ3LjQ4OGQ2OTAuMTc1ZDQ3Ny4xODRkNjkwLjE3NWQ0OTEuNTJkNjkwLjE3NWQ1MDguNDE2ZDY5Ni44MzJkNTI1LjMxMmQ3MDMuNDg4ZDU0MS42OTZkNzIwLjg5NmQ1NjEuMTUyZDc0MS4zNzZkNTY2LjI3MmQ3MjIuOTQ0ZDU2OC44MzJkNzAwLjkyOGQ1NzEuMzkyZDY3OC45MTJkNTcxLjM5MmQ2NTUuMzZkNTcxLjM5MmQ1NjUuMjQ4ZDUzNS41NTJkNTA5LjQzOWQ0OTkuNzEyZDQ1My42MzFkNDI1Ljk4NGQ0NTMuNjMxZDM1Mi4yNTZkNDUzLjYzMWQzMTYuNDE2ZDUwOS40MzlkMjgwLjU3NmQ1NjUuMjQ4ZDI4MC41NzZkNjU1LjM2ZDI4MC41NzZkNzQ1LjQ3MmQzMTYuNDE2ZDgwMS4yOGQzNTIuMjU2ZDg1Ny4wODhkNDI1Ljk4NGQ4NTcuMDg4ZDQ0NS40NGQ4NTcuMDg4ZDQ1OC43NTJkODUyLjk5MmQ0MzguMjcyZDgzMS40ODhkNjA0LjE2ZDEwMDQuNTQ0ZDUyMi4yNGQxMDQxLjQwN2Q0MjUuOTg0ZDEwNDEuNDA3ZDM1Mi4yNTZkMTA0MS40MDdkMjgzLjEzNmQxMDE4Ljg4ZDIxNC4wMTZkOTk2LjM1MmQxNjEuMjhkOTQ4LjczNmQxMDguNTQ0ZDkwMS4xMmQ3Ni44ZDgyOC40MTVkNDUuMDU2ZDc1NS43MTJkNDUuMDU2ZDY1NS4zNmQ0NS4wNTZkNTU5LjEwNGQ3Ny4zMTJkNDg2LjRkMTA5LjU2OGQ0MTMuNjk2ZDE2Mi4zMDRkMzY1LjU2OGQyMTUuMDRkMzE3LjQzOWQyODMuNjQ4ZDI5My4zNzZkMzUyLjI1NmQyNjkuMzEyZDQyNS45ODRkMjY5LjMxMmQ0OTkuNzEyZDI2OS4zMTJkNTY4LjMyZDI5My4zNzZkNjM2LjkyOGQzMTcuNDM5ZDY4OS42NjRkMzY1LjU2OGQ3NDIuNGQ0MTMuNjk2ZDc3NC42NTZkNDg2LjRkODA2LjkxMmQ1NTkuMTA0ZDgwNi45MTJkNjU1LjM2ZDgwNi45MTJkNzM4LjMwNGQ3ODQuODk2ZDgwMS43OTJkNzYyLjg4ZDg2NS4yOGQ3MjQuOTkyZDkxMS4zNmQ3NTEuNjE2ZDkzOS4wMDhkNzc2LjE5MmQ5NjQuNjA4ZDc4Ni40MzJkOTgwLjQ4ZDc5Ni42NzJkOTk2LjM1MmQ3OTYuNjcyZDEwMTEuNzEyZDc5Ni42NzJkMTAyMi45NzZkNzkxLjU1MmQxMDM2LjhkNzg2LjQzMmQxMDUwLjYyNGQ3NzUuNjhkMTA2Mi40ZDc2NC45MjhkMTA3NC4xNzZkNzQ5LjU2OGQxMDgxLjg1NmQ3MzQuMjA4ZDEwODkuNTM2ZDcxNC43NTJkMTA4OS41MzZkNjk5LjM5MmQxMDg5LjUzNmQ2ODMuNTJkMTA4MC4zMmQ2NjcuNjQ4ZDEwNzEuMTA0ZDY0NS4xMmQxMDQ3LjU1MWQ2MDQuMTZkMTAwNC41NDRoUjNkODUxLjk2OFI0ZDgwNi45MTJSNWQ0NS4wNTZSNmQ3NTQuNjg4UjdkLTY1LjUzNlI4ZDcwOS42MzJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpODFSMTJkNDUuMDU2UjEzZDg1MS45NjhSMTRhaTFpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpMmhnOjE5M29SMWQxMDI0UjJhZDM1MS4yMzJkNTA3LjkwNGQzNDkuMTg0ZDUwNy45MDRkMjY5LjMxMmQ3NzcuMjE2ZDQzMS4xMDRkNzc3LjIxNmQzNTEuMjMyZDUwNy45MDRkMzc4Ljg4ZDUwLjE3NWQ0MDQuNDhkMjcuNjQ4ZDQxNy43OTJkMjIuMDE1ZDQzMS4xMDRkMTYuMzg0ZDQ0Ni40NjRkMTYuMzg0ZDQ1Ni43MDRkMTYuMzg0ZDQ2OC40OGQyMC45OTFkNDgwLjI1NmQyNS42ZDQ4OS40NzJkMzQuMzAzZDQ5OC42ODhkNDMuMDA3ZDUwNC44MzJkNTQuMjcxZDUxMC45NzZkNjUuNTM1ZDUxMC45NzZkNzguODQ3ZDUxMC45NzZkMTA5LjU2N2Q0ODIuMzA0ZDEzMy4xMmQzOTcuMzEyZDIwNS44MjNkMzg0ZDIxNy4wODdkMzc0Ljc4NGQyMjMuNzQ0ZDM2NS41NjhkMjMwLjM5OWQzNTcuODg4ZDIzMy45ODRkMzUwLjIwOGQyMzcuNTY3ZDM0My41NTJkMjM4LjU5MWQzMzYuODk2ZDIzOS42MTZkMzI5LjcyOGQyMzkuNjE2ZDMxOC40NjRkMjM5LjYxNmQzMDcuMmQyMzUuMDA4ZDI5NS45MzZkMjMwLjM5OWQyODYuNzJkMjIxLjY5NmQyNzcuNTA0ZDIxMi45OTFkMjcxLjM2ZDIwMS43MjdkMjY1LjIxNmQxOTAuNDYzZDI2NS4yMTZkMTc3LjE1MWQyNjUuMjE2ZDE0Ni40MzJkMjkzLjg4OGQxMjIuODhkMzc4Ljg4ZDUwLjE3NWQyMjYuMzA0ZDkyNC42NzJkMjA5LjkyZDk3OC45NDRkMjAwLjcwNGQxMDEwLjY4OGQxNzEuNTJkMTAyNGQxNDIuMzM2ZDEwMzcuMzExZDExNC42ODhkMTAzNy4zMTFkOTQuMjA4ZDEwMzcuMzExZDc1LjI2NGQxMDMwLjE0NGQ1Ni4zMmQxMDIyLjk3NmQ0MC45NmQxMDEwLjE3NmQyNS42ZDk5Ny4zNzZkMTYuMzg0ZDk3OS45NjhkNy4xNjhkOTYyLjU2ZDcuMTY4ZDk0Mi4wOGQ3LjE2OGQ5MTYuNDhkMTguOTQ0ZDg3OS4xMDRkMzAuNzJkODQxLjcyOGQ0NC4wMzJkODA0Ljg2NGQyMDAuNzA0ZDM2OC42NGQyMTguMTEyZDMyMi41NTlkMjQzLjJkMjk3Ljk4NGQyNjguMjg4ZDI3My40MDhkMzEzLjM0NGQyNzMuNDA4ZDM4Ny4wNzJkMjczLjQwOGQ0MzIuMTI4ZDI3My40MDhkNDU3LjIxNmQyOTcuOTg0ZDQ4Mi4zMDRkMzIyLjU1OWQ0OTkuNzEyZDM2OC42NGQ2NTYuMzg0ZDgwNC44NjRkNjY5LjY5NmQ4NDEuNzI4ZDY4MS40NzJkODc5LjEwNGQ2OTMuMjQ4ZDkxNi40OGQ2OTMuMjQ4ZDk0Mi4wOGQ2OTMuMjQ4ZDk2Mi41NmQ2ODQuMDMyZDk3OS45NjhkNjc0LjgxNmQ5OTcuMzc2ZDY1OS40NTZkMTAxMC4xNzZkNjQ0LjA5NmQxMDIyLjk3NmQ2MjQuNjRkMTAzMC4xNDRkNjA1LjE4NGQxMDM3LjMxMWQ1ODUuNzI4ZDEwMzcuMzExZDU1OC4wOGQxMDM3LjMxMWQ1MjguODk2ZDEwMjRkNDk5LjcxMmQxMDEwLjY4OGQ0OTAuNDk2ZDk3OC45NDRkNDc0LjExMmQ5MjQuNjcyZDIyNi4zMDRkOTI0LjY3MmhSM2Q3MDAuNDE2UjRkNjkzLjI0OFI1ZDcuMTY4UjZkMTAwNy42MTZSN2QtMTMuMzEyUjhkMTAwMC40NDhSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTkzUjEyZDcuMTY4UjEzZDcwMC40MTZSMTRhaTFpMmkyaTJpMmkxaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kyaTFpMmkzaTNpM2kzaTNpM2kzaTNpMmkzaTNpMmkzaTNpMmkzaTNpM2kzaTNpM2kzaTNpMmkyaGc6ODBvUjFkMTAyNFIyYWQ0NDMuMzkyZDYxNy40NzJkNDU3LjcyOGQ2MTcuNDcyZDQ3Mi4wNjRkNjEyLjg2NGQ0ODYuNGQ2MDguMjU2ZDQ5Ny42NjRkNTk5LjA0ZDUwOC45MjhkNTg5LjgyNGQ1MTYuMDk2ZDU3NS40ODhkNTIzLjI2NGQ1NjEuMTUyZDUyMy4yNjRkNTQyLjcyZDUyMy4yNjRkNTA1Ljg1NmQ0OTkuMmQ0ODUuMzc2ZDQ3NS4xMzZkNDY0Ljg5NWQ0MzIuMTI4ZDQ2NC44OTVkMzEzLjM0NGQ0NjQuODk1ZDMxMy4zNDRkNjE3LjQ3MmQ0NDMuMzkyZDYxNy40NzJkODMuOTY4ZDQyNy4wMDhkODMuOTY4ZDM1My4yOGQxMTYuNzM2ZDMyMGQxNDkuNTA0ZDI4Ni43MmQyMTguMTEyZDI4Ni43MmQ0MzEuMTA0ZDI4Ni43MmQ0OTguNjg4ZDI4Ni43MmQ1NTcuNTY4ZDI5OC40OTZkNjE2LjQ0OGQzMTAuMjcxZDY1OS40NTZkMzM5LjQ1NmQ3MDIuNDY0ZDM2OC42NGQ3MjcuNTUyZDQxNy43OTJkNzUyLjY0ZDQ2Ni45NDNkNzUyLjY0ZDU0MS42OTVkNzUyLjY0ZDYxNi40NDhkNzI3LjU1MmQ2NjUuMDg4ZDcwMi40NjRkNzEzLjcyOGQ2NTkuNDU2ZDc0Mi45MTJkNjE2LjQ0OGQ3NzIuMDk2ZDU1Ny41NjhkNzgzLjg3MmQ0OTguNjg4ZDc5NS42NDhkNDMxLjEwNGQ3OTUuNjQ4ZDMxMy4zNDRkNzk1LjY0OGQzMTMuMzQ0ZDkxNC40MzJkMzEzLjM0NGQ5NzMuODI0ZDI4My42NDhkMTAwNS41NjhkMjUzLjk1MmQxMDM3LjMxMWQxOTguNjU2ZDEwMzcuMzExZDE0My4zNmQxMDM3LjMxMWQxMTMuNjY0ZDEwMDUuNTY4ZDgzLjk2OGQ5NzMuODI0ZDgzLjk2OGQ5MTQuNDMyZDgzLjk2OGQ0MjcuMDA4aFIzZDc5Ni42NzJSNGQ3NTIuNjRSNWQ4My45NjhSNmQ3MzcuMjhSN2QtMTMuMzEyUjhkNjUzLjMxMlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk4MFIxMmQ4My45NjhSMTNkNzk2LjY3MlIxNGFpMWkzaTNpM2kzaTNpM2kyaTJpMmkxaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kyaTJpM2kzaTNpM2kyaGc6MTkyb1IxZDEwMjRSMmFkMzUxLjIzMmQ1MDcuOTA0ZDM0OS4xODRkNTA3LjkwNGQyNjkuMzEyZDc3Ny4yMTZkNDMxLjEwNGQ3NzcuMjE2ZDM1MS4yMzJkNTA3LjkwNGQyMTguMTEyZDEzMy4xMmQxODkuNDRkMTA5LjU2N2QxODkuNDRkNzguODQ3ZDE4OS40NGQ2NS41MzVkMTk1LjU4NGQ1NC4yNzFkMjAxLjcyOGQ0My4wMDdkMjEwLjk0NGQzNC4zMDNkMjIwLjE2ZDI1LjZkMjMxLjQyNGQyMC45OTFkMjQyLjY4OGQxNi4zODRkMjUzLjk1MmQxNi4zODRkMjYxLjEyZDE2LjM4NGQyNjcuNzc2ZDE3LjQwOGQyNzQuNDMyZDE4LjQzMmQyODIuMTEyZDIyLjAxNWQyODkuNzkyZDI1LjZkMjk5LjAwOGQzMi4yNTVkMzA4LjIyNGQzOC45MTJkMzIxLjUzNmQ1MC4xNzVkNDA2LjUyOGQxMjIuODhkNDM1LjJkMTQ2LjQzMmQ0MzUuMmQxNzcuMTUxZDQzNS4yZDE5MC40NjNkNDI5LjA1NmQyMDEuNzI3ZDQyMi45MTJkMjEyLjk5MWQ0MTMuNjk2ZDIyMS42OTZkNDA0LjQ4ZDIzMC4zOTlkMzkyLjcwNGQyMzUuMDA4ZDM4MC45MjhkMjM5LjYxNmQzNzAuNjg4ZDIzOS42MTZkMzU1LjMyOGQyMzkuNjE2ZDM0Mi4wMTZkMjMzLjk4NGQzMjguNzA0ZDIyOC4zNTFkMzAzLjEwNGQyMDUuODIzZDIxOC4xMTJkMTMzLjEyZDIyNi4zMDRkOTI0LjY3MmQyMDkuOTJkOTc4Ljk0NGQyMDAuNzA0ZDEwMTAuNjg4ZDE3MS41MmQxMDI0ZDE0Mi4zMzZkMTAzNy4zMTFkMTE0LjY4OGQxMDM3LjMxMWQ5NC4yMDhkMTAzNy4zMTFkNzUuMjY0ZDEwMzAuMTQ0ZDU2LjMyZDEwMjIuOTc2ZDQwLjk2ZDEwMTAuMTc2ZDI1LjZkOTk3LjM3NmQxNi4zODRkOTc5Ljk2OGQ3LjE2OGQ5NjIuNTZkNy4xNjhkOTQyLjA4ZDcuMTY4ZDkxNi40OGQxOC45NDRkODc5LjEwNGQzMC43MmQ4NDEuNzI4ZDQ0LjAzMmQ4MDQuODY0ZDIwMC43MDRkMzY4LjY0ZDIxOC4xMTJkMzIyLjU1OWQyNDMuMmQyOTcuOTg0ZDI2OC4yODhkMjczLjQwOGQzMTMuMzQ0ZDI3My40MDhkMzg3LjA3MmQyNzMuNDA4ZDQzMi4xMjhkMjczLjQwOGQ0NTcuMjE2ZDI5Ny45ODRkNDgyLjMwNGQzMjIuNTU5ZDQ5OS43MTJkMzY4LjY0ZDY1Ni4zODRkODA0Ljg2NGQ2NjkuNjk2ZDg0MS43MjhkNjgxLjQ3MmQ4NzkuMTA0ZDY5My4yNDhkOTE2LjQ4ZDY5My4yNDhkOTQyLjA4ZDY5My4yNDhkOTYyLjU2ZDY4NC4wMzJkOTc5Ljk2OGQ2NzQuODE2ZDk5Ny4zNzZkNjU5LjQ1NmQxMDEwLjE3NmQ2NDQuMDk2ZDEwMjIuOTc2ZDYyNC42NGQxMDMwLjE0NGQ2MDUuMTg0ZDEwMzcuMzExZDU4NS43MjhkMTAzNy4zMTFkNTU4LjA4ZDEwMzcuMzExZDUyOC44OTZkMTAyNGQ0OTkuNzEyZDEwMTAuNjg4ZDQ5MC40OTZkOTc4Ljk0NGQ0NzQuMTEyZDkyNC42NzJkMjI2LjMwNGQ5MjQuNjcyaFIzZDcwMC40MTZSNGQ2OTMuMjQ4UjVkNy4xNjhSNmQxMDA3LjYxNlI3ZC0xMy4zMTJSOGQxMDAwLjQ0OFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxOTJSMTJkNy4xNjhSMTNkNzAwLjQxNlIxNGFpMWkyaTJpMmkyaTFpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTJpMWkyaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kyaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kyaTJoZzo3OW9SMWQxMDI0UjJhZDU3MS4zOTJkNjU1LjM2ZDU3MS4zOTJkNTY1LjI0OGQ1MzUuNTUyZDUwOS40MzlkNDk5LjcxMmQ0NTMuNjMxZDQyNS45ODRkNDUzLjYzMWQzNTIuMjU2ZDQ1My42MzFkMzE2LjQxNmQ1MDkuNDM5ZDI4MC41NzZkNTY1LjI0OGQyODAuNTc2ZDY1NS4zNmQyODAuNTc2ZDc0NS40NzJkMzE2LjQxNmQ4MDEuMjhkMzUyLjI1NmQ4NTcuMDg4ZDQyNS45ODRkODU3LjA4OGQ0OTkuNzEyZDg1Ny4wODhkNTM1LjU1MmQ4MDEuMjhkNTcxLjM5MmQ3NDUuNDcyZDU3MS4zOTJkNjU1LjM2ZDQ1LjA1NmQ2NTUuMzZkNDUuMDU2ZDU1OS4xMDRkNzcuMzEyZDQ4Ni40ZDEwOS41NjhkNDEzLjY5NmQxNjIuMzA0ZDM2NS41NjhkMjE1LjA0ZDMxNy40MzlkMjgzLjY0OGQyOTMuMzc2ZDM1Mi4yNTZkMjY5LjMxMmQ0MjUuOTg0ZDI2OS4zMTJkNDk5LjcxMmQyNjkuMzEyZDU2OC4zMmQyOTMuMzc2ZDYzNi45MjhkMzE3LjQzOWQ2ODkuNjY0ZDM2NS41NjhkNzQyLjRkNDEzLjY5NmQ3NzQuNjU2ZDQ4Ni40ZDgwNi45MTJkNTU5LjEwNGQ4MDYuOTEyZDY1NS4zNmQ4MDYuOTEyZDc1NS43MTJkNzc1LjE2OGQ4MjguNDE1ZDc0My40MjRkOTAxLjEyZDY5MC42ODhkOTQ4LjczNmQ2MzcuOTUyZDk5Ni4zNTJkNTY4LjgzMmQxMDE4Ljg4ZDQ5OS43MTJkMTA0MS40MDdkNDI1Ljk4NGQxMDQxLjQwN2QzNTIuMjU2ZDEwNDEuNDA3ZDI4My4xMzZkMTAxOC44OGQyMTQuMDE2ZDk5Ni4zNTJkMTYxLjI4ZDk0OC43MzZkMTA4LjU0NGQ5MDEuMTJkNzYuOGQ4MjguNDE1ZDQ1LjA1NmQ3NTUuNzEyZDQ1LjA1NmQ2NTUuMzZoUjNkODUxLjk2OFI0ZDgwNi45MTJSNWQ0NS4wNTZSNmQ3NTQuNjg4UjdkLTE3LjQwOFI4ZDcwOS42MzJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpNzlSMTJkNDUuMDU2UjEzZDg1MS45NjhSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjE5MW9SMWQxMDI0UjJhZDQ0OS41MzZkNTg5LjgyNGQ0NDkuNTM2ZDYxMy4zNzZkNDQwLjMyZDYzNC4zNjdkNDMxLjEwNGQ2NTUuMzZkNDE1Ljc0NGQ2NzAuNzJkNDAwLjM4NGQ2ODYuMDc5ZDM3OS4zOTJkNjk1LjI5NmQzNTguNGQ3MDQuNTEyZDMzNC44NDhkNzA0LjUxMmQzMTEuMjk2ZDcwNC41MTJkMjkwLjMwNGQ2OTUuMjk2ZDI2OS4zMTJkNjg2LjA3OWQyNTMuOTUyZDY3MC43MmQyMzguNTkyZDY1NS4zNmQyMjkuMzc2ZDYzNC4zNjdkMjIwLjE2ZDYxMy4zNzZkMjIwLjE2ZDU4OS44MjRkMjIwLjE2ZDU2Ni4yNzFkMjI5LjM3NmQ1NDUuMjhkMjM4LjU5MmQ1MjQuMjg4ZDI1My45NTJkNTA4LjkyOGQyNjkuMzEyZDQ5My41NjhkMjkwLjMwNGQ0ODQuMzUyZDMxMS4yOTZkNDc1LjEzNWQzMzQuODQ4ZDQ3NS4xMzVkMzU4LjRkNDc1LjEzNWQzNzkuMzkyZDQ4NC4zNTJkNDAwLjM4NGQ0OTMuNTY4ZDQxNS43NDRkNTA4LjkyOGQ0MzEuMTA0ZDUyNC4yODhkNDQwLjMyZDU0NS4yOGQ0NDkuNTM2ZDU2Ni4yNzFkNDQ5LjUzNmQ1ODkuODI0ZDI1NC45NzZkMTAyNi4wNDhkMjU0Ljk3NmQxMDU3Ljc5MmQyNzUuNDU2ZDEwNzAuMDhkMjk1LjkzNmQxMDgyLjM2OGQzMjUuNjMyZDEwODIuMzY4ZDM0OC4xNmQxMDgyLjM2OGQzNzIuNzM2ZDEwNzEuNjE2ZDM5Ny4zMTJkMTA2MC44NjRkNDE3Ljc5MmQxMDMwLjE0NGQ0MzAuMDhkMTAxMS43MTJkNDM5LjgwOGQxMDAwLjk2ZDQ0OS41MzZkOTkwLjIwOGQ0NTkuMjY0ZDk4NC41NzZkNDY4Ljk5MmQ5NzguOTQ0ZDQ4MC4yNTZkOTc2Ljg5NmQ0OTEuNTJkOTc0Ljg0OGQ1MDUuODU2ZDk3NC44NDhkNTQ2LjgxNmQ5NzQuODQ4ZDU3My40NGQ5OTUuMzI4ZDYwMC4wNjRkMTAxNS44MDhkNjAwLjA2NGQxMDU3Ljc5MmQ2MDAuMDY0ZDEwODMuMzkyZDU4My42OGQxMTE0LjExMmQ1NjcuMjk2ZDExNDQuODMyZDUzMi45OTJkMTE3MS45NjhkNDk4LjY4OGQxMTk5LjEwNGQ0NDYuOTc2ZDEyMTcuNTM2ZDM5NS4yNjRkMTIzNS45NjhkMzI0LjYwOGQxMjM1Ljk2OGQyNTEuOTA0ZDEyMzUuOTY4ZDE5OC4xNDRkMTIxOS4wNzJkMTQ0LjM4NGQxMjAyLjE3NmQxMDkuMDU2ZDExNzMuNTA0ZDczLjcyOGQxMTQ0LjgzMmQ1NS44MDhkMTEwNy40NTZkMzcuODg4ZDEwNzAuMDhkMzcuODg4ZDEwMjkuMTE5ZDM3Ljg4OGQ5ODYuMTEyZDUxLjcxMmQ5NTUuOTA0ZDY1LjUzNmQ5MjUuNjk2ZDg3LjA0ZDkwNC43MDRkMTA4LjU0NGQ4ODMuNzEyZDEzNC42NTZkODY4Ljg2NGQxNjAuNzY4ZDg1NC4wMTZkMTg0LjgzMmQ4NDEuMjE2ZDIwOC44OTZkODI4LjQxNWQyMjcuODRkODE1LjYxNmQyNDYuNzg0ZDgwMi44MTZkMjU0Ljk3NmQ3ODUuNDA4ZDI2OS4zMTJkNzU0LjY4OGQyOTEuMzI4ZDc0NC45NmQzMTMuMzQ0ZDczNS4yMzJkMzQ5LjE4NGQ3MzUuMjMyZDM5My4yMTZkNzM1LjIzMmQ0MTEuNjQ4ZDc1OC4yNzFkNDMwLjA4ZDc4MS4zMTJkNDMwLjA4ZDgxNi4xMjdkNDMwLjA4ZDg2MS4xODRkNDAyLjk0NGQ4ODkuODU2ZDM3NS44MDhkOTE4LjUyOGQzMzQuODQ4ZDkzOS4wMDhkMzEwLjI3MmQ5NTEuMjk2ZDI5NC45MTJkOTYxLjAyNGQyNzkuNTUyZDk3MC43NTJkMjcwLjMzNmQ5NzkuOTY4ZDI2MS4xMmQ5ODkuMTg0ZDI1OC4wNDhkOTk5LjkzNmQyNTQuOTc2ZDEwMTAuNjg4ZDI1NC45NzZkMTAyNi4wNDhoUjNkNjA3LjIzMlI0ZDYwMC4wNjRSNWQzNy44ODhSNmQ1NDguODY0UjdkLTIxMS45NjhSOGQ1MTAuOTc2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE5MVIxMmQzNy44ODhSMTNkNjA3LjIzMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjc4b1IxZDEwMjRSMmFkNTQ3Ljg0ZDM4Ny4wNzJkNTQ3Ljg0ZDMzNC44NDdkNTc4LjA0OGQzMDIuMDhkNjA4LjI1NmQyNjkuMzEyZDY2Mi41MjhkMjY5LjMxMmQ3MTYuOGQyNjkuMzEyZDc0Ny4wMDhkMzAyLjA4ZDc3Ny4yMTZkMzM0Ljg0N2Q3NzcuMjE2ZDM4Ny4wNzJkNzc3LjIxNmQ5MjguNzY4ZDc3Ny4yMTZkOTg5LjE4NGQ3MzguODE2ZDEwMTUuMjk2ZDcwMC40MTZkMTA0MS40MDdkNjQ0LjA5NmQxMDQxLjQwN2Q2MjAuNTQ0ZDEwNDEuNDA3ZDYwMi4xMTJkMTAzNy4zMTFkNTgzLjY4ZDEwMzMuMjE1ZDU2Ny4yOTZkMTAyMi45NzZkNTUwLjkxMmQxMDEyLjczNmQ1MzUuMDRkOTk0LjgxNmQ1MTkuMTY4ZDk3Ni44OTZkNTAyLjc4NGQ5NDkuMjQ4ZDMwNy4yZDYyNy43MTJkMzA1LjE1MmQ2MjcuNzEyZDMwNS4xNTJkOTE4LjUyOGQzMDUuMTUyZDk3Ny45MmQyNzUuNDU2ZDEwMDkuNjY0ZDI0NS43NmQxMDQxLjQwN2QxOTAuNDY0ZDEwNDEuNDA3ZDEzNS4xNjhkMTA0MS40MDdkMTA1LjQ3MmQxMDA5LjY2NGQ3NS43NzZkOTc3LjkyZDc1Ljc3NmQ5MTguNTI4ZDc1Ljc3NmQzOTUuMjY0ZDc1Ljc3NmQzMzQuODQ3ZDEwOS41NjhkMzAyLjA4ZDE0My4zNmQyNjkuMzEyZDIxMC45NDRkMjY5LjMxMmQyNTMuOTUyZDI2OS4zMTJkMjg1LjE4NGQyODYuMjA3ZDMxNi40MTZkMzAzLjEwNGQzMzguOTQ0ZDM0MC45OTFkNTQ1Ljc5MmQ2OTUuMjk2ZDU0Ny44NGQ2OTUuMjk2ZDU0Ny44NGQzODcuMDcyaFIzZDg1Mi45OTJSNGQ3NzcuMjE2UjVkNzUuNzc2UjZkNzU0LjY4OFI3ZC0xNy40MDhSOGQ2NzguOTEyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTc4UjEyZDc1Ljc3NlIxM2Q4NTIuOTkyUjE0YWkxaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kyaTJpMmkzaTNpM2kzaTJpM2kzaTNpM2kyaTJpMmhnOjE5MG9SMWQxMDI0UjJhZDc4My4zNmQ3MTIuNzA0ZDc4MS4zMTJkNzEyLjcwNGQ2NzIuNzY4ZDg0My43NzZkNzgzLjM2ZDg0My43NzZkNzgzLjM2ZDcxMi43MDRkNjI1LjY2NGQzMzQuODQ3ZDYzNi45MjhkMzExLjI5NWQ2NDYuMTQ0ZDI5Ny40NzJkNjU1LjM2ZDI4My42NDhkNjYzLjU1MmQyNzYuOTkxZDY3MS43NDRkMjcwLjMzNmQ2ODAuNDQ4ZDI2OC4yODhkNjg5LjE1MmQyNjYuMjRkNjk5LjM5MmQyNjYuMjRkNzA5LjYzMmQyNjYuMjRkNzE4LjMzNmQyNzAuODQ3ZDcyNy4wNGQyNzUuNDU2ZDczMy42OTZkMjgyLjExMWQ3NDAuMzUyZDI4OC43NjhkNzQ0LjQ0OGQyOTUuOTM2ZDc0OC41NDRkMzAzLjEwNGQ3NDguNTQ0ZDMwOS4yNDdkNzQ4LjU0NGQzMjMuNTgzZDczNS4yMzJkMzUwLjIwN2Q0MTQuNzJkOTk4LjRkNDAzLjQ1NmQxMDIxLjk1MmQzOTQuMjRkMTAzNS43NzZkMzg1LjAyNGQxMDQ5LjZkMzc2LjgzMmQxMDU2LjI1NmQzNjguNjRkMTA2Mi45MTJkMzU5LjkzNmQxMDY0Ljk2ZDM1MS4yMzJkMTA2Ny4wMDhkMzQwLjk5MmQxMDY3LjAwOGQzMzAuNzUyZDEwNjcuMDA4ZDMyMi4wNDhkMTA2Mi40ZDMxMy4zNDRkMTA1Ny43OTJkMzA2LjY4OGQxMDUxLjEzNmQzMDAuMDMyZDEwNDQuNDhkMjk1LjkzNmQxMDM3LjMxMWQyOTEuODRkMTAzMC4xNDRkMjkxLjg0ZDEwMjRkMjkxLjg0ZDEwMDkuNjY0ZDMwNS4xNTJkOTgzLjA0ZDYyNS42NjRkMzM0Ljg0N2Q3ODMuMzZkOTQyLjA4ZDYyNi42ODhkOTQyLjA4ZDU5Mi44OTZkOTQyLjA4ZDU3OC41NmQ5MjIuNjI0ZDU2NC4yMjRkOTAzLjE2OGQ1NjQuMjI0ZDg3NS41MmQ1NjQuMjI0ZDg1OC4xMTJkNTY5Ljg1NmQ4NDQuMjg4ZDU3NS40ODhkODMwLjQ2NGQ1OTQuOTQ0ZDgwOC45NmQ3NTQuNjg4ZDYzMS44MDhkNzc2LjE5MmQ2MDcuMjMyZDc5Mi4wNjRkNTk4LjAxNmQ4MDcuOTM2ZDU4OC44ZDgzNC41NmQ1ODguOGQ4NzIuNDQ4ZDU4OC44ZDg5Mi40MTZkNjA2LjIwOGQ5MTIuMzg0ZDYyMy42MTZkOTEyLjM4NGQ2NTMuMzEyZDkxMi4zODRkODQzLjc3NmQ5NDIuMDhkODQzLjc3NmQ5NTkuNDg4ZDg1NC41MjhkOTc2Ljg5NmQ4NjUuMjhkOTc2Ljg5NmQ4OTIuOTI4ZDk3Ni44OTZkOTIwLjU3NmQ5NTkuNDg4ZDkzMS4zMjhkOTQyLjA4ZDk0Mi4wOGQ5MTIuMzg0ZDk0Mi4wOGQ5MTIuMzg0ZDk3MC43NTJkOTEyLjM4NGQxMDAwLjQ0OGQ4OTYuNTEyZDEwMTguODhkODgwLjY0ZDEwMzcuMzExZDg0Ny44NzJkMTAzNy4zMTFkODE1LjEwNGQxMDM3LjMxMWQ3OTkuMjMyZDEwMTguODhkNzgzLjM2ZDEwMDAuNDQ4ZDc4My4zNmQ5NzAuNzUyZDc4My4zNmQ5NDIuMDhkMjc0LjQzMmQ1ODkuODI0ZDI3NC40MzJkNTY5LjM0NGQyNjIuNjU2ZDU2Mi42ODhkMjUwLjg4ZDU1Ni4wMzFkMjMwLjRkNTU1LjAwOGQxOTcuNjMyZDU1Mi45NmQxODQuMzJkNTQxLjY5NWQxNzEuMDA4ZDUzMC40MzJkMTcxLjAwOGQ1MTQuMDQ4ZDE3MS4wMDhkNDg4LjQ0OGQxODYuMzY4ZDQ3OC43MmQyMDEuNzI4ZDQ2OC45OTFkMjI1LjI4ZDQ2OC45OTFkMjQxLjY2NGQ0NjguOTkxZDI1NS40ODhkNDYwLjI4OGQyNjkuMzEyZDQ1MS41ODNkMjY5LjMxMmQ0MzMuMTUyZDI2OS4zMTJkNDEyLjY3MmQyNTEuOTA0ZDQwMy40NTZkMjM0LjQ5NmQzOTQuMjRkMjA4Ljg5NmQzOTQuMjRkMTg4LjQxNmQzOTQuMjRkMTc4LjE3NmQ0MDEuOTE5ZDE2Ny45MzZkNDA5LjZkMTUxLjU1MmQ0MzAuMDhkMTM5LjI2NGQ0NDUuNDM5ZDEyOS41MzZkNDUwLjA0OGQxMTkuODA4ZDQ1NC42NTVkMTA0LjQ0OGQ0NTQuNjU1ZDc0Ljc1MmQ0NTQuNjU1ZDYwLjQxNmQ0MzYuNzM2ZDQ2LjA4ZDQxOC44MTZkNDYuMDhkMzk3LjMxMmQ0Ni4wOGQzNTQuMzA0ZDkyLjY3MmQzMjUuMTJkMTM5LjI2NGQyOTUuOTM2ZDIyNy4zMjhkMjk1LjkzNmQyNjYuMjRkMjk1LjkzNmQyOTguNDk2ZDMwNC42NGQzMzAuNzUyZDMxMy4zNDNkMzU0LjMwNGQzMjkuMjE2ZDM3Ny44NTZkMzQ1LjA4N2QzOTEuMTY4ZDM2Ny42MTZkNDA0LjQ4ZDM5MC4xNDRkNDA0LjQ4ZDQxNy43OTJkNDA0LjQ4ZDQ0OC41MTFkMzg5LjEyZDQ3MC41MjhkMzczLjc2ZDQ5Mi41NDRkMzQ1LjA4OGQ1MDAuNzM2ZDM0NS4wODhkNTAyLjc4NGQzNzkuOTA0ZDUxMmQzOTcuODI0ZDUzNi41NzZkNDE1Ljc0NGQ1NjEuMTUyZDQxNS43NDRkNTkzLjkyZDQxNS43NDRkNjE0LjRkNDA4LjA2NGQ2NDBkNDAwLjM4NGQ2NjUuNTk5ZDM3Ny44NTZkNjg4LjEyN2QzNTUuMzI4ZDcxMC42NTZkMzE1LjkwNGQ3MjYuMDE2ZDI3Ni40OGQ3NDEuMzc2ZDIxMS45NjhkNzQxLjM3NmQxNzIuMDMyZDc0MS4zNzZkMTM5LjI2NGQ3MzIuMTZkMTA2LjQ5NmQ3MjIuOTQ0ZDgzLjQ1NmQ3MDcuNTg0ZDYwLjQxNmQ2OTIuMjIzZDQ4LjEyOGQ2NzIuMjU2ZDM1Ljg0ZDY1Mi4yODhkMzUuODRkNjMwLjc4NGQzNS44NGQ2MDIuMTEyZDUxLjcxMmQ1ODUuMjE2ZDY3LjU4NGQ1NjguMzE5ZDk3LjI4ZDU2OC4zMTlkMTIzLjkwNGQ1NjguMzE5ZDEzNC4xNDRkNTgwLjA5NmQxNDQuMzg0ZDU5MS44NzJkMTUxLjA0ZDYwNS42OTVkMTU3LjY5NmQ2MTkuNTJkMTY3LjkzNmQ2MzEuMjk2ZDE3OC4xNzZkNjQzLjA3MmQyMDUuODI0ZDY0My4wNzJkMjQwLjY0ZDY0My4wNzJkMjU3LjUzNmQ2MzAuNzg0ZDI3NC40MzJkNjE4LjQ5NmQyNzQuNDMyZDU4OS44MjRoUjNkMTAyNFI0ZDk3Ni44OTZSNWQzNS44NFI2ZDc1Ny43NlI3ZC00My4wMDhSOGQ3MjEuOTJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTkwUjEyZDM1Ljg0UjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpMmkxaTJpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kyaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjc3b1IxZDEwMjRSMmFkNTgxLjYzMmQzNzEuNzEyZDU4OC44ZDM0NC4wNjNkNTk4LjUyOGQzMjUuNjMxZDYwOC4yNTZkMzA3LjE5OWQ2MjMuMTA0ZDI5NS40MjRkNjM3Ljk1MmQyODMuNjQ4ZDY1OC40MzJkMjc4LjUyOGQ2NzguOTEyZDI3My40MDhkNzA2LjU2ZDI3My40MDhkNzczLjEyZDI3My40MDhkODM0LjU2ZDI3My40MDhkODY1LjI4ZDMwOC43MzZkODk2ZDM0NC4wNjNkODk2ZDQwMS40MDhkODk2ZDkzMS44NGQ4OTZkOTg1LjA4OGQ4NjcuMzI4ZDEwMTEuMmQ4MzguNjU2ZDEwMzcuMzExZDc5MC41MjhkMTAzNy4zMTFkNzQyLjRkMTAzNy4zMTFkNzEzLjcyOGQxMDExLjJkNjg1LjA1NmQ5ODUuMDg4ZDY4NS4wNTZkOTMxLjg0ZDY4NS4wNTZkNTczLjQ0ZDY4My4wMDhkNTczLjQ0ZDU3Ni41MTJkOTcxLjc3NmQ1NjYuMjcyZDEwMDkuNjY0ZDU0Ni4zMDRkMTAyMy40ODhkNTI2LjMzNmQxMDM3LjMxMWQ0ODMuMzI4ZDEwMzcuMzExZDQ0MC4zMmQxMDM3LjMxMWQ0MjAuMzUyZDEwMjMuNDg4ZDQwMC4zODRkMTAwOS42NjRkMzkwLjE0NGQ5NzEuNzc2ZDI4My42NDhkNTczLjQ0ZDI4MS42ZDU3My40NGQyODEuNmQ5MzEuODRkMjgxLjZkOTg1LjA4OGQyNTIuOTI4ZDEwMTEuMmQyMjQuMjU2ZDEwMzcuMzExZDE3Ni4xMjhkMTAzNy4zMTFkMTI4ZDEwMzcuMzExZDk5LjMyOGQxMDExLjJkNzAuNjU2ZDk4NS4wODhkNzAuNjU2ZDkzMS44NGQ3MC42NTZkNDAxLjQwOGQ3MC42NTZkMzQ0LjA2M2QxMDEuMzc2ZDMwOC43MzZkMTMyLjA5NmQyNzMuNDA4ZDE5My41MzZkMjczLjQwOGQyNjAuMDk2ZDI3My40MDhkMjg3Ljc0NGQyNzMuNDA4ZDMwOC4yMjRkMjc4LjUyOGQzMjguNzA0ZDI4My42NDhkMzQzLjA0ZDI5NS40MjRkMzU3LjM3NmQzMDcuMTk5ZDM2Ny42MTZkMzI1LjYzMWQzNzcuODU2ZDM0NC4wNjNkMzg1LjAyNGQzNzEuNzEyZDQ4Mi4zMDRkNzM3LjI4ZDQ4NC4zNTJkNzM3LjI4ZDU4MS42MzJkMzcxLjcxMmhSM2Q5NjYuNjU2UjRkODk2UjVkNzAuNjU2UjZkNzUwLjU5MlI3ZC0xMy4zMTJSOGQ2NzkuOTM2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTc3UjEyZDcwLjY1NlIxM2Q5NjYuNjU2UjE0YWkxaTNpM2kzaTNpMmkzaTNpMmkzaTNpM2kzaTJpMmkyaTNpM2kzaTNpMmkyaTJpM2kzaTNpM2kyaTNpM2kyaTNpM2kzaTNpMmkyaTJoZzoxODlvUjFkMTAyNFIyYWQ0OS4xNTJkNDc1LjEzNWQwZDQ3NS4xMzVkMGQ0MzIuMTI4ZDBkNDA1LjUwNGQxNS44NzJkMzk3LjMxMmQzMS43NDRkMzg5LjEyZDU5LjM5MmQzODkuMTJkNjcuNTg0ZDM4OS4xMmQ3OS4zNmQzODRkOTEuMTM2ZDM3OC44OGQxMDMuNDI0ZDM3MC42ODhkMTE1LjcxMmQzNjIuNDk2ZDEyNi40NjRkMzUzLjI4ZDEzNy4yMTZkMzQ0LjA2M2QxNDMuMzZkMzM0Ljg0N2QxNTUuNjQ4ZDMxNy40MzlkMTcxLjAwOGQzMDYuNjg4ZDE4Ni4zNjhkMjk1LjkzNmQyMDcuODcyZDI5NS45MzZkMjM0LjQ5NmQyOTUuOTM2ZDI0OC44MzJkMzA2LjY4OGQyNjMuMTY4ZDMxNy40MzlkMjYzLjE2OGQzMzguOTQzZDI2My4xNjhkNjc4LjkxMmQyNjMuMTY4ZDcxMS42OGQyNDIuNjg4ZDcyNi41MjhkMjIyLjIwOGQ3NDEuMzc2ZDE5Mi41MTJkNzQxLjM3NmQxNjIuODE2ZDc0MS4zNzZkMTQyLjMzNmQ3MjYuNTI4ZDEyMS44NTZkNzExLjY4ZDEyMS44NTZkNjc4LjkxMmQxMjEuODU2ZDQ3NS4xMzVkNDkuMTUyZDQ3NS4xMzVkNTQzLjc0NGQzMzQuODQ3ZDU1NS4wMDhkMzExLjI5NWQ1NjQuMjI0ZDI5Ny40NzJkNTczLjQ0ZDI4My42NDhkNTgxLjYzMmQyNzYuOTkxZDU4OS44MjRkMjcwLjMzNmQ1OTguNTI4ZDI2OC4yODhkNjA3LjIzMmQyNjYuMjRkNjE3LjQ3MmQyNjYuMjRkNjI3LjcxMmQyNjYuMjRkNjM2LjQxNmQyNzAuODQ3ZDY0NS4xMmQyNzUuNDU2ZDY1MS43NzZkMjgyLjExMWQ2NTguNDMyZDI4OC43NjhkNjYyLjUyOGQyOTUuOTM2ZDY2Ni42MjRkMzAzLjEwNGQ2NjYuNjI0ZDMwOS4yNDdkNjY2LjYyNGQzMjMuNTgzZDY1My4zMTJkMzUwLjIwN2QzMzIuOGQ5OTguNGQzMjEuNTM2ZDEwMjEuOTUyZDMxMi4zMmQxMDM1Ljc3NmQzMDMuMTA0ZDEwNDkuNmQyOTQuOTEyZDEwNTYuMjU2ZDI4Ni43MmQxMDYyLjkxMmQyNzguMDE2ZDEwNjQuOTZkMjY5LjMxMmQxMDY3LjAwOGQyNTkuMDcyZDEwNjcuMDA4ZDI0OC44MzJkMTA2Ny4wMDhkMjQwLjEyOGQxMDYyLjRkMjMxLjQyNGQxMDU3Ljc5MmQyMjQuNzY4ZDEwNTEuMTM2ZDIxOC4xMTJkMTA0NC40OGQyMTQuMDE2ZDEwMzcuMzExZDIwOS45MmQxMDMwLjE0NGQyMDkuOTJkMTAyNGQyMDkuOTJkMTAwOS42NjRkMjIzLjIzMmQ5ODMuMDRkNTQzLjc0NGQzMzQuODQ3ZDkxOS41NTJkOTEzLjQwOGQ5NzYuODk2ZDkxMy40MDhkOTc2Ljg5NmQ5NjguNzA0ZDk3Ni44OTZkMTAyNGQ5MTkuNTUyZDEwMjRkNjQ4LjE5MmQxMDI0ZDYyMS41NjhkMTAyNGQ2MDYuNzJkMTAwOC42NGQ1OTEuODcyZDk5My4yOGQ1OTEuODcyZDk3Mi44ZDU5MS44NzJkOTU4LjQ2NGQ1OTUuNDU2ZDk0Ni42ODhkNTk5LjA0ZDkzNC45MTJkNjEyLjM1MmQ5MjAuMDY0ZDYyNS42NjRkOTA1LjIxNmQ2NTEuNzc2ZDg4NS4yNDhkNjc3Ljg4OGQ4NjUuMjhkNzIyLjk0NGQ4MzUuNTg0ZDc4My4zNmQ3OTUuNjQ4ZDgwNi45MTJkNzc5LjI2NGQ4MTcuMTUyZDc2NS40NGQ4MjcuMzkyZDc1MS42MTZkODI3LjM5MmQ3MzMuMTg0ZDgyNy4zOTJkNzEwLjY1NmQ4MTIuNTQ0ZDY5Ny44NTZkNzk3LjY5NmQ2ODUuMDU2ZDc3Mi4wOTZkNjg1LjA1NmQ3NDQuNDQ4ZDY4NS4wNTZkNzM0LjIwOGQ2OTcuODU2ZDcyMy45NjhkNzEwLjY1NmQ3MTcuMzEyZDcyNi41MjhkNzEwLjY1NmQ3NDIuNGQ3MDAuNDE2ZDc1NS4yZDY5MC4xNzZkNzY4ZDY2Mi41MjhkNzY4ZDYyNi42ODhkNzY4ZDYxMS44NGQ3NTEuNjE2ZDU5Ni45OTJkNzM1LjIzMmQ1OTYuOTkyZDcwOC42MDhkNTk2Ljk5MmQ2ODcuMTA0ZDYwOC43NjhkNjY1LjA4OGQ2MjAuNTQ0ZDY0My4wNzJkNjQzLjA3MmQ2MjUuNjY0ZDY2NS42ZDYwOC4yNTZkNjk5LjM5MmQ1OTcuNTA0ZDczMy4xODRkNTg2Ljc1MmQ3NzguMjRkNTg2Ljc1MmQ4MzEuNDg4ZDU4Ni43NTJkODY3Ljg0ZDU5OS4wNGQ5MDQuMTkyZDYxMS4zMjhkOTI2LjcyZDYzMC43ODRkOTQ5LjI0OGQ2NTAuMjRkOTU4Ljk3NmQ2NzQuODE2ZDk2OC43MDRkNjk5LjM5MmQ5NjguNzA0ZDcyMy45NjhkOTY4LjcwNGQ3NTkuODA4ZDk1My4zNDRkNzg2LjQzMmQ5MzcuOTg0ZDgxMy4wNTZkOTAyLjE0NGQ4MzYuNjA4ZDc4Ni40MzJkOTExLjM2ZDc4Ni40MzJkOTEzLjQwOGQ5MTkuNTUyZDkxMy40MDhoUjNkMTAyNFI0ZDk3Ni44OTZSNWQwUjZkNzU3Ljc2UjdkLTQzLjAwOFI4ZDc1Ny43NlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxODlSMTJkMFIxM2QxMDI0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpMmkyaTFpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTJpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkyaTJoZzo3Nm9SMWQxMDI0UjJhZDU2Ni4yNzJkODMzLjUzNmQ2MTIuMzUyZDgzMy41MzZkNjQwZDg1OC4xMTJkNjY3LjY0OGQ4ODIuNjg4ZDY2Ny42NDhkOTI4Ljc2OGQ2NjcuNjQ4ZDk3NC44NDhkNjQwZDk5OS40MjRkNjEyLjM1MmQxMDI0ZDU2Ni4yNzJkMTAyNGQyMTguMTEyZDEwMjRkMTQ5LjUwNGQxMDI0ZDExNi43MzZkOTkwLjcyZDgzLjk2OGQ5NTcuNDRkODMuOTY4ZDg4My43MTJkODMuOTY4ZDQwMC4zODRkODMuOTY4ZDM0MC45OTFkMTE1LjJkMzA3LjE5OWQxNDYuNDMyZDI3My40MDhkMjAxLjcyOGQyNzMuNDA4ZDI1Ny4wMjRkMjczLjQwOGQyODguMjU2ZDMwNy4xOTlkMzE5LjQ4OGQzNDAuOTkxZDMxOS40ODhkNDAwLjM4NGQzMTkuNDg4ZDgzMy41MzZkNTY2LjI3MmQ4MzMuNTM2aFIzZDY4My4wMDhSNGQ2NjcuNjQ4UjVkODMuOTY4UjZkNzUwLjU5MlI3ZDBSOGQ2NjYuNjI0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTc2UjEyZDgzLjk2OFIxM2Q2ODMuMDA4UjE0YWkxaTNpM2kzaTNpMmkzaTNpMmkzaTNpM2kzaTJpMmhnOjE4OG9SMWQxMDI0UjJhZDc4My4zNmQ3MTIuNzA0ZDc4MS4zMTJkNzEyLjcwNGQ2NzIuNzY4ZDg0My43NzZkNzgzLjM2ZDg0My43NzZkNzgzLjM2ZDcxMi43MDRkNDkuMTUyZDQ3NS4xMzVkMGQ0NzUuMTM1ZDBkNDMyLjEyOGQwZDQwNS41MDRkMTUuODcyZDM5Ny4zMTJkMzEuNzQ0ZDM4OS4xMmQ1OS4zOTJkMzg5LjEyZDY3LjU4NGQzODkuMTJkNzkuMzZkMzg0ZDkxLjEzNmQzNzguODhkMTAzLjQyNGQzNzAuNjg4ZDExNS43MTJkMzYyLjQ5NmQxMjYuNDY0ZDM1My4yOGQxMzcuMjE2ZDM0NC4wNjNkMTQzLjM2ZDMzNC44NDdkMTU1LjY0OGQzMTcuNDM5ZDE3MS4wMDhkMzA2LjY4OGQxODYuMzY4ZDI5NS45MzZkMjA3Ljg3MmQyOTUuOTM2ZDIzNC40OTZkMjk1LjkzNmQyNDguODMyZDMwNi42ODhkMjYzLjE2OGQzMTcuNDM5ZDI2My4xNjhkMzM4Ljk0M2QyNjMuMTY4ZDY3OC45MTJkMjYzLjE2OGQ3MTEuNjhkMjQyLjY4OGQ3MjYuNTI4ZDIyMi4yMDhkNzQxLjM3NmQxOTIuNTEyZDc0MS4zNzZkMTYyLjgxNmQ3NDEuMzc2ZDE0Mi4zMzZkNzI2LjUyOGQxMjEuODU2ZDcxMS42OGQxMjEuODU2ZDY3OC45MTJkMTIxLjg1NmQ0NzUuMTM1ZDQ5LjE1MmQ0NzUuMTM1ZDU2Ny4yOTZkMzM0Ljg0N2Q1NzguNTZkMzExLjI5NWQ1ODcuNzc2ZDI5Ny40NzJkNTk2Ljk5MmQyODMuNjQ4ZDYwNS4xODRkMjc2Ljk5MWQ2MTMuMzc2ZDI3MC4zMzZkNjIyLjA4ZDI2OC4yODhkNjMwLjc4NGQyNjYuMjRkNjQxLjAyNGQyNjYuMjRkNjUxLjI2NGQyNjYuMjRkNjU5Ljk2OGQyNzAuODQ3ZDY2OC42NzJkMjc1LjQ1NmQ2NzUuMzI4ZDI4Mi4xMTFkNjgxLjk4NGQyODguNzY4ZDY4Ni4wOGQyOTUuOTM2ZDY5MC4xNzZkMzAzLjEwNGQ2OTAuMTc2ZDMwOS4yNDdkNjkwLjE3NmQzMjMuNTgzZDY3Ni44NjRkMzUwLjIwN2QzNTYuMzUyZDk5OC40ZDM0NS4wODhkMTAyMS45NTJkMzM1Ljg3MmQxMDM1Ljc3NmQzMjYuNjU2ZDEwNDkuNmQzMTguNDY0ZDEwNTYuMjU2ZDMxMC4yNzJkMTA2Mi45MTJkMzAxLjU2OGQxMDY0Ljk2ZDI5Mi44NjRkMTA2Ny4wMDhkMjgyLjYyNGQxMDY3LjAwOGQyNzIuMzg0ZDEwNjcuMDA4ZDI2My42OGQxMDYyLjRkMjU0Ljk3NmQxMDU3Ljc5MmQyNDguMzJkMTA1MS4xMzZkMjQxLjY2NGQxMDQ0LjQ4ZDIzNy41NjhkMTAzNy4zMTFkMjMzLjQ3MmQxMDMwLjE0NGQyMzMuNDcyZDEwMjRkMjMzLjQ3MmQxMDA5LjY2NGQyNDYuNzg0ZDk4My4wNGQ1NjcuMjk2ZDMzNC44NDdkNzgzLjM2ZDk0Mi4wOGQ2MjYuNjg4ZDk0Mi4wOGQ1OTIuODk2ZDk0Mi4wOGQ1NzguNTZkOTIyLjYyNGQ1NjQuMjI0ZDkwMy4xNjhkNTY0LjIyNGQ4NzUuNTJkNTY0LjIyNGQ4NTguMTEyZDU2OS44NTZkODQ0LjI4OGQ1NzUuNDg4ZDgzMC40NjRkNTk0Ljk0NGQ4MDguOTZkNzU0LjY4OGQ2MzEuODA4ZDc3Ni4xOTJkNjA3LjIzMmQ3OTIuMDY0ZDU5OC4wMTZkODA3LjkzNmQ1ODguOGQ4MzQuNTZkNTg4LjhkODcyLjQ0OGQ1ODguOGQ4OTIuNDE2ZDYwNi4yMDhkOTEyLjM4NGQ2MjMuNjE2ZDkxMi4zODRkNjUzLjMxMmQ5MTIuMzg0ZDg0My43NzZkOTQyLjA4ZDg0My43NzZkOTU5LjQ4OGQ4NTQuNTI4ZDk3Ni44OTZkODY1LjI4ZDk3Ni44OTZkODkyLjkyOGQ5NzYuODk2ZDkyMC41NzZkOTU5LjQ4OGQ5MzEuMzI4ZDk0Mi4wOGQ5NDIuMDhkOTEyLjM4NGQ5NDIuMDhkOTEyLjM4NGQ5NzAuNzUyZDkxMi4zODRkMTAwMC40NDhkODk2LjUxMmQxMDE4Ljg4ZDg4MC42NGQxMDM3LjMxMWQ4NDcuODcyZDEwMzcuMzExZDgxNS4xMDRkMTAzNy4zMTFkNzk5LjIzMmQxMDE4Ljg4ZDc4My4zNmQxMDAwLjQ0OGQ3ODMuMzZkOTcwLjc1MmQ3ODMuMzZkOTQyLjA4aFIzZDEwMjRSNGQ5NzYuODk2UjVkMFI2ZDc1Ny43NlI3ZC00My4wMDhSOGQ3NTcuNzZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTg4UjEyZDBSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kyaTJpMWkzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTJpMWkyaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjc1b1IxZDEwMjRSMmFkNTA0LjgzMmQzNDMuMDM5ZDUyMi4yNGQzMjQuNjA3ZDUzNS41NTJkMzExLjI5NWQ1NDguODY0ZDI5Ny45ODRkNTYxLjE1MmQyODkuMjhkNTczLjQ0ZDI4MC41NzZkNTg1LjcyOGQyNzYuOTkxZDU5OC4wMTZkMjczLjQwOGQ2MTIuMzUyZDI3My40MDhkNjM1LjkwNGQyNzMuNDA4ZDY1NS4zNmQyODIuNjI0ZDY3NC44MTZkMjkxLjg0ZDY4OC42NGQzMDYuNjg4ZDcwMi40NjRkMzIxLjUzNWQ3MDkuNjMyZDMzOC45NDNkNzE2LjhkMzU2LjM1MmQ3MTYuOGQzNzIuNzM2ZDcxNi44ZDM5OC4zMzZkNzA2LjA0OGQ0MTYuMjU2ZDY5NS4yOTZkNDM0LjE3NWQ2NzEuNzQ0ZDQ1Ny43MjdkNTYxLjE1MmQ1NzkuNTg0ZDc0MC4zNTJkODU5LjEzNmQ3NTAuNTkyZDg3NS41MmQ3NTcuMjQ4ZDg5Mi40MTVkNzYzLjkwNGQ5MDkuMzEyZDc2My45MDRkOTI4Ljc2OGQ3NjMuOTA0ZDk1Mi4zMTlkNzUzLjY2NGQ5NzEuNzc2ZDc0My40MjRkOTkxLjIzMmQ3MjcuMDRkMTAwNi4wOGQ3MTAuNjU2ZDEwMjAuOTI4ZDY4OC42NGQxMDI5LjExOWQ2NjYuNjI0ZDEwMzcuMzExZDY0NC4wOTZkMTAzNy4zMTFkNjE2LjQ0OGQxMDM3LjMxMWQ1OTEuODcyZDEwMjcuMDcxZDU2Ny4yOTZkMTAxNi44MzJkNTQ2LjgxNmQ5ODUuMDg4ZDM4Ni4wNDhkNzM2LjI1NmQzMTkuNDg4ZDgwOC45NmQzMTkuNDg4ZDkxMC4zMzZkMzE5LjQ4OGQ5NjkuNzI4ZDI4OC4yNTZkMTAwMy41MmQyNTcuMDI0ZDEwMzcuMzExZDIwMS43MjhkMTAzNy4zMTFkMTQ2LjQzMmQxMDM3LjMxMWQxMTUuMmQxMDAzLjUyZDgzLjk2OGQ5NjkuNzI4ZDgzLjk2OGQ5MTAuMzM2ZDgzLjk2OGQ0MDAuMzg0ZDgzLjk2OGQzNDAuOTkxZDExNS4yZDMwNy4xOTlkMTQ2LjQzMmQyNzMuNDA4ZDIwMS43MjhkMjczLjQwOGQyNTcuMDI0ZDI3My40MDhkMjg4LjI1NmQzMDcuMTk5ZDMxOS40ODhkMzQwLjk5MWQzMTkuNDg4ZDQwMC4zODRkMzE5LjQ4OGQ1NDUuNzkxZDUwNC44MzJkMzQzLjAzOWhSM2Q3NzcuMjE2UjRkNzYzLjkwNFI1ZDgzLjk2OFI2ZDc1MC41OTJSN2QtMTMuMzEyUjhkNjY2LjYyNFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk3NVIxMmQ4My45NjhSMTNkNzc3LjIxNlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTJpMmkzaTNpM2kzaTNpM2kzaTNpMmkyaTJpM2kzaTNpM2kyaTNpM2kzaTNpMmkyaGc6MTg3b1IxZDEwMjRSMmFkMzk5LjM2ZDY3OC45MTJkMzgxLjk1MmQ2NjguNjcyZDM3Ny4zNDRkNjU1Ljg3MmQzNzIuNzM2ZDY0My4wNzJkMzcyLjczNmQ2MjMuNjE2ZDM3Mi43MzZkNjAwLjA2NGQzODUuMDI0ZDU4NC43MDRkMzk3LjMxMmQ1NjkuMzQ0ZDQyMy45MzZkNTY5LjM0NGQ0MzUuMmQ1NjkuMzQ0ZDQ0MS44NTZkNTcxLjkwNGQ0NDguNTEyZDU3NC40NjRkNDY2Ljk0NGQ1ODUuNzI4ZDQ5NS42MTZkNjAzLjEzNmQ1MjQuOGQ2MjEuNTY4ZDU1My45ODRkNjQwZDU3My40NGQ2NTQuMzM2ZDU3OC41NmQ2NTguNDMyZDU4Mi42NTZkNjYzLjU1MmQ1ODYuNzUyZDY2OC42NzJkNTg5LjgyNGQ2NzYuODY0ZDU5Mi44OTZkNjg1LjA1NmQ1OTQuNDMyZDY5OC44OGQ1OTUuOTY4ZDcxMi43MDRkNTk1Ljk2OGQ3MzQuMjA4ZDU5NS45NjhkNzU1LjcxMmQ1OTQuNDMyZDc2OS41MzZkNTkyLjg5NmQ3ODMuMzZkNTg5LjgyNGQ3OTIuMDY0ZDU4Ni43NTJkODAwLjc2OGQ1ODIuNjU2ZDgwNS4zNzZkNTc4LjU2ZDgwOS45ODRkNTczLjQ0ZDgxNC4wNzlkNTUzLjk4NGQ4MjguNDE1ZDUyNC44ZDg0Ni44NDhkNDk1LjYxNmQ4NjUuMjhkNDY2Ljk0NGQ4ODIuNjg4ZDQ0OC41MTJkODkzLjk1MmQ0NDEuODU2ZDg5Ni41MTJkNDM1LjJkODk5LjA3MmQ0MjMuOTM2ZDg5OS4wNzJkMzk3LjMxMmQ4OTkuMDcyZDM4NS4wMjRkODgzLjcxMmQzNzIuNzM2ZDg2OC4zNTJkMzcyLjczNmQ4NDQuOGQzNzIuNzM2ZDgyNS4zNDRkMzc3LjM0NGQ4MTIuNTQ0ZDM4MS45NTJkNzk5Ljc0NGQzOTkuMzZkNzg5LjUwNGQ0OTguNjg4ZDczNC4yMDhkMzk5LjM2ZDY3OC45MTJkMTQwLjI4OGQ2NzguOTEyZDEyMi44OGQ2NjguNjcyZDExOC4yNzJkNjU1Ljg3MmQxMTMuNjY0ZDY0My4wNzJkMTEzLjY2NGQ2MjMuNjE2ZDExMy42NjRkNjAwLjA2NGQxMjUuOTUyZDU4NC43MDRkMTM4LjI0ZDU2OS4zNDRkMTY0Ljg2NGQ1NjkuMzQ0ZDE3Ni4xMjhkNTY5LjM0NGQxODIuNzg0ZDU3MS45MDRkMTg5LjQ0ZDU3NC40NjRkMjA3Ljg3MmQ1ODUuNzI4ZDIzNi41NDRkNjAzLjEzNmQyNjUuNzI4ZDYyMS41NjhkMjk0LjkxMmQ2NDBkMzE0LjM2OGQ2NTQuMzM2ZDMxOS40ODhkNjU4LjQzMmQzMjMuNTg0ZDY2My41NTJkMzI3LjY4ZDY2OC42NzJkMzMwLjc1MmQ2NzYuODY0ZDMzMy44MjRkNjg1LjA1NmQzMzUuMzZkNjk4Ljg4ZDMzNi44OTZkNzEyLjcwNGQzMzYuODk2ZDczNC4yMDhkMzM2Ljg5NmQ3NTUuNzEyZDMzNS4zNmQ3NjkuNTM2ZDMzMy44MjRkNzgzLjM2ZDMzMC43NTJkNzkyLjA2NGQzMjcuNjhkODAwLjc2OGQzMjMuNTg0ZDgwNS4zNzZkMzE5LjQ4OGQ4MDkuOTg0ZDMxNC4zNjhkODE0LjA3OWQyOTQuOTEyZDgyOC40MTVkMjY1LjcyOGQ4NDYuODQ4ZDIzNi41NDRkODY1LjI4ZDIwNy44NzJkODgyLjY4OGQxODkuNDRkODkzLjk1MmQxODIuNzg0ZDg5Ni41MTJkMTc2LjEyOGQ4OTkuMDcyZDE2NC44NjRkODk5LjA3MmQxMzguMjRkODk5LjA3MmQxMjUuOTUyZDg4My43MTJkMTEzLjY2NGQ4NjguMzUyZDExMy42NjRkODQ0LjhkMTEzLjY2NGQ4MjUuMzQ0ZDExOC4yNzJkODEyLjU0NGQxMjIuODhkNzk5Ljc0NGQxNDAuMjg4ZDc4OS41MDRkMjM5LjYxNmQ3MzQuMjA4ZDE0MC4yODhkNjc4LjkxMmhSM2Q2ODMuMDA4UjRkNTk1Ljk2OFI1ZDExMy42NjRSNmQ0NTQuNjU2UjdkMTI0LjkyOFI4ZDM0MC45OTJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTg3UjEyZDExMy42NjRSMTNkNjgzLjAwOFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTJpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTJoZzo3NG9SMWQxMDI0UjJhZDM1Ny4zNzZkNDAwLjM4NGQzNTcuMzc2ZDM0MC45OTFkMzg4LjYwOGQzMDcuMTk5ZDQxOS44NGQyNzMuNDA4ZDQ3NS4xMzZkMjczLjQwOGQ1MzAuNDMyZDI3My40MDhkNTYxLjY2NGQzMDcuMTk5ZDU5Mi44OTZkMzQwLjk5MWQ1OTIuODk2ZDQwMC4zODRkNTkyLjg5NmQ3OTkuNzQ0ZDU5Mi44OTZkODYzLjIzMmQ1NjcuODA4ZDkwOC44ZDU0Mi43MmQ5NTQuMzY3ZDUwMi4yNzJkOTg0LjA2NGQ0NjEuODI0ZDEwMTMuNzZkNDEwLjYyNGQxMDI3LjU4NGQzNTkuNDI0ZDEwNDEuNDA3ZDMwNi4xNzZkMTA0MS40MDdkMjQ0LjczNmQxMDQxLjQwN2QxOTQuMDQ4ZDEwMjUuMDIzZDE0My4zNmQxMDA4LjY0ZDEwNy4wMDhkOTc5LjQ1NmQ3MC42NTZkOTUwLjI3MWQ1MS4yZDkxMC44NDhkMzEuNzQ0ZDg3MS40MjRkMzEuNzQ0ZDgyNS4zNDRkMzEuNzQ0ZDc2Ni45NzZkNTguMzY4ZDczNC4yMDhkODQuOTkyZDcwMS40NGQxNDQuMzg0ZDcwMS40NGQxNjMuODRkNzAxLjQ0ZDE4MS4yNDhkNzA3LjA3MmQxOTguNjU2ZDcxMi43MDRkMjEyLjQ4ZDcyNC40OGQyMjYuMzA0ZDczNi4yNTZkMjM0LjQ5NmQ3NTQuMTc1ZDI0Mi42ODhkNzcyLjA5NmQyNDIuNjg4ZDc5NS42NDhkMjQyLjY4OGQ4MzIuNTEyZDI1OS4wNzJkODQ3Ljg3MmQyNzUuNDU2ZDg2My4yMzJkMjk5LjAwOGQ4NjMuMjMyZDMyNi42NTZkODYzLjIzMmQzNDIuMDE2ZDg0MC43MDRkMzU3LjM3NmQ4MTguMTc1ZDM1Ny4zNzZkNzUzLjY2NGQzNTcuMzc2ZDQwMC4zODRoUjNkNjgzLjAwOFI0ZDU5Mi44OTZSNWQzMS43NDRSNmQ3NTAuNTkyUjdkLTE3LjQwOFI4ZDcxOC44NDhSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpNzRSMTJkMzEuNzQ0UjEzZDY4My4wMDhSMTRhaTFpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJoZzoxODZvUjFkMTAyNFIyYWQyNzUuNDU2ZDQ2Ny45NjdkMjc1LjQ1NmQ0MjIuOTEyZDI2MC42MDhkNDAyLjQzMmQyNDUuNzZkMzgxLjk1MmQyMjIuMjA4ZDM4MS45NTJkMTk4LjY1NmQzODEuOTUyZDE4My44MDhkNDAyLjQzMmQxNjguOTZkNDIyLjkxMmQxNjguOTZkNDY3Ljk2N2QxNjguOTZkNTA4LjkyOGQxODMuODA4ZDUyOC4zODRkMTk4LjY1NmQ1NDcuODM5ZDIyMi4yMDhkNTQ3LjgzOWQyNDUuNzZkNTQ3LjgzOWQyNjAuNjA4ZDUyOC4zODRkMjc1LjQ1NmQ1MDguOTI4ZDI3NS40NTZkNDY3Ljk2N2QyNy42NDhkNDY0Ljg5NWQyNy42NDhkNDIwLjg2NGQ0My4wMDhkMzg5LjEyZDU4LjM2OGQzNTcuMzc2ZDg0LjQ4ZDMzNi44OTVkMTEwLjU5MmQzMTYuNDE1ZDE0NS45MmQzMDYuMTc1ZDE4MS4yNDhkMjk1LjkzNmQyMjIuMjA4ZDI5NS45MzZkMjYzLjE2OGQyOTUuOTM2ZDI5OC40OTZkMzA2LjE3NWQzMzMuODI0ZDMxNi40MTVkMzU5LjkzNmQzMzYuODk1ZDM4Ni4wNDhkMzU3LjM3NmQ0MDEuNDA4ZDM4OS4xMmQ0MTYuNzY4ZDQyMC44NjRkNDE2Ljc2OGQ0NjQuODk1ZDQxNi43NjhkNTA4LjkyOGQ0MDEuNDA4ZDU0MC42NzJkMzg2LjA0OGQ1NzIuNDE1ZDM1OS45MzZkNTkzLjQwOGQzMzMuODI0ZDYxNC40ZDI5OC40OTZkNjI0LjEyN2QyNjMuMTY4ZDYzMy44NTZkMjIyLjIwOGQ2MzMuODU2ZDE4MS4yNDhkNjMzLjg1NmQxNDUuOTJkNjI0LjEyN2QxMTAuNTkyZDYxNC40ZDg0LjQ4ZDU5My40MDhkNTguMzY4ZDU3Mi40MTVkNDMuMDA4ZDU0MC42NzJkMjcuNjQ4ZDUwOC45MjhkMjcuNjQ4ZDQ2NC44OTVoUjNkNDQ0LjQxNlI0ZDQxNi43NjhSNWQyNy42NDhSNmQ3MjguMDY0UjdkMzkwLjE0NFI4ZDcwMC40MTZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTg2UjEyZDI3LjY0OFIxM2Q0NDQuNDE2UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzo3M29SMWQxMDI0UjJhZDgwLjg5NmQ0MDAuMzg0ZDgwLjg5NmQzNDAuOTkxZDExMi4xMjhkMzA3LjE5OWQxNDMuMzZkMjczLjQwOGQxOTguNjU2ZDI3My40MDhkMjUzLjk1MmQyNzMuNDA4ZDI4NS4xODRkMzA3LjE5OWQzMTYuNDE2ZDM0MC45OTFkMzE2LjQxNmQ0MDAuMzg0ZDMxNi40MTZkOTEwLjMzNmQzMTYuNDE2ZDk2OS43MjhkMjg1LjE4NGQxMDAzLjUyZDI1My45NTJkMTAzNy4zMTFkMTk4LjY1NmQxMDM3LjMxMWQxNDMuMzZkMTAzNy4zMTFkMTEyLjEyOGQxMDAzLjUyZDgwLjg5NmQ5NjkuNzI4ZDgwLjg5NmQ5MTAuMzM2ZDgwLjg5NmQ0MDAuMzg0aFIzZDM5Ny4zMTJSNGQzMTYuNDE2UjVkODAuODk2UjZkNzUwLjU5MlI3ZC0xMy4zMTJSOGQ2NjkuNjk2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTczUjEyZDgwLjg5NlIxM2QzOTcuMzEyUjE0YWkxaTNpM2kzaTNpMmkzaTNpM2kzaTJoZzoxODVvUjFkMTAyNFIyYWQ0OS4xNTJkNDc1LjEzNWQwZDQ3NS4xMzVkMGQ0MzIuMTI4ZDBkNDA1LjUwNGQxNS44NzJkMzk3LjMxMmQzMS43NDRkMzg5LjEyZDU5LjM5MmQzODkuMTJkNjcuNTg0ZDM4OS4xMmQ3OS4zNmQzODRkOTEuMTM2ZDM3OC44OGQxMDMuNDI0ZDM3MC42ODhkMTE1LjcxMmQzNjIuNDk2ZDEyNi40NjRkMzUzLjI4ZDEzNy4yMTZkMzQ0LjA2M2QxNDMuMzZkMzM0Ljg0N2QxNTUuNjQ4ZDMxNy40MzlkMTcxLjAwOGQzMDYuNjg4ZDE4Ni4zNjhkMjk1LjkzNmQyMDcuODcyZDI5NS45MzZkMjM0LjQ5NmQyOTUuOTM2ZDI0OC44MzJkMzA2LjY4OGQyNjMuMTY4ZDMxNy40MzlkMjYzLjE2OGQzMzguOTQzZDI2My4xNjhkNjc4LjkxMmQyNjMuMTY4ZDcxMS42OGQyNDIuNjg4ZDcyNi41MjhkMjIyLjIwOGQ3NDEuMzc2ZDE5Mi41MTJkNzQxLjM3NmQxNjIuODE2ZDc0MS4zNzZkMTQyLjMzNmQ3MjYuNTI4ZDEyMS44NTZkNzExLjY4ZDEyMS44NTZkNjc4LjkxMmQxMjEuODU2ZDQ3NS4xMzVkNDkuMTUyZDQ3NS4xMzVoUjNkMzQ1LjA4OFI0ZDI2My4xNjhSNWQwUjZkNzI4LjA2NFI3ZDI4Mi42MjRSOGQ3MjguMDY0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE4NVIxMmQwUjEzZDM0NS4wODhSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kyaTJoZzo3Mm9SMWQxMDI0UjJhZDU0MS42OTZkNDAwLjM4NGQ1NDEuNjk2ZDM0MC45OTFkNTcyLjkyOGQzMDcuMTk5ZDYwNC4xNmQyNzMuNDA4ZDY1OS40NTZkMjczLjQwOGQ3MTQuNzUyZDI3My40MDhkNzQ1Ljk4NGQzMDcuMTk5ZDc3Ny4yMTZkMzQwLjk5MWQ3NzcuMjE2ZDQwMC4zODRkNzc3LjIxNmQ5MTAuMzM2ZDc3Ny4yMTZkOTY5LjcyOGQ3NDUuOTg0ZDEwMDMuNTJkNzE0Ljc1MmQxMDM3LjMxMWQ2NTkuNDU2ZDEwMzcuMzExZDYwNC4xNmQxMDM3LjMxMWQ1NzIuOTI4ZDEwMDMuNTJkNTQxLjY5NmQ5NjkuNzI4ZDU0MS42OTZkOTEwLjMzNmQ1NDEuNjk2ZDczOC4zMDRkMzExLjI5NmQ3MzguMzA0ZDMxMS4yOTZkOTEwLjMzNmQzMTEuMjk2ZDk2OS43MjhkMjgwLjA2NGQxMDAzLjUyZDI0OC44MzJkMTAzNy4zMTFkMTkzLjUzNmQxMDM3LjMxMWQxMzguMjRkMTAzNy4zMTFkMTA3LjAwOGQxMDAzLjUyZDc1Ljc3NmQ5NjkuNzI4ZDc1Ljc3NmQ5MTAuMzM2ZDc1Ljc3NmQ0MDAuMzg0ZDc1Ljc3NmQzNDAuOTkxZDEwNy4wMDhkMzA3LjE5OWQxMzguMjRkMjczLjQwOGQxOTMuNTM2ZDI3My40MDhkMjQ4LjgzMmQyNzMuNDA4ZDI4MC4wNjRkMzA3LjE5OWQzMTEuMjk2ZDM0MC45OTFkMzExLjI5NmQ0MDAuMzg0ZDMxMS4yOTZkNTM5LjY0N2Q1NDEuNjk2ZDUzOS42NDdkNTQxLjY5NmQ0MDAuMzg0aFIzZDg1Mi45OTJSNGQ3NzcuMjE2UjVkNzUuNzc2UjZkNzUwLjU5MlI3ZC0xMy4zMTJSOGQ2NzQuODE2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTcyUjEyZDc1Ljc3NlIxM2Q4NTIuOTkyUjE0YWkxaTNpM2kzaTNpMmkzaTNpM2kzaTJpMmkyaTNpM2kzaTNpMmkzaTNpM2kzaTJpMmkyaGc6MTg0b1IxZDEwMjRSMmFkMTc3LjE1MmQxMDIyLjk3NmQxNjIuODE2ZDEwMzQuMjRkMTUzLjA4OGQxMDQ4LjA2NGQxNDMuMzZkMTA2MS44ODhkMTM2LjE5MmQxMDc0LjE3NmQxNDUuNDA4ZDEwNzMuMTUyZDE1NS4xMzZkMTA3Mi4xMjhkMTY0Ljg2NGQxMDcxLjEwNGQxNzYuMTI4ZDEwNzEuMTA0ZDIwOS45MmQxMDcxLjEwNGQyMzcuMDU2ZDEwODkuMDI0ZDI2NC4xOTJkMTEwNi45NDRkMjY0LjE5MmQxMTQ3LjkwNGQyNjQuMTkyZDExNjYuMzM2ZDI1Ny4wMjRkMTE4My43NDRkMjQ5Ljg1NmQxMjAxLjE1MmQyMzEuOTM2ZDEyMTQuNDY0ZDIxNC4wMTZkMTIyNy43NzZkMTg0LjgzMmQxMjM1Ljk2OGQxNTUuNjQ4ZDEyNDQuMTZkMTEyLjY0ZDEyNDQuMTZkNTUuMjk2ZDEyNDQuMTZkMzQuODE2ZDEyMzEuODcyZDE0LjMzNmQxMjE5LjU4NGQxNC4zMzZkMTIwMi4xNzZkMTQuMzM2ZDExODcuODRkMjAuNDhkMTE4MC4xNmQyNi42MjRkMTE3Mi40OGQ0MS45ODRkMTE3Mi40OGQ1Ni4zMmQxMTcyLjQ4ZDcwLjY1NmQxMTc3LjZkODQuOTkyZDExODIuNzJkMTA4LjU0NGQxMTgyLjcyZDEyMi44OGQxMTgyLjcyZDEzMi4wOTZkMTE3NS4wNGQxNDEuMzEyZDExNjcuMzZkMTQxLjMxMmQxMTUzLjAyNGQxNDEuMzEyZDExNDIuNzg0ZDEzNS4xNjhkMTEzNS4xMDRkMTI5LjAyNGQxMTI3LjQyNGQxMTcuNzZkMTEyNy40MjRkODcuMDRkMTEyNy40MjRkNTguMzY4ZDExMjcuNDI0ZDU4LjM2OGQxMTA0Ljg5NmQ1OC4zNjhkMTA5OC43NTJkNTkuOTA0ZDEwOTMuMTJkNjEuNDRkMTA4Ny40ODhkNjYuMDQ4ZDEwNzguNzg0ZDcwLjY1NmQxMDcwLjA4ZDgwLjM4NGQxMDU2Ljc2OGQ5MC4xMTJkMTA0My40NTVkMTA3LjUyZDEwMjIuOTc2ZDE3Ny4xNTJkMTAyMi45NzZoUjNkMjg0LjY3MlI0ZDI2NC4xOTJSNWQxNC4zMzZSNmQxLjAyNFI3ZC0yMjAuMTZSOGQtMTMuMzEyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE4NFIxMmQxNC4zMzZSMTNkMjg0LjY3MlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpMmhnOjcxb1IxZDEwMjRSMmFkNTE0LjA0OGQ3NzUuMTY4ZDQ4Ny40MjRkNzc1LjE2OGQ0NjUuOTJkNzU1LjJkNDQ0LjQxNmQ3MzUuMjMyZDQ0NC40MTZkNzAyLjQ2NGQ0NDQuNDE2ZDY2NS41OTlkNDY0LjM4NGQ2NDMuNTg0ZDQ4NC4zNTJkNjIxLjU2OGQ1MjMuMjY0ZDYyMS41NjhkNjc0LjgxNmQ2MjEuNTY4ZDcyNy4wNGQ2MjEuNTY4ZDc1Ni4yMjRkNjUzLjgyNGQ3ODUuNDA4ZDY4Ni4wNzlkNzg1LjQwOGQ3MzMuMTg0ZDc4NS40MDhkOTQ0LjEyOGQ3ODUuNDA4ZDk2MS41MzZkNzgxLjgyNGQ5NzguOTQ0ZDc3OC4yNGQ5OTYuMzUyZDc2OS4wMjRkMTAxMC4xNzZkNzU5LjgwOGQxMDI0ZDc0My45MzZkMTAzMi43MDRkNzI4LjA2NGQxMDQxLjQwN2Q3MDMuNDg4ZDEwNDEuNDA3ZDY2Ny42NDhkMTA0MS40MDdkNjQ2LjY1NmQxMDE5LjkwNGQ2MjUuNjY0ZDk5OC40ZDYyNS42NjRkOTY4LjcwNGQ2MjUuNjY0ZDk0OC4yMjRkNjIzLjYxNmQ5NDguMjI0ZDYwOS4yOGQ5NzAuNzUyZDU4Ni4yNGQ5ODguMTZkNTYzLjJkMTAwNS41NjhkNTM0LjUyOGQxMDE3LjM0NGQ1MDUuODU2ZDEwMjkuMTE5ZDQ3NC42MjRkMTAzNS4yNjNkNDQzLjM5MmQxMDQxLjQwN2Q0MTIuNjcyZDEwNDEuNDA3ZDM1MS4yMzJkMTA0MS40MDdkMjg3LjIzMmQxMDIyLjk3NmQyMjMuMjMyZDEwMDQuNTQ0ZDE3MS4wMDhkOTYwZDExOC43ODRkOTE1LjQ1NmQ4Ni4wMTZkODQxLjIxNmQ1My4yNDhkNzY2Ljk3NmQ1My4yNDhkNjU1LjM2ZDUzLjI0OGQ1NTAuOTEyZDg4LjA2NGQ0NzcuNjk2ZDEyMi44OGQ0MDQuNDhkMTc2LjY0ZDM1Ny44ODhkMjMwLjRkMzExLjI5NWQyOTUuOTM2ZDI5MC4zMDRkMzYxLjQ3MmQyNjkuMzEyZDQyMy45MzZkMjY5LjMxMmQ1MTMuMDI0ZDI2OS4zMTJkNTcxLjM5MmQyODguNzY4ZDYyOS43NmQzMDguMjIzZDY2NC4wNjRkMzM1Ljg3MWQ2OTguMzY4ZDM2My41MmQ3MTIuMTkyZDM5My43MjdkNzI2LjAxNmQ0MjMuOTM2ZDcyNi4wMTZkNDQ1LjQzOWQ3MjYuMDE2ZDQ2Mi44NDdkNzE4Ljg0OGQ0ODEuMjhkNzExLjY4ZDQ5OS43MTJkNjk3LjM0NGQ1MTQuNTU5ZDY4My4wMDhkNTI5LjQwOGQ2NjIuMDE2ZDUzOS4xMzZkNjQxLjAyNGQ1NDguODY0ZDYxMy4zNzZkNTQ4Ljg2NGQ1ODQuNzA0ZDU0OC44NjRkNTY3LjI5NmQ1MzQuMDE2ZDU0OS44ODhkNTE5LjE2OGQ1MzIuOTkyZDUwMS4yNDdkNTE2LjA5NmQ0ODMuMzI4ZDQ5My41NjhkNDY4LjQ4ZDQ3MS4wNGQ0NTMuNjMxZDQzMi4xMjhkNDUzLjYzMWQ0MDIuNDMyZDQ1My42MzFkMzc2LjMyZDQ2NC44OTVkMzUwLjIwOGQ0NzYuMTU5ZDMzMC43NTJkNTAxLjI0N2QzMTEuMjk2ZDUyNi4zMzZkMzAwLjAzMmQ1NjUuMjQ4ZDI4OC43NjhkNjA0LjE2ZDI4OC43NjhkNjU5LjQ1NmQyODguNzY4ZDcwNi41NmQyOTUuOTM2ZDc0My45MzVkMzAzLjEwNGQ3ODEuMzEyZDMyMC41MTJkODA3LjkzNmQzMzcuOTJkODM0LjU2ZDM2Ny4xMDRkODQ4Ljg5NmQzOTYuMjg4ZDg2My4yMzJkNDQxLjM0NGQ4NjMuMjMyZDQ5Ni42NGQ4NjMuMjMyZDUyNy44NzJkODQwLjcwNGQ1NTkuMTA0ZDgxOC4xNzVkNTcxLjM5MmQ3NzUuMTY4ZDUxNC4wNDhkNzc1LjE2OGhSM2Q4NTIuOTkyUjRkNzg1LjQwOFI1ZDUzLjI0OFI2ZDc1NC42ODhSN2QtMTcuNDA4UjhkNzAxLjQ0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTcxUjEyZDUzLjI0OFIxM2Q4NTIuOTkyUjE0YWkxaTNpM2kzaTNpMmkzaTNpMmkzaTNpM2kzaTNpM2kyaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaGc6MTgzb1IxZDEwMjRSMmFkODEuOTJkNzI4LjA2NGQ4MS45MmQ2OTEuMmQxMDguMDMyZDY2NS4wODhkMTM0LjE0NGQ2MzguOTc2ZDE3MS4wMDhkNjM4Ljk3NmQyMDcuODcyZDYzOC45NzZkMjMzLjk4NGQ2NjUuMDg4ZDI2MC4wOTZkNjkxLjJkMjYwLjA5NmQ3MjguMDY0ZDI2MC4wOTZkNzY0LjkyOGQyMzMuOTg0ZDc5MS4wNGQyMDcuODcyZDgxNy4xNTJkMTcxLjAwOGQ4MTcuMTUyZDEzNC4xNDRkODE3LjE1MmQxMDguMDMyZDc5MS4wNGQ4MS45MmQ3NjQuOTI4ZDgxLjkyZDcyOC4wNjRoUjNkMzQyLjAxNlI0ZDI2MC4wOTZSNWQ4MS45MlI2ZDM4NS4wMjRSN2QyMDYuODQ4UjhkMzAzLjEwNFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxODNSMTJkODEuOTJSMTNkMzQyLjAxNlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNoZzo3MG9SMWQxMDI0UjJhZDUzMi40OGQ1ODYuNzUyZDU3NS40ODhkNTg2Ljc1MmQ1OTYuNDhkNjEzLjg4N2Q2MTcuNDcyZDY0MS4wMjRkNjE3LjQ3MmQ2NzUuODM5ZDYxNy40NzJkNzEwLjY1NmQ1OTYuNDhkNzM3Ljc5MWQ1NzUuNDg4ZDc2NC45MjhkNTMyLjQ4ZDc2NC45MjhkMzE5LjQ4OGQ3NjQuOTI4ZDMxOS40ODhkOTEwLjMzNmQzMTkuNDg4ZDk2OS43MjhkMjg4LjI1NmQxMDAzLjUyZDI1Ny4wMjRkMTAzNy4zMTFkMjAxLjcyOGQxMDM3LjMxMWQxNDYuNDMyZDEwMzcuMzExZDExNS4yZDEwMDMuNTJkODMuOTY4ZDk2OS43MjhkODMuOTY4ZDkxMC4zMzZkODMuOTY4ZDQyNy4wMDhkODMuOTY4ZDM1My4yOGQxMTYuNzM2ZDMyMGQxNDkuNTA0ZDI4Ni43MmQyMTguMTEyZDI4Ni43MmQ1NTcuMDU2ZDI4Ni43MmQ1ODkuODI0ZDI4Ni43MmQ2MTEuMzI4ZDI5NC40ZDYzMi44MzJkMzAyLjA4ZDY0NS42MzJkMzE0Ljg4ZDY1OC40MzJkMzI3LjY3OWQ2NjMuNTUyZDM0NC41NzZkNjY4LjY3MmQzNjEuNDcyZDY2OC42NzJkMzc4Ljg4ZDY2OC42NzJkMzk2LjI4OGQ2NjMuNTUyZDQxMy4xODNkNjU4LjQzMmQ0MzAuMDhkNjQ1LjYzMmQ0NDIuODhkNjMyLjgzMmQ0NTUuNjc5ZDYxMS4zMjhkNDYzLjM2ZDU4OS44MjRkNDcxLjAzOWQ1NTcuMDU2ZDQ3MS4wMzlkMzE5LjQ4OGQ0NzEuMDM5ZDMxOS40ODhkNTg2Ljc1MmQ1MzIuNDhkNTg2Ljc1MmhSM2Q2ODMuMDA4UjRkNjY4LjY3MlI1ZDgzLjk2OFI2ZDczNy4yOFI3ZC0xMy4zMTJSOGQ2NTMuMzEyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTcwUjEyZDgzLjk2OFIxM2Q2ODMuMDA4UjE0YWkxaTNpM2kzaTNpMmkyaTNpM2kzaTNpMmkzaTNpMmkzaTNpM2kzaTNpM2kzaTNpMmkyaTJoZzoxODJvUjFkMTAyNFIyYWQ0NTQuNjU2ZDM3OC44OGQzNTUuMzI4ZDM3OC44OGQzNTUuMzI4ZDExMjUuMzc2ZDM1NS4zMjhkMTE1My4wMjRkMzM4Ljk0NGQxMTY5LjkyZDMyMi41NmQxMTg2LjgxNmQyOTMuODg4ZDExODYuODE2ZDI2NS4yMTZkMTE4Ni44MTZkMjQ4LjgzMmQxMTY5LjkyZDIzMi40NDhkMTE1My4wMjRkMjMyLjQ0OGQxMTI1LjM3NmQyMzIuNDQ4ZDY0NC4wOTZkMTIwLjgzMmQ2NDQuMDk2ZDYyLjQ2NGQ1OTguMDE2ZDQuMDk2ZDU1MS45MzVkNC4wOTZkNDY4Ljk5MWQ0LjA5NmQ0MTMuNjk2ZDIzLjU1MmQzNzguMzY3ZDQzLjAwOGQzNDMuMDM5ZDc2LjhkMzIyLjU1OWQxMTAuNTkyZDMwMi4wOGQxNTYuNjcyZDI5NC40ZDIwMi43NTJkMjg2LjcyZDI1NmQyODYuNzJkNTE2LjA5NmQyODYuNzJkNTQ0Ljc2OGQyODYuNzJkNTYxLjE1MmQzMDMuNjE2ZDU3Ny41MzZkMzIwLjUxMWQ1NzcuNTM2ZDM0OC4xNTlkNTc3LjUzNmQxMTI1LjM3NmQ1NzcuNTM2ZDExNTMuMDI0ZDU2MS4xNTJkMTE2OS45MmQ1NDQuNzY4ZDExODYuODE2ZDUxNi4wOTZkMTE4Ni44MTZkNDg3LjQyNGQxMTg2LjgxNmQ0NzEuMDRkMTE2OS45MmQ0NTQuNjU2ZDExNTMuMDI0ZDQ1NC42NTZkMTEyNS4zNzZkNDU0LjY1NmQzNzguODhoUjNkNjM0Ljg4UjRkNTc3LjUzNlI1ZDQuMDk2UjZkNzM3LjI4UjdkLTE2Mi44MTZSOGQ3MzMuMTg0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE4MlIxMmQ0LjA5NlIxM2Q2MzQuODhSMTRhaTFpMmkyaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kyaTNpM2kyaTNpM2kzaTNpMmhnOjY5b1IxZDEwMjRSMmFkODMuOTY4ZDQyNy4wMDhkODMuOTY4ZDM1My4yOGQxMTYuNzM2ZDMyMGQxNDkuNTA0ZDI4Ni43MmQyMTguMTEyZDI4Ni43MmQ1OTIuODk2ZDI4Ni43MmQ2NDYuMTQ0ZDI4Ni43MmQ2NzAuNzJkMzEwLjI3MWQ2OTUuMjk2ZDMzMy44MjNkNjk1LjI5NmQzNzIuNzM2ZDY5NS4yOTZkNDExLjY0OGQ2NzAuNzJkNDM1LjE5OWQ2NDYuMTQ0ZDQ1OC43NTFkNTkyLjg5NmQ0NTguNzUxZDMxOS40ODhkNDU4Ljc1MWQzMTkuNDg4ZDU2Mi4xNzVkNTM4LjYyNGQ1NjIuMTc1ZDU5MS44NzJkNTYyLjE3NWQ2MTYuNDQ4ZDU4NS43MjhkNjQxLjAyNGQ2MDkuMjhkNjQxLjAyNGQ2NDguMTkyZDY0MS4wMjRkNjg3LjEwNGQ2MTYuNDQ4ZDcxMC42NTZkNTkxLjg3MmQ3MzQuMjA4ZDUzOC42MjRkNzM0LjIwOGQzMTkuNDg4ZDczNC4yMDhkMzE5LjQ4OGQ4NTEuOTY4ZDYwNC4xNmQ4NTEuOTY4ZDY1Ny40MDhkODUxLjk2OGQ2ODEuOTg0ZDg3NS41MmQ3MDYuNTZkODk5LjA3MmQ3MDYuNTZkOTM3Ljk4NGQ3MDYuNTZkOTc2Ljg5NmQ2ODEuOTg0ZDEwMDAuNDQ4ZDY1Ny40MDhkMTAyNGQ2MDQuMTZkMTAyNGQyMTguMTEyZDEwMjRkMTQ5LjUwNGQxMDI0ZDExNi43MzZkOTkwLjcyZDgzLjk2OGQ5NTcuNDRkODMuOTY4ZDg4My43MTJkODMuOTY4ZDQyNy4wMDhoUjNkNzM5LjMyOFI0ZDcwNi41NlI1ZDgzLjk2OFI2ZDczNy4yOFI3ZDBSOGQ2NTMuMzEyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTY5UjEyZDgzLjk2OFIxM2Q3MzkuMzI4UjE0YWkxaTNpM2kyaTNpM2kzaTNpMmkyaTJpM2kzaTNpM2kyaTJpMmkzaTNpM2kzaTJpM2kzaTJoZzoxODFvUjFkMTAyNFIyYWQ0MTguODE2ZDU3OS41ODRkNDE4LjgxNmQ1MjUuMzEyZDQ0OC41MTJkNTAwLjIyM2Q0NzguMjA4ZDQ3NS4xMzVkNTI0LjI4OGQ0NzUuMTM1ZDU3MC4zNjhkNDc1LjEzNWQ2MDAuMDY0ZDUwMC4yMjNkNjI5Ljc2ZDUyNS4zMTJkNjI5Ljc2ZDU3OS41ODRkNjI5Ljc2ZDkzNi45NmQ2MjkuNzZkOTg2LjExMmQ2MDUuMTg0ZDEwMTEuNzEyZDU4MC42MDhkMTAzNy4zMTFkNTI4LjM4NGQxMDM3LjMxMWQ0ODEuMjhkMTAzNy4zMTFkNDYwLjI4OGQxMDExLjcxMmQ0MzkuMjk2ZDk4Ni4xMTJkNDM0LjE3NmQ5MzcuOTg0ZDQzMi4xMjhkOTM3Ljk4NGQ0MTguODE2ZDk4NS4wODhkMzg5LjEyZDEwMTEuMmQzNTkuNDI0ZDEwMzcuMzExZDMyNy42OGQxMDM3LjMxMWQzMDQuMTI4ZDEwMzcuMzExZDI4OC43NjhkMTAyOC42MDhkMjczLjQwOGQxMDE5LjkwNGQyNjUuMjE2ZDEwMDYuNTkyZDI2My4xNjhkMTAwNi41OTJkMjYzLjE2OGQxMTMxLjUyZDI2My4xNjhkMTE4NS43OTJkMjMzLjQ3MmQxMjEwLjg4ZDIwMy43NzZkMTIzNS45NjhkMTU3LjY5NmQxMjM1Ljk2OGQxMTEuNjE2ZDEyMzUuOTY4ZDgxLjkyZDEyMTAuODhkNTIuMjI0ZDExODUuNzkyZDUyLjIyNGQxMTMxLjUyZDUyLjIyNGQ1NzkuNTg0ZDUyLjIyNGQ1MjUuMzEyZDgxLjkyZDUwMC4yMjNkMTExLjYxNmQ0NzUuMTM1ZDE1Ny42OTZkNDc1LjEzNWQyMDMuNzc2ZDQ3NS4xMzVkMjMzLjQ3MmQ1MDAuMjIzZDI2My4xNjhkNTI1LjMxMmQyNjMuMTY4ZDU3OS41ODRkMjYzLjE2OGQ3ODEuMzEyZDI2My4xNjhkODcxLjQyNGQzNDAuOTkyZDg3MS40MjRkMzc5LjkwNGQ4NzEuNDI0ZDM5OS4zNmQ4NDMuMjY0ZDQxOC44MTZkODE1LjEwNGQ0MTguODE2ZDc2Ni45NzZkNDE4LjgxNmQ1NzkuNTg0aFIzZDY4MS45ODRSNGQ2MjkuNzZSNWQ1Mi4yMjRSNmQ1NDguODY0UjdkLTIxMS45NjhSOGQ0OTYuNjRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTgxUjEyZDUyLjIyNFIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kyaTJpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kyaGc6NjhvUjFkMTAyNFIyYWQzNTIuMjU2ZDgzOS42OGQ0MDMuNDU2ZDgzOS42OGQ0MzYuMjI0ZDgyNy4zOTJkNDY4Ljk5MmQ4MTUuMTA0ZDQ4OC40NDhkNzkxLjU1MmQ1MDcuOTA0ZDc2OGQ1MTUuMDcyZDczMy42OTVkNTIyLjI0ZDY5OS4zOTJkNTIyLjI0ZDY1NS4zNmQ1MjIuMjRkNjExLjMyOGQ1MTUuMDcyZDU3Ny4wMjRkNTA3LjkwNGQ1NDIuNzJkNDg4LjQ0OGQ1MTkuMTY4ZDQ2OC45OTJkNDk1LjYxNmQ0MzYuMjI0ZDQ4My4zMjhkNDAzLjQ1NmQ0NzEuMDM5ZDM1Mi4yNTZkNDcxLjAzOWQzMDAuMDMyZDQ3MS4wMzlkMzAwLjAzMmQ4MzkuNjhkMzUyLjI1NmQ4MzkuNjhkNzAuNjU2ZDQyNy4wMDhkNzAuNjU2ZDM1My4yOGQxMDMuNDI0ZDMyMGQxMzYuMTkyZDI4Ni43MmQyMDQuOGQyODYuNzJkNDA0LjQ4ZDI4Ni43MmQ0OTYuNjRkMjg2LjcyZDU2My4yZDMxNS4zOTFkNjI5Ljc2ZDM0NC4wNjNkNjcyLjc2OGQzOTQuMjRkNzE1Ljc3NmQ0NDQuNDE1ZDczNi43NjhkNTExLjQ4N2Q3NTcuNzZkNTc4LjU2ZDc1Ny43NmQ2NTUuMzZkNzU3Ljc2ZDczMi4xNmQ3MzYuNzY4ZDc5OS4yMzJkNzE1Ljc3NmQ4NjYuMzA0ZDY3Mi43NjhkOTE2LjQ4ZDYyOS43NmQ5NjYuNjU2ZDU2My4yZDk5NS4zMjhkNDk2LjY0ZDEwMjRkNDA0LjQ4ZDEwMjRkMjA0LjhkMTAyNGQxMzYuMTkyZDEwMjRkMTAzLjQyNGQ5OTAuNzJkNzAuNjU2ZDk1Ny40NGQ3MC42NTZkODgzLjcxMmQ3MC42NTZkNDI3LjAwOGhSM2Q3OTYuNjcyUjRkNzU3Ljc2UjVkNzAuNjU2UjZkNzM3LjI4UjdkMFI4ZDY2Ni42MjRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpNjhSMTJkNzAuNjU2UjEzZDc5Ni42NzJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTJpMmkyaTFpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTJoZzoxODBvUjFkMTAyNFIyYWQxNzEuMDA4ZDI1Ny4wMjRkMTk2LjYwOGQyMzQuNDk1ZDIwOS45MmQyMjguODY0ZDIyMy4yMzJkMjIzLjIzMWQyMzguNTkyZDIyMy4yMzFkMjQ4LjgzMmQyMjMuMjMxZDI2MC42MDhkMjI3Ljg0ZDI3Mi4zODRkMjMyLjQ0N2QyODEuNmQyNDEuMTUxZDI5MC44MTZkMjQ5Ljg1NmQyOTYuOTZkMjYxLjEyZDMwMy4xMDRkMjcyLjM4NGQzMDMuMTA0ZDI4NS42OTZkMzAzLjEwNGQzMTYuNDE1ZDI3NC40MzJkMzM5Ljk2N2QxODkuNDRkNDEyLjY3MmQxNzYuMTI4ZDQyMy45MzZkMTY2LjkxMmQ0MzAuNTkyZDE1Ny42OTZkNDM3LjI0N2QxNTAuMDE2ZDQ0MC44MzJkMTQyLjMzNmQ0NDQuNDE1ZDEzNS42OGQ0NDUuNDM5ZDEyOS4wMjRkNDQ2LjQ2M2QxMjEuODU2ZDQ0Ni40NjNkMTEwLjU5MmQ0NDYuNDYzZDk5LjMyOGQ0NDEuODU2ZDg4LjA2NGQ0MzcuMjQ3ZDc4Ljg0OGQ0MjguNTQ0ZDY5LjYzMmQ0MTkuODRkNjMuNDg4ZDQwOC41NzZkNTcuMzQ0ZDM5Ny4zMTJkNTcuMzQ0ZDM4NGQ1Ny4zNDRkMzUzLjI4ZDg2LjAxNmQzMjkuNzI3ZDE3MS4wMDhkMjU3LjAyNGhSM2QyODQuNjcyUjRkMzAzLjEwNFI1ZDU3LjM0NFI2ZDgwMC43NjhSN2Q1NzcuNTM2UjhkNzQzLjQyNFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxODBSMTJkNTcuMzQ0UjEzZDI4NC42NzJSMTRhaTFpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTJoZzo2N29SMWQxMDI0UjJhZDQ1LjA1NmQ2NTUuMzZkNDUuMDU2ZDU1OS4xMDRkNzcuMzEyZDQ4Ni40ZDEwOS41NjhkNDEzLjY5NmQxNjIuMzA0ZDM2NS41NjhkMjE1LjA0ZDMxNy40MzlkMjgzLjY0OGQyOTMuMzc2ZDM1Mi4yNTZkMjY5LjMxMmQ0MjUuOTg0ZDI2OS4zMTJkNDkxLjUyZDI2OS4zMTJkNTQ3LjMyOGQyODYuNzJkNjAzLjEzNmQzMDQuMTI3ZDY0NC4wOTZkMzMzLjMxMmQ2ODUuMDU2ZDM2Mi40OTZkNzA4LjA5NmQzOTkuODcxZDczMS4xMzZkNDM3LjI0N2Q3MzEuMTM2ZDQ3Ny4xODNkNzMxLjEzNmQ1MjEuMjE2ZDcwMC40MTZkNTQ5Ljg4N2Q2NjkuNjk2ZDU3OC41NmQ2MTkuNTJkNTc4LjU2ZDYwMy4xMzZkNTc4LjU2ZDU5MS4zNmQ1NzYuNTEyZDU3OS41ODRkNTc0LjQ2NGQ1NjkuODU2ZDU2Ny44MDhkNTYwLjEyOGQ1NjEuMTUyZDU1MC45MTJkNTQ4Ljg2NGQ1NDEuNjk2ZDUzNi41NzZkNTI5LjQwOGQ1MTcuMTJkNTA1Ljg1NmQ0NzkuMjMyZDQ3OS4yMzJkNDY2LjQzMmQ0NTIuNjA4ZDQ1My42MzFkNDEzLjY5NmQ0NTMuNjMxZDM4Ni4wNDhkNDUzLjYzMWQzNjEuOTg0ZDQ2Ni45NDNkMzM3LjkyZDQ4MC4yNTZkMzE5LjQ4OGQ1MDUuODU2ZDMwMS4wNTZkNTMxLjQ1NmQyOTAuODE2ZDU2OC44MzJkMjgwLjU3NmQ2MDYuMjA4ZDI4MC41NzZkNjU1LjM2ZDI4MC41NzZkNzQ1LjQ3MmQzMTYuNDE2ZDgwMS4yOGQzNTIuMjU2ZDg1Ny4wODhkNDI1Ljk4NGQ4NTcuMDg4ZDQ0Mi4zNjhkODU3LjA4OGQ0NTUuMTY4ZDg1NC4wMTZkNDY3Ljk2OGQ4NTAuOTQ0ZDQ4MC4yNTZkODQyLjc1MmQ0OTIuNTQ0ZDgzNC41NmQ1MDYuMzY4ZDgxOS4yZDUyMC4xOTJkODAzLjg0ZDUzNy42ZDc3OS4yNjRkNTcyLjQxNmQ3MzAuMTEyZDYyMy42MTZkNzMwLjExMmQ2NjkuNjk2ZDczMC4xMTJkNzAxLjQ0ZDc1OC43ODRkNzMzLjE4NGQ3ODcuNDU2ZDczMy4xODRkODMzLjUzNmQ3MzMuMTg0ZDg4MS42NjRkNzAzLjQ4OGQ5MjAuNTc2ZDY3My43OTJkOTU5LjQ4OGQ2MjguNzM2ZDk4Ni4xMTJkNTgzLjY4ZDEwMTIuNzM2ZDUyOS40MDhkMTAyNy4wNzFkNDc1LjEzNmQxMDQxLjQwN2Q0MjUuOTg0ZDEwNDEuNDA3ZDM1Mi4yNTZkMTA0MS40MDdkMjgzLjEzNmQxMDE4Ljg4ZDIxNC4wMTZkOTk2LjM1MmQxNjEuMjhkOTQ4LjczNmQxMDguNTQ0ZDkwMS4xMmQ3Ni44ZDgyOC40MTVkNDUuMDU2ZDc1NS43MTJkNDUuMDU2ZDY1NS4zNmhSM2Q3NTguNzg0UjRkNzMzLjE4NFI1ZDQ1LjA1NlI2ZDc1NC42ODhSN2QtMTcuNDA4UjhkNzA5LjYzMlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk2N1IxMmQ0NS4wNTZSMTNkNzU4Ljc4NFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6MTc5b1IxZDEwMjRSMmFkMjcwLjMzNmQ1ODkuODI0ZDI3MC4zMzZkNTY5LjM0NGQyNTguNTZkNTYyLjY4OGQyNDYuNzg0ZDU1Ni4wMzFkMjI2LjMwNGQ1NTUuMDA4ZDE5My41MzZkNTUyLjk2ZDE4MC4yMjRkNTQxLjY5NWQxNjYuOTEyZDUzMC40MzJkMTY2LjkxMmQ1MTQuMDQ4ZDE2Ni45MTJkNDg4LjQ0OGQxODIuMjcyZDQ3OC43MmQxOTcuNjMyZDQ2OC45OTFkMjIxLjE4NGQ0NjguOTkxZDIzNy41NjhkNDY4Ljk5MWQyNTEuMzkyZDQ2MC4yODhkMjY1LjIxNmQ0NTEuNTgzZDI2NS4yMTZkNDMzLjE1MmQyNjUuMjE2ZDQxMi42NzJkMjQ3LjgwOGQ0MDMuNDU2ZDIzMC40ZDM5NC4yNGQyMDQuOGQzOTQuMjRkMTg0LjMyZDM5NC4yNGQxNzQuMDhkNDAxLjkxOWQxNjMuODRkNDA5LjZkMTQ3LjQ1NmQ0MzAuMDhkMTM1LjE2OGQ0NDUuNDM5ZDEyNS40NGQ0NTAuMDQ4ZDExNS43MTJkNDU0LjY1NWQxMDAuMzUyZDQ1NC42NTVkNzAuNjU2ZDQ1NC42NTVkNTYuMzJkNDM2LjczNmQ0MS45ODRkNDE4LjgxNmQ0MS45ODRkMzk3LjMxMmQ0MS45ODRkMzU0LjMwNGQ4OC41NzZkMzI1LjEyZDEzNS4xNjhkMjk1LjkzNmQyMjMuMjMyZDI5NS45MzZkMjYyLjE0NGQyOTUuOTM2ZDI5NC40ZDMwNC42NGQzMjYuNjU2ZDMxMy4zNDNkMzUwLjIwOGQzMjkuMjE2ZDM3My43NmQzNDUuMDg3ZDM4Ny4wNzJkMzY3LjYxNmQ0MDAuMzg0ZDM5MC4xNDRkNDAwLjM4NGQ0MTcuNzkyZDQwMC4zODRkNDQ4LjUxMWQzODUuMDI0ZDQ3MC41MjhkMzY5LjY2NGQ0OTIuNTQ0ZDM0MC45OTJkNTAwLjczNmQzNDAuOTkyZDUwMi43ODRkMzc1LjgwOGQ1MTJkMzkzLjcyOGQ1MzYuNTc2ZDQxMS42NDhkNTYxLjE1MmQ0MTEuNjQ4ZDU5My45MmQ0MTEuNjQ4ZDYxNC40ZDQwMy45NjhkNjQwZDM5Ni4yODhkNjY1LjU5OWQzNzMuNzZkNjg4LjEyN2QzNTEuMjMyZDcxMC42NTZkMzExLjgwOGQ3MjYuMDE2ZDI3Mi4zODRkNzQxLjM3NmQyMDcuODcyZDc0MS4zNzZkMTY3LjkzNmQ3NDEuMzc2ZDEzNS42OGQ3MzIuMTZkMTAzLjQyNGQ3MjIuOTQ0ZDgwLjM4NGQ3MDcuNTg0ZDU3LjM0NGQ2OTIuMjIzZDQ1LjA1NmQ2NzIuMjU2ZDMyLjc2OGQ2NTIuMjg4ZDMyLjc2OGQ2MzAuNzg0ZDMyLjc2OGQ2MDIuMTEyZDQ4LjY0ZDU4NS4yMTZkNjQuNTEyZDU2OC4zMTlkOTQuMjA4ZDU2OC4zMTlkMTIwLjgzMmQ1NjguMzE5ZDEzMS4wNzJkNTgwLjA5NmQxNDEuMzEyZDU5MS44NzJkMTQ3Ljk2OGQ2MDUuNjk1ZDE1NC42MjRkNjE5LjUyZDE2NC44NjRkNjMxLjI5NmQxNzUuMTA0ZDY0My4wNzJkMjAxLjcyOGQ2NDMuMDcyZDIzNi41NDRkNjQzLjA3MmQyNTMuNDRkNjMwLjc4NGQyNzAuMzM2ZDYxOC40OTZkMjcwLjMzNmQ1ODkuODI0aFIzZDQ0NC40MTZSNGQ0MTEuNjQ4UjVkMzIuNzY4UjZkNzI4LjA2NFI3ZDI4Mi42MjRSOGQ2OTUuMjk2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE3OVIxMmQzMi43NjhSMTNkNDQ0LjQxNlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6NjZvUjFkMTAyNFIyYWQ0MjUuOTg0ZDU4Ni43NTJkNDYwLjhkNTg2Ljc1MmQ0NzkuMjMyZDU2Ni4yNzFkNDk3LjY2NGQ1NDUuNzkxZDQ5Ny42NjRkNTIwLjE5MmQ0OTcuNjY0ZDQ4OS40NzJkNDgwLjc2OGQ0NzEuMDM5ZDQ2My44NzJkNDUyLjYwN2Q0MjUuOTg0ZDQ1Mi42MDdkMzEwLjI3MmQ0NTIuNjA3ZDMxMC4yNzJkNTg2Ljc1MmQ0MjUuOTg0ZDU4Ni43NTJkNDI4LjAzMmQ4NTguMTEyZDQ3MS4wNGQ4NTguMTEyZDQ5Ny4xNTJkODQwLjE5MmQ1MjMuMjY0ZDgyMi4yNzFkNTIzLjI2NGQ3ODYuNDMyZDUyMy4yNjRkNzUwLjU5MmQ0OTcuMTUyZDczMy4xODRkNDcxLjA0ZDcxNS43NzZkNDI4LjAzMmQ3MTUuNzc2ZDMxMC4yNzJkNzE1Ljc3NmQzMTAuMjcyZDg1OC4xMTJkNDI4LjAzMmQ4NTguMTEyZDgwLjg5NmQ0MjcuMDA4ZDgwLjg5NmQzNTMuMjhkMTEzLjY2NGQzMjBkMTQ2LjQzMmQyODYuNzJkMjE1LjA0ZDI4Ni43MmQ0NTkuNzc2ZDI4Ni43MmQ1MzQuNTI4ZDI4Ni43MmQ1ODQuNzA0ZDMwMi4wOGQ2MzQuODhkMzE3LjQzOWQ2NjUuMDg4ZDM0My4wMzlkNjk1LjI5NmQzNjguNjRkNzA4LjA5NmQ0MDIuNDMyZDcyMC44OTZkNDM2LjIyM2Q3MjAuODk2ZDQ3My4wODdkNzIwLjg5NmQ1MzEuNDU2ZDY5Ny44NTZkNTcwLjg4ZDY3NC44MTZkNjEwLjMwNGQ2MTYuNDQ4ZDYyNS42NjRkNjE2LjQ0OGQ2MjcuNzEyZDY4NC4wMzJkNjQwZDcxOC4zMzZkNjg5LjE1MmQ3NTIuNjRkNzM4LjMwNGQ3NTIuNjRkODA2LjkxMmQ3NTIuNjRkODUxLjk2OGQ3MzUuNzQ0ZDg5MS45MDRkNzE4Ljg0OGQ5MzEuODRkNjg1LjA1NmQ5NjEuMDI0ZDY1MS4yNjRkOTkwLjIwOGQ1OTkuMDRkMTAwNy4xMDRkNTQ2LjgxNmQxMDI0ZDQ3Ni4xNmQxMDI0ZDIxNS4wNGQxMDI0ZDE0Ni40MzJkMTAyNGQxMTMuNjY0ZDk5MC43MmQ4MC44OTZkOTU3LjQ0ZDgwLjg5NmQ4ODMuNzEyZDgwLjg5NmQ0MjcuMDA4aFIzZDc5Ni42NzJSNGQ3NTIuNjRSNWQ4MC44OTZSNmQ3MzcuMjhSN2QwUjhkNjU2LjM4NFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk2NlIxMmQ4MC44OTZSMTNkNzk2LjY3MlIxNGFpMWkzaTNpM2kzaTJpMmkyaTFpM2kzaTNpM2kyaTJpMmkxaTNpM2kyaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpMmkzaTNpMmhnOjE3OG9SMWQxMDI0UjJhZDM1Ny4zNzZkNjIyLjU5MmQ0MTQuNzJkNjIyLjU5MmQ0MTQuNzJkNjc3Ljg4N2Q0MTQuNzJkNzMzLjE4NGQzNTcuMzc2ZDczMy4xODRkODYuMDE2ZDczMy4xODRkNTkuMzkyZDczMy4xODRkNDQuNTQ0ZDcxNy44MjRkMjkuNjk2ZDcwMi40NjRkMjkuNjk2ZDY4MS45ODNkMjkuNjk2ZDY2Ny42NDdkMzMuMjhkNjU1Ljg3MmQzNi44NjRkNjQ0LjA5NmQ1MC4xNzZkNjI5LjI0OGQ2My40ODhkNjE0LjRkODkuNmQ1OTQuNDMyZDExNS43MTJkNTc0LjQ2NGQxNjAuNzY4ZDU0NC43NjhkMjIxLjE4NGQ1MDQuODMyZDI0NC43MzZkNDg4LjQ0OGQyNTQuOTc2ZDQ3NC42MjRkMjY1LjIxNmQ0NjAuNzk5ZDI2NS4yMTZkNDQyLjM2N2QyNjUuMjE2ZDQxOS44NGQyNTAuMzY4ZDQwNy4wMzlkMjM1LjUyZDM5NC4yNGQyMDkuOTJkMzk0LjI0ZDE4Mi4yNzJkMzk0LjI0ZDE3Mi4wMzJkNDA3LjAzOWQxNjEuNzkyZDQxOS44NGQxNTUuMTM2ZDQzNS43MTJkMTQ4LjQ4ZDQ1MS41ODNkMTM4LjI0ZDQ2NC4zODRkMTI4ZDQ3Ny4xODNkMTAwLjM1MmQ0NzcuMTgzZDY0LjUxMmQ0NzcuMTgzZDQ5LjY2NGQ0NjAuNzk5ZDM0LjgxNmQ0NDQuNDE1ZDM0LjgxNmQ0MTcuNzkyZDM0LjgxNmQzOTYuMjg4ZDQ2LjU5MmQzNzQuMjcxZDU4LjM2OGQzNTIuMjU2ZDgwLjg5NmQzMzQuODQ3ZDEwMy40MjRkMzE3LjQzOWQxMzcuMjE2ZDMwNi42ODhkMTcxLjAwOGQyOTUuOTM2ZDIxNi4wNjRkMjk1LjkzNmQyNjkuMzEyZDI5NS45MzZkMzA1LjY2NGQzMDguMjIzZDM0Mi4wMTZkMzIwLjUxMWQzNjQuNTQ0ZDMzOS45NjdkMzg3LjA3MmQzNTkuNDI0ZDM5Ni44ZDM4NGQ0MDYuNTI4ZDQwOC41NzZkNDA2LjUyOGQ0MzMuMTUyZDQwNi41MjhkNDY4Ljk5MWQzOTEuMTY4ZDQ5NS42MTZkMzc1LjgwOGQ1MjIuMjRkMzM5Ljk2OGQ1NDUuNzkxZDIyNC4yNTZkNjIwLjU0NGQyMjQuMjU2ZDYyMi41OTJkMzU3LjM3NmQ2MjIuNTkyaFIzZDQ0NC40MTZSNGQ0MTQuNzJSNWQyOS42OTZSNmQ3MjguMDY0UjdkMjkwLjgxNlI4ZDY5OC4zNjhSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTc4UjEyZDI5LjY5NlIxM2Q0NDQuNDE2UjE0YWkxaTNpM2kyaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpMmkyaGc6NjVvUjFkMTAyNFIyYWQzNTEuMjMyZDUwNy45MDRkMzQ5LjE4NGQ1MDcuOTA0ZDI2OS4zMTJkNzc3LjIxNmQ0MzEuMTA0ZDc3Ny4yMTZkMzUxLjIzMmQ1MDcuOTA0ZDIyNi4zMDRkOTI0LjY3MmQyMDkuOTJkOTc4Ljk0NGQyMDAuNzA0ZDEwMTAuNjg4ZDE3MS41MmQxMDI0ZDE0Mi4zMzZkMTAzNy4zMTFkMTE0LjY4OGQxMDM3LjMxMWQ5NC4yMDhkMTAzNy4zMTFkNzUuMjY0ZDEwMzAuMTQ0ZDU2LjMyZDEwMjIuOTc2ZDQwLjk2ZDEwMTAuMTc2ZDI1LjZkOTk3LjM3NmQxNi4zODRkOTc5Ljk2OGQ3LjE2OGQ5NjIuNTZkNy4xNjhkOTQyLjA4ZDcuMTY4ZDkxNi40OGQxOC45NDRkODc5LjEwNGQzMC43MmQ4NDEuNzI4ZDQ0LjAzMmQ4MDQuODY0ZDIwMC43MDRkMzY4LjY0ZDIxOC4xMTJkMzIyLjU1OWQyNDMuMmQyOTcuOTg0ZDI2OC4yODhkMjczLjQwOGQzMTMuMzQ0ZDI3My40MDhkMzg3LjA3MmQyNzMuNDA4ZDQzMi4xMjhkMjczLjQwOGQ0NTcuMjE2ZDI5Ny45ODRkNDgyLjMwNGQzMjIuNTU5ZDQ5OS43MTJkMzY4LjY0ZDY1Ni4zODRkODA0Ljg2NGQ2NjkuNjk2ZDg0MS43MjhkNjgxLjQ3MmQ4NzkuMTA0ZDY5My4yNDhkOTE2LjQ4ZDY5My4yNDhkOTQyLjA4ZDY5My4yNDhkOTYyLjU2ZDY4NC4wMzJkOTc5Ljk2OGQ2NzQuODE2ZDk5Ny4zNzZkNjU5LjQ1NmQxMDEwLjE3NmQ2NDQuMDk2ZDEwMjIuOTc2ZDYyNC42NGQxMDMwLjE0NGQ2MDUuMTg0ZDEwMzcuMzExZDU4NS43MjhkMTAzNy4zMTFkNTU4LjA4ZDEwMzcuMzExZDUyOC44OTZkMTAyNGQ0OTkuNzEyZDEwMTAuNjg4ZDQ5MC40OTZkOTc4Ljk0NGQ0NzQuMTEyZDkyNC42NzJkMjI2LjMwNGQ5MjQuNjcyaFIzZDcwMC40MTZSNGQ2OTMuMjQ4UjVkNy4xNjhSNmQ3NTAuNTkyUjdkLTEzLjMxMlI4ZDc0My40MjRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpNjVSMTJkNy4xNjhSMTNkNzAwLjQxNlIxNGFpMWkyaTJpMmkyaTFpMmkzaTNpM2kzaTNpM2kzaTNpMmkzaTNpMmkzaTNpMmkzaTNpM2kzaTNpM2kzaTNpMmkyaGc6MTc3b1IxZDEwMjRSMmFkNTI1LjMxMmQ4ODguODMyZDU1OC4wOGQ4ODguODMyZDU3Ny41MzZkOTA2LjI0ZDU5Ni45OTJkOTIzLjY0OGQ1OTYuOTkyZDk1Ni40MTVkNTk2Ljk5MmQ5ODkuMTg0ZDU3Ny41MzZkMTAwNi41OTJkNTU4LjA4ZDEwMjRkNTI1LjMxMmQxMDI0ZDg5LjA4OGQxMDI0ZDU2LjMyZDEwMjRkMzYuODY0ZDEwMDYuNTkyZDE3LjQwOGQ5ODkuMTg0ZDE3LjQwOGQ5NTYuNDE1ZDE3LjQwOGQ5MjMuNjQ4ZDM2Ljg2NGQ5MDYuMjRkNTYuMzJkODg4LjgzMmQ4OS4wODhkODg4LjgzMmQ1MjUuMzEyZDg4OC44MzJkMjM5LjYxNmQ1MTYuMDk2ZDIzOS42MTZkNDgzLjMyOGQyNTcuMDI0ZDQ2My44NzFkMjc0LjQzMmQ0NDQuNDE1ZDMwNy4yZDQ0NC40MTVkMzM5Ljk2OGQ0NDQuNDE1ZDM1Ny4zNzZkNDYzLjg3MWQzNzQuNzg0ZDQ4My4zMjhkMzc0Ljc4NGQ1MTYuMDk2ZDM3NC43ODRkNTgzLjY4ZDUyNS4zMTJkNTgzLjY4ZDU1OC4wOGQ1ODMuNjhkNTc3LjUzNmQ2MDEuMDg4ZDU5Ni45OTJkNjE4LjQ5NmQ1OTYuOTkyZDY1MS4yNjRkNTk2Ljk5MmQ2ODQuMDMxZDU3Ny41MzZkNzAxLjQ0ZDU1OC4wOGQ3MTguODQ4ZDUyNS4zMTJkNzE4Ljg0OGQzNzQuNzg0ZDcxOC44NDhkMzc0Ljc4NGQ3ODYuNDMyZDM3NC43ODRkODE5LjJkMzU3LjM3NmQ4MzguNjU2ZDMzOS45NjhkODU4LjExMmQzMDcuMmQ4NTguMTEyZDI3NC40MzJkODU4LjExMmQyNTcuMDI0ZDgzOC42NTZkMjM5LjYxNmQ4MTkuMmQyMzkuNjE2ZDc4Ni40MzJkMjM5LjYxNmQ3MTguODQ4ZDg5LjA4OGQ3MTguODQ4ZDU2LjMyZDcxOC44NDhkMzYuODY0ZDcwMS40NGQxNy40MDhkNjg0LjAzMWQxNy40MDhkNjUxLjI2NGQxNy40MDhkNjE4LjQ5NmQzNi44NjRkNjAxLjA4OGQ1Ni4zMmQ1ODMuNjhkODkuMDg4ZDU4My42OGQyMzkuNjE2ZDU4My42OGQyMzkuNjE2ZDUxNi4wOTZoUjNkNjE0LjRSNGQ1OTYuOTkyUjVkMTcuNDA4UjZkNTc5LjU4NFI3ZDBSOGQ1NjIuMTc2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE3N1IxMmQxNy40MDhSMTNkNjE0LjRSMTRhaTFpM2kzaTNpM2kyaTNpM2kzaTNpMmkxaTNpM2kzaTNpMmkyaTNpM2kzaTNpMmkyaTNpM2kzaTNpMmkyaTNpM2kzaTNpMmkyaGc6NjRvUjFkMTAyNFIyYWQ0OTguNjg4ZDY0OS4yMTZkNDk4LjY4OGQ2MTMuMzc2ZDQ3OS4yMzJkNTg5LjgyNGQ0NTkuNzc2ZDU2Ni4yNzFkNDIwLjg2NGQ1NjYuMjcxZDM5OC4zMzZkNTY2LjI3MWQzNzkuOTA0ZDU3NS40ODhkMzYxLjQ3MmQ1ODQuNzA0ZDM0OC4xNmQ2MDAuMDY0ZDMzNC44NDhkNjE1LjQyNGQzMjcuMTY4ZDYzNS4zOTJkMzE5LjQ4OGQ2NTUuMzZkMzE5LjQ4OGQ2NzYuODY0ZDMxOS40ODhkNzA5LjYzMmQzMzcuNDA4ZDczMy4xODRkMzU1LjMyOGQ3NTYuNzM2ZDM5NC4yNGQ3NTYuNzM2ZDQ0My4zOTJkNzU2LjczNmQ0NzEuMDRkNzI1LjUwNGQ0OTguNjg4ZDY5NC4yNzFkNDk4LjY4OGQ2NDkuMjE2ZDUzNC41MjhkNDk1LjYxNmQ1MzkuNjQ4ZDQ3Mi4wNjNkNTU0LjQ5NmQ0NjUuNDA4ZDU2OS4zNDRkNDU4Ljc1MWQ1ODIuNjU2ZDQ1OC43NTFkNjAxLjA4OGQ0NTguNzUxZDYxMy44ODhkNDcwLjAxNWQ2MjYuNjg4ZDQ4MS4yOGQ2MjYuNjg4ZDUwMi43ODRkNjI2LjY4OGQ1MDcuOTA0ZDYyMy42MTZkNTI3LjM2ZDYyMC41NDRkNTQ2LjgxNmQ2MTYuNDQ4ZDU3Mi40MTVkNjEyLjM1MmQ1OTguMDE2ZDYwNi43MmQ2MjcuMmQ2MDEuMDg4ZDY1Ni4zODRkNTk2Ljk5MmQ2ODEuNDcyZDU5Mi44OTZkNzA2LjU2ZDU4OS44MjRkNzI0Ljk5MmQ1ODYuNzUyZDc0My40MjRkNTg2Ljc1MmQ3NDcuNTJkNTg2Ljc1MmQ3NTUuNzEyZDU5MC44NDhkNzYyLjM2N2Q1OTQuOTQ0ZDc2OS4wMjRkNjA2LjIwOGQ3NjkuMDI0ZDYxOS41MmQ3NjkuMDI0ZDYzNS4zOTJkNzU5LjgwOGQ2NTEuMjY0ZDc1MC41OTJkNjY0LjA2NGQ3MzEuMTM2ZDY3Ni44NjRkNzExLjY4ZDY4NS41NjhkNjgxLjQ3MmQ2OTQuMjcyZDY1MS4yNjRkNjk0LjI3MmQ2MDkuMjhkNjk0LjI3MmQ1NDkuODg3ZDY3NC4zMDRkNTAzLjI5NWQ2NTQuMzM2ZDQ1Ni43MDNkNjE4LjQ5NmQ0MjUuNDcyZDU4Mi42NTZkMzk0LjI0ZDUzMi45OTJkMzc3Ljg1NmQ0ODMuMzI4ZDM2MS40NzJkNDIzLjkzNmQzNjEuNDcyZDM2NC41NDRkMzYxLjQ3MmQzMTIuODMyZDM4NC41MTFkMjYxLjEyZDQwNy41NTJkMjIzLjIzMmQ0NDcuNDg3ZDE4NS4zNDRkNDg3LjQyNGQxNjMuMzI4ZDU0MS4xODRkMTQxLjMxMmQ1OTQuOTQ0ZDE0MS4zMTJkNjU2LjM4NGQxNDEuMzEyZDcyMy45NjhkMTYzLjMyOGQ3NzguMjRkMTg1LjM0NGQ4MzIuNTEyZDIyNC43NjhkODcwLjRkMjY0LjE5MmQ5MDguMjg4ZDMxNy40NGQ5MjguNzY4ZDM3MC42ODhkOTQ5LjI0OGQ0MzMuMTUyZDk0OS4yNDhkNDkxLjUyZDk0OS4yNDhkNTI4LjM4NGQ5MzkuMDA4ZDU2NS4yNDhkOTI4Ljc2OGQ1ODguOGQ5MTUuOTY4ZDYxMi4zNTJkOTAzLjE2OGQ2MjYuNjg4ZDg5Mi45MjhkNjQxLjAyNGQ4ODIuNjg4ZDY1NC4zMzZkODgyLjY4OGQ2NzEuNzQ0ZDg4Mi42ODhkNjgyLjQ5NmQ4OTMuNDRkNjkzLjI0OGQ5MDQuMTkyZDY5My4yNDhkOTE4LjUyOGQ2OTMuMjQ4ZDkzNC45MTJkNjcxLjc0NGQ5NTYuNDE1ZDY1MC4yNGQ5NzcuOTJkNjE0LjRkOTk2Ljg2NGQ1NzguNTZkMTAxNS44MDhkNTMxLjQ1NmQxMDI4LjYwOGQ0ODQuMzUyZDEwNDEuNDA3ZDQzMy4xNTJkMTA0MS40MDdkMzUwLjIwOGQxMDQxLjQwN2QyNzYuOTkyZDEwMTIuNzM2ZDIwMy43NzZkOTg0LjA2NGQxNDguOTkyZDkzMy4zNzZkOTQuMjA4ZDg4Mi42ODhkNjIuNDY0ZDgxMi4wMzFkMzAuNzJkNzQxLjM3NmQzMC43MmQ2NTYuMzg0ZDMwLjcyZDU3My40NGQ2MS45NTJkNTAyLjc4NGQ5My4xODRkNDMyLjEyOGQxNDYuOTQ0ZDM3OS45MDRkMjAwLjcwNGQzMjcuNjc5ZDI3Mi44OTZkMjk4LjQ5NmQzNDUuMDg4ZDI2OS4zMTJkNDI3LjAwOGQyNjkuMzEyZDUwMC43MzZkMjY5LjMxMmQ1NjYuMjcyZDI5MS4zMjhkNjMxLjgwOGQzMTMuMzQzZDY4MS40NzJkMzUzLjc5MmQ3MzEuMTM2ZDM5NC4yNGQ3NTkuODA4ZDQ1Mi4wOTZkNzg4LjQ4ZDUwOS45NTJkNzg4LjQ4ZDU4MC42MDhkNzg4LjQ4ZDYzNy45NTJkNzczLjYzMmQ2ODIuNDk2ZDc1OC43ODRkNzI3LjA0ZDczNC43MmQ3NTkuMjk2ZDcxMC42NTZkNzkxLjU1MmQ2ODEuNDcyZDgxMy41NjhkNjUyLjI4OGQ4MzUuNTg0ZDYyMy42MTZkODQ4Ljg5NmQ1OTQuOTQ0ZDg2Mi4yMDhkNTY5Ljg1NmQ4NjcuODRkNTQ0Ljc2OGQ4NzMuNDcyZDUyOS40MDhkODczLjQ3MmQ0NzEuMDRkODczLjQ3MmQ0NjcuOTY4ZDgyMy4yOTZkNDY1LjkyZDgyMy4yOTZkNDM5LjI5NmQ4NDYuODQ4ZDQxMy42OTZkODYwLjE2ZDM4OC4wOTZkODczLjQ3MmQzNDYuMTEyZDg3My40NzJkMzE1LjM5MmQ4NzMuNDcyZDI4OS4yOGQ4NjEuMTg0ZDI2My4xNjhkODQ4Ljg5NmQyNDQuMjI0ZDgyNi4zNjdkMjI1LjI4ZDgwMy44NGQyMTQuMDE2ZDc3MS41ODRkMjAyLjc1MmQ3MzkuMzI4ZDIwMi43NTJkNjk5LjM5MmQyMDIuNzUyZDY0NS4xMmQyMTkuMTM2ZDU5OS4wNGQyMzUuNTJkNTUyLjk2ZDI2My4xNjhkNTE5LjY4ZDI5MC44MTZkNDg2LjRkMzI3LjE2OGQ0NjcuOTY3ZDM2My41MmQ0NDkuNTM1ZDQwMy40NTZkNDQ5LjUzNWQ0NTAuNTZkNDQ5LjUzNWQ0NzguNzJkNDY1LjQwOGQ1MDYuODhkNDgxLjI4ZDUzMC40MzJkNTE0LjA0OGQ1MzQuNTI4ZDQ5NS42MTZoUjNkODE5LjJSNGQ3ODguNDhSNWQzMC43MlI2ZDc1NC42ODhSN2QtMTcuNDA4UjhkNzIzLjk2OFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk2NFIxMmQzMC43MlIxM2Q4MTkuMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaGc6MTc2b1IxZDEwMjRSMmFkMjc3LjUwNGQ0NTQuNjU1ZDI3Ny41MDRkNDI0Ljk2ZDI1NmQ0MDMuNDU2ZDIzNC40OTZkMzgxLjk1MmQyMDQuOGQzODEuOTUyZDE3NS4xMDRkMzgxLjk1MmQxNTMuNmQ0MDMuNDU2ZDEzMi4wOTZkNDI0Ljk2ZDEzMi4wOTZkNDU0LjY1NWQxMzIuMDk2ZDQ4NC4zNTJkMTUzLjZkNTA1Ljg1NmQxNzUuMTA0ZDUyNy4zNmQyMDQuOGQ1MjcuMzZkMjM0LjQ5NmQ1MjcuMzZkMjU2ZDUwNS44NTZkMjc3LjUwNGQ0ODQuMzUyZDI3Ny41MDRkNDU0LjY1NWQ0Ni4wOGQ0NTQuNjU1ZDQ2LjA4ZDQyMS44ODhkNTguMzY4ZDM5Mi43MDNkNzAuNjU2ZDM2My41MmQ5Mi4xNmQzNDIuMDE1ZDExMy42NjRkMzIwLjUxMWQxNDIuODQ4ZDMwOC4yMjNkMTcyLjAzMmQyOTUuOTM2ZDIwNC44ZDI5NS45MzZkMjM3LjU2OGQyOTUuOTM2ZDI2Ni43NTJkMzA4LjIyM2QyOTUuOTM2ZDMyMC41MTFkMzE3LjQ0ZDM0Mi4wMTVkMzM4Ljk0NGQzNjMuNTJkMzUxLjIzMmQzOTIuNzAzZDM2My41MmQ0MjEuODg4ZDM2My41MmQ0NTQuNjU1ZDM2My41MmQ0ODcuNDI0ZDM1MS4yMzJkNTE2LjYwN2QzMzguOTQ0ZDU0NS43OTFkMzE3LjQ0ZDU2Ny4yOTZkMjk1LjkzNmQ1ODguOGQyNjYuNzUyZDYwMS4wODhkMjM3LjU2OGQ2MTMuMzc2ZDIwNC44ZDYxMy4zNzZkMTcyLjAzMmQ2MTMuMzc2ZDE0Mi44NDhkNjAxLjA4OGQxMTMuNjY0ZDU4OC44ZDkyLjE2ZDU2Ny4yOTZkNzAuNjU2ZDU0NS43OTFkNTguMzY4ZDUxNi42MDdkNDYuMDhkNDg3LjQyNGQ0Ni4wOGQ0NTQuNjU1aFIzZDQwOS42UjRkMzYzLjUyUjVkNDYuMDhSNmQ3MjguMDY0UjdkNDEwLjYyNFI4ZDY4MS45ODRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTc2UjEyZDQ2LjA4UjEzZDQwOS42UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzo2M29SMWQxMDI0UjJhZDE1Ny42OTZkOTE1LjQ1NmQxNTcuNjk2ZDg5MS45MDRkMTY2LjkxMmQ4NzAuOTEyZDE3Ni4xMjhkODQ5LjkyZDE5MS40ODhkODM0LjU2ZDIwNi44NDhkODE5LjJkMjI3Ljg0ZDgwOS45ODRkMjQ4LjgzMmQ4MDAuNzY4ZDI3Mi4zODRkODAwLjc2OGQyOTUuOTM2ZDgwMC43NjhkMzE2LjkyOGQ4MDkuOTg0ZDMzNy45MmQ4MTkuMmQzNTMuMjhkODM0LjU2ZDM2OC42NGQ4NDkuOTJkMzc3Ljg1NmQ4NzAuOTEyZDM4Ny4wNzJkODkxLjkwNGQzODcuMDcyZDkxNS40NTZkMzg3LjA3MmQ5MzkuMDA4ZDM3Ny44NTZkOTYwZDM2OC42NGQ5ODAuOTkyZDM1My4yOGQ5OTYuMzUyZDMzNy45MmQxMDExLjcxMmQzMTYuOTI4ZDEwMjAuOTI4ZDI5NS45MzZkMTAzMC4xNDRkMjcyLjM4NGQxMDMwLjE0NGQyNDguODMyZDEwMzAuMTQ0ZDIyNy44NGQxMDIwLjkyOGQyMDYuODQ4ZDEwMTEuNzEyZDE5MS40ODhkOTk2LjM1MmQxNzYuMTI4ZDk4MC45OTJkMTY2LjkxMmQ5NjBkMTU3LjY5NmQ5MzkuMDA4ZDE1Ny42OTZkOTE1LjQ1NmQzNTIuMjU2ZDQ3OS4yMzJkMzUyLjI1NmQ0NDcuNDg3ZDMzMS43NzZkNDM1LjE5OWQzMTEuMjk2ZDQyMi45MTJkMjgxLjZkNDIyLjkxMmQyNTkuMDcyZDQyMi45MTJkMjM0LjQ5NmQ0MzMuNjY0ZDIwOS45MmQ0NDQuNDE1ZDE4OS40NGQ0NzUuMTM1ZDE2NS44ODhkNTEwLjk3NmQxNDcuOTY4ZDUyMC43MDNkMTMwLjA0OGQ1MzAuNDMyZDEwMS4zNzZkNTMwLjQzMmQ2MC40MTZkNTMwLjQzMmQzMy43OTJkNTA5Ljk1MmQ3LjE2OGQ0ODkuNDcyZDcuMTY4ZDQ0Ny40ODdkNy4xNjhkNDIxLjg4OGQyMy41NTJkMzkxLjE2OGQzOS45MzZkMzYwLjQ0OGQ3NC4yNGQzMzMuMzEyZDEwOC41NDRkMzA2LjE3NWQxNjAuMjU2ZDI4Ny43NDRkMjExLjk2OGQyNjkuMzEyZDI4Mi42MjRkMjY5LjMxMmQzNTQuMzA0ZDI2OS4zMTJkNDA4LjU3NmQyODYuMjA3ZDQ2Mi44NDhkMzAzLjEwNGQ0OTguMTc2ZDMzMS43NzVkNTMzLjUwNGQzNjAuNDQ4ZDU1MS40MjRkMzk3LjgyM2Q1NjkuMzQ0ZDQzNS4xOTlkNTY5LjM0NGQ0NzYuMTU5ZDU2OS4zNDRkNTE5LjE2OGQ1NTUuNTJkNTQ5LjM3NmQ1NDEuNjk2ZDU3OS41ODRkNTIwLjE5MmQ2MDAuNTc2ZDQ5OC42ODhkNjIxLjU2OGQ0NzIuNTc2ZDYzNi40MTVkNDQ2LjQ2NGQ2NTEuMjY0ZDQyMi40ZDY2NC4wNjRkMzk4LjMzNmQ2NzYuODY0ZDM3OS4zOTJkNjg5LjY2NGQzNjAuNDQ4ZDcwMi40NjRkMzUyLjI1NmQ3MTkuODcyZDMzNy45MmQ3NTAuNTkyZDMxNS45MDRkNzYwLjMxOWQyOTMuODg4ZDc3MC4wNDhkMjU4LjA0OGQ3NzAuMDQ4ZDIxNC4wMTZkNzcwLjA0OGQxOTUuNTg0ZDc0Ny4wMDhkMTc3LjE1MmQ3MjMuOTY4ZDE3Ny4xNTJkNjg5LjE1MmQxNzcuMTUyZDY0NC4wOTZkMjA0LjI4OGQ2MTUuNDI0ZDIzMS40MjRkNTg2Ljc1MmQyNzIuMzg0ZDU2Ni4yNzFkMjk2Ljk2ZDU1My45ODNkMzEyLjMyZDU0NC4yNTZkMzI3LjY4ZDUzNC41MjhkMzM2Ljg5NmQ1MjUuMzEyZDM0Ni4xMTJkNTE2LjA5NmQzNDkuMTg0ZDUwNS4zNDNkMzUyLjI1NmQ0OTQuNTkyZDM1Mi4yNTZkNDc5LjIzMmhSM2Q2MDcuMjMyUjRkNTY5LjM0NFI1ZDcuMTY4UjZkNzU0LjY4OFI3ZC02LjE0NFI4ZDc0Ny41MlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk2M1IxMmQ3LjE2OFIxM2Q2MDcuMjMyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzoxNzVvUjFkMTAyNFIyYWQ3LjE2OGQzOTYuMjg4ZC0yMC40OGQzOTYuMjg4ZC0zNy4zNzZkMzc5LjkwNGQtNTQuMjcyZDM2My41MmQtNTQuMjcyZDMzNC44NDdkLTU0LjI3MmQzMDYuMTc1ZC0zNy4zNzZkMjg5Ljc5MmQtMjAuNDhkMjczLjQwOGQ3LjE2OGQyNzMuNDA4ZDI3Ny41MDRkMjczLjQwOGQzMDUuMTUyZDI3My40MDhkMzIyLjA0OGQyODkuNzkyZDMzOC45NDRkMzA2LjE3NWQzMzguOTQ0ZDMzNC44NDdkMzM4Ljk0NGQzNjMuNTJkMzIyLjA0OGQzNzkuOTA0ZDMwNS4xNTJkMzk2LjI4OGQyNzcuNTA0ZDM5Ni4yODhkNy4xNjhkMzk2LjI4OGhSM2QyODQuNjcyUjRkMzM4Ljk0NFI1ZC01NC4yNzJSNmQ3NTAuNTkyUjdkNjI3LjcxMlI4ZDgwNC44NjRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTc1UjEyZC01NC4yNzJSMTNkMjg0LjY3MlIxNGFpMWkzaTNpM2kzaTJpM2kzaTNpM2kyaGc6NjJvUjFkMTAyNFIyYWQ3MS42OGQ1OTUuOTY4ZDU1LjI5NmQ1ODguOGQ0Ni4wOGQ1ODEuMTJkMzYuODY0ZDU3My40NGQzMS43NDRkNTY1LjI0OGQyNi42MjRkNTU3LjA1NmQyNS4wODhkNTQ4Ljg2NGQyMy41NTJkNTQwLjY3MmQyMy41NTJkNTMxLjQ1NmQyMy41NTJkNTAxLjc2ZDM5LjQyNGQ0ODUuODg4ZDU1LjI5NmQ0NzAuMDE1ZDc5Ljg3MmQ0NzAuMDE1ZDkxLjEzNmQ0NzAuMDE1ZDEwMy45MzZkNDcyLjU3NmQxMTYuNzM2ZDQ3NS4xMzVkMTM2LjE5MmQ0ODQuMzUyZDU1Mi45NmQ2NzUuODM5ZDU2OS4zNDRkNjg0LjAzMWQ1ODAuMDk2ZDY5OS4zOTJkNTkwLjg0OGQ3MTQuNzUyZDU5MC44NDhkNzM0LjIwOGQ1OTAuODQ4ZDc1My42NjRkNTgwLjA5NmQ3NjkuMDI0ZDU2OS4zNDRkNzg0LjM4NGQ1NTIuOTZkNzkyLjU3NmQxMzYuMTkyZDk4NC4wNjRkMTE2LjczNmQ5OTMuMjhkMTAzLjkzNmQ5OTUuODRkOTEuMTM2ZDk5OC40ZDc5Ljg3MmQ5OTguNGQ1NS4yOTZkOTk4LjRkMzkuNDI0ZDk4Mi41MjhkMjMuNTUyZDk2Ni42NTZkMjMuNTUyZDkzNi45NmQyMy41NTJkOTI3Ljc0NGQyNS4wODhkOTE5LjU1MmQyNi42MjRkOTExLjM2ZDMxLjc0NGQ5MDMuMTY4ZDM2Ljg2NGQ4OTQuOTc2ZDQ2LjA4ZDg4Ny4yOTZkNTUuMjk2ZDg3OS42MTZkNzEuNjhkODcyLjQ0OGQ0MDEuNDA4ZDczNC4yMDhkNzEuNjhkNTk1Ljk2OGhSM2Q2MTQuNFI0ZDU5MC44NDhSNWQyMy41NTJSNmQ1NTMuOTg0UjdkMjUuNlI4ZDUzMC40MzJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpNjJSMTJkMjMuNTUyUjEzZDYxNC40UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpMmkyaGc6MTc0b1IxZDEwMjRSMmFkNDM1LjJkNjEzLjM3NmQ0NjEuODI0ZDYxMy4zNzZkNDc0LjYyNGQ2MDMuMTM2ZDQ4Ny40MjRkNTkyLjg5NmQ0ODcuNDI0ZDU2Ny4yOTZkNDg3LjQyNGQ1NDEuNjk1ZDQ3NC42MjRkNTMxLjQ1NmQ0NjEuODI0ZDUyMS4yMTZkNDM1LjJkNTIxLjIxNmQzNTAuMjA4ZDUyMS4yMTZkMzUwLjIwOGQ2MTMuMzc2ZDQzNS4yZDYxMy4zNzZkMzgwLjkyOGQ2ODcuMTA0ZDM1MC4yMDhkNjg3LjEwNGQzNTAuMjA4ZDgwOC45NmQzNTAuMjA4ZDgzMi41MTJkMzM2LjM4NGQ4NDQuMjg4ZDMyMi41NmQ4NTYuMDY0ZDMwMy4xMDRkODU2LjA2NGQyODMuNjQ4ZDg1Ni4wNjRkMjY5LjgyNGQ4NDQuMjg4ZDI1NmQ4MzIuNTEyZDI1NmQ4MDguOTZkMjU2ZDQ5NC41OTJkMjU2ZDQ3MS4wMzlkMjcwLjg0OGQ0NTkuMjY0ZDI4NS42OTZkNDQ3LjQ4N2QzMTIuMzJkNDQ3LjQ4N2Q0MzIuMTI4ZDQ0Ny40ODdkNTAyLjc4NGQ0NDcuNDg3ZDU0Mi4yMDhkNDc0LjExMWQ1ODEuNjMyZDUwMC43MzZkNTgxLjYzMmQ1NzIuNDE1ZDU4MS42MzJkNjAxLjA4OGQ1NzMuNDRkNjIyLjA3OWQ1NjUuMjQ4ZDY0My4wNzJkNTUxLjkzNmQ2NTYuODk2ZDUzOC42MjRkNjcwLjcyZDUyMS43MjhkNjc4LjRkNTA0LjgzMmQ2ODYuMDc5ZDQ4Ny40MjRkNjg3LjEwNGQ1NTguMDhkNzgyLjMzNmQ1NjYuMjcyZDc5My42ZDU2OC44MzJkODAyLjMwNGQ1NzEuMzkyZDgxMS4wMDhkNTcxLjM5MmQ4MTkuMmQ1NzEuMzkyZDgzNS41ODRkNTU5LjEwNGQ4NDUuODI0ZDU0Ni44MTZkODU2LjA2NGQ1MjguMzg0ZDg1Ni4wNjRkNTA5Ljk1MmQ4NTYuMDY0ZDQ5OS43MTJkODQ3Ljg3MmQ0ODkuNDcyZDgzOS42OGQ0NzYuMTZkODIxLjI0OGQzODAuOTI4ZDY4Ny4xMDRkNjkxLjJkNjU1LjM2ZDY5MS4yZDU5Ni45OTJkNjY5LjE4NGQ1NDUuNzkxZDY0Ny4xNjhkNDk0LjU5MmQ2MDguNzY4ZDQ1Ni4xOTJkNTcwLjM2OGQ0MTcuNzkyZDUxOS4xNjhkMzk1Ljc3NWQ0NjcuOTY4ZDM3My43NmQ0MDkuNmQzNzMuNzZkMzUxLjIzMmQzNzMuNzZkMzAwLjAzMmQzOTUuNzc1ZDI0OC44MzJkNDE3Ljc5MmQyMTAuNDMyZDQ1Ni4xOTJkMTcyLjAzMmQ0OTQuNTkyZDE1MC4wMTZkNTQ1Ljc5MWQxMjhkNTk2Ljk5MmQxMjhkNjU1LjM2ZDEyOGQ3MTMuNzI4ZDE1MC4wMTZkNzY0LjkyOGQxNzIuMDMyZDgxNi4xMjdkMjEwLjQzMmQ4NTQuNTI4ZDI0OC44MzJkODkyLjkyOGQzMDAuMDMyZDkxNC45NDRkMzUxLjIzMmQ5MzYuOTZkNDA5LjZkOTM2Ljk2ZDQ2Ny45NjhkOTM2Ljk2ZDUxOS4xNjhkOTE0Ljk0NGQ1NzAuMzY4ZDg5Mi45MjhkNjA4Ljc2OGQ4NTQuNTI4ZDY0Ny4xNjhkODE2LjEyN2Q2NjkuMTg0ZDc2NC45MjhkNjkxLjJkNzEzLjcyOGQ2OTEuMmQ2NTUuMzZkMjMuNTUyZDY1NS4zNmQyMy41NTJkNTc1LjQ4OGQ1My43NmQ1MDUuMzQzZDgzLjk2OGQ0MzUuMTk5ZDEzNi43MDRkMzgyLjQ2M2QxODkuNDRkMzI5LjcyN2QyNTkuNTg0ZDI5OS41MmQzMjkuNzI4ZDI2OS4zMTJkNDA5LjZkMjY5LjMxMmQ0ODkuNDcyZDI2OS4zMTJkNTU5LjYxNmQyOTkuNTJkNjI5Ljc2ZDMyOS43MjdkNjgyLjQ5NmQzODIuNDYzZDczNS4yMzJkNDM1LjE5OWQ3NjUuNDRkNTA1LjM0M2Q3OTUuNjQ4ZDU3NS40ODhkNzk1LjY0OGQ2NTUuMzZkNzk1LjY0OGQ3MzUuMjMyZDc2NS40NGQ4MDUuMzc2ZDczNS4yMzJkODc1LjUyZDY4Mi40OTZkOTI4LjI1NmQ2MjkuNzZkOTgwLjk5MmQ1NTkuNjE2ZDEwMTEuMmQ0ODkuNDcyZDEwNDEuNDA3ZDQwOS42ZDEwNDEuNDA3ZDMyOS43MjhkMTA0MS40MDdkMjU5LjU4NGQxMDExLjJkMTg5LjQ0ZDk4MC45OTJkMTM2LjcwNGQ5MjguMjU2ZDgzLjk2OGQ4NzUuNTJkNTMuNzZkODA1LjM3NmQyMy41NTJkNzM1LjIzMmQyMy41NTJkNjU1LjM2aFIzZDgxOS4yUjRkNzk1LjY0OFI1ZDIzLjU1MlI2ZDc1NC42ODhSN2QtMTcuNDA4UjhkNzMxLjEzNlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNzRSMTJkMjMuNTUyUjEzZDgxOS4yUjE0YWkxaTNpM2kzaTNpMmkyaTJpMWkyaTJpM2kzaTNpM2kyaTNpM2kyaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpMmkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6NjFvUjFkMTAyNFIyYWQ1MjUuMzEyZDc4Ny40NTZkNTU4LjA4ZDc4Ny40NTZkNTc3LjUzNmQ4MDQuODY0ZDU5Ni45OTJkODIyLjI3MWQ1OTYuOTkyZDg1NS4wNGQ1OTYuOTkyZDg4Ny44MDhkNTc3LjUzNmQ5MDUuMjE2ZDU1OC4wOGQ5MjIuNjI0ZDUyNS4zMTJkOTIyLjYyNGQ4OS4wODhkOTIyLjYyNGQ1Ni4zMmQ5MjIuNjI0ZDM2Ljg2NGQ5MDUuMjE2ZDE3LjQwOGQ4ODcuODA4ZDE3LjQwOGQ4NTUuMDRkMTcuNDA4ZDgyMi4yNzFkMzYuODY0ZDgwNC44NjRkNTYuMzJkNzg3LjQ1NmQ4OS4wODhkNzg3LjQ1NmQ1MjUuMzEyZDc4Ny40NTZkNTI1LjMxMmQ1NDUuNzkxZDU1OC4wOGQ1NDUuNzkxZDU3Ny41MzZkNTYzLjJkNTk2Ljk5MmQ1ODAuNjA4ZDU5Ni45OTJkNjEzLjM3NmQ1OTYuOTkyZDY0Ni4xNDRkNTc3LjUzNmQ2NjMuNTUyZDU1OC4wOGQ2ODAuOTZkNTI1LjMxMmQ2ODAuOTZkODkuMDg4ZDY4MC45NmQ1Ni4zMmQ2ODAuOTZkMzYuODY0ZDY2My41NTJkMTcuNDA4ZDY0Ni4xNDRkMTcuNDA4ZDYxMy4zNzZkMTcuNDA4ZDU4MC42MDhkMzYuODY0ZDU2My4yZDU2LjMyZDU0NS43OTFkODkuMDg4ZDU0NS43OTFkNTI1LjMxMmQ1NDUuNzkxaFIzZDYxNC40UjRkNTk2Ljk5MlI1ZDE3LjQwOFI2ZDQ3OC4yMDhSN2QxMDEuMzc2UjhkNDYwLjhSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpNjFSMTJkMTcuNDA4UjEzZDYxNC40UjE0YWkxaTNpM2kzaTNpMmkzaTNpM2kzaTJpMWkzaTNpM2kzaTJpM2kzaTNpM2kyaGc6MTczb1IxZDEwMjRSMmFkMjgyLjYyNGQ2MzcuOTUyZDMzMi44ZDYzNy45NTJkMzU1Ljg0ZDY2NC41NzZkMzc4Ljg4ZDY5MS4yZDM3OC44OGQ3MzQuMjA4ZDM3OC44OGQ3NzcuMjE2ZDM1NS44NGQ4MDMuODRkMzMyLjhkODMwLjQ2NGQyODIuNjI0ZDgzMC40NjRkMTE1LjcxMmQ4MzAuNDY0ZDY1LjUzNmQ4MzAuNDY0ZDQyLjQ5NmQ4MDMuODRkMTkuNDU2ZDc3Ny4yMTZkMTkuNDU2ZDczNC4yMDhkMTkuNDU2ZDY5MS4yZDQyLjQ5NmQ2NjQuNTc2ZDY1LjUzNmQ2MzcuOTUyZDExNS43MTJkNjM3Ljk1MmQyODIuNjI0ZDYzNy45NTJoUjNkMzk4LjMzNlI0ZDM3OC44OFI1ZDE5LjQ1NlI2ZDM4Ni4wNDhSN2QxOTMuNTM2UjhkMzY2LjU5MlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNzNSMTJkMTkuNDU2UjEzZDM5OC4zMzZSMTRhaTFpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjYwb1IxZDEwMjRSMmFkNDc4LjIwOGQ0ODQuMzUyZDQ5Ny42NjRkNDc1LjEzNWQ1MTAuNDY0ZDQ3Mi41NzZkNTIzLjI2NGQ0NzAuMDE1ZDUzNC41MjhkNDcwLjAxNWQ1NTkuMTA0ZDQ3MC4wMTVkNTc0Ljk3NmQ0ODUuODg4ZDU5MC44NDhkNTAxLjc2ZDU5MC44NDhkNTMxLjQ1NmQ1OTAuODQ4ZDU0OC44NjRkNTgyLjY1NmQ1NjUuNzZkNTc0LjQ2NGQ1ODIuNjU2ZDU0Mi43MmQ1OTUuOTY4ZDIxMi45OTJkNzM0LjIwOGQ1NDIuNzJkODcyLjQ0OGQ1NzQuNDY0ZDg4Ni43ODRkNTgyLjY1NmQ5MDMuMTY4ZDU5MC44NDhkOTE5LjU1MmQ1OTAuODQ4ZDkzNi45NmQ1OTAuODQ4ZDk2Ni42NTZkNTc0Ljk3NmQ5ODIuNTI4ZDU1OS4xMDRkOTk4LjRkNTM0LjUyOGQ5OTguNGQ1MjMuMjY0ZDk5OC40ZDUxMC40NjRkOTk1Ljg0ZDQ5Ny42NjRkOTkzLjI4ZDQ3OC4yMDhkOTg0LjA2NGQ2MS40NGQ3OTIuNTc2ZDQ1LjA1NmQ3ODQuMzg0ZDM0LjMwNGQ3NjkuMDI0ZDIzLjU1MmQ3NTMuNjY0ZDIzLjU1MmQ3MzQuMjA4ZDIzLjU1MmQ3MTQuNzUyZDM0LjMwNGQ2OTkuMzkyZDQ1LjA1NmQ2ODQuMDMxZDYxLjQ0ZDY3NS44MzlkNDc4LjIwOGQ0ODQuMzUyaFIzZDYxNC40UjRkNTkwLjg0OFI1ZDIzLjU1MlI2ZDU1My45ODRSN2QyNS42UjhkNTMwLjQzMlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk2MFIxMmQyMy41NTJSMTNkNjE0LjRSMTRhaTFpM2kzaTNpM2kzaTNpMmkyaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kyaGc6MTcyb1IxZDEwMjRSMmFkNTE1LjA3MmQ1NDUuNzkxZDU2NS4yNDhkNTQ1Ljc5MWQ1ODEuMTJkNTY0LjIyM2Q1OTYuOTkyZDU4Mi42NTZkNTk2Ljk5MmQ2MjcuNzEyZDU5Ni45OTJkODM1LjU4NGQ1OTYuOTkyZDg2Ny4zMjhkNTgwLjA5NmQ4ODcuMjk2ZDU2My4yZDkwNy4yNjRkNTMyLjQ4ZDkwNy4yNjRkNTAxLjc2ZDkwNy4yNjRkNDg0Ljg2NGQ4ODcuMjk2ZDQ2Ny45NjhkODY3LjMyOGQ0NjcuOTY4ZDgzNS41ODRkNDY3Ljk2OGQ2ODAuOTZkODkuMDg4ZDY4MC45NmQ1Ni4zMmQ2ODAuOTZkMzYuODY0ZDY2My41NTJkMTcuNDA4ZDY0Ni4xNDRkMTcuNDA4ZDYxMy4zNzZkMTcuNDA4ZDU4MC42MDhkMzYuODY0ZDU2My4yZDU2LjMyZDU0NS43OTFkODkuMDg4ZDU0NS43OTFkNTE1LjA3MmQ1NDUuNzkxaFIzZDYxNC40UjRkNTk2Ljk5MlI1ZDE3LjQwOFI2ZDQ3OC4yMDhSN2QxMTYuNzM2UjhkNDYwLjhSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTcyUjEyZDE3LjQwOFIxM2Q2MTQuNFIxNGFpMWkzaTNpMmkzaTNpM2kzaTJpMmkzaTNpM2kzaTJoZzo1OW9SMWQxMDI0UjJhZDU2LjMyZDU4OS44MjRkNTYuMzJkNTY2LjI3MWQ2NS41MzZkNTQ1LjI4ZDc0Ljc1MmQ1MjQuMjg4ZDkwLjExMmQ1MDguOTI4ZDEwNS40NzJkNDkzLjU2OGQxMjYuNDY0ZDQ4NC4zNTJkMTQ3LjQ1NmQ0NzUuMTM1ZDE3MS4wMDhkNDc1LjEzNWQxOTQuNTZkNDc1LjEzNWQyMTUuNTUyZDQ4NC4zNTJkMjM2LjU0NGQ0OTMuNTY4ZDI1MS45MDRkNTA4LjkyOGQyNjcuMjY0ZDUyNC4yODhkMjc2LjQ4ZDU0NS4yOGQyODUuNjk2ZDU2Ni4yNzFkMjg1LjY5NmQ1ODkuODI0ZDI4NS42OTZkNjEzLjM3NmQyNzYuNDhkNjM0LjM2N2QyNjcuMjY0ZDY1NS4zNmQyNTEuOTA0ZDY3MC43MmQyMzYuNTQ0ZDY4Ni4wNzlkMjE1LjU1MmQ2OTUuMjk2ZDE5NC41NmQ3MDQuNTEyZDE3MS4wMDhkNzA0LjUxMmQxNDcuNDU2ZDcwNC41MTJkMTI2LjQ2NGQ2OTUuMjk2ZDEwNS40NzJkNjg2LjA3OWQ5MC4xMTJkNjcwLjcyZDc0Ljc1MmQ2NTUuMzZkNjUuNTM2ZDYzNC4zNjdkNTYuMzJkNjEzLjM3NmQ1Ni4zMmQ1ODkuODI0ZDU2LjMyZDkxMS4zNmQ1Ni4zMmQ4ODguODMyZDY0LjUxMmQ4NjguODY0ZDcyLjcwNGQ4NDguODk2ZDg3LjU1MmQ4MzMuNTM2ZDEwMi40ZDgxOC4xNzVkMTIyLjg4ZDgwOS40NzJkMTQzLjM2ZDgwMC43NjhkMTY3LjkzNmQ4MDAuNzY4ZDE5MC40NjRkODAwLjc2OGQyMTIuNDhkODA5LjQ3MmQyMzQuNDk2ZDgxOC4xNzVkMjUyLjQxNmQ4MzcuMTJkMjcwLjMzNmQ4NTYuMDY0ZDI4MS4wODhkODg3LjI5NmQyOTEuODRkOTE4LjUyOGQyOTEuODRkOTYzLjU4NGQyOTEuODRkMTAyMC45MjhkMjczLjQwOGQxMDYwLjg2NGQyNTQuOTc2ZDExMDAuOGQyMjcuODRkMTEyNS4zNzZkMjAwLjcwNGQxMTQ5Ljk1MmQxNjkuNDcyZDExNjEuMjE2ZDEzOC4yNGQxMTcyLjQ4ZDExMi42NGQxMTcyLjQ4ZDg0Ljk5MmQxMTcyLjQ4ZDczLjIxNmQxMTU3LjEyZDYxLjQ0ZDExNDEuNzZkNjEuNDRkMTEyNy40MjRkNjEuNDRkMTEwNS45MmQ3NC43NTJkMTA5My42MzJkODguMDY0ZDEwODEuMzQ0ZDEyMS44NTZkMTA3My4xNTJkMTQ4LjQ4ZDEwNjcuMDA4ZDE2NC44NjRkMTA1MS42NDhkMTgxLjI0OGQxMDM2LjI4OGQxODEuMjQ4ZDEwMDQuNTQ0ZDE2Ni45MTJkMTAxMS43MTJkMTQ1LjQwOGQxMDExLjcxMmQxMjIuODhkMTAxMS43MTJkMTA1Ljk4NGQxMDAzLjUyZDg5LjA4OGQ5OTUuMzI4ZDc4LjMzNmQ5ODEuNTA0ZDY3LjU4NGQ5NjcuNjhkNjEuOTUyZDk0OS4yNDhkNTYuMzJkOTMwLjgxNmQ1Ni4zMmQ5MTEuMzZoUjNkMzQyLjAxNlI0ZDI5MS44NFI1ZDU2LjMyUjZkNTQ4Ljg2NFI3ZC0xNDguNDhSOGQ0OTIuNTQ0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTU5UjEyZDU2LjMyUjEzZDM0Mi4wMTZSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjE3MW9SMWQxMDI0UjJhZDU0Mi43MmQ3ODkuNTA0ZDU2MC4xMjhkNzk5Ljc0NGQ1NjQuNzM2ZDgxMi41NDRkNTY5LjM0NGQ4MjUuMzQ0ZDU2OS4zNDRkODQ0LjhkNTY5LjM0NGQ4NjguMzUyZDU1Ny4wNTZkODgzLjcxMmQ1NDQuNzY4ZDg5OS4wNzJkNTE4LjE0NGQ4OTkuMDcyZDUwNi44OGQ4OTkuMDcyZDUwMC4yMjRkODk2LjUxMmQ0OTMuNTY4ZDg5My45NTJkNDc1LjEzNmQ4ODIuNjg4ZDQ0Ni40NjRkODY1LjI4ZDQxNy4yOGQ4NDYuODQ4ZDM4OC4wOTZkODI4LjQxNWQzNjguNjRkODE0LjA3OWQzNjMuNTJkODA5Ljk4NGQzNTkuNDI0ZDgwNS4zNzZkMzU1LjMyOGQ4MDAuNzY4ZDM1Mi4yNTZkNzkyLjA2NGQzNDkuMTg0ZDc4My4zNmQzNDcuNjQ4ZDc2OS41MzZkMzQ2LjExMmQ3NTUuNzEyZDM0Ni4xMTJkNzM0LjIwOGQzNDYuMTEyZDcxMi43MDRkMzQ3LjY0OGQ2OTguODhkMzQ5LjE4NGQ2ODUuMDU2ZDM1Mi4yNTZkNjc2Ljg2NGQzNTUuMzI4ZDY2OC42NzJkMzU5LjQyNGQ2NjMuNTUyZDM2My41MmQ2NTguNDMyZDM2OC42NGQ2NTQuMzM2ZDM4OC4wOTZkNjQwZDQxNy4yOGQ2MjEuNTY4ZDQ0Ni40NjRkNjAzLjEzNmQ0NzUuMTM2ZDU4NS43MjhkNDkzLjU2OGQ1NzQuNDY0ZDUwMC4yMjRkNTcxLjkwNGQ1MDYuODhkNTY5LjM0NGQ1MTguMTQ0ZDU2OS4zNDRkNTQ0Ljc2OGQ1NjkuMzQ0ZDU1Ny4wNTZkNTg0LjcwNGQ1NjkuMzQ0ZDYwMC4wNjRkNTY5LjM0NGQ2MjMuNjE2ZDU2OS4zNDRkNjQzLjA3MmQ1NjQuNzM2ZDY1NS44NzJkNTYwLjEyOGQ2NjguNjcyZDU0Mi43MmQ2NzguOTEyZDQ0My4zOTJkNzM0LjIwOGQ1NDIuNzJkNzg5LjUwNGQyODMuNjQ4ZDc4OS41MDRkMzAxLjA1NmQ3OTkuNzQ0ZDMwNS42NjRkODEyLjU0NGQzMTAuMjcyZDgyNS4zNDRkMzEwLjI3MmQ4NDQuOGQzMTAuMjcyZDg2OC4zNTJkMjk3Ljk4NGQ4ODMuNzEyZDI4NS42OTZkODk5LjA3MmQyNTkuMDcyZDg5OS4wNzJkMjQ3LjgwOGQ4OTkuMDcyZDI0MS4xNTJkODk2LjUxMmQyMzQuNDk2ZDg5My45NTJkMjE2LjA2NGQ4ODIuNjg4ZDE4Ny4zOTJkODY1LjI4ZDE1OC4yMDhkODQ2Ljg0OGQxMjkuMDI0ZDgyOC40MTVkMTA5LjU2OGQ4MTQuMDc5ZDEwNC40NDhkODA5Ljk4NGQxMDAuMzUyZDgwNS4zNzZkOTYuMjU2ZDgwMC43NjhkOTMuMTg0ZDc5Mi4wNjRkOTAuMTEyZDc4My4zNmQ4OC41NzZkNzY5LjUzNmQ4Ny4wNGQ3NTUuNzEyZDg3LjA0ZDczNC4yMDhkODcuMDRkNzEyLjcwNGQ4OC41NzZkNjk4Ljg4ZDkwLjExMmQ2ODUuMDU2ZDkzLjE4NGQ2NzYuODY0ZDk2LjI1NmQ2NjguNjcyZDEwMC4zNTJkNjYzLjU1MmQxMDQuNDQ4ZDY1OC40MzJkMTA5LjU2OGQ2NTQuMzM2ZDEyOS4wMjRkNjQwZDE1OC4yMDhkNjIxLjU2OGQxODcuMzkyZDYwMy4xMzZkMjE2LjA2NGQ1ODUuNzI4ZDIzNC40OTZkNTc0LjQ2NGQyNDEuMTUyZDU3MS45MDRkMjQ3LjgwOGQ1NjkuMzQ0ZDI1OS4wNzJkNTY5LjM0NGQyODUuNjk2ZDU2OS4zNDRkMjk3Ljk4NGQ1ODQuNzA0ZDMxMC4yNzJkNjAwLjA2NGQzMTAuMjcyZDYyMy42MTZkMzEwLjI3MmQ2NDMuMDcyZDMwNS42NjRkNjU1Ljg3MmQzMDEuMDU2ZDY2OC42NzJkMjgzLjY0OGQ2NzguOTEyZDE4NC4zMmQ3MzQuMjA4ZDI4My42NDhkNzg5LjUwNGhSM2Q2ODMuMDA4UjRkNTY5LjM0NFI1ZDg3LjA0UjZkNDU0LjY1NlI3ZDEyNC45MjhSOGQzNjcuNjE2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE3MVIxMmQ4Ny4wNFIxM2Q2ODMuMDA4UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpMmkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpMmhnOjU4b1IxZDEwMjRSMmFkNTYuMzJkNTg5LjgyNGQ1Ni4zMmQ1NjYuMjcxZDY1LjUzNmQ1NDUuMjhkNzQuNzUyZDUyNC4yODhkOTAuMTEyZDUwOC45MjhkMTA1LjQ3MmQ0OTMuNTY4ZDEyNi40NjRkNDg0LjM1MmQxNDcuNDU2ZDQ3NS4xMzVkMTcxLjAwOGQ0NzUuMTM1ZDE5NC41NmQ0NzUuMTM1ZDIxNS41NTJkNDg0LjM1MmQyMzYuNTQ0ZDQ5My41NjhkMjUxLjkwNGQ1MDguOTI4ZDI2Ny4yNjRkNTI0LjI4OGQyNzYuNDhkNTQ1LjI4ZDI4NS42OTZkNTY2LjI3MWQyODUuNjk2ZDU4OS44MjRkMjg1LjY5NmQ2MTMuMzc2ZDI3Ni40OGQ2MzQuMzY3ZDI2Ny4yNjRkNjU1LjM2ZDI1MS45MDRkNjcwLjcyZDIzNi41NDRkNjg2LjA3OWQyMTUuNTUyZDY5NS4yOTZkMTk0LjU2ZDcwNC41MTJkMTcxLjAwOGQ3MDQuNTEyZDE0Ny40NTZkNzA0LjUxMmQxMjYuNDY0ZDY5NS4yOTZkMTA1LjQ3MmQ2ODYuMDc5ZDkwLjExMmQ2NzAuNzJkNzQuNzUyZDY1NS4zNmQ2NS41MzZkNjM0LjM2N2Q1Ni4zMmQ2MTMuMzc2ZDU2LjMyZDU4OS44MjRkNTYuMzJkOTE1LjQ1NmQ1Ni4zMmQ4OTEuOTA0ZDY1LjUzNmQ4NzAuOTEyZDc0Ljc1MmQ4NDkuOTJkOTAuMTEyZDgzNC41NmQxMDUuNDcyZDgxOS4yZDEyNi40NjRkODA5Ljk4NGQxNDcuNDU2ZDgwMC43NjhkMTcxLjAwOGQ4MDAuNzY4ZDE5NC41NmQ4MDAuNzY4ZDIxNS41NTJkODA5Ljk4NGQyMzYuNTQ0ZDgxOS4yZDI1MS45MDRkODM0LjU2ZDI2Ny4yNjRkODQ5LjkyZDI3Ni40OGQ4NzAuOTEyZDI4NS42OTZkODkxLjkwNGQyODUuNjk2ZDkxNS40NTZkMjg1LjY5NmQ5MzkuMDA4ZDI3Ni40OGQ5NjBkMjY3LjI2NGQ5ODAuOTkyZDI1MS45MDRkOTk2LjM1MmQyMzYuNTQ0ZDEwMTEuNzEyZDIxNS41NTJkMTAyMC45MjhkMTk0LjU2ZDEwMzAuMTQ0ZDE3MS4wMDhkMTAzMC4xNDRkMTQ3LjQ1NmQxMDMwLjE0NGQxMjYuNDY0ZDEwMjAuOTI4ZDEwNS40NzJkMTAxMS43MTJkOTAuMTEyZDk5Ni4zNTJkNzQuNzUyZDk4MC45OTJkNjUuNTM2ZDk2MGQ1Ni4zMmQ5MzkuMDA4ZDU2LjMyZDkxNS40NTZoUjNkMzQyLjAxNlI0ZDI4NS42OTZSNWQ1Ni4zMlI2ZDU0OC44NjRSN2QtNi4xNDRSOGQ0OTIuNTQ0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTU4UjEyZDU2LjMyUjEzZDM0Mi4wMTZSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzoxNzBvUjFkMTAyNFIyYWQyNzcuNTA0ZDQ3NS4xMzVkMjcwLjMzNmQ0ODIuMzA0ZDI1OS4wNzJkNDg1Ljg4OGQyNDcuODA4ZDQ4OS40NzJkMjM1LjUyZDQ5MS41MmQyMjMuMjMyZDQ5My41NjhkMjEwLjQzMmQ0OTUuMTA0ZDE5Ny42MzJkNDk2LjY0ZDE4OC40MTZkNDk5LjcxMmQxNjguOTZkNTA1Ljg1NmQxNjguOTZkNTI4LjM4NGQxNjguOTZkNTQ0Ljc2OGQxODEuNzZkNTUyLjQ0OGQxOTQuNTZkNTYwLjEyN2QyMTEuOTY4ZDU2MC4xMjdkMjQxLjY2NGQ1NjAuMTI3ZDI1OS41ODRkNTQ2LjMwNGQyNzcuNTA0ZDUzMi40OGQyNzcuNTA0ZDUxNS4wNzJkMjc3LjUwNGQ0NzUuMTM1ZDQxMi42NzJkNTMxLjQ1NmQ0MTIuNjcyZDU0OC44NjRkNDE0LjcyZDU2My4yZDQxNi43NjhkNTc3LjUzNmQ0MTYuNzY4ZDU4OC44ZDQxNi43NjhkNjEyLjM1MmQzOTYuOGQ2MjMuMTA0ZDM3Ni44MzJkNjMzLjg1NmQzNTEuMjMyZDYzMy44NTZkMzE1LjM5MmQ2MzMuODU2ZDMwMC4wMzJkNjE5LjAwOGQyODQuNjcyZDYwNC4xNmQyODEuNmQ1ODIuNjU2ZDI2MS4xMmQ2MTAuMzA0ZDIyNy44NGQ2MjIuMDc5ZDE5NC41NmQ2MzMuODU2ZDE1OC43MmQ2MzMuODU2ZDEwMC4zNTJkNjMzLjg1NmQ2NGQ2MTAuODE2ZDI3LjY0OGQ1ODcuNzc2ZDI3LjY0OGQ1MzQuNTI4ZDI3LjY0OGQ1MTUuMDcyZDM2Ljg2NGQ0OTcuMTUyZDQ2LjA4ZDQ3OS4yMzJkNjcuNTg0ZDQ2NS45MTlkODkuMDg4ZDQ1Mi42MDdkMTI1LjQ0ZDQ0My45MDRkMTYxLjc5MmQ0MzUuMTk5ZDIxNi4wNjRkNDMyLjEyOGQyNDYuNzg0ZDQzMC4wOGQyNjIuMTQ0ZDQyMy45MzZkMjc3LjUwNGQ0MTcuNzkyZDI3Ny41MDRkNDAxLjQwOGQyNzcuNTA0ZDM2OS42NjRkMjIyLjIwOGQzNjkuNjY0ZDE5OS42OGQzNjkuNjY0ZDE4NC44MzJkMzc2LjMxOWQxNjkuOTg0ZDM4Mi45NzZkMTU3LjE4NGQzOTEuNjc5ZDE0NC4zODRkNDAwLjM4NGQxMzIuMDk2ZDQwNy4wMzlkMTE5LjgwOGQ0MTMuNjk2ZDEwMi40ZDQxMy42OTZkNTkuMzkyZDQxMy42OTZkNTkuMzkyZDM2OC42NGQ1OS4zOTJkMzUzLjI4ZDczLjIxNmQzMzkuOTY3ZDg3LjA0ZDMyNi42NTVkMTEwLjA4ZDMxNi45MjhkMTMzLjEyZDMwNy4xOTlkMTYzLjMyOGQzMDEuNTY4ZDE5My41MzZkMjk1LjkzNmQyMjcuMzI4ZDI5NS45MzZkMjU0Ljk3NmQyOTUuOTM2ZDI4Ny4yMzJkMjk5LjUyZDMxOS40ODhkMzAzLjEwNGQzNDcuNjQ4ZDMxMy4zNDNkMzc1LjgwOGQzMjMuNTgzZDM5NC4yNGQzNDIuNTI4ZDQxMi42NzJkMzYxLjQ3MmQ0MTIuNjcyZDM5MS4xNjhkNDEyLjY3MmQ1MzEuNDU2aFIzZDQ0NC40MTZSNGQ0MTYuNzY4UjVkMjcuNjQ4UjZkNzI4LjA2NFI3ZDM5MC4xNDRSOGQ3MDAuNDE2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE3MFIxMmQyNy42NDhSMTNkNDQ0LjQxNlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmhnOjU3b1IxZDEwMjRSMmFkNDI1Ljk4NGQ1NDEuNjk1ZDQyNS45ODRkNTI0LjI4OGQ0MTkuODRkNTA3LjM5MWQ0MTMuNjk2ZDQ5MC40OTZkNDAxLjkyZDQ3Ny42OTZkMzkwLjE0NGQ0NjQuODk1ZDM3My4yNDhkNDU3LjIxNmQzNTYuMzUyZDQ0OS41MzVkMzMzLjgyNGQ0NDkuNTM1ZDMxMi4zMmQ0NDkuNTM1ZDI5NC45MTJkNDU3LjIxNmQyNzcuNTA0ZDQ2NC44OTVkMjY2LjI0ZDQ3Ny42OTZkMjU0Ljk3NmQ0OTAuNDk2ZDI0OC44MzJkNTA3LjM5MWQyNDIuNjg4ZDUyNC4yODhkMjQyLjY4OGQ1NDEuNjk1ZDI0Mi42ODhkNTgzLjY4ZDI2Ni43NTJkNjA4Ljc2OGQyOTAuODE2ZDYzMy44NTZkMzMzLjgyNGQ2MzMuODU2ZDM1Ni4zNTJkNjMzLjg1NmQzNzMuMjQ4ZDYyNi4xNzVkMzkwLjE0NGQ2MTguNDk2ZDQwMS45MmQ2MDUuMTg0ZDQxMy42OTZkNTkxLjg3MmQ0MTkuODRkNTc1LjQ4OGQ0MjUuOTg0ZDU1OS4xMDRkNDI1Ljk4NGQ1NDEuNjk1ZDI4NS42OTZkNzY5LjAyNGQyMzEuNDI0ZDc2OS4wMjRkMTg1Ljg1NmQ3NTQuMTc1ZDE0MC4yODhkNzM5LjMyOGQxMDcuNTJkNzEwLjE0NGQ3NC43NTJkNjgwLjk2ZDU2LjMyZDYzOC40NjRkMzcuODg4ZDU5NS45NjhkMzcuODg4ZDU0MC42NzJkMzcuODg4ZDQ4OC40NDhkNTYuODMyZDQ0My45MDRkNzUuNzc2ZDM5OS4zNmQxMTIuNjRkMzY2LjU5MmQxNDkuNTA0ZDMzMy44MjNkMjAzLjI2NGQzMTQuODhkMjU3LjAyNGQyOTUuOTM2ZDMyNi42NTZkMjk1LjkzNmQ0ODMuMzI4ZDI5NS45MzZkNTY0LjczNmQzODkuNjMxZDY0Ni4xNDRkNDgzLjMyOGQ2NDYuMTQ0ZDY1OC40MzJkNjQ2LjE0NGQ3NDAuMzUyZDYyOC4yMjRkODA5Ljk4NGQ2MTAuMzA0ZDg3OS42MTZkNTcwLjM2OGQ5MzAuMzA0ZDUzMC40MzJkOTgwLjk5MmQ0NjcuNDU2ZDEwMDkuMTUyZDQwNC40OGQxMDM3LjMxMWQzMTQuMzY4ZDEwMzcuMzExZDI4OC43NjhkMTAzNy4zMTFkMjQ5LjM0NGQxMDMxLjE2N2QyMDkuOTJkMTAyNS4wMjNkMTcyLjU0NGQxMDEwLjE3NmQxMzUuMTY4ZDk5NS4zMjhkMTA4LjAzMmQ5NjkuNzI4ZDgwLjg5NmQ5NDQuMTI4ZDgwLjg5NmQ5MDQuMTkyZDgwLjg5NmQ4NjUuMjhkMTA0Ljk2ZDg0MS43MjhkMTI5LjAyNGQ4MTguMTc1ZDE2Ni45MTJkODE4LjE3NWQxOTIuNTEyZDgxOC4xNzVkMjExLjQ1NmQ4MjkuNDRkMjMwLjRkODQwLjcwNGQyNDcuMjk2ZDg1NC4wMTZkMjY0LjE5MmQ4NjcuMzI4ZDI4MS42ZDg3OC41OTJkMjk5LjAwOGQ4ODkuODU2ZDMyMS41MzZkODg5Ljg1NmQzNTYuMzUyZDg4OS44NTZkMzc4Ljg4ZDg3NS41MmQ0MDEuNDA4ZDg2MS4xODRkNDEzLjY5NmQ4MzcuMTJkNDI1Ljk4NGQ4MTMuMDU2ZDQzMC41OTJkNzgxLjMxMmQ0MzUuMmQ3NDkuNTY4ZDQzNS4yZDcxNS43NzZkNDAyLjQzMmQ3NDUuNDcyZDM2NS4wNTZkNzU3LjI0OGQzMjcuNjhkNzY5LjAyNGQyODUuNjk2ZDc2OS4wMjRoUjNkNjg0LjAzMlI0ZDY0Ni4xNDRSNWQzNy44ODhSNmQ3MjguMDY0UjdkLTEzLjMxMlI4ZDY5MC4xNzZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpNTdSMTJkMzcuODg4UjEzZDY4NC4wMzJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzoxNjlvUjFkMTAyNFIyYWQyMTkuMTM2ZDY1Mi4yODhkMjE5LjEzNmQ2MDQuMTZkMjMzLjQ3MmQ1NjMuMmQyNDcuODA4ZDUyMi4yNGQyNzMuOTJkNDkyLjU0NGQzMDAuMDMyZDQ2Mi44NDdkMzM3LjkyZDQ0NS45NTJkMzc1LjgwOGQ0MjkuMDU2ZDQyMi45MTJkNDI5LjA1NmQ0NjIuODQ4ZDQyOS4wNTZkNDk0LjU5MmQ0NDAuODMyZDUyNi4zMzZkNDUyLjYwN2Q1NDguMzUyZDQ3MS4wMzlkNTcwLjM2OGQ0ODkuNDcyZDU4Mi4xNDRkNTExLjQ4N2Q1OTMuOTJkNTMzLjUwM2Q1OTMuOTJkNTUzLjk4M2Q1OTMuOTJkNTc1LjQ4OGQ1ODAuMDk2ZDU4OS44MjRkNTY2LjI3MmQ2MDQuMTZkNTQ3Ljg0ZDYwNC4xNmQ1MjkuNDA4ZDYwNC4xNmQ1MTkuNjhkNTk4LjAxNmQ1MDkuOTUyZDU5MS44NzJkNTAzLjgwOGQ1ODIuNjU2ZDQ5Ny42NjRkNTczLjQ0ZDQ5Mi4wMzJkNTYyLjY4OGQ0ODYuNGQ1NTEuOTM1ZDQ3Ny42OTZkNTQyLjcyZDQ2OC45OTJkNTMzLjUwM2Q0NTUuMTY4ZDUyNy4zNmQ0NDEuMzQ0ZDUyMS4yMTZkNDE2Ljc2OGQ1MjEuMjE2ZDM3My43NmQ1MjEuMjE2ZDM0OC42NzJkNTU1LjUyZDMyMy41ODRkNTg5LjgyNGQzMjMuNTg0ZDY1MC4yNGQzMjMuNTg0ZDcwOC42MDhkMzQ5LjE4NGQ3NDUuNDcyZDM3NC43ODRkNzgyLjMzNmQ0MTguODE2ZDc4Mi4zMzZkNDUxLjU4NGQ3ODIuMzM2ZDQ2Ni45NDRkNzY4LjUxMmQ0ODIuMzA0ZDc1NC42ODhkNDkzLjA1NmQ3MzguODE2ZDUwMy44MDhkNzIyLjk0NGQ1MTUuNTg0ZDcwOS4xMmQ1MjcuMzZkNjk1LjI5NmQ1NTEuOTM2ZDY5NS4yOTZkNTczLjQ0ZDY5NS4yOTZkNTg1LjcyOGQ3MDcuNTg0ZDU5OC4wMTZkNzE5Ljg3MmQ1OTguMDE2ZDc0MC4zNTJkNTk4LjAxNmQ3NTUuNzEyZDU4Ni43NTJkNzc4LjI0ZDU3NS40ODhkODAwLjc2OGQ1NTIuOTZkODIyLjI3MWQ1MzAuNDMyZDg0My43NzZkNDk4LjE3NmQ4NTkuMTM2ZDQ2NS45MmQ4NzQuNDk2ZDQyNC45NmQ4NzQuNDk2ZDM3OC44OGQ4NzQuNDk2ZDM0MC40OGQ4NTcuNmQzMDIuMDhkODQwLjcwNGQyNzUuNDU2ZDgxMC40OTZkMjQ4LjgzMmQ3ODAuMjg4ZDIzMy45ODRkNzM5LjgzOWQyMTkuMTM2ZDY5OS4zOTJkMjE5LjEzNmQ2NTIuMjg4ZDY5MS4yZDY1NS4zNmQ2OTEuMmQ1OTYuOTkyZDY2OS4xODRkNTQ1Ljc5MWQ2NDcuMTY4ZDQ5NC41OTJkNjA4Ljc2OGQ0NTYuMTkyZDU3MC4zNjhkNDE3Ljc5MmQ1MTkuMTY4ZDM5NS43NzVkNDY3Ljk2OGQzNzMuNzZkNDA5LjZkMzczLjc2ZDM1MS4yMzJkMzczLjc2ZDMwMC4wMzJkMzk1Ljc3NWQyNDguODMyZDQxNy43OTJkMjEwLjQzMmQ0NTYuMTkyZDE3Mi4wMzJkNDk0LjU5MmQxNTAuMDE2ZDU0NS43OTFkMTI4ZDU5Ni45OTJkMTI4ZDY1NS4zNmQxMjhkNzEzLjcyOGQxNTAuMDE2ZDc2NC45MjhkMTcyLjAzMmQ4MTYuMTI3ZDIxMC40MzJkODU0LjUyOGQyNDguODMyZDg5Mi45MjhkMzAwLjAzMmQ5MTQuOTQ0ZDM1MS4yMzJkOTM2Ljk2ZDQwOS42ZDkzNi45NmQ0NjcuOTY4ZDkzNi45NmQ1MTkuMTY4ZDkxNC45NDRkNTcwLjM2OGQ4OTIuOTI4ZDYwOC43NjhkODU0LjUyOGQ2NDcuMTY4ZDgxNi4xMjdkNjY5LjE4NGQ3NjQuOTI4ZDY5MS4yZDcxMy43MjhkNjkxLjJkNjU1LjM2ZDIzLjU1MmQ2NTUuMzZkMjMuNTUyZDU3NS40ODhkNTMuNzZkNTA1LjM0M2Q4My45NjhkNDM1LjE5OWQxMzYuNzA0ZDM4Mi40NjNkMTg5LjQ0ZDMyOS43MjdkMjU5LjU4NGQyOTkuNTJkMzI5LjcyOGQyNjkuMzEyZDQwOS42ZDI2OS4zMTJkNDg5LjQ3MmQyNjkuMzEyZDU1OS42MTZkMjk5LjUyZDYyOS43NmQzMjkuNzI3ZDY4Mi40OTZkMzgyLjQ2M2Q3MzUuMjMyZDQzNS4xOTlkNzY1LjQ0ZDUwNS4zNDNkNzk1LjY0OGQ1NzUuNDg4ZDc5NS42NDhkNjU1LjM2ZDc5NS42NDhkNzM1LjIzMmQ3NjUuNDRkODA1LjM3NmQ3MzUuMjMyZDg3NS41MmQ2ODIuNDk2ZDkyOC4yNTZkNjI5Ljc2ZDk4MC45OTJkNTU5LjYxNmQxMDExLjJkNDg5LjQ3MmQxMDQxLjQwN2Q0MDkuNmQxMDQxLjQwN2QzMjkuNzI4ZDEwNDEuNDA3ZDI1OS41ODRkMTAxMS4yZDE4OS40NGQ5ODAuOTkyZDEzNi43MDRkOTI4LjI1NmQ4My45NjhkODc1LjUyZDUzLjc2ZDgwNS4zNzZkMjMuNTUyZDczNS4yMzJkMjMuNTUyZDY1NS4zNmhSM2Q4MTkuMlI0ZDc5NS42NDhSNWQyMy41NTJSNmQ3NTQuNjg4UjdkLTE3LjQwOFI4ZDczMS4xMzZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTY5UjEyZDIzLjU1MlIxM2Q4MTkuMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzo1Nm9SMWQxMDI0UjJhZDI1Ny4wMjRkNTE4LjE0NGQyNTcuMDI0ZDU1NS4wMDhkMjc5LjU1MmQ1NzMuOTUyZDMwMi4wOGQ1OTIuODk2ZDM0MC45OTJkNTkyLjg5NmQzODEuOTUyZDU5Mi44OTZkNDA0LjQ4ZDU3My45NTJkNDI3LjAwOGQ1NTUuMDA4ZDQyNy4wMDhkNTE4LjE0NGQ0MjcuMDA4ZDQ4Mi4zMDRkNDA2LjUyOGQ0NjIuODQ3ZDM4Ni4wNDhkNDQzLjM5MWQzNDAuOTkyZDQ0My4zOTFkMjU3LjAyNGQ0NDMuMzkxZDI1Ny4wMjRkNTE4LjE0NGQyNDkuODU2ZDgwMC43NjhkMjQ5Ljg1NmQ4NDYuODQ4ZDI3NC45NDRkODY4LjM1MmQzMDAuMDMyZDg4OS44NTZkMzM5Ljk2OGQ4ODkuODU2ZDM4Mi45NzZkODg5Ljg1NmQ0MDguNTc2ZDg2OC4zNTJkNDM0LjE3NmQ4NDYuODQ4ZDQzNC4xNzZkODAwLjc2OGQ0MzQuMTc2ZDc2MC44MzJkNDA4LjA2NGQ3MzUuMjMyZDM4MS45NTJkNzA5LjYzMmQzNDAuOTkyZDcwOS42MzJkMzAyLjA4ZDcwOS42MzJkMjc1Ljk2OGQ3MzUuMjMyZDI0OS44NTZkNzYwLjgzMmQyNDkuODU2ZDgwMC43NjhkNTguMzY4ZDQ5Mi41NDRkNTguMzY4ZDQ2NC44OTVkNzAuNjU2ZDQzMS4xMDRkODIuOTQ0ZDM5Ny4zMTJkMTE1LjJkMzY3LjEwNGQxNDcuNDU2ZDMzNi44OTVkMjAxLjcyOGQzMTYuNDE1ZDI1NmQyOTUuOTM2ZDM0MC45OTJkMjk1LjkzNmQ0MjUuOTg0ZDI5NS45MzZkNDgxLjI4ZDMxNi40MTVkNTM2LjU3NmQzMzYuODk1ZDU2OC44MzJkMzY3LjEwNGQ2MDEuMDg4ZDM5Ny4zMTJkNjEzLjM3NmQ0MzEuMTA0ZDYyNS42NjRkNDY0Ljg5NWQ2MjUuNjY0ZDQ5Mi41NDRkNjI1LjY2NGQ1NDYuODE2ZDYwMC4wNjRkNTg3LjI2NGQ1NzQuNDY0ZDYyNy43MTJkNTMwLjQzMmQ2NDcuMTY4ZDU1OS4xMDRkNjYwLjQ4ZDU4MC42MDhkNjc1LjMyOGQ2MDIuMTEyZDY5MC4xNzVkNjE2LjQ0OGQ3MDguNjA4ZDYzMC43ODRkNzI3LjA0ZDYzNy45NTJkNzUxLjEwNGQ2NDUuMTJkNzc1LjE2OGQ2NDUuMTJkODA1Ljg4OGQ2NDUuMTJkODYzLjIzMmQ2MjMuNjE2ZDkwNi43NTJkNjAyLjExMmQ5NTAuMjcxZDU2Mi4xNzZkOTc5LjQ1NmQ1MjIuMjRkMTAwOC42NGQ0NjUuOTJkMTAyMi45NzZkNDA5LjZkMTAzNy4zMTFkMzQwLjk5MmQxMDM3LjMxMWQyNzIuMzg0ZDEwMzcuMzExZDIxNi41NzZkMTAyMi45NzZkMTYwLjc2OGQxMDA4LjY0ZDEyMS4zNDRkOTc5LjQ1NmQ4MS45MmQ5NTAuMjcxZDYwLjQxNmQ5MDYuNzUyZDM4LjkxMmQ4NjMuMjMyZDM4LjkxMmQ4MDUuODg4ZDM4LjkxMmQ3NzUuMTY4ZDQ2LjA4ZDc1MS4xMDRkNTMuMjQ4ZDcyNy4wNGQ2Ny41ODRkNzA4LjYwOGQ4MS45MmQ2OTAuMTc1ZDEwMy40MjRkNjc1LjMyOGQxMjQuOTI4ZDY2MC40OGQxNTMuNmQ2NDcuMTY4ZDEwOS41NjhkNjI3LjcxMmQ4My45NjhkNTg3LjI2NGQ1OC4zNjhkNTQ2LjgxNmQ1OC4zNjhkNDkyLjU0NGhSM2Q2ODQuMDMyUjRkNjQ1LjEyUjVkMzguOTEyUjZkNzI4LjA2NFI3ZC0xMy4zMTJSOGQ2ODkuMTUyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTU2UjEyZDM4LjkxMlIxM2Q2ODQuMDMyUjE0YWkxaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6MTY4b1IxZDEwMjRSMmFkLTczLjcyOGQzMzQuODQ3ZC03My43MjhkMjk1LjkzNmQtNDYuNTkyZDI2OC43OTlkLTE5LjQ1NmQyNDEuNjY0ZDE5LjQ1NmQyNDEuNjY0ZDU4LjM2OGQyNDEuNjY0ZDg1LjUwNGQyNjguNzk5ZDExMi42NGQyOTUuOTM2ZDExMi42NGQzMzQuODQ3ZDExMi42NGQzNzMuNzZkODUuNTA0ZDQwMC44OTVkNTguMzY4ZDQyOC4wMzJkMTkuNDU2ZDQyOC4wMzJkLTE5LjQ1NmQ0MjguMDMyZC00Ni41OTJkNDAwLjg5NWQtNzMuNzI4ZDM3My43NmQtNzMuNzI4ZDMzNC44NDdkMTcyLjAzMmQzMzQuODQ3ZDE3Mi4wMzJkMjk1LjkzNmQxOTkuMTY4ZDI2OC43OTlkMjI2LjMwNGQyNDEuNjY0ZDI2NS4yMTZkMjQxLjY2NGQzMDQuMTI4ZDI0MS42NjRkMzMxLjI2NGQyNjguNzk5ZDM1OC40ZDI5NS45MzZkMzU4LjRkMzM0Ljg0N2QzNTguNGQzNzMuNzZkMzMxLjI2NGQ0MDAuODk1ZDMwNC4xMjhkNDI4LjAzMmQyNjUuMjE2ZDQyOC4wMzJkMjI2LjMwNGQ0MjguMDMyZDE5OS4xNjhkNDAwLjg5NWQxNzIuMDMyZDM3My43NmQxNzIuMDMyZDMzNC44NDdoUjNkMjg0LjY3MlI0ZDM1OC40UjVkLTczLjcyOFI2ZDc4Mi4zMzZSN2Q1OTUuOTY4UjhkODU2LjA2NFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNjhSMTJkLTczLjcyOFIxM2QyODQuNjcyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2hnOjU1b1IxZDEwMjRSMmFkOTEuMTM2ZDQ3NS4xMzVkNDUuMDU2ZDQ3NS4xMzVkMjIuNTI4ZDQ1My4xMmQwZDQzMS4xMDRkMGQzOTIuMTkyZDBkMzUzLjI4ZDIyLjUyOGQzMzEuMjY0ZDQ1LjA1NmQzMDkuMjQ3ZDkxLjEzNmQzMDkuMjQ3ZDQ5MC40OTZkMzA5LjI0N2Q1MzguNjI0ZDMwOS4yNDdkNTY1LjI0OGQzMjkuMjE2ZDU5MS44NzJkMzQ5LjE4M2Q1OTEuODcyZDM5OS4zNmQ1OTEuODcyZDQxMy42OTZkNTg3Ljc3NmQ0MjguMDMyZDU4My42OGQ0NDIuMzY3ZDU3Mi45MjhkNDU5Ljc3NWQ1NjIuMTc2ZDQ3Ny4xODNkNTQ0LjI1NmQ0OTguMTc2ZDUyNi4zMzZkNTE5LjE2OGQ0OTkuNzEyZDU0Ny44MzlkNDg0LjM1MmQ1NjQuMjIzZDQ2Mi4zMzZkNjAwLjA2NGQ0NDAuMzJkNjM1LjkwNGQ0MTguODE2ZDY4Mi40OTZkMzk3LjMxMmQ3MjkuMDg4ZDM3OS45MDRkNzgzLjg3MmQzNjIuNDk2ZDgzOC42NTZkMzU1LjMyOGQ4OTIuOTI4ZDM0OS4xODRkOTQyLjA4ZDMzNi44OTZkOTcwLjc1MmQzMjQuNjA4ZDk5OS40MjRkMzA4LjIyNGQxMDE0LjI3MmQyOTEuODRkMTAyOS4xMTlkMjcyLjM4NGQxMDMzLjIxNWQyNTIuOTI4ZDEwMzcuMzExZDIzMy40NzJkMTAzNy4zMTFkMjE2LjA2NGQxMDM3LjMxMWQyMDAuMTkyZDEwMzAuMTQ0ZDE4NC4zMmQxMDIyLjk3NmQxNzEuMDA4ZDEwMTAuMTc2ZDE1Ny42OTZkOTk3LjM3NmQxNTAuMDE2ZDk4MC40OGQxNDIuMzM2ZDk2My41ODRkMTQyLjMzNmQ5NDMuMTA0ZDE0Mi4zMzZkOTEwLjMzNmQxNTQuNjI0ZDg2Ni44MTZkMTY2LjkxMmQ4MjMuMjk2ZDE4Ni4zNjhkNzc3LjIxNmQyMDUuODI0ZDczMS4xMzZkMjMwLjkxMmQ2ODQuMDMxZDI1NmQ2MzYuOTI4ZDI4MS42ZDU5NS45NjhkMzA3LjJkNTU1LjAwOGQzMzEuNzc2ZDUyMy4yNjRkMzU2LjM1MmQ0OTEuNTJkMzc1LjgwOGQ0NzUuMTM1ZDkxLjEzNmQ0NzUuMTM1aFIzZDYwNy4yMzJSNGQ1OTEuODcyUjVkMFI2ZDcxNC43NTJSN2QtMTMuMzEyUjhkNzE0Ljc1MlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk1NVIxMmQwUjEzZDYwNy4yMzJSMTRhaTFpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJoZzoxNjdvUjFkMTAyNFIyYWQyNzIuMzg0ZDY0Ny4xNjhkMjM5LjYxNmQ2NjcuNjQ3ZDIyOC4zNTJkNjgxLjQ3MmQyMTcuMDg4ZDY5NS4yOTZkMjE3LjA4OGQ3MTIuNzA0ZDIxNy4wODhkNzI2LjAxNmQyMjUuNzkyZDczNy43OTFkMjM0LjQ5NmQ3NDkuNTY4ZDI1NmQ3NTkuODA4ZDQxMC42MjRkODI5LjQ0ZDQ0My4zOTJkODA4Ljk2ZDQ1NC42NTZkNzk1LjEzNmQ0NjUuOTJkNzgxLjMxMmQ0NjUuOTJkNzYzLjkwNGQ0NjUuOTJkNzUwLjU5MmQ0NTcuMjE2ZDczOC44MTZkNDQ4LjUxMmQ3MjcuMDRkNDI3LjAwOGQ3MTYuOGQyNzIuMzg0ZDY0Ny4xNjhkNDEwLjYyNGQxMDMwLjE0NGQ0MTAuNjI0ZDEwMTIuNzM2ZDM5Ni4yODhkOTk3Ljg4OGQzODEuOTUyZDk4My4wNGQzNDcuMTM2ZDk2OC43MDRkMjIwLjE2ZDkxNC40MzJkMTQ3LjQ1NmQ4ODMuNzEyZDExMS42MTZkODQxLjcyOGQ3NS43NzZkNzk5Ljc0NGQ3NS43NzZkNzM1LjIzMmQ3NS43NzZkNjc5LjkzNWQxMDEuODg4ZDY0NS4xMmQxMjhkNjEwLjMwNGQxODIuMjcyZDU4Ny43NzZkMTQ2LjQzMmQ1NjcuMjk2ZDEyOS41MzZkNTI5LjQwOGQxMTIuNjRkNDkxLjUyZDExMi42NGQ0NDguNTExZDExMi42NGQ0MDUuNTA0ZDEyOC41MTJkMzcyLjIyM2QxNDQuMzg0ZDMzOC45NDNkMTczLjU2OGQzMTUuOTA0ZDIwMi43NTJkMjkyLjg2NGQyNDMuNzEyZDI4MS4wODdkMjg0LjY3MmQyNjkuMzEyZDMzNC44NDhkMjY5LjMxMmQzNzkuOTA0ZDI2OS4zMTJkNDIxLjM3NmQyNzkuNTUyZDQ2Mi44NDhkMjg5Ljc5MmQ0OTQuNTkyZDMwOC43MzZkNTI2LjMzNmQzMjcuNjc5ZDU0NS4yOGQzNTQuMzA0ZDU2NC4yMjRkMzgwLjkyOGQ1NjQuMjI0ZDQxMi42NzJkNTY0LjIyNGQ0NDQuNDE1ZDU0My43NDRkNDYyLjg0N2Q1MjMuMjY0ZDQ4MS4yOGQ0OTIuNTQ0ZDQ4MS4yOGQ0NzAuMDE2ZDQ4MS4yOGQ0NTQuMTQ0ZDQ2Ny40NTZkNDM4LjI3MmQ0NTMuNjMxZDQyMS44ODhkNDM2LjczNmQ0MDUuNTA0ZDQxOS44NGQzODcuMDcyZDQwNi4wMTVkMzY4LjY0ZDM5Mi4xOTJkMzQwLjk5MmQzOTIuMTkyZDMwOS4yNDhkMzkyLjE5MmQyOTAuODE2ZDQwMy45NjdkMjcyLjM4NGQ0MTUuNzQ0ZDI3Mi4zODRkNDQzLjM5MWQyNzIuMzg0ZDQ2MC43OTlkMjg2LjcyZDQ3NS42NDhkMzAxLjA1NmQ0OTAuNDk2ZDMzNS44NzJkNTA0LjgzMmQ0NjIuODQ4ZDU1OS4xMDRkNTM1LjU1MmQ1ODkuODI0ZDU3MS4zOTJkNjMxLjgwOGQ2MDcuMjMyZDY3My43OTFkNjA3LjIzMmQ3MzguMzA0ZDYwNy4yMzJkNzg3LjQ1NmQ1ODMuMTY4ZDgyMi4yNzFkNTU5LjEwNGQ4NTcuMDg4ZDUwMC43MzZkODg1Ljc2ZDUzNi41NzZkOTA2LjI0ZDU1My40NzJkOTQ0LjEyOGQ1NzAuMzY4ZDk4Mi4wMTZkNTcwLjM2OGQxMDI1LjAyM2Q1NzAuMzY4ZDExMTIuMDY0ZDUwOC45MjhkMTE1OC4xNDRkNDQ3LjQ4OGQxMjA0LjIyNGQzNDQuMDY0ZDEyMDQuMjI0ZDI5Ni45NmQxMjA0LjIyNGQyNTQuNDY0ZDExOTMuOTg0ZDIxMS45NjhkMTE4My43NDRkMTc5LjcxMmQxMTY0LjhkMTQ3LjQ1NmQxMTQ1Ljg1NmQxMjguNTEyZDExMTkuMjMyZDEwOS41NjhkMTA5Mi42MDhkMTA5LjU2OGQxMDYwLjg2NGQxMDkuNTY4ZDEwMjkuMTE5ZDEzMC4wNDhkMTAxMC42ODhkMTUwLjUyOGQ5OTIuMjU2ZDE4MS4yNDhkOTkyLjI1NmQyMDMuNzc2ZDk5Mi4yNTZkMjIwLjE2ZDEwMDYuMDhkMjM2LjU0NGQxMDE5LjkwNGQyNTIuOTI4ZDEwMzYuOGQyNjkuMzEyZDEwNTMuNjk2ZDI4OC43NjhkMTA2Ny41MmQzMDguMjI0ZDEwODEuMzQ0ZDMzNy45MmQxMDgxLjM0NGQzNzIuNzM2ZDEwODEuMzQ0ZDM5MS42OGQxMDY5LjU2OGQ0MTAuNjI0ZDEwNTcuNzkyZDQxMC42MjRkMTAzMC4xNDRoUjNkNjgzLjAwOFI0ZDYwNy4yMzJSNWQ3NS43NzZSNmQ3NTQuNjg4UjdkLTE4MC4yMjRSOGQ2NzguOTEyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE2N1IxMmQ3NS43NzZSMTNkNjgzLjAwOFIxNGFpMWkzaTNpM2kzaTJpM2kzaTNpM2kyaTFpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzo1NG9SMWQxMDI0UjJhZDQ0MS4zNDRkNzkxLjU1MmQ0NDEuMzQ0ZDc0OS41NjhkNDE3LjI4ZDcyNC40OGQzOTMuMjE2ZDY5OS4zOTJkMzUwLjIwOGQ2OTkuMzkyZDMyNy42OGQ2OTkuMzkyZDMxMC43ODRkNzA3LjA3MmQyOTMuODg4ZDcxNC43NTJkMjgyLjExMmQ3MjguMDY0ZDI3MC4zMzZkNzQxLjM3NmQyNjQuMTkyZDc1Ny43NmQyNTguMDQ4ZDc3NC4xNDRkMjU4LjA0OGQ3OTEuNTUyZDI1OC4wNDhkODA4Ljk2ZDI2NC4xOTJkODI1Ljg1NmQyNzAuMzM2ZDg0Mi43NTJkMjgyLjExMmQ4NTUuNTUyZDI5My44ODhkODY4LjM1MmQzMTAuNzg0ZDg3Ni4wMzJkMzI3LjY4ZDg4My43MTJkMzUwLjIwOGQ4ODMuNzEyZDM3MS43MTJkODgzLjcxMmQzODkuMTJkODc2LjAzMmQ0MDYuNTI4ZDg2OC4zNTJkNDE3Ljc5MmQ4NTUuNTUyZDQyOS4wNTZkODQyLjc1MmQ0MzUuMmQ4MjUuODU2ZDQ0MS4zNDRkODA4Ljk2ZDQ0MS4zNDRkNzkxLjU1MmQzNy44ODhkNjc0LjgxNmQzNy44ODhkNTkyLjg5NmQ1NS44MDhkNTIzLjI2NGQ3My43MjhkNDUzLjYzMWQxMTMuNjY0ZDQwMi45NDNkMTUzLjZkMzUyLjI1NmQyMTYuNTc2ZDMyNC4wOTZkMjc5LjU1MmQyOTUuOTM2ZDM2OS42NjRkMjk1LjkzNmQzOTUuMjY0ZDI5NS45MzZkNDM0LjY4OGQzMDIuMDhkNDc0LjExMmQzMDguMjIzZDUxMS40ODhkMzIzLjA3MmQ1NDguODY0ZDMzNy45MTlkNTc2ZDM2My41MmQ2MDMuMTM2ZDM4OS4xMmQ2MDMuMTM2ZDQyOS4wNTZkNjAzLjEzNmQ0NjcuOTY3ZDU3OS4wNzJkNDkxLjUyZDU1NS4wMDhkNTE1LjA3MmQ1MTcuMTJkNTE1LjA3MmQ0OTEuNTJkNTE1LjA3MmQ0NzIuNTc2ZDUwMy44MDhkNDUzLjYzMmQ0OTIuNTQ0ZDQzNi43MzZkNDc5LjIzMmQ0MTkuODRkNDY1LjkxOWQ0MDIuNDMyZDQ1NC42NTVkMzg1LjAyNGQ0NDMuMzkxZDM2Mi40OTZkNDQzLjM5MWQzMjYuNjU2ZDQ0My4zOTFkMzA0LjY0ZDQ1Ny43MjdkMjgyLjYyNGQ0NzIuMDYzZDI3MC4zMzZkNDk2LjEyOGQyNTguMDQ4ZDUyMC4xOTJkMjUzLjQ0ZDU1MS45MzVkMjQ4LjgzMmQ1ODMuNjhkMjQ4LjgzMmQ2MTcuNDcyZDI4MS42ZDU4Ny43NzZkMzE4Ljk3NmQ1NzZkMzU2LjM1MmQ1NjQuMjIzZDM5OC4zMzZkNTY0LjIyM2Q0NTIuNjA4ZDU2NC4yMjNkNDk4LjE3NmQ1NzkuMDcyZDU0My43NDRkNTkzLjkyZDU3Ni41MTJkNjIzLjEwNGQ2MDkuMjhkNjUyLjI4OGQ2MjcuNzEyZDY5NC43ODRkNjQ2LjE0NGQ3MzcuMjhkNjQ2LjE0NGQ3OTIuNTc2ZDY0Ni4xNDRkODQ2Ljg0OGQ2MjguMjI0ZDg5MS4zOTJkNjEwLjMwNGQ5MzUuOTM2ZDU3My45NTJkOTY4LjcwNGQ1MzcuNmQxMDAxLjQ3MmQ0ODMuMzI4ZDEwMTkuMzkyZDQyOS4wNTZkMTAzNy4zMTFkMzU3LjM3NmQxMDM3LjMxMWQyODIuNjI0ZDEwMzcuMzExZDIyMy43NDRkMTAxMy43NmQxNjQuODY0ZDk5MC4yMDhkMTIzLjM5MmQ5NDQuMTI4ZDgxLjkyZDg5OC4wNDhkNTkuOTA0ZDgzMC40NjRkMzcuODg4ZDc2Mi44OGQzNy44ODhkNjc0LjgxNmhSM2Q2ODQuMDMyUjRkNjQ2LjE0NFI1ZDM3Ljg4OFI2ZDcyOC4wNjRSN2QtMTMuMzEyUjhkNjkwLjE3NlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk1NFIxMmQzNy44ODhSMTNkNjg0LjAzMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzoxNjZvUjFkMTAyNFIyYWQzOS45MzZkMzU0LjMwNGQzOS45MzZkMjY5LjMxMmQxMTMuNjY0ZDI2OS4zMTJkMTg3LjM5MmQyNjkuMzEyZDE4Ny4zOTJkMzU0LjMwNGQxODcuMzkyZDUwNC44MzJkMTg3LjM5MmQ1ODkuODI0ZDExMy42NjRkNTg5LjgyNGQzOS45MzZkNTg5LjgyNGQzOS45MzZkNTA0LjgzMmQzOS45MzZkMzU0LjMwNGQzOS45MzZkODA1Ljg4OGQzOS45MzZkNzIwLjg5NmQxMTMuNjY0ZDcyMC44OTZkMTg3LjM5MmQ3MjAuODk2ZDE4Ny4zOTJkODA1Ljg4OGQxODcuMzkyZDk1Ni40MTVkMTg3LjM5MmQxMDQxLjQwN2QxMTMuNjY0ZDEwNDEuNDA3ZDM5LjkzNmQxMDQxLjQwN2QzOS45MzZkOTU2LjQxNWQzOS45MzZkODA1Ljg4OGhSM2QyMjcuMzI4UjRkMTg3LjM5MlI1ZDM5LjkzNlI2ZDc1NC42ODhSN2QtMTcuNDA4UjhkNzE0Ljc1MlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNjZSMTJkMzkuOTM2UjEzZDIyNy4zMjhSMTRhaTFpM2kzaTJpM2kzaTJpMWkzaTNpMmkzaTNpMmhnOjUzb1IxZDEwMjRSMmFkMjM4LjU5MmQ1ODQuNzA0ZDI1OS4wNzJkNTczLjQ0ZDI3NS45NjhkNTY2LjI3MWQyOTIuODY0ZDU1OS4xMDRkMzA5LjI0OGQ1NTUuNTJkMzI1LjYzMmQ1NTEuOTM1ZDM0My4wNGQ1NTAuNGQzNjAuNDQ4ZDU0OC44NjRkMzg0ZDU0OC44NjRkNDMwLjA4ZDU0OC44NjRkNDczLjZkNTYxLjE1MmQ1MTcuMTJkNTczLjQ0ZDU1MC45MTJkNjAxLjA4OGQ1ODQuNzA0ZDYyOC43MzZkNjA1LjY5NmQ2NzIuMjU2ZDYyNi42ODhkNzE1Ljc3NmQ2MjYuNjg4ZDc3Ny4yMTZkNjI2LjY4OGQ4NDYuODQ4ZDYwMS4wODhkODk2ZDU3NS40ODhkOTQ1LjE1MmQ1MzEuNDU2ZDk3Ni44OTZkNDg3LjQyNGQxMDA4LjY0ZDQyOC4wMzJkMTAyMi45NzZkMzY4LjY0ZDEwMzcuMzExZDMwMS4wNTZkMTAzNy4zMTFkMjY2LjI0ZDEwMzcuMzExZDIyMy43NDRkMTAzMC4xNDRkMTgxLjI0OGQxMDIyLjk3NmQxNDQuMzg0ZDEwMDUuNTY4ZDEwNy41MmQ5ODguMTZkODIuNDMyZDk2MC41MTJkNTcuMzQ0ZDkzMi44NjRkNTcuMzQ0ZDg5MC44OGQ1Ny4zNDRkODUyLjk5MmQ4Ni4wMTZkODMwLjQ2NGQxMTQuNjg4ZDgwNy45MzZkMTU1LjY0OGQ4MDcuOTM2ZDE4NC4zMmQ4MDcuOTM2ZDIwMS4yMTZkODE4LjY4OGQyMTguMTEyZDgyOS40NGQyMzIuNDQ4ZDg0Mi43NTJkMjQ2Ljc4NGQ4NTYuMDY0ZDI2NC4xOTJkODY2LjgxNmQyODEuNmQ4NzcuNTY4ZDMxMS4yOTZkODc3LjU2OGQzMzguOTQ0ZDg3Ny41NjhkMzU4LjRkODY4Ljg2NGQzNzcuODU2ZDg2MC4xNmQzOTAuNjU2ZDg0Ni4zMzZkNDAzLjQ1NmQ4MzIuNTEyZDQwOS42ZDgxNS42MTZkNDE1Ljc0NGQ3OTguNzJkNDE1Ljc0NGQ3ODEuMzEyZDQxNS43NDRkNzU5LjgwOGQ0MDcuNTUyZDc0MS4zNzZkMzk5LjM2ZDcyMi45NDRkMzg1LjUzNmQ3MDguNjA4ZDM3MS43MTJkNjk0LjI3MWQzNTMuMjhkNjg2LjA3OWQzMzQuODQ4ZDY3Ny44ODdkMzEzLjM0NGQ2NzcuODg3ZDI5MS44NGQ2NzcuODg3ZDI3NC45NDRkNjg0LjAzMWQyNTguMDQ4ZDY5MC4xNzVkMjQxLjY2NGQ2OTcuODU2ZDIyNS4yOGQ3MDUuNTM2ZDIwNi4zMzZkNzExLjY4ZDE4Ny4zOTJkNzE3LjgyNGQxNTkuNzQ0ZDcxNy44MjRkMTQ2LjQzMmQ3MTcuODI0ZDEyOS41MzZkNzE0LjI0ZDExMi42NGQ3MTAuNjU2ZDk4LjMwNGQ3MDAuOTI4ZDgzLjk2OGQ2OTEuMmQ3My43MjhkNjc0LjMwNGQ2My40ODhkNjU3LjQwOGQ2My40ODhkNjMwLjc4NGQ2My40ODhkNjE0LjRkNjcuNTg0ZDU4NC43MDRkNzEuNjhkNTU1LjAwOGQ3Ny4zMTJkNTIxLjIxNmQ4Mi45NDRkNDg3LjQyNGQ4OS4wODhkNDU0LjE0NGQ5NS4yMzJkNDIwLjg2NGQxMDAuMzUyZDM5Ny4zMTJkMTEwLjU5MmQzNDYuMTExZDEzNS42OGQzMjcuNjc5ZDE2MC43NjhkMzA5LjI0N2QyMTUuMDRkMzA5LjI0N2Q0OTEuNTJkMzA5LjI0N2Q1MzcuNmQzMDkuMjQ3ZDU2MC4xMjhkMzMxLjI2NGQ1ODIuNjU2ZDM1My4yOGQ1ODIuNjU2ZDM5Mi4xOTJkNTgyLjY1NmQ0MzEuMTA0ZDU2MC4xMjhkNDUzLjEyZDUzNy42ZDQ3NS4xMzVkNDkxLjUyZDQ3NS4xMzVkMjU4LjA0OGQ0NzUuMTM1ZDIzOC41OTJkNTg0LjcwNGhSM2Q2ODQuMDMyUjRkNjI2LjY4OFI1ZDU3LjM0NFI2ZDcxNC43NTJSN2QtMTMuMzEyUjhkNjU3LjQwOFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk1M1IxMmQ1Ny4zNDRSMTNkNjg0LjAzMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTJpMmhnOjE2NW9SMWQxMDI0UjJhZDIzNi41NDRkNzM2LjI1NmQxMzIuMDk2ZDczNi4yNTZkMTA4LjU0NGQ3MzYuMjU2ZDkyLjE2ZDcxOC44NDhkNzUuNzc2ZDcwMS40NGQ3NS43NzZkNjc3Ljg4N2Q3NS43NzZkNjU0LjMzNmQ5Mi4xNmQ2MzYuOTI4ZDEwOC41NDRkNjE5LjUyZDEzMi4wOTZkNjE5LjUyZDE2NS44ODhkNjE5LjUyZDg4LjA2NGQ0OTEuNTJkNjguNjA4ZDQ1OS43NzVkNTkuOTA0ZDQzNS43MTJkNTEuMmQ0MTEuNjQ4ZDUxLjJkMzg3LjA3MmQ1MS4yZDM2OS42NjRkNTcuODU2ZDM1My4yOGQ2NC41MTJkMzM2Ljg5NWQ3Ny44MjRkMzI0LjA5NmQ5MS4xMzZkMzExLjI5NWQxMDkuMDU2ZDMwMy42MTZkMTI2Ljk3NmQyOTUuOTM2ZDE1MC41MjhkMjk1LjkzNmQyMTkuMTM2ZDI5NS45MzZkMjUwLjg4ZDM2NS41NjhkMzQwLjk5MmQ1NjIuMTc1ZDM0My4wNGQ1NjIuMTc1ZDQzMy4xNTJkMzY1LjU2OGQ0NjQuODk2ZDI5NS45MzZkNTMzLjUwNGQyOTUuOTM2ZDU1Ni4wMzJkMjk1LjkzNmQ1NzQuNDY0ZDMwMy42MTZkNTkyLjg5NmQzMTEuMjk1ZDYwNi4yMDhkMzI0LjA5NmQ2MTkuNTJkMzM2Ljg5NWQ2MjYuMTc2ZDM1My4yOGQ2MzIuODMyZDM2OS42NjRkNjMyLjgzMmQzODcuMDcyZDYzMi44MzJkNDExLjY0OGQ2MjQuMTI4ZDQzNS43MTJkNjE1LjQyNGQ0NTkuNzc1ZDU5NS45NjhkNDkxLjUyZDUxOC4xNDRkNjE5LjUyZDU1MS45MzZkNjE5LjUyZDU3NS40ODhkNjE5LjUyZDU5MS44NzJkNjM2LjkyOGQ2MDguMjU2ZDY1NC4zMzZkNjA4LjI1NmQ2NzcuODg3ZDYwOC4yNTZkNzAxLjQ0ZDU5MS44NzJkNzE4Ljg0OGQ1NzUuNDg4ZDczNi4yNTZkNTUxLjkzNmQ3MzYuMjU2ZDQ0Ny40ODhkNzM2LjI1NmQ0NDcuNDg4ZDc5Mi41NzZkNTUxLjkzNmQ3OTIuNTc2ZDU3NS40ODhkNzkyLjU3NmQ1OTEuODcyZDgwOS45ODRkNjA4LjI1NmQ4MjcuMzkyZDYwOC4yNTZkODUwLjk0NGQ2MDguMjU2ZDg3NC40OTZkNTkxLjg3MmQ4OTEuOTA0ZDU3NS40ODhkOTA5LjMxMmQ1NTEuOTM2ZDkwOS4zMTJkNDQ3LjQ4OGQ5MDkuMzEyZDQ0Ny40ODhkOTE0LjQzMmQ0NDcuNDg4ZDk3MS43NzZkNDE3Ljc5MmQxMDA0LjU0NGQzODguMDk2ZDEwMzcuMzExZDM0Mi4wMTZkMTAzNy4zMTFkMjk1LjkzNmQxMDM3LjMxMWQyNjYuMjRkMTAwNC41NDRkMjM2LjU0NGQ5NzEuNzc2ZDIzNi41NDRkOTE0LjQzMmQyMzYuNTQ0ZDkwOS4zMTJkMTMyLjA5NmQ5MDkuMzEyZDEwOC41NDRkOTA5LjMxMmQ5Mi4xNmQ4OTEuOTA0ZDc1Ljc3NmQ4NzQuNDk2ZDc1Ljc3NmQ4NTAuOTQ0ZDc1Ljc3NmQ4MjcuMzkyZDkyLjE2ZDgwOS45ODRkMTA4LjU0NGQ3OTIuNTc2ZDEzMi4wOTZkNzkyLjU3NmQyMzYuNTQ0ZDc5Mi41NzZkMjM2LjU0NGQ3MzYuMjU2aFIzZDY4NC4wMzJSNGQ2MzIuODMyUjVkNTEuMlI2ZDcyOC4wNjRSN2QtMTMuMzEyUjhkNjc2Ljg2NFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNjVSMTJkNTEuMlIxM2Q2ODQuMDMyUjE0YWkxaTJpM2kzaTNpM2kyaTJpM2kzaTNpM2kzaTNpM2kyaTJpMmkzaTNpM2kzaTNpM2kzaTJpMmkzaTNpM2kzaTJpMmkyaTNpM2kzaTNpMmkyaTNpM2kzaTNpMmkyaTNpM2kzaTNpMmkyaGc6NTJvUjFkMTAyNFIyYWQzNjIuNDk2ZDQ5Ny42NjRkMzYwLjQ0OGQ0OTcuNjY0ZDE5Mi41MTJkNzE3LjgyNGQzNjIuNDk2ZDcxNy44MjRkMzYyLjQ5NmQ0OTcuNjY0ZDM2Mi40OTZkODc3LjU2OGQxMjAuODMyZDg3Ny41NjhkNjguNjA4ZDg3Ny41NjhkNDYuNTkyZDg0NS44MjRkMjQuNTc2ZDgxNC4wNzlkMjQuNTc2ZDc2OGQyNC41NzZkNzM5LjMyOGQzOC40ZDcxMC42NTZkNTIuMjI0ZDY4MS45ODNkODYuMDE2ZDY0MS4wMjRkMzAwLjAzMmQzODIuOTc2ZDMyMS41MzZkMzU3LjM3NmQzMzguOTQ0ZDMzOS40NTZkMzU2LjM1MmQzMjEuNTM1ZDM3Mi43MzZkMzEwLjI3MWQzODkuMTJkMjk5LjAwOGQ0MDQuOTkyZDI5NC40ZDQyMC44NjRkMjg5Ljc5MmQ0NDEuMzQ0ZDI4OS43OTJkNDk5LjcxMmQyODkuNzkyZDUzMC40MzJkMzE4Ljk3NmQ1NjEuMTUyZDM0OC4xNTlkNTYxLjE1MmQzOTguMzM2ZDU2MS4xNTJkNzE3LjgyNGQ2MDcuMjMyZDcxNy44MjRkNjMzLjM0NGQ3MzQuNzJkNjU5LjQ1NmQ3NTEuNjE2ZDY1OS40NTZkNzk3LjY5NmQ2NTkuNDU2ZDg0NC44ZDYzMy4zNDRkODYxLjE4NGQ2MDcuMjMyZDg3Ny41NjhkNTYxLjE1MmQ4NzcuNTY4ZDU2MS4xNTJkOTI2LjcyZDU2MS4xNTJkOTc3LjkyZDUzNi41NzZkMTAwNy42MTZkNTEyZDEwMzcuMzExZDQ2MS44MjRkMTAzNy4zMTFkNDExLjY0OGQxMDM3LjMxMWQzODcuMDcyZDEwMDcuNjE2ZDM2Mi40OTZkOTc3LjkyZDM2Mi40OTZkOTI2LjcyZDM2Mi40OTZkODc3LjU2OGhSM2Q2ODQuMDMyUjRkNjU5LjQ1NlI1ZDI0LjU3NlI2ZDczNC4yMDhSN2QtMTMuMzEyUjhkNzA5LjYzMlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk1MlIxMmQyNC41NzZSMTNkNjg0LjAzMlIxNGFpMWkyaTJpMmkyaTFpMmkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kyaGc6MTY0b1IxZDEwMjRSMmFkNDc0LjExMmQ2NjYuNjI0ZDQ3NC4xMTJkNjM4Ljk3NmQ0NjMuODcyZDYxNC45MTJkNDUzLjYzMmQ1OTAuODQ4ZDQzNS43MTJkNTcyLjkyOGQ0MTcuNzkyZDU1NS4wMDhkMzkzLjcyOGQ1NDQuNzY4ZDM2OS42NjRkNTM0LjUyOGQzNDIuMDE2ZDUzNC41MjhkMzE0LjM2OGQ1MzQuNTI4ZDI5MC4zMDRkNTQ0Ljc2OGQyNjYuMjRkNTU1LjAwOGQyNDguMzJkNTcyLjkyOGQyMzAuNGQ1OTAuODQ4ZDIyMC4xNmQ2MTQuOTEyZDIwOS45MmQ2MzguOTc2ZDIwOS45MmQ2NjYuNjI0ZDIwOS45MmQ2OTQuMjcxZDIyMC4xNmQ3MTguMzM2ZDIzMC40ZDc0Mi40ZDI0OC4zMmQ3NjAuMzE5ZDI2Ni4yNGQ3NzguMjRkMjkwLjMwNGQ3ODguNDhkMzE0LjM2OGQ3OTguNzJkMzQyLjAxNmQ3OTguNzJkMzY5LjY2NGQ3OTguNzJkMzkzLjcyOGQ3ODguNDhkNDE3Ljc5MmQ3NzguMjRkNDM1LjcxMmQ3NjAuMzE5ZDQ1My42MzJkNzQyLjRkNDYzLjg3MmQ3MTguMzM2ZDQ3NC4xMTJkNjk0LjI3MWQ0NzQuMTEyZDY2Ni42MjRkNTA3LjkwNGQ0MjcuMDA4ZDUyMy4yNjRkNDExLjY0OGQ1NDcuODRkNDExLjY0OGQ1NjguMzJkNDExLjY0OGQ1ODQuMTkyZDQyOC4wMzJkNjAwLjA2NGQ0NDQuNDE1ZDYwMC4wNjRkNDY0Ljg5NWQ2MDAuMDY0ZDQ4Mi4zMDRkNTgzLjY4ZDQ5OC42ODhkNTYwLjEyOGQ1MjIuMjRkNjAzLjEzNmQ1ODUuNzI4ZDYwMy4xMzZkNjY2LjYyNGQ2MDMuMTM2ZDc0Ny41MmQ1NjAuMTI4ZDgxMS4wMDhkNTgzLjY4ZDgzNC41NmQ2MDAuMDY0ZDg1MC45NDRkNjAwLjA2NGQ4NjguMzUyZDYwMC4wNjRkODg4LjgzMmQ1ODQuMTkyZDkwNS4yMTZkNTY4LjMyZDkyMS42ZDU0Ny44NGQ5MjEuNmQ1MjMuMjY0ZDkyMS42ZDUwNy45MDRkOTA2LjI0ZDQ4Ni40ZDg4NC43MzZkNDU0LjY1NmQ5MDUuMjE2ZDQxOC4zMDRkOTE2LjQ4ZDM4MS45NTJkOTI3Ljc0NGQzNDIuMDE2ZDkyNy43NDRkMzAyLjA4ZDkyNy43NDRkMjY1LjcyOGQ5MTYuNDhkMjI5LjM3NmQ5MDUuMjE2ZDE5Ny42MzJkODg0LjczNmQxNzYuMTI4ZDkwNi4yNGQxNjAuNzY4ZDkyMS42ZDEzNi4xOTJkOTIxLjZkMTE1LjcxMmQ5MjEuNmQ5OS44NGQ5MDUuMjE2ZDgzLjk2OGQ4ODguODMyZDgzLjk2OGQ4NjguMzUyZDgzLjk2OGQ4NTAuOTQ0ZDEwMC4zNTJkODM0LjU2ZDEyMy45MDRkODExLjAwOGQ4MC44OTZkNzQ3LjUyZDgwLjg5NmQ2NjYuNjI0ZDgwLjg5NmQ1ODUuNzI4ZDEyMy45MDRkNTIyLjI0ZDEwMC4zNTJkNDk4LjY4OGQ4My45NjhkNDgyLjMwNGQ4My45NjhkNDY0Ljg5NWQ4My45NjhkNDQ0LjQxNWQ5OS44NGQ0MjguMDMyZDExNS43MTJkNDExLjY0OGQxMzYuMTkyZDQxMS42NDhkMTYwLjc2OGQ0MTEuNjQ4ZDE3Ni4xMjhkNDI3LjAwOGQxOTcuNjMyZDQ0OC41MTFkMjI5LjM3NmQ0MjguMDMyZDI2NS43MjhkNDE2Ljc2OGQzMDIuMDhkNDA1LjUwNGQzNDIuMDE2ZDQwNS41MDRkMzgxLjk1MmQ0MDUuNTA0ZDQxOC4zMDRkNDE2Ljc2OGQ0NTQuNjU2ZDQyOC4wMzJkNDg2LjRkNDQ4LjUxMWQ1MDcuOTA0ZDQyNy4wMDhoUjNkNjg0LjAzMlI0ZDYwMy4xMzZSNWQ4MC44OTZSNmQ2MTguNDk2UjdkOTYuMjU2UjhkNTM3LjZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTY0UjEyZDgwLjg5NlIxM2Q2ODQuMDMyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTJpM2kzaTJpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTJpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjUxb1IxZDEwMjRSMmFkNDEyLjY3MmQ3ODkuNTA0ZDQxMi42NzJkNzUwLjU5MmQzOTQuNzUyZDczNy43OTFkMzc2LjgzMmQ3MjQuOTkyZDM0NS4wODhkNzIyLjk0NGQyOTIuODY0ZDcxOC44NDhkMjcyLjg5NmQ3MDEuOTUyZDI1Mi45MjhkNjg1LjA1NmQyNTIuOTI4ZDY1OC40MzJkMjUyLjkyOGQ2MTcuNDcyZDI3Ni45OTJkNjAyLjYyNGQzMDEuMDU2ZDU4Ny43NzZkMzM2Ljg5NmQ1ODcuNzc2ZDM2My41MmQ1ODcuNzc2ZDM4NS41MzZkNTcxLjM5MmQ0MDcuNTUyZDU1NS4wMDhkNDA3LjU1MmQ1MTkuMTY4ZDQwNy41NTJkNDgwLjI1NmQzNzkuOTA0ZDQ2NC44OTVkMzUyLjI1NmQ0NDkuNTM1ZDMxMi4zMmQ0NDkuNTM1ZDI4Mi42MjRkNDQ5LjUzNWQyNjMuNjhkNDYxLjMxMmQyNDQuNzM2ZDQ3My4wODdkMjIyLjIwOGQ1MDcuOTA0ZDIwNS44MjRkNTMyLjQ4ZDE4OS45NTJkNTQxLjE4NGQxNzQuMDhkNTQ5Ljg4N2QxNTAuNTI4ZDU0OS44ODdkMTI2Ljk3NmQ1NDkuODg3ZDExMC4wOGQ1NDEuNjk1ZDkzLjE4NGQ1MzMuNTAzZDgxLjkyZDUyMC43MDNkNzAuNjU2ZDUwNy45MDRkNjUuNTM2ZDQ5MS41MmQ2MC40MTZkNDc1LjEzNWQ2MC40MTZkNDU4Ljc1MWQ2MC40MTZkNDI1Ljk4NGQ3OC44NDhkMzk2LjI4OGQ5Ny4yOGQzNjYuNTkyZDEzMi42MDhkMzQ0LjU3NmQxNjcuOTM2ZDMyMi41NTlkMjE5LjY0OGQzMDkuMjQ3ZDI3MS4zNmQyOTUuOTM2ZDMzNy45MmQyOTUuOTM2ZDM5Ny4zMTJkMjk1LjkzNmQ0NDYuNDY0ZDMxMC4yNzFkNDk1LjYxNmQzMjQuNjA3ZDUzMC45NDRkMzUwLjcyZDU2Ni4yNzJkMzc2LjgzMmQ1ODYuMjRkNDE0LjIwN2Q2MDYuMjA4ZDQ1MS41ODNkNjA2LjIwOGQ0OTcuNjY0ZDYwNi4yMDhkNTQ5Ljg4N2Q1ODQuMTkyZDU4Ni4yNGQ1NjIuMTc2ZDYyMi41OTJkNTE5LjE2OGQ2MzYuOTI4ZDUxOS4xNjhkNjM4Ljk3NmQ1NzEuMzkyZDY1NS4zNmQ1OTcuNTA0ZDY5Ni4zMTlkNjIzLjYxNmQ3MzcuMjhkNjIzLjYxNmQ3OTEuNTUyZDYyMy42MTZkODI2LjM2N2Q2MTEuODRkODY5LjM3NmQ2MDAuMDY0ZDkxMi4zODRkNTY2Ljc4NGQ5NDkuNzZkNTMzLjUwNGQ5ODcuMTM2ZDQ3Mi41NzZkMTAxMi4yMjRkNDExLjY0OGQxMDM3LjMxMWQzMTMuMzQ0ZDEwMzcuMzExZDI1MS45MDRkMTAzNy4zMTFkMjAyLjI0ZDEwMjEuOTUyZDE1Mi41NzZkMTAwNi41OTJkMTE3Ljc2ZDk4MS41MDRkODIuOTQ0ZDk1Ni40MTVkNjRkOTI0LjE2ZDQ1LjA1NmQ4OTEuOTA0ZDQ1LjA1NmQ4NTguMTEyZDQ1LjA1NmQ4MTUuMTA0ZDY5LjYzMmQ3ODcuNDU2ZDk0LjIwOGQ3NTkuODA4ZDEzOS4yNjRkNzU5LjgwOGQxNjYuOTEyZDc1OS44MDhkMTgyLjI3MmQ3NjkuMDI0ZDE5Ny42MzJkNzc4LjI0ZDIwNi44NDhkNzkyLjA2NGQyMTYuMDY0ZDgwNS44ODhkMjIyLjIwOGQ4MjEuNzZkMjI4LjM1MmQ4MzcuNjMyZDIzOC4wOGQ4NTEuNDU2ZDI0Ny44MDhkODY1LjI4ZDI2My4xNjhkODc0LjQ5NmQyNzguNTI4ZDg4My43MTJkMzA3LjJkODgzLjcxMmQzNjEuNDcyZDg4My43MTJkMzg3LjA3MmQ4NjIuNzJkNDEyLjY3MmQ4NDEuNzI4ZDQxMi42NzJkNzg5LjUwNGhSM2Q2ODQuMDMyUjRkNjIzLjYxNlI1ZDQ1LjA1NlI2ZDcyOC4wNjRSN2QtMTMuMzEyUjhkNjgzLjAwOFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk1MVIxMmQ0NS4wNTZSMTNkNjg0LjAzMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6MTYzb1IxZDEwMjRSMmFkMTA1LjQ3MmQ3MzMuMTg0ZDgxLjkyZDczMy4xODRkNjUuNTM2ZDcxNS43NzZkNDkuMTUyZDY5OC4zNjdkNDkuMTUyZDY3NC44MTZkNDkuMTUyZDY1MS4yNjRkNjUuNTM2ZDYzMy44NTZkODEuOTJkNjE2LjQ0OGQxMDUuNDcyZDYxNi40NDhkMTM1LjE2OGQ2MTYuNDQ4ZDk1LjIzMmQ1NzIuNDE1ZDk1LjIzMmQ1MDUuODU2ZDk1LjIzMmQ0NTUuNjc5ZDExOC4yNzJkNDE2LjI1NmQxNDEuMzEyZDM3Ni44MzJkMTgwLjIyNGQzNTAuMjA3ZDIxOS4xMzZkMzIzLjU4M2QyNjguOGQzMDkuNzZkMzE4LjQ2NGQyOTUuOTM2ZDM3Mi43MzZkMjk1LjkzNmQ0NDAuMzJkMjk1LjkzNmQ0OTMuNTY4ZDMxMi4zMTlkNTQ2LjgxNmQzMjguNzAzZDU4My42OGQzNTUuMzI4ZDYyMC41NDRkMzgxLjk1MmQ2NDAuNTEyZDQxNi4yNTZkNjYwLjQ4ZDQ1MC41NTlkNjYwLjQ4ZDQ4NS4zNzZkNjYwLjQ4ZDUyMi4yNGQ2MzUuOTA0ZDU0Ni4zMDRkNjExLjMyOGQ1NzAuMzY3ZDU3Mi40MTZkNTcwLjM2N2Q1NDUuNzkyZDU3MC4zNjdkNTIzLjI2NGQ1NTUuNTJkNTAwLjczNmQ1NDAuNjcyZDQ3OC4yMDhkNDk3LjY2NGQ0NjIuODQ4ZDQ2OC45OTFkNDQzLjM5MmQ0NTkuMjY0ZDQyMy45MzZkNDQ5LjUzNWQzOTQuMjRkNDQ5LjUzNWQzNzguODhkNDQ5LjUzNWQzNjMuMDA4ZDQ1NC4xNDRkMzQ3LjEzNmQ0NTguNzUxZDMzNC44NDhkNDY4LjQ4ZDMyMi41NmQ0NzguMjA3ZDMxNC4zNjhkNDkzLjA1NmQzMDYuMTc2ZDUwNy45MDRkMzA2LjE3NmQ1MjcuMzZkMzA2LjE3NmQ1NTAuOTEyZDMxNS45MDRkNTcyLjQxNWQzMjUuNjMyZDU5My45MmQzMzkuOTY4ZDYxNi40NDhkNDU1LjY4ZDYxNi40NDhkNDc5LjIzMmQ2MTYuNDQ4ZDQ5NS42MTZkNjMzLjg1NmQ1MTJkNjUxLjI2NGQ1MTJkNjc0LjgxNmQ1MTJkNjk4LjM2N2Q0OTUuNjE2ZDcxNS43NzZkNDc5LjIzMmQ3MzMuMTg0ZDQ1NS42OGQ3MzMuMTg0ZDM1NC4zMDRkNzMzLjE4NGQzNDcuMTM2ZDc3Mi4wOTZkMzI1LjEyZDgwNy45MzZkMzAzLjEwNGQ4NDMuNzc2ZDI1NC45NzZkODgwLjY0ZDI1OC4wNDhkODgyLjY4OGQyODMuNjQ4ZDg2NS4yOGQzMDguMjI0ZDg1Ni4wNjRkMzMyLjhkODQ2Ljg0OGQzNTIuMjU2ZDg0Ni44NDhkMzk3LjMxMmQ4NDYuODQ4ZDQzMS42MTZkODU2LjA2NGQ0NjUuOTJkODY1LjI4ZDQ5Ni42NGQ4NjUuMjhkNTEyZDg2NS4yOGQ1MjMuNzc2ZDg2Mi4yMDhkNTM1LjU1MmQ4NTkuMTM2ZDU0NS43OTJkODU2LjA2NGQ1NTYuMDMyZDg1Mi45OTJkNTY2LjI3MmQ4NDkuOTJkNTc2LjUxMmQ4NDYuODQ4ZDU4OC44ZDg0Ni44NDhkNjEwLjMwNGQ4NDYuODQ4ZDYyNi42ODhkODU0LjAxNmQ2NDMuMDcyZDg2MS4xODRkNjUzLjMxMmQ4NzIuOTZkNjYzLjU1MmQ4ODQuNzM2ZDY2OC42NzJkOTAwLjA5NmQ2NzMuNzkyZDkxNS40NTZkNjczLjc5MmQ5MzEuODRkNjczLjc5MmQ5NTMuMzQ0ZDY2NS4wODhkOTcyLjhkNjU2LjM4NGQ5OTIuMjU2ZDYzNy40NGQxMDA2LjU5MmQ2MTguNDk2ZDEwMjAuOTI4ZDU4OC44ZDEwMjkuMTE5ZDU1OS4xMDRkMTAzNy4zMTFkNTE3LjEyZDEwMzcuMzExZDQ3Ny4xODRkMTAzNy4zMTFkNDQ2Ljk3NmQxMDMxLjY4ZDQxNi43NjhkMTAyNi4wNDhkMzkwLjY1NmQxMDE4Ljg4ZDM2NC41NDRkMTAxMS43MTJkMzQwLjQ4ZDEwMDYuMDhkMzE2LjQxNmQxMDAwLjQ0OGQyODkuNzkyZDEwMDAuNDQ4ZDI2OC4yODhkMTAwMC40NDhkMjUwLjg4ZDEwMDYuMDhkMjMzLjQ3MmQxMDExLjcxMmQyMTguMTEyZDEwMTguODhkMjAyLjc1MmQxMDI2LjA0OGQxODcuOTA0ZDEwMzEuNjhkMTczLjA1NmQxMDM3LjMxMWQxNTUuNjQ4ZDEwMzcuMzExZDEzNy4yMTZkMTAzNy4zMTFkMTIxLjM0NGQxMDMwLjE0NGQxMDUuNDcyZDEwMjIuOTc2ZDkzLjE4NGQxMDEwLjY4OGQ4MC44OTZkOTk4LjRkNzQuMjRkOTgyLjAxNmQ2Ny41ODRkOTY1LjYzMmQ2Ny41ODRkOTQ4LjIyNGQ2Ny41ODRkOTI4Ljc2OGQ3Ni44ZDkxNC40MzJkODYuMDE2ZDkwMC4wOTZkOTkuODRkODg2Ljc4NGQxMTMuNjY0ZDg3My40NzJkMTMwLjA0OGQ4NTguNjI0ZDE0Ni40MzJkODQzLjc3NmQxNTkuNzQ0ZDgyMi4yNzFkMTY3LjkzNmQ4MDguOTZkMTcxLjUyZDc5My42ZDE3NS4xMDRkNzc4LjI0ZDE3NS4xMDRkNzY0LjkyOGQxNzUuMTA0ZDc0Ny41MmQxNzIuMDMyZDczMy4xODRkMTA1LjQ3MmQ3MzMuMTg0aFIzZDY4NC4wMzJSNGQ2NzMuNzkyUjVkNDkuMTUyUjZkNzI4LjA2NFI3ZC0xMy4zMTJSOGQ2NzguOTEyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE2M1IxMmQ0OS4xNTJSMTNkNjg0LjAzMlIxNGFpMWkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJoZzo1MG9SMWQxMDI0UjJhZDU1MS45MzZkODUxLjk2OGQ1OTguMDE2ZDg1MS45NjhkNjE4LjQ5NmQ4NzQuNDk2ZDYzOC45NzZkODk3LjAyNGQ2MzguOTc2ZDkzNy45ODRkNjM4Ljk3NmQ5NzguOTQ0ZDYxOC40OTZkMTAwMS40NzJkNTk4LjAxNmQxMDI0ZDU1MS45MzZkMTAyNGQxMzQuMTQ0ZDEwMjRkOTMuMTg0ZDEwMjRkNzAuMTQ0ZDk5Ny44ODhkNDcuMTA0ZDk3MS43NzZkNDcuMTA0ZDkzOS4wMDhkNDcuMTA0ZDkxNS40NTZkNTIuMjI0ZDg5NS40ODhkNTcuMzQ0ZDg3NS41MmQ3OC4zMzZkODUwLjk0NGQ5OS4zMjhkODI2LjM2N2QxMzkuNzc2ZDc5My42ZDE4MC4yMjRkNzYwLjgzMmQyNTAuODhkNzExLjY4ZDM0OC4xNmQ2NDQuMDk2ZDM4Ni4wNDhkNjE3LjQ3MmQ0MDEuNDA4ZDU5My45MmQ0MTYuNzY4ZDU3MC4zNjdkNDE2Ljc2OGQ1MzguNjI0ZDQxNi43NjhkNTAwLjczNmQzOTMuMjE2ZDQ3OC4yMDdkMzY5LjY2NGQ0NTUuNjc5ZDMyNy42OGQ0NTUuNjc5ZDI5OS4wMDhkNDU1LjY3OWQyODIuNjI0ZDQ2Ni40MzJkMjY2LjI0ZDQ3Ny4xODNkMjU3LjAyNGQ0OTIuNTQ0ZDI0Ny44MDhkNTA3LjkwNGQyNDEuNjY0ZDUyNi44NDhkMjM1LjUyZDU0NS43OTFkMjI1Ljc5MmQ1NjEuMTUyZDIxNi4wNjRkNTc2LjUxMmQyMDAuMTkyZDU4Ny4yNjRkMTg0LjMyZDU5OC4wMTZkMTU1LjY0OGQ1OTguMDE2ZDEwMC4zNTJkNTk4LjAxNmQ3Ny44MjRkNTcwLjM2N2Q1NS4yOTZkNTQyLjcyZDU1LjI5NmQ0OTguNjg4ZDU1LjI5NmQ0NjEuODIzZDczLjIxNmQ0MjUuNDcyZDkxLjEzNmQzODkuMTJkMTI2LjQ2NGQzNjAuNDQ4ZDE2MS43OTJkMzMxLjc3NWQyMTMuNTA0ZDMxMy44NTZkMjY1LjIxNmQyOTUuOTM2ZDMzMy44MjRkMjk1LjkzNmQ0MTUuNzQ0ZDI5NS45MzZkNDcyLjA2NGQzMTYuNDE1ZDUyOC4zODRkMzM2Ljg5NWQ1NjIuNjg4ZDM2OS42NjRkNTk2Ljk5MmQ0MDIuNDMyZDYxMi4zNTJkNDQzLjkwNGQ2MjcuNzEyZDQ4NS4zNzZkNjI3LjcxMmQ1MjguMzg0ZDYyNy43MTJkNTkyLjg5NmQ1OTQuOTQ0ZDY0MS41MzZkNTYyLjE3NmQ2OTAuMTc1ZDQ5My41NjhkNzMzLjE4NGQzMDguMjI0ZDg0OS45MmQzMDguMjI0ZDg1MS45NjhkNTUxLjkzNmQ4NTEuOTY4aFIzZDY4NC4wMzJSNGQ2MzguOTc2UjVkNDcuMTA0UjZkNzI4LjA2NFI3ZDBSOGQ2ODAuOTZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpNTBSMTJkNDcuMTA0UjEzZDY4NC4wMzJSMTRhaTFpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTJpMmhnOjE2Mm9SMWQxMDI0UjJhZDMyOC43MDRkNDAxLjQwOGQzMjguNzA0ZDM2OS42NjRkMzQxLjUwNGQzNTguNGQzNTQuMzA0ZDM0Ny4xMzVkMzcyLjczNmQzNDcuMTM1ZDM5MS4xNjhkMzQ3LjEzNWQ0MDMuOTY4ZDM1OC40ZDQxNi43NjhkMzY5LjY2NGQ0MTYuNzY4ZDQwMS40MDhkNDE2Ljc2OGQ0NzguMjA3ZDQ2MS44MjRkNDgzLjMyOGQ0OTguMTc2ZDQ5Ni42NGQ1MzQuNTI4ZDUwOS45NTJkNTYwLjEyOGQ1MjguODk2ZDU4NS43MjhkNTQ3LjgzOWQ1OTkuNTUyZDU3MS4zOTJkNjEzLjM3NmQ1OTQuOTQ0ZDYxMy4zNzZkNjE5LjUyZDYxMy4zNzZkNjU1LjM2ZDU5MS4zNmQ2NzYuMzUyZDU2OS4zNDRkNjk3LjM0NGQ1MzcuNmQ2OTcuMzQ0ZDUxNy4xMmQ2OTcuMzQ0ZDUwMS4yNDhkNjg1LjU2OGQ0ODUuMzc2ZDY3My43OTFkNDY4Ljk5MmQ2NTkuOTY4ZDQ1Mi42MDhkNjQ2LjE0NGQ0MzIuNjRkNjM0LjM2N2Q0MTIuNjcyZDYyMi41OTJkMzg1LjAyNGQ2MjIuNTkyZDM1Mi4yNTZkNjIyLjU5MmQzMzEuNzc2ZDYzNC44OGQzMTEuMjk2ZDY0Ny4xNjhkMzAwLjAzMmQ2NjUuNTk5ZDI4OC43NjhkNjg0LjAzMWQyODQuMTZkNzA3LjA3MmQyNzkuNTUyZDczMC4xMTJkMjc5LjU1MmQ3NTEuNjE2ZDI3OS41NTJkNzc4LjI0ZDI4NC4xNmQ4MDIuODE2ZDI4OC43NjhkODI3LjM5MmQzMDAuMDMyZDg0Ni44NDhkMzExLjI5NmQ4NjYuMzA0ZDMyOS43MjhkODc4LjA3OWQzNDguMTZkODg5Ljg1NmQzNzUuODA4ZDg4OS44NTZkNDAyLjQzMmQ4ODkuODU2ZDQyMi40ZDg3OC4wNzlkNDQyLjM2OGQ4NjYuMzA0ZDQ2MC44ZDg1Mi40OGQ0NzkuMjMyZDgzOC42NTZkNDk3LjE1MmQ4MjYuODhkNTE1LjA3MmQ4MTUuMTA0ZDUzNi41NzZkODE1LjEwNGQ1NzQuNDY0ZDgxNS4xMDRkNTk0Ljk0NGQ4NDAuMTkyZDYxNS40MjRkODY1LjI4ZDYxNS40MjRkODkyLjkyOGQ2MTUuNDI0ZDkwNy4yNjRkNjA1LjE4NGQ5MjkuMjhkNTk0Ljk0NGQ5NTEuMjk2ZDU3MS45MDRkOTcyLjhkNTQ4Ljg2NGQ5OTQuMzA0ZDUxMC45NzZkMTAxMS4yZDQ3My4wODhkMTAyOC4wOTZkNDE2Ljc2OGQxMDM0LjI0ZDQxNi43NjhkMTEzNS42MTZkNDE2Ljc2OGQxMTY3LjM2ZDQwMy45NjhkMTE3OC42MjRkMzkxLjE2OGQxMTg5Ljg4OGQzNzIuNzM2ZDExODkuODg4ZDM1NC4zMDRkMTE4OS44ODhkMzQxLjUwNGQxMTc4LjYyNGQzMjguNzA0ZDExNjcuMzZkMzI4LjcwNGQxMTM1LjYxNmQzMjguNzA0ZDEwMzQuMjRkMjcyLjM4NGQxMDMwLjE0NGQyMjQuNzY4ZDEwMTAuNjg4ZDE3Ny4xNTJkOTkxLjIzMmQxNDIuMzM2ZDk1Ni45MjhkMTA3LjUyZDkyMi42MjRkODguMDY0ZDg3Mi40NDhkNjguNjA4ZDgyMi4yNzFkNjguNjA4ZDc1NS43MTJkNjguNjA4ZDY4OS4xNTJkODguMDY0ZDYzOS40ODhkMTA3LjUyZDU4OS44MjRkMTQyLjMzNmQ1NTUuMDA4ZDE3Ny4xNTJkNTIwLjE5MmQyMjQuNzY4ZDUwMS4yNDdkMjcyLjM4NGQ0ODIuMzA0ZDMyOC43MDRkNDc3LjE4M2QzMjguNzA0ZDQwMS40MDhoUjNkNjg0LjAzMlI0ZDYxNS40MjRSNWQ2OC42MDhSNmQ2NzYuODY0UjdkLTE2NS44ODhSOGQ2MDguMjU2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE2MlIxMmQ2OC42MDhSMTNkNjg0LjAzMlIxNGFpMWkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpMmhnOjQ5b1IxZDEwMjRSMmFkMjIyLjIwOGQ1OTUuOTY4ZDExMS42MTZkNTk1Ljk2OGQzNS44NGQ1OTUuOTY4ZDM1Ljg0ZDUyMy4yNjRkMzUuODRkNTAzLjgwOGQzOS45MzZkNDkwLjQ5NmQ0NC4wMzJkNDc3LjE4M2Q1NC43ODRkNDY4LjQ4ZDY1LjUzNmQ0NTkuNzc1ZDg0Ljk5MmQ0NTMuNjMxZDEwNC40NDhkNDQ3LjQ4N2QxMzUuMTY4ZDQ0Mi4zNjdkMTgyLjI3MmQ0MzQuMTc1ZDIwOC44OTZkNDEzLjY5NmQyMzUuNTJkMzkzLjIxNmQyNTZkMzY1LjU2OGQyODAuNTc2ZDMzMS43NzVkMzAwLjAzMmQzMTMuODU2ZDMxOS40ODhkMjk1LjkzNmQzNTAuMjA4ZDI5NS45MzZkMzg5LjEyZDI5NS45MzZkNDExLjEzNmQzMTMuMzQzZDQzMy4xNTJkMzMwLjc1MWQ0MzMuMTUyZDM2Ny42MTZkNDMzLjE1MmQ5MzIuODY0ZDQzMy4xNTJkOTg3LjEzNmQ0MDMuNDU2ZDEwMTIuMjI0ZDM3My43NmQxMDM3LjMxMWQzMjcuNjhkMTAzNy4zMTFkMjgxLjZkMTAzNy4zMTFkMjUxLjkwNGQxMDEyLjIyNGQyMjIuMjA4ZDk4Ny4xMzZkMjIyLjIwOGQ5MzIuODY0ZDIyMi4yMDhkNTk1Ljk2OGhSM2Q1MzEuNDU2UjRkNDMzLjE1MlI1ZDM1Ljg0UjZkNzI4LjA2NFI3ZC0xMy4zMTJSOGQ2OTIuMjI0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTQ5UjEyZDM1Ljg0UjEzZDUzMS40NTZSMTRhaTFpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTJoZzoxNjFvUjFkMTAyNFIyYWQ3NC43NTJkNTg5LjgyNGQ3NC43NTJkNTY2LjI3MWQ4My45NjhkNTQ1LjI4ZDkzLjE4NGQ1MjQuMjg4ZDEwOC41NDRkNTA4LjkyOGQxMjMuOTA0ZDQ5My41NjhkMTQ0Ljg5NmQ0ODQuMzUyZDE2NS44ODhkNDc1LjEzNWQxODkuNDRkNDc1LjEzNWQyMTIuOTkyZDQ3NS4xMzVkMjMzLjk4NGQ0ODQuMzUyZDI1NC45NzZkNDkzLjU2OGQyNzAuMzM2ZDUwOC45MjhkMjg1LjY5NmQ1MjQuMjg4ZDI5NC45MTJkNTQ1LjI4ZDMwNC4xMjhkNTY2LjI3MWQzMDQuMTI4ZDU4OS44MjRkMzA0LjEyOGQ2MTMuMzc2ZDI5NC45MTJkNjM0LjM2N2QyODUuNjk2ZDY1NS4zNmQyNzAuMzM2ZDY3MC43MmQyNTQuOTc2ZDY4Ni4wNzlkMjMzLjk4NGQ2OTUuMjk2ZDIxMi45OTJkNzA0LjUxMmQxODkuNDRkNzA0LjUxMmQxNjUuODg4ZDcwNC41MTJkMTQ0Ljg5NmQ2OTUuMjk2ZDEyMy45MDRkNjg2LjA3OWQxMDguNTQ0ZDY3MC43MmQ5My4xODRkNjU1LjM2ZDgzLjk2OGQ2MzQuMzY3ZDc0Ljc1MmQ2MTMuMzc2ZDc0Ljc1MmQ1ODkuODI0ZDc3LjgyNGQxMTEyLjA2NGQ3Ny44MjRkMTA1Ni43NjhkOTAuMTEyZDk3NS44NzJkMTAyLjRkODk0Ljk3NmQxMjMuOTA0ZDc5NS42NDhkMTMwLjA0OGQ3NjhkMTQzLjM2ZDc1NS4yZDE1Ni42NzJkNzQyLjRkMTg5LjQ0ZDc0Mi40ZDIyMi4yMDhkNzQyLjRkMjM1LjUyZDc1NS4yZDI0OC44MzJkNzY4ZDI1NC45NzZkNzk1LjY0OGQyNzYuNDhkODk0Ljk3NmQyODguNzY4ZDk3NS44NzJkMzAxLjA1NmQxMDU2Ljc2OGQzMDEuMDU2ZDExMTIuMDY0ZDMwMS4wNTZkMTE2Ny4zNmQyNzUuNDU2ZDExOTkuNjE2ZDI0OS44NTZkMTIzMS44NzJkMTg5LjQ0ZDEyMzEuODcyZDEyOS4wMjRkMTIzMS44NzJkMTAzLjQyNGQxMTk5LjYxNmQ3Ny44MjRkMTE2Ny4zNmQ3Ny44MjRkMTExMi4wNjRoUjNkMzc4Ljg4UjRkMzA0LjEyOFI1ZDc0Ljc1MlI2ZDU0OC44NjRSN2QtMjA3Ljg3MlI4ZDQ3NC4xMTJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTYxUjEyZDc0Ljc1MlIxM2QzNzguODhSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6NDhvUjFkMTAyNFIyYWQ0MzQuMTc2ZDY2Ni42MjRkNDM0LjE3NmQ1NTguMDc5ZDQxMy4xODRkNTA2Ljg4ZDM5Mi4xOTJkNDU1LjY3OWQzNDIuMDE2ZDQ1NS42NzlkMjkxLjg0ZDQ1NS42NzlkMjcwLjg0OGQ1MDYuODhkMjQ5Ljg1NmQ1NTguMDc5ZDI0OS44NTZkNjY2LjYyNGQyNDkuODU2ZDczMS4xMzZkMjU2ZDc3Mi4wOTZkMjYyLjE0NGQ4MTMuMDU2ZDI3My45MmQ4MzYuNjA4ZDI4NS42OTZkODYwLjE2ZDMwMi41OTJkODY4Ljg2NGQzMTkuNDg4ZDg3Ny41NjhkMzQyLjAxNmQ4NzcuNTY4ZDM2NC41NDRkODc3LjU2OGQzODEuNDRkODY4Ljg2NGQzOTguMzM2ZDg2MC4xNmQ0MTAuMTEyZDgzNi42MDhkNDIxLjg4OGQ4MTMuMDU2ZDQyOC4wMzJkNzcyLjA5NmQ0MzQuMTc2ZDczMS4xMzZkNDM0LjE3NmQ2NjYuNjI0ZDM4LjkxMmQ2NjMuNTUyZDM4LjkxMmQ1NzguNTZkNTguMzY4ZDUxMC40NjNkNzcuODI0ZDQ0Mi4zNjdkMTE2LjIyNGQzOTQuNzUxZDE1NC42MjRkMzQ3LjEzNWQyMTAuOTQ0ZDMyMS41MzVkMjY3LjI2NGQyOTUuOTM2ZDM0Mi4wMTZkMjk1LjkzNmQ0MTYuNzY4ZDI5NS45MzZkNDczLjA4OGQzMjEuNTM1ZDUyOS40MDhkMzQ3LjEzNWQ1NjcuODA4ZDM5NC43NTFkNjA2LjIwOGQ0NDIuMzY3ZDYyNS42NjRkNTEwLjQ2M2Q2NDUuMTJkNTc4LjU2ZDY0NS4xMmQ2NjMuNTUyZDY0NS4xMmQ3NjQuOTI4ZDYyMi41OTJkODM2LjA5NmQ2MDAuMDY0ZDkwNy4yNjRkNTU5LjYxNmQ5NTEuODA4ZDUxOS4xNjhkOTk2LjM1MmQ0NjMuMzZkMTAxNi44MzJkNDA3LjU1MmQxMDM3LjMxMWQzNDIuMDE2ZDEwMzcuMzExZDI3NS40NTZkMTAzNy4zMTFkMjIwLjE2ZDEwMTYuODMyZDE2NC44NjRkOTk2LjM1MmQxMjQuNDE2ZDk1MS44MDhkODMuOTY4ZDkwNy4yNjRkNjEuNDRkODM2LjA5NmQzOC45MTJkNzY0LjkyOGQzOC45MTJkNjYzLjU1MmhSM2Q2ODQuMDMyUjRkNjQ1LjEyUjVkMzguOTEyUjZkNzI4LjA2NFI3ZC0xMy4zMTJSOGQ2ODkuMTUyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTQ4UjEyZDM4LjkxMlIxM2Q2ODQuMDMyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjE2MG9SMWQxMDI0UjJhaFIzZDM0Mi4wMTZSNGQwUjVkMFI2ZDBSN2QwUjhkMFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNjBSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjQ3b1IxZDEwMjRSMmFkMjMyLjQ0OGQzMzYuODk1ZDIzOS42MTZkMzE1LjM5MWQyNDYuMjcyZDMwMi41OTJkMjUyLjkyOGQyODkuNzkyZDI2MS4xMmQyODIuMTExZDI2OS4zMTJkMjc0LjQzMmQyODAuMDY0ZDI3MS44NzFkMjkwLjgxNmQyNjkuMzEyZDMwOC4yMjRkMjY5LjMxMmQzMjAuNTEyZDI2OS4zMTJkMzMzLjgyNGQyNzMuNDA4ZDM0Ny4xMzZkMjc3LjUwNGQzNTcuODg4ZDI4Ni4yMDdkMzY4LjY0ZDI5NC45MTJkMzc1LjgwOGQzMDguMjIzZDM4Mi45NzZkMzIxLjUzNWQzODIuOTc2ZDMzOS45NjdkMzgyLjk3NmQzNTQuMzA0ZDM3NS4yOTZkMzc4LjM2N2QzNjcuNjE2ZDQwMi40MzJkMzU0LjMwNGQ0NDAuMzE5ZDE2NS44ODhkOTczLjgyNGQxNTguNzJkOTk1LjMyOGQxNTIuMDY0ZDEwMDguMTI4ZDE0NS40MDhkMTAyMC45MjhkMTM3LjIxNmQxMDI4LjYwOGQxMjkuMDI0ZDEwMzYuMjg4ZDExNy43NmQxMDM4Ljg0OGQxMDYuNDk2ZDEwNDEuNDA3ZDkwLjExMmQxMDQxLjQwN2Q3Ny44MjRkMTA0MS40MDdkNjQuNTEyZDEwMzcuMzExZDUxLjJkMTAzMy4yMTVkNDAuNDQ4ZDEwMjQuNTEyZDI5LjY5NmQxMDE1LjgwOGQyMi41MjhkMTAwMi40OTZkMTUuMzZkOTg5LjE4NGQxNS4zNmQ5NzAuNzUyZDE1LjM2ZDk1Ni40MTVkMjMuMDRkOTMyLjM1MmQzMC43MmQ5MDguMjg4ZDQ0LjAzMmQ4NzAuNGQyMzIuNDQ4ZDMzNi44OTVoUjNkMzk4LjMzNlI0ZDM4Mi45NzZSNWQxNS4zNlI2ZDc1NC42ODhSN2QtMTcuNDA4UjhkNzM5LjMyOFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk0N1IxMmQxNS4zNlIxM2QzOTguMzM2UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTJoZzoxNTlvUjFkMTAyNFIyYWhSM2QzNDIuMDE2UjRkMFI1ZDBSNmQwUjdkMFI4ZDBSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTU5UjEyZDBSMTNkMzQyLjAxNlIxNGFoZzo0Nm9SMWQxMDI0UjJhZDU2LjMyZDkxNS40NTZkNTYuMzJkODkxLjkwNGQ2NS41MzZkODcwLjkxMmQ3NC43NTJkODQ5LjkyZDkwLjExMmQ4MzQuNTZkMTA1LjQ3MmQ4MTkuMmQxMjYuNDY0ZDgwOS45ODRkMTQ3LjQ1NmQ4MDAuNzY4ZDE3MS4wMDhkODAwLjc2OGQxOTQuNTZkODAwLjc2OGQyMTUuNTUyZDgwOS45ODRkMjM2LjU0NGQ4MTkuMmQyNTEuOTA0ZDgzNC41NmQyNjcuMjY0ZDg0OS45MmQyNzYuNDhkODcwLjkxMmQyODUuNjk2ZDg5MS45MDRkMjg1LjY5NmQ5MTUuNDU2ZDI4NS42OTZkOTM5LjAwOGQyNzYuNDhkOTYwZDI2Ny4yNjRkOTgwLjk5MmQyNTEuOTA0ZDk5Ni4zNTJkMjM2LjU0NGQxMDExLjcxMmQyMTUuNTUyZDEwMjAuOTI4ZDE5NC41NmQxMDMwLjE0NGQxNzEuMDA4ZDEwMzAuMTQ0ZDE0Ny40NTZkMTAzMC4xNDRkMTI2LjQ2NGQxMDIwLjkyOGQxMDUuNDcyZDEwMTEuNzEyZDkwLjExMmQ5OTYuMzUyZDc0Ljc1MmQ5ODAuOTkyZDY1LjUzNmQ5NjBkNTYuMzJkOTM5LjAwOGQ1Ni4zMmQ5MTUuNDU2aFIzZDM0Mi4wMTZSNGQyODUuNjk2UjVkNTYuMzJSNmQyMjMuMjMyUjdkLTYuMTQ0UjhkMTY2LjkxMlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk0NlIxMmQ1Ni4zMlIxM2QzNDIuMDE2UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzoxNThvUjFkMTAyNFIyYWhSM2QzNDIuMDE2UjRkMFI1ZDBSNmQwUjdkMFI4ZDBSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTU4UjEyZDBSMTNkMzQyLjAxNlIxNGFoZzo0NW9SMWQxMDI0UjJhZDI4Mi42MjRkNjM3Ljk1MmQzMzIuOGQ2MzcuOTUyZDM1NS44NGQ2NjQuNTc2ZDM3OC44OGQ2OTEuMmQzNzguODhkNzM0LjIwOGQzNzguODhkNzc3LjIxNmQzNTUuODRkODAzLjg0ZDMzMi44ZDgzMC40NjRkMjgyLjYyNGQ4MzAuNDY0ZDExNS43MTJkODMwLjQ2NGQ2NS41MzZkODMwLjQ2NGQ0Mi40OTZkODAzLjg0ZDE5LjQ1NmQ3NzcuMjE2ZDE5LjQ1NmQ3MzQuMjA4ZDE5LjQ1NmQ2OTEuMmQ0Mi40OTZkNjY0LjU3NmQ2NS41MzZkNjM3Ljk1MmQxMTUuNzEyZDYzNy45NTJkMjgyLjYyNGQ2MzcuOTUyaFIzZDM5OC4zMzZSNGQzNzguODhSNWQxOS40NTZSNmQzODYuMDQ4UjdkMTkzLjUzNlI4ZDM2Ni41OTJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpNDVSMTJkMTkuNDU2UjEzZDM5OC4zMzZSMTRhaTFpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjE1N29SMWQxMDI0UjJhaFIzZDM0Mi4wMTZSNGQwUjVkMFI2ZDBSN2QwUjhkMFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNTdSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjQ0b1IxZDEwMjRSMmFkNTYuMzJkOTExLjM2ZDU2LjMyZDg4OC44MzJkNjQuNTEyZDg2OC44NjRkNzIuNzA0ZDg0OC44OTZkODcuNTUyZDgzMy41MzZkMTAyLjRkODE4LjE3NWQxMjIuODhkODA5LjQ3MmQxNDMuMzZkODAwLjc2OGQxNjcuOTM2ZDgwMC43NjhkMTkwLjQ2NGQ4MDAuNzY4ZDIxMi40OGQ4MDkuNDcyZDIzNC40OTZkODE4LjE3NWQyNTIuNDE2ZDgzNy4xMmQyNzAuMzM2ZDg1Ni4wNjRkMjgxLjA4OGQ4ODcuMjk2ZDI5MS44NGQ5MTguNTI4ZDI5MS44NGQ5NjMuNTg0ZDI5MS44NGQxMDIwLjkyOGQyNzMuNDA4ZDEwNjAuODY0ZDI1NC45NzZkMTEwMC44ZDIyNy44NGQxMTI1LjM3NmQyMDAuNzA0ZDExNDkuOTUyZDE2OS40NzJkMTE2MS4yMTZkMTM4LjI0ZDExNzIuNDhkMTEyLjY0ZDExNzIuNDhkODQuOTkyZDExNzIuNDhkNzMuMjE2ZDExNTcuMTJkNjEuNDRkMTE0MS43NmQ2MS40NGQxMTI3LjQyNGQ2MS40NGQxMTA1LjkyZDc0Ljc1MmQxMDkzLjYzMmQ4OC4wNjRkMTA4MS4zNDRkMTIxLjg1NmQxMDczLjE1MmQxNDguNDhkMTA2Ny4wMDhkMTY0Ljg2NGQxMDUxLjY0OGQxODEuMjQ4ZDEwMzYuMjg4ZDE4MS4yNDhkMTAwNC41NDRkMTY2LjkxMmQxMDExLjcxMmQxNDUuNDA4ZDEwMTEuNzEyZDEyMi44OGQxMDExLjcxMmQxMDUuOTg0ZDEwMDMuNTJkODkuMDg4ZDk5NS4zMjhkNzguMzM2ZDk4MS41MDRkNjcuNTg0ZDk2Ny42OGQ2MS45NTJkOTQ5LjI0OGQ1Ni4zMmQ5MzAuODE2ZDU2LjMyZDkxMS4zNmhSM2QzNDIuMDE2UjRkMjkxLjg0UjVkNTYuMzJSNmQyMjMuMjMyUjdkLTE0OC40OFI4ZDE2Ni45MTJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpNDRSMTJkNTYuMzJSMTNkMzQyLjAxNlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzoxNTZvUjFkMTAyNFIyYWhSM2QzNDIuMDE2UjRkMFI1ZDBSNmQwUjdkMFI4ZDBSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTU2UjEyZDBSMTNkMzQyLjAxNlIxNGFoZzo0M29SMWQxMDI0UjJhZDIzOS42MTZkNTE2LjA5NmQyMzkuNjE2ZDQ4My4zMjhkMjU3LjAyNGQ0NjMuODcxZDI3NC40MzJkNDQ0LjQxNWQzMDcuMmQ0NDQuNDE1ZDMzOS45NjhkNDQ0LjQxNWQzNTcuMzc2ZDQ2My44NzFkMzc0Ljc4NGQ0ODMuMzI4ZDM3NC43ODRkNTE2LjA5NmQzNzQuNzg0ZDY2Ni42MjRkNTI1LjMxMmQ2NjYuNjI0ZDU1OC4wOGQ2NjYuNjI0ZDU3Ny41MzZkNjg0LjAzMWQ1OTYuOTkyZDcwMS40NGQ1OTYuOTkyZDczNC4yMDhkNTk2Ljk5MmQ3NjYuOTc2ZDU3Ny41MzZkNzg0LjM4NGQ1NTguMDhkODAxLjc5MmQ1MjUuMzEyZDgwMS43OTJkMzc0Ljc4NGQ4MDEuNzkyZDM3NC43ODRkOTUyLjMxOWQzNzQuNzg0ZDk4NS4wODhkMzU3LjM3NmQxMDA0LjU0NGQzMzkuOTY4ZDEwMjRkMzA3LjJkMTAyNGQyNzQuNDMyZDEwMjRkMjU3LjAyNGQxMDA0LjU0NGQyMzkuNjE2ZDk4NS4wODhkMjM5LjYxNmQ5NTIuMzE5ZDIzOS42MTZkODAxLjc5MmQ4OS4wODhkODAxLjc5MmQ1Ni4zMmQ4MDEuNzkyZDM2Ljg2NGQ3ODQuMzg0ZDE3LjQwOGQ3NjYuOTc2ZDE3LjQwOGQ3MzQuMjA4ZDE3LjQwOGQ3MDEuNDRkMzYuODY0ZDY4NC4wMzFkNTYuMzJkNjY2LjYyNGQ4OS4wODhkNjY2LjYyNGQyMzkuNjE2ZDY2Ni42MjRkMjM5LjYxNmQ1MTYuMDk2aFIzZDYxNC40UjRkNTk2Ljk5MlI1ZDE3LjQwOFI2ZDU3OS41ODRSN2QwUjhkNTYyLjE3NlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk0M1IxMmQxNy40MDhSMTNkNjE0LjRSMTRhaTFpM2kzaTNpM2kyaTJpM2kzaTNpM2kyaTJpM2kzaTNpM2kyaTJpM2kzaTNpM2kyaTJoZzoxNTVvUjFkMTAyNFIyYWhSM2QzNDIuMDE2UjRkMFI1ZDBSNmQwUjdkMFI4ZDBSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTU1UjEyZDBSMTNkMzQyLjAxNlIxNGFoZzo0Mm9SMWQxMDI0UjJhZDIyOS4zNzZkMzQyLjAxNWQyMjkuMzc2ZDMwOC4yMjNkMjQyLjE3NmQyOTAuODE2ZDI1NC45NzZkMjczLjQwOGQyODQuNjcyZDI3My40MDhkMzE0LjM2OGQyNzMuNDA4ZDMyNy4xNjhkMjkwLjgxNmQzMzkuOTY4ZDMwOC4yMjNkMzM5Ljk2OGQzNDIuMDE1ZDMzOS45NjhkNDI5LjA1NmQ0MTYuNzY4ZDM5Ny4zMTJkNDM3LjI0OGQzODkuMTJkNDUyLjYwOGQzODkuMTJkNTA4LjkyOGQzODkuMTJkNTA4LjkyOGQ0NTEuNTgzZDUwOC45MjhkNDcwLjAxNWQ1MDIuNzg0ZDQ4MC43NjhkNDk2LjY0ZDQ5MS41MmQ0ODAuMjU2ZDQ5Ni42NGQzNzAuNjg4ZDUyOS40MDhkNDE2Ljc2OGQ1ODcuNzc2ZDQzNy4yNDhkNjE0LjRkNDQ1Ljk1MmQ2MjguMjIzZDQ1NC42NTZkNjQyLjA0OGQ0NTQuNjU2ZDY1NC4zMzZkNDU0LjY1NmQ2NzcuODg3ZDQzNS4yZDY5My43NmQ0MTUuNzQ0ZDcwOS42MzJkMzk0LjI0ZDcwOS42MzJkMzc4Ljg4ZDcwOS42MzJkMzY2LjA4ZDcwMi40NjRkMzUzLjI4ZDY5NS4yOTZkMzMyLjhkNjY1LjU5OWQyODQuNjcyZDU5NS45NjhkMjM2LjU0NGQ2NjUuNTk5ZDIxNi4wNjRkNjk1LjI5NmQyMDMuMjY0ZDcwMi40NjRkMTkwLjQ2NGQ3MDkuNjMyZDE3NS4xMDRkNzA5LjYzMmQxNTMuNmQ3MDkuNjMyZDEzNC4xNDRkNjkzLjc2ZDExNC42ODhkNjc3Ljg4N2QxMTQuNjg4ZDY1NC4zMzZkMTE0LjY4OGQ2NDIuMDQ4ZDEyMy4zOTJkNjI4LjIyM2QxMzIuMDk2ZDYxNC40ZDE1Mi41NzZkNTg3Ljc3NmQxOTguNjU2ZDUyOS40MDhkODkuMDg4ZDQ5Ni42NGQ3Mi43MDRkNDkxLjUyZDY2LjU2ZDQ4MC43NjhkNjAuNDE2ZDQ3MC4wMTVkNjAuNDE2ZDQ1MS41ODNkNjAuNDE2ZDM4OS4xMmQxMTYuNzM2ZDM4OS4xMmQxMzIuMDk2ZDM4OS4xMmQxNTIuNTc2ZDM5Ny4zMTJkMjI5LjM3NmQ0MjkuMDU2ZDIyOS4zNzZkMzQyLjAxNWhSM2Q1NjkuMzQ0UjRkNTA4LjkyOFI1ZDYwLjQxNlI2ZDc1MC41OTJSN2QzMTQuMzY4UjhkNjkwLjE3NlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWk0MlIxMmQ2MC40MTZSMTNkNTY5LjM0NFIxNGFpMWkzaTNpM2kzaTJpMmkzaTNpM2kzaTJpMmkzaTNpM2kzaTNpM2kyaTJpM2kzaTNpM2kzaTNpMmkyaTNpM2kzaTNpMmkyaGc6MTU0b1IxZDEwMjRSMmFoUjNkMzQyLjAxNlI0ZDBSNWQwUjZkMFI3ZDBSOGQwUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE1NFIxMmQwUjEzZDM0Mi4wMTZSMTRhaGc6NDFvUjFkMTAyNFIyYWQxMTAuNTkyZDc0NC40NDhkMTEwLjU5MmQ2NzUuODM5ZDEwMi40ZDYxNS40MjRkOTQuMjA4ZDU1NS4wMDhkODQuOTkyZDUwNi4zNjdkNzUuNzc2ZDQ1Ny43MjdkNjcuNTg0ZDQyMS44ODhkNTkuMzkyZDM4Ni4wNDhkNTkuMzkyZDM2NC41NDRkNTkuMzkyZDMyMi41NTlkODEuNDA4ZDI5Ny45ODRkMTAzLjQyNGQyNzMuNDA4ZDE0Ni40MzJkMjczLjQwOGQxNjUuODg4ZDI3My40MDhkMTgyLjI3MmQyODIuMTExZDE5OC42NTZkMjkwLjgxNmQyMTMuNTA0ZDMxMy4zNDNkMjI4LjM1MmQzMzUuODcxZDI0Mi42ODhkMzczLjI0N2QyNTcuMDI0ZDQxMC42MjRkMjcyLjM4NGQ0NjcuOTY3ZDI4My42NDhkNTA5Ljk1MmQyOTAuODE2ZDU0NS43OTFkMjk3Ljk4NGQ1ODEuNjMyZDMwMi4wOGQ2MTQuOTEyZDMwNi4xNzZkNjQ4LjE5MmQzMDcuNzEyZDY3OS40MjRkMzA5LjI0OGQ3MTAuNjU2ZDMwOS4yNDhkNzQ0LjQ0OGQzMDkuMjQ4ZDgwNS44ODhkMjk0LjRkODk0LjQ2NGQyNzkuNTUyZDk4My4wNGQyNDguODMyZDEwNzkuMjk2ZDIzNi41NDRkMTExOC4yMDhkMjI0Ljc2OGQxMTQ0LjMyZDIxMi45OTJkMTE3MC40MzJkMjAwLjcwNGQxMTg2LjMwNGQxODguNDE2ZDEyMDIuMTc2ZDE3My41NjhkMTIwOC44MzFkMTU4LjcyZDEyMTUuNDg4ZDEzOS4yNjRkMTIxNS40ODhkOTkuMzI4ZDEyMTUuNDg4ZDc1LjI2NGQxMTk0LjQ5NmQ1MS4yZDExNzMuNTA0ZDUxLjJkMTEzNC41OTJkNTEuMmQxMTEwLjAxNmQ2MC40MTZkMTA3My4xNTJkNjkuNjMyZDEwMzYuMjg4ZDgwLjg5NmQ5ODguMTZkOTIuMTZkOTQwLjAzMmQxMDEuMzc2ZDg3OS4xMDRkMTEwLjU5MmQ4MTguMTc1ZDExMC41OTJkNzQ0LjQ0OGhSM2QzNjAuNDQ4UjRkMzA5LjI0OFI1ZDUxLjJSNmQ3NTAuNTkyUjdkLTE5MS40ODhSOGQ2OTkuMzkyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTQxUjEyZDUxLjJSMTNkMzYwLjQ0OFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzoxNTNvUjFkMTAyNFIyYWhSM2QzNDIuMDE2UjRkMFI1ZDBSNmQwUjdkMFI4ZDBSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTUzUjEyZDBSMTNkMzQyLjAxNlIxNGFoZzo0MG9SMWQxMDI0UjJhZDUxLjJkNzQ0LjQ0OGQ1MS4yZDY4My4wMDhkNjYuMDQ4ZDU5NC40MzJkODAuODk2ZDUwNS44NTZkMTExLjYxNmQ0MDkuNmQxMjMuOTA0ZDM3MC42ODhkMTM1LjY4ZDM0NC41NzZkMTQ3LjQ1NmQzMTguNDYzZDE1OS43NDRkMzAyLjU5MmQxNzIuMDMyZDI4Ni43MmQxODYuODhkMjgwLjA2M2QyMDEuNzI4ZDI3My40MDhkMjIxLjE4NGQyNzMuNDA4ZDI2MS4xMmQyNzMuNDA4ZDI4NS4xODRkMjk0LjRkMzA5LjI0OGQzMTUuMzkxZDMwOS4yNDhkMzU0LjMwNGQzMDkuMjQ4ZDM3OC44OGQzMDAuMDMyZDQxNS43NDRkMjkwLjgxNmQ0NTIuNjA3ZDI3OS41NTJkNTAwLjczNmQyNjguMjg4ZDU0OC44NjRkMjU5LjA3MmQ2MDkuNzkxZDI0OS44NTZkNjcwLjcyZDI0OS44NTZkNzQ0LjQ0OGQyNDkuODU2ZDgxNC4wNzlkMjU4LjA0OGQ4NzMuOTg0ZDI2Ni4yNGQ5MzMuODg4ZDI3NS40NTZkOTgyLjUyOGQyODQuNjcyZDEwMzEuMTY3ZDI5Mi44NjRkMTA2Ny4wMDhkMzAxLjA1NmQxMTAyLjg0OGQzMDEuMDU2ZDExMjQuMzUyZDMwMS4wNTZkMTE2Ni4zMzZkMjc5LjA0ZDExOTAuOTEyZDI1Ny4wMjRkMTIxNS40ODhkMjE0LjAxNmQxMjE1LjQ4OGQxOTQuNTZkMTIxNS40ODhkMTc4LjE3NmQxMjA2Ljc4NGQxNjEuNzkyZDExOTguMDhkMTQ2Ljk0NGQxMTc1LjU1MmQxMzIuMDk2ZDExNTMuMDI0ZDExNy43NmQxMTE1LjY0OGQxMDMuNDI0ZDEwNzguMjcyZDg4LjA2NGQxMDIwLjkyOGQ3Ni44ZDk3OC45NDRkNjkuNjMyZDk0My4xMDRkNjIuNDY0ZDkwNy4yNjRkNTguMzY4ZDg3NC40OTZkNTQuMjcyZDg0MS43MjhkNTIuNzM2ZDgwOS45ODRkNTEuMmQ3NzguMjRkNTEuMmQ3NDQuNDQ4aFIzZDM2MC40NDhSNGQzMDkuMjQ4UjVkNTEuMlI2ZDc1MC41OTJSN2QtMTkxLjQ4OFI4ZDY5OS4zOTJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpNDBSMTJkNTEuMlIxM2QzNjAuNDQ4UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjE1Mm9SMWQxMDI0UjJhaFIzZDM0Mi4wMTZSNGQwUjVkMFI2ZDBSN2QwUjhkMFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNTJSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjM5b1IxZDEwMjRSMmFkNjQuNTEyZDM0NS4wODdkNjQuNTEyZDMxMy4zNDNkODIuOTQ0ZDI5My4zNzZkMTAxLjM3NmQyNzMuNDA4ZDEzMi4wOTZkMjczLjQwOGQxNjIuODE2ZDI3My40MDhkMTgxLjI0OGQyOTMuMzc2ZDE5OS42OGQzMTMuMzQzZDE5OS42OGQzNDUuMDg3ZDE5OS42OGQ1NzMuNDRkMTk5LjY4ZDYwNS4xODRkMTgxLjI0OGQ2MjUuMTUyZDE2Mi44MTZkNjQ1LjEyZDEzMi4wOTZkNjQ1LjEyZDEwMS4zNzZkNjQ1LjEyZDgyLjk0NGQ2MjUuMTUyZDY0LjUxMmQ2MDUuMTg0ZDY0LjUxMmQ1NzMuNDRkNjQuNTEyZDM0NS4wODdoUjNkMjY0LjE5MlI0ZDE5OS42OFI1ZDY0LjUxMlI2ZDc1MC41OTJSN2QzNzguODhSOGQ2ODYuMDhSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMzlSMTJkNjQuNTEyUjEzZDI2NC4xOTJSMTRhaTFpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjE1MW9SMWQxMDI0UjJhaFIzZDM0Mi4wMTZSNGQwUjVkMFI2ZDBSN2QwUjhkMFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNTFSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjM4b1IxZDEwMjRSMmFkNDY2Ljk0NGQ0NjcuOTY3ZDQ2Ni45NDRkNDM5LjI5NWQ0NDYuNDY0ZDQyNC45NmQ0MjUuOTg0ZDQxMC42MjRkMzkzLjIxNmQ0MTAuNjI0ZDM1Ni4zNTJkNDEwLjYyNGQzNDAuNDhkNDI3LjAwOGQzMjQuNjA4ZDQ0My4zOTFkMzI0LjYwOGQ0NjcuOTY3ZDMyNC42MDhkNDg5LjQ3MmQzNDEuNTA0ZDUxMC40NjNkMzU4LjRkNTMxLjQ1NmQzODguMDk2ZDU1Mi45NmQ0MjguMDMyZDUzMy41MDNkNDQ3LjQ4OGQ1MTAuOTc2ZDQ2Ni45NDRkNDg4LjQ0OGQ0NjYuOTQ0ZDQ2Ny45NjdkMzI5LjcyOGQ3MzMuMTg0ZDI4My42NDhkNzYxLjg1NmQyNjguOGQ3ODAuMjg4ZDI1My45NTJkNzk4LjcyZDI1My45NTJkODE2LjEyN2QyNTMuOTUyZDg0NS44MjRkMjc1LjQ1NmQ4NjYuODE2ZDI5Ni45NmQ4ODcuODA4ZDMyOS43MjhkODg3LjgwOGQzNjEuNDcyZDg4Ny44MDhkMzg2LjU2ZDg3OC41OTJkNDExLjY0OGQ4NjkuMzc2ZDQ0MS4zNDRkODQ2Ljg0OGQzMjkuNzI4ZDczMy4xODRkNTgyLjY1NmQ3MzkuMzI4ZDYxMi4zNTJkNzExLjY4ZDYzMS4yOTZkNjk1LjI5NmQ2NTAuMjRkNjc4LjkxMmQ2NjMuNTUyZDY3MC43MmQ2NzYuODY0ZDY2Mi41MjhkNjg2LjU5MmQ2NjAuNDhkNjk2LjMyZDY1OC40MzJkNzA3LjU4NGQ2NTguNDMyZDczNi4yNTZkNjU4LjQzMmQ3NTguNzg0ZDY3OS40MjRkNzgxLjMxMmQ3MDAuNDE1ZDc4MS4zMTJkNzMyLjE2ZDc4MS4zMTJkNzQ2LjQ5NmQ3NzguMjRkNzU4LjI3MWQ3NzUuMTY4ZDc3MC4wNDhkNzY2LjQ2NGQ3ODMuMzZkNzU3Ljc2ZDc5Ni42NzJkNzQyLjRkODEzLjU2OGQ3MjcuMDRkODMwLjQ2NGQ3MDIuNDY0ZDg1NC4wMTZkNzI5LjA4OGQ4NzcuNTY4ZDc0NC45NmQ5MDIuMTQ0ZDc2MC44MzJkOTI2LjcyZDc2MC44MzJkOTQ4LjIyNGQ3NjAuODMyZDk2OS43MjhkNzUxLjYxNmQ5ODcuMTM2ZDc0Mi40ZDEwMDQuNTQ0ZDcyOC41NzZkMTAxNi44MzJkNzE0Ljc1MmQxMDI5LjExOWQ2OTcuMzQ0ZDEwMzUuMjYzZDY3OS45MzZkMTA0MS40MDdkNjYzLjU1MmQxMDQxLjQwN2Q2NTQuMzM2ZDEwNDEuNDA3ZDY0NC42MDhkMTAzOC4zMzZkNjM0Ljg4ZDEwMzUuMjYzZDYyMy4xMDRkMTAyNy4wNzFkNjExLjMyOGQxMDE4Ljg4ZDU5NS45NjhkMTAwNC4wMzJkNTgwLjYwOGQ5ODkuMTg0ZDU1OS4xMDRkOTY1LjYzMmQ1MDYuODhkMTAwOS42NjRkNDQwLjMyZDEwMjUuNTM2ZDM3My43NmQxMDQxLjQwN2QzMDQuMTI4ZDEwNDEuNDA3ZDIzMy40NzJkMTA0MS40MDdkMTg0LjMyZDEwMjIuOTc2ZDEzNS4xNjhkMTAwNC41NDRkMTA1LjQ3MmQ5NzIuOGQ3NS43NzZkOTQxLjA1NmQ2Mi40NjRkODk5LjA3MmQ0OS4xNTJkODU3LjA4OGQ0OS4xNTJkODExLjAwOGQ0OS4xNTJkNzQxLjM3NmQ5MS42NDhkNjg4LjY0ZDEzNC4xNDRkNjM1LjkwNGQyMDQuOGQ2MDcuMjMyZDE2OC45NmQ1NzMuNDRkMTUzLjZkNTM4LjExMmQxMzguMjRkNTAyLjc4NGQxMzguMjRkNDcxLjAzOWQxMzguMjRkNDMyLjEyOGQxNTMuMDg4ZDM5Ny44MjNkMTY3LjkzNmQzNjMuNTJkMTk4LjY1NmQzMzcuNDA4ZDIyOS4zNzZkMzExLjI5NWQyNzUuNDU2ZDI5Ni40NDhkMzIxLjUzNmQyODEuNmQzODRkMjgxLjZkNDQwLjMyZDI4MS42ZDQ4Ny40MjRkMjk1LjkzNmQ1MzQuNTI4ZDMxMC4yNzFkNTY4LjMyZDMzNi4zODRkNjAyLjExMmQzNjIuNDk2ZDYyMC41NDRkMzk4LjMzNmQ2MzguOTc2ZDQzNC4xNzVkNjM4Ljk3NmQ0NzguMjA3ZDYzOC45NzZkNTQzLjc0M2Q2MDYuNzJkNTg3Ljc3NmQ1NzQuNDY0ZDYzMS44MDhkNTEwLjk3NmQ2NzAuNzJkNTgyLjY1NmQ3MzkuMzI4aFIzZDgzNC41NlI0ZDc4MS4zMTJSNWQ0OS4xNTJSNmQ3NDIuNFI3ZC0xNy40MDhSOGQ2OTMuMjQ4UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTM4UjEyZDQ5LjE1MlIxM2Q4MzQuNTZSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpMmkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmhnOjE1MG9SMWQxMDI0UjJhaFIzZDM0Mi4wMTZSNGQwUjVkMFI2ZDBSN2QwUjhkMFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNTBSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjM3b1IxZDEwMjRSMmFkMjgyLjYyNGQ1MDMuODA4ZDI4Mi42MjRkNDc4LjIwN2QyODEuMDg4ZDQ1Ni4xOTJkMjc5LjU1MmQ0MzQuMTc1ZDI3My45MmQ0MTcuNzkyZDI2OC4yODhkNDAxLjQwOGQyNTguMDQ4ZDM5MS42NzlkMjQ3LjgwOGQzODEuOTUyZDIyOS4zNzZkMzgxLjk1MmQyMTAuOTQ0ZDM4MS45NTJkMjAwLjE5MmQzOTEuNjc5ZDE4OS40NGQ0MDEuNDA4ZDE4My44MDhkNDE3Ljc5MmQxNzguMTc2ZDQzNC4xNzVkMTc2LjY0ZDQ1Ni4xOTJkMTc1LjEwNGQ0NzguMjA3ZDE3NS4xMDRkNTAzLjgwOGQxNzUuMTA0ZDUyOS40MDhkMTc2LjY0ZDU1MS40MjRkMTc4LjE3NmQ1NzMuNDRkMTgzLjgwOGQ1ODkuODI0ZDE4OS40NGQ2MDYuMjA4ZDIwMC4xOTJkNjE1LjkzNWQyMTAuOTQ0ZDYyNS42NjRkMjI5LjM3NmQ2MjUuNjY0ZDI0Ny44MDhkNjI1LjY2NGQyNTguMDQ4ZDYxNS45MzVkMjY4LjI4OGQ2MDYuMjA4ZDI3My45MmQ1ODkuODI0ZDI3OS41NTJkNTczLjQ0ZDI4MS4wODhkNTUxLjQyNGQyODIuNjI0ZDUyOS40MDhkMjgyLjYyNGQ1MDMuODA4ZDg0OC44OTZkODI5LjQ0ZDg0OC44OTZkODAzLjg0ZDg0Ny4zNmQ3ODEuODI0ZDg0NS44MjRkNzU5LjgwOGQ4NDAuMTkyZDc0My40MjRkODM0LjU2ZDcyNy4wNGQ4MjQuMzJkNzE3LjMxMmQ4MTQuMDhkNzA3LjU4NGQ3OTUuNjQ4ZDcwNy41ODRkNzc3LjIxNmQ3MDcuNTg0ZDc2Ni40NjRkNzE3LjMxMmQ3NTUuNzEyZDcyNy4wNGQ3NTAuMDhkNzQzLjQyNGQ3NDQuNDQ4ZDc1OS44MDhkNzQyLjkxMmQ3ODEuODI0ZDc0MS4zNzZkODAzLjg0ZDc0MS4zNzZkODI5LjQ0ZDc0MS4zNzZkODU1LjA0ZDc0Mi45MTJkODc3LjA1NmQ3NDQuNDQ4ZDg5OS4wNzJkNzUwLjA4ZDkxNS40NTZkNzU1LjcxMmQ5MzEuODRkNzY2LjQ2NGQ5NDEuNTY4ZDc3Ny4yMTZkOTUxLjI5NmQ3OTUuNjQ4ZDk1MS4yOTZkODE0LjA4ZDk1MS4yOTZkODI0LjMyZDk0MS41NjhkODM0LjU2ZDkzMS44NGQ4NDAuMTkyZDkxNS40NTZkODQ1LjgyNGQ4OTkuMDcyZDg0Ny4zNmQ4NzcuMDU2ZDg0OC44OTZkODU1LjA0ZDg0OC44OTZkODI5LjQ0ZDYxNy40NzJkMzM0Ljg0N2Q2MjguNzM2ZDMxMS4yOTVkNjM3Ljk1MmQyOTcuNDcyZDY0Ny4xNjhkMjgzLjY0OGQ2NTUuMzZkMjc2Ljk5MWQ2NjMuNTUyZDI3MC4zMzZkNjcyLjI1NmQyNjguMjg4ZDY4MC45NmQyNjYuMjRkNjkxLjJkMjY2LjI0ZDcwMS40NGQyNjYuMjRkNzEwLjE0NGQyNzAuODQ3ZDcxOC44NDhkMjc1LjQ1NmQ3MjUuNTA0ZDI4Mi4xMTFkNzMyLjE2ZDI4OC43NjhkNzM2LjI1NmQyOTUuOTM2ZDc0MC4zNTJkMzAzLjEwNGQ3NDAuMzUyZDMwOS4yNDdkNzQwLjM1MmQzMjMuNTgzZDcyNy4wNGQzNTAuMjA3ZDQwNi41MjhkOTk4LjRkMzk1LjI2NGQxMDIxLjk1MmQzODYuMDQ4ZDEwMzUuNzc2ZDM3Ni44MzJkMTA0OS42ZDM2OC42NGQxMDU2LjI1NmQzNjAuNDQ4ZDEwNjIuOTEyZDM1MS43NDRkMTA2NC45NmQzNDMuMDRkMTA2Ny4wMDhkMzMyLjhkMTA2Ny4wMDhkMzIyLjU2ZDEwNjcuMDA4ZDMxMy44NTZkMTA2Mi40ZDMwNS4xNTJkMTA1Ny43OTJkMjk4LjQ5NmQxMDUxLjEzNmQyOTEuODRkMTA0NC40OGQyODcuNzQ0ZDEwMzcuMzExZDI4My42NDhkMTAzMC4xNDRkMjgzLjY0OGQxMDI0ZDI4My42NDhkMTAwOS42NjRkMjk2Ljk2ZDk4My4wNGQ2MTcuNDcyZDMzNC44NDdkNTIuMjI0ZDQ4Mi4zMDRkNTIuMjI0ZDQ0Mi4zNjdkNjEuOTUyZDQwOC41NzZkNzEuNjhkMzc0Ljc4NGQ5Mi42NzJkMzQ5LjY5NmQxMTMuNjY0ZDMyNC42MDdkMTQ3LjQ1NmQzMTAuMjcxZDE4MS4yNDhkMjk1LjkzNmQyMjkuMzc2ZDI5NS45MzZkMjc3LjUwNGQyOTUuOTM2ZDMxMC43ODRkMzEwLjI3MWQzNDQuMDY0ZDMyNC42MDdkMzY1LjA1NmQzNDkuNjk2ZDM4Ni4wNDhkMzc0Ljc4NGQzOTUuNzc2ZDQwOC41NzZkNDA1LjUwNGQ0NDIuMzY3ZDQwNS41MDRkNDgyLjMwNGQ0MDUuNTA0ZDUzMS40NTZkNDA1LjUwNGQ1NjcuMjk2ZDM5NC43NTJkNjAwLjA2NGQzODRkNjMyLjgzMmQzNjIuNDk2ZDY1Ny40MDhkMzQwLjk5MmQ2ODEuOTgzZDMwNy43MTJkNjk2LjgzMmQyNzQuNDMyZDcxMS42OGQyMjkuMzc2ZDcxMS42OGQxODMuMjk2ZDcxMS42OGQxNTAuMDE2ZDY5Ni44MzJkMTE2LjczNmQ2ODEuOTgzZDk1LjIzMmQ2NTcuNDA4ZDczLjcyOGQ2MzIuODMyZDYyLjk3NmQ2MDAuMDY0ZDUyLjIyNGQ1NjcuMjk2ZDUyLjIyNGQ1MzEuNDU2ZDUyLjIyNGQ0ODIuMzA0ZDYxOC40OTZkODA3LjkzNmQ2MTguNDk2ZDc2OGQ2MjguMjI0ZDczNC4yMDhkNjM3Ljk1MmQ3MDAuNDE1ZDY1OC45NDRkNjc1LjMyOGQ2NzkuOTM2ZDY1MC4yNGQ3MTMuNzI4ZDYzNS45MDRkNzQ3LjUyZDYyMS41NjhkNzk1LjY0OGQ2MjEuNTY4ZDg0My43NzZkNjIxLjU2OGQ4NzcuMDU2ZDYzNS45MDRkOTEwLjMzNmQ2NTAuMjRkOTMxLjMyOGQ2NzUuMzI4ZDk1Mi4zMmQ3MDAuNDE1ZDk2Mi4wNDhkNzM0LjIwOGQ5NzEuNzc2ZDc2OGQ5NzEuNzc2ZDgwNy45MzZkOTcxLjc3NmQ4NTcuMDg4ZDk3MS43NzZkODkyLjkyOGQ5NjEuMDI0ZDkyNS42OTZkOTUwLjI3MmQ5NTguNDY0ZDkyOC43NjhkOTgzLjA0ZDkwNy4yNjRkMTAwNy42MTZkODczLjk4NGQxMDIyLjQ2NGQ4NDAuNzA0ZDEwMzcuMzExZDc5NS42NDhkMTAzNy4zMTFkNzQ5LjU2OGQxMDM3LjMxMWQ3MTYuMjg4ZDEwMjIuNDY0ZDY4My4wMDhkMTAwNy42MTZkNjYxLjUwNGQ5ODMuMDRkNjQwZDk1OC40NjRkNjI5LjI0OGQ5MjUuNjk2ZDYxOC40OTZkODkyLjkyOGQ2MTguNDk2ZDg1Ny4wODhkNjE4LjQ5NmQ4MDcuOTM2aFIzZDEwMjRSNGQ5NzEuNzc2UjVkNTIuMjI0UjZkNzU3Ljc2UjdkLTQzLjAwOFI4ZDcwNS41MzZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMzdSMTJkNTIuMjI0UjEzZDEwMjRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpMmkxaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kyaGc6MTQ5b1IxZDEwMjRSMmFoUjNkMzQyLjAxNlI0ZDBSNWQwUjZkMFI3ZDBSOGQwUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE0OVIxMmQwUjEzZDM0Mi4wMTZSMTRhaGc6MzZvUjFkMTAyNFIyYWQzMDYuMTc2ZDQzMS4xMDRkMjg5Ljc5MmQ0MzIuMTI4ZDI3NC40MzJkNDM2LjIyM2QyNTkuMDcyZDQ0MC4zMTlkMjQ2Ljc4NGQ0NDYuOTc2ZDIzNC40OTZkNDUzLjYzMWQyMjcuMzI4ZDQ2NC4zODRkMjIwLjE2ZDQ3NS4xMzVkMjIwLjE2ZDQ4OC40NDhkMjIwLjE2ZDUwMy44MDhkMjI3Ljg0ZDUxNi4wOTZkMjM1LjUyZDUyOC4zODRkMjQ3LjgwOGQ1MzcuNTk5ZDI2MC4wOTZkNTQ2LjgxNmQyNzUuNDU2ZDU1MS45MzVkMjkwLjgxNmQ1NTcuMDU2ZDMwNi4xNzZkNTU5LjEwNGQzMDYuMTc2ZDQzMS4xMDRkMzc5LjkwNGQ5MDIuMTQ0ZDQxNy43OTJkODk5LjA3MmQ0NDEuODU2ZDg4NC4yMjNkNDY1LjkyZDg2OS4zNzZkNDY1LjkyZDgzNi42MDhkNDY1LjkyZDgxOC4xNzVkNDU4Ljc1MmQ4MDQuODY0ZDQ1MS41ODRkNzkxLjU1MmQ0MzkuODA4ZDc4Mi44NDhkNDI4LjAzMmQ3NzQuMTQ0ZDQxMi4xNmQ3NjkuMDI0ZDM5Ni4yODhkNzYzLjkwNGQzNzkuOTA0ZDc2MC44MzJkMzc5LjkwNGQ5MDIuMTQ0ZDMwNi4xNzZkNzQxLjM3NmQyNDEuNjY0ZDcyMi45NDRkMTkzLjAyNGQ3MDRkMTQ0LjM4NGQ2ODUuMDU2ZDExMS42MTZkNjU5LjQ1NmQ3OC44NDhkNjMzLjg1NmQ2Mi40NjRkNjAwLjU3NmQ0Ni4wOGQ1NjcuMjk2ZDQ2LjA4ZDUxOS4xNjhkNDYuMDhkNDYyLjg0N2Q2OS42MzJkNDIwLjg2NGQ5My4xODRkMzc4Ljg4ZDEzMC4wNDhkMzUxLjIzMmQxNjYuOTEyZDMyMy41ODNkMjEzLjUwNGQzMDkuNzZkMjYwLjA5NmQyOTUuOTM2ZDMwNi4xNzZkMjk1LjkzNmQzMDYuMTc2ZDI4Mi42MjRkMzA2LjE3NmQyNTkuMDcyZDMxNS45MDRkMjQ5Ljg1NmQzMjUuNjMyZDI0MC42NGQzNDMuMDRkMjQwLjY0ZDM2MC40NDhkMjQwLjY0ZDM3MC4xNzZkMjQ5Ljg1NmQzNzkuOTA0ZDI1OS4wNzJkMzc5LjkwNGQyODIuNjI0ZDM3OS45MDRkMjk1LjkzNmQ0MDcuNTUyZDI5NS45MzZkNDUwLjA0OGQzMDUuMTUxZDQ5Mi41NDRkMzE0LjM2N2Q1MzIuNDhkMzMzLjgyM2Q1NzIuNDE2ZDM1My4yOGQ2MDEuMDg4ZDM4Mi40NjNkNjI5Ljc2ZDQxMS42NDhkNjI5Ljc2ZDQ1MS41ODNkNjI5Ljc2ZDQ4My4zMjhkNjA3LjIzMmQ1MDUuODU2ZDU4NC43MDRkNTI4LjM4NGQ1NDMuNzQ0ZDUyOC4zODRkNTI0LjI4OGQ1MjguMzg0ZDUwOC45MjhkNTE2LjYwN2Q0OTMuNTY4ZDUwNC44MzJkNDc1LjY0OGQ0ODguOTZkNDU3LjcyOGQ0NzMuMDg3ZDQzNS43MTJkNDU3LjcyN2Q0MTMuNjk2ZDQ0Mi4zNjdkMzc5LjkwNGQ0MzUuMTk5ZDM3OS45MDRkNTc2LjUxMmQ0NDcuNDg4ZDU5My45MmQ0OTcuNjY0ZDYxNC45MTJkNTQ3Ljg0ZDYzNS45MDRkNTgwLjYwOGQ2NjQuNTc2ZDYxMy4zNzZkNjkzLjI0OGQ2MjkuNzZkNzMwLjExMmQ2NDYuMTQ0ZDc2Ni45NzZkNjQ2LjE0NGQ4MTUuMTA0ZDY0Ni4xNDRkODcwLjRkNjIzLjYxNmQ5MTEuMzZkNjAxLjA4OGQ5NTIuMzE5ZDU2My43MTJkOTc5Ljk2OGQ1MjYuMzM2ZDEwMDcuNjE2ZDQ3OC4yMDhkMTAyMS40NGQ0MzAuMDhkMTAzNS4yNjNkMzc5LjkwNGQxMDM3LjMxMWQzNzkuOTA0ZDEwOTEuNTg0ZDM3OS45MDRkMTExNS4xMzZkMzcwLjE3NmQxMTI0LjM1MmQzNjAuNDQ4ZDExMzMuNTY4ZDM0My4wNGQxMTMzLjU2OGQzMjUuNjMyZDExMzMuNTY4ZDMxNS45MDRkMTEyNC4zNTJkMzA2LjE3NmQxMTE1LjEzNmQzMDYuMTc2ZDEwOTEuNTg0ZDMwNi4xNzZkMTAzNy4zMTFkMjQxLjY2NGQxMDM3LjMxMWQxOTJkMTAxOS45MDRkMTQyLjMzNmQxMDAyLjQ5NmQxMDguMDMyZDk3Ni4zODRkNzMuNzI4ZDk1MC4yNzFkNTUuODA4ZDkxOC41MjhkMzcuODg4ZDg4Ni43ODRkMzcuODg4ZDg1OC4xMTJkMzcuODg4ZDgyMi4yNzFkNjEuNDRkNzk4LjcyZDg0Ljk5MmQ3NzUuMTY4ZDEyMS44NTZkNzc1LjE2OGQxNDcuNDU2ZDc3NS4xNjhkMTY0Ljg2NGQ3OTEuNTUyZDE4Mi4yNzJkODA3LjkzNmQyMDAuNzA0ZDgyOC45MjhkMjE5LjEzNmQ4NDkuOTJkMjQzLjJkODcwLjRkMjY3LjI2NGQ4OTAuODhkMzA2LjE3NmQ5MDAuMDk2ZDMwNi4xNzZkNzQxLjM3NmhSM2Q2ODQuMDMyUjRkNjQ2LjE0NFI1ZDM3Ljg4OFI2ZDc4My4zNlI3ZC0xMDkuNTY4UjhkNzQ1LjQ3MlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkzNlIxMmQzNy44ODhSMTNkNjg0LjAzMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpMmkxaTNpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTJoZzoxNDhvUjFkMTAyNFIyYWhSM2QzNDIuMDE2UjRkMFI1ZDBSNmQwUjdkMFI4ZDBSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTQ4UjEyZDBSMTNkMzQyLjAxNlIxNGFoZzozNW9SMWQxMDI0UjJhZDM5Ni4yODhkNjA2LjIwOGQzMDUuMTUyZDYwNi4yMDhkMjg3Ljc0NGQ3MjcuMDRkMzc4Ljg4ZDcyNy4wNGQzOTYuMjg4ZDYwNi4yMDhkMjAxLjcyOGQ2MDYuMjA4ZDE2MS43OTJkNjA2LjIwOGQxMzUuMTY4ZDYwNi4yMDhkMTIzLjkwNGQ1OTAuODQ4ZDExMi42NGQ1NzUuNDg4ZDExMi42NGQ1NTcuMDU2ZDExMi42NGQ1MzguNjI0ZDEyMy45MDRkNTIzLjI2NGQxMzUuMTY4ZDUwNy45MDRkMTYxLjc5MmQ1MDcuOTA0ZDIxNi4wNjRkNTA3LjkwNGQyMzcuNTY4ZDM0OS4xODNkMjQxLjY2NGQzMjIuNTU5ZDI1NC45NzZkMzA5LjI0N2QyNjguMjg4ZDI5NS45MzZkMjk0LjkxMmQyOTUuOTM2ZDMxNC4zNjhkMjk1LjkzNmQzMjcuNjhkMzA2LjY4OGQzNDAuOTkyZDMxNy40MzlkMzQwLjk5MmQzMzQuODQ3ZDM0MC45OTJkMzQ3LjEzNWQzMzcuNDA4ZDM3My43NmQzMzMuODI0ZDQwMC4zODRkMzI4LjcwNGQ0MzcuMjQ3ZDMxOC40NjRkNTA3LjkwNGQ0MTAuNjI0ZDUwNy45MDRkNDMyLjEyOGQzNDkuMTgzZDQzNi4yMjRkMzIyLjU1OWQ0NDkuNTM2ZDMwOS4yNDdkNDYyLjg0OGQyOTUuOTM2ZDQ4OS40NzJkMjk1LjkzNmQ1MDguOTI4ZDI5NS45MzZkNTIyLjI0ZDMwNi42ODhkNTM1LjU1MmQzMTcuNDM5ZDUzNS41NTJkMzM0Ljg0N2Q1MzUuNTUyZDM0Ny4xMzVkNTMxLjk2OGQzNzMuNzZkNTI4LjM4NGQ0MDAuMzg0ZDUyMy4yNjRkNDM3LjI0N2Q1MTMuMDI0ZDUwNy45MDRkNTUzLjk4NGQ1MDcuOTA0ZDU4MC42MDhkNTA3LjkwNGQ1OTEuODcyZDUyMy4yNjRkNjAzLjEzNmQ1MzguNjI0ZDYwMy4xMzZkNTU3LjA1NmQ2MDMuMTM2ZDU3NS40ODhkNTkxLjg3MmQ1OTAuODQ4ZDU4MC42MDhkNjA2LjIwOGQ1NTMuOTg0ZDYwNi4yMDhkNDk5LjcxMmQ2MDYuMjA4ZDQ4Mi4zMDRkNzI3LjA0ZDUyMi4yNGQ3MjcuMDRkNTQ4Ljg2NGQ3MjcuMDRkNTYwLjEyOGQ3NDIuNGQ1NzEuMzkyZDc1Ny43NmQ1NzEuMzkyZDc3Ni4xOTJkNTcxLjM5MmQ3OTQuNjI0ZDU2MC4xMjhkODA5Ljk4NGQ1NDguODY0ZDgyNS4zNDRkNTIyLjI0ZDgyNS4zNDRkNDY3Ljk2OGQ4MjUuMzQ0ZDQ0Ni40NjRkOTg0LjA2NGQ0NDIuMzY4ZDEwMTAuNjg4ZDQyOS4wNTZkMTAyNGQ0MTUuNzQ0ZDEwMzcuMzExZDM4OS4xMmQxMDM3LjMxMWQzNjkuNjY0ZDEwMzcuMzExZDM1Ni4zNTJkMTAyNi41NmQzNDMuMDRkMTAxNS44MDhkMzQzLjA0ZDk5OC40ZDM0My4wNGQ5ODYuMTEyZDM0Ni42MjRkOTU5LjQ4OGQzNTAuMjA4ZDkzMi44NjRkMzU1LjMyOGQ4OTZkMzY1LjU2OGQ4MjUuMzQ0ZDI3My40MDhkODI1LjM0NGQyNTEuOTA0ZDk4NC4wNjRkMjQ3LjgwOGQxMDEwLjY4OGQyMzQuNDk2ZDEwMjRkMjIxLjE4NGQxMDM3LjMxMWQxOTQuNTZkMTAzNy4zMTFkMTc1LjEwNGQxMDM3LjMxMWQxNjEuNzkyZDEwMjYuNTZkMTQ4LjQ4ZDEwMTUuODA4ZDE0OC40OGQ5OTguNGQxNDguNDhkOTg2LjExMmQxNTIuMDY0ZDk1OS40ODhkMTU1LjY0OGQ5MzIuODY0ZDE2MC43NjhkODk2ZDE3MS4wMDhkODI1LjM0NGQxMzAuMDQ4ZDgyNS4zNDRkMTAzLjQyNGQ4MjUuMzQ0ZDkyLjE2ZDgwOS45ODRkODAuODk2ZDc5NC42MjRkODAuODk2ZDc3Ni4xOTJkODAuODk2ZDc1Ny43NmQ5Mi4xNmQ3NDIuNGQxMDMuNDI0ZDcyNy4wNGQxMzAuMDQ4ZDcyNy4wNGQxODQuMzJkNzI3LjA0ZDIwMS43MjhkNjA2LjIwOGhSM2Q2ODQuMDMyUjRkNjAzLjEzNlI1ZDgwLjg5NlI2ZDcyOC4wNjRSN2QtMTMuMzEyUjhkNjQ3LjE2OFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkzNVIxMmQ4MC44OTZSMTNkNjg0LjAzMlIxNGFpMWkyaTJpMmkyaTFpMmkzaTNpM2kzaTJpMmkzaTNpM2kzaTNpM2kyaTJpMmkzaTNpM2kzaTNpM2kyaTJpM2kzaTNpM2kyaTJpMmkzaTNpM2kzaTJpMmkzaTNpM2kzaTNpM2kyaTJpMmkzaTNpM2kzaTNpM2kyaTJpM2kzaTNpM2kyaTJoZzoxNDdvUjFkMTAyNFIyYWhSM2QzNDIuMDE2UjRkMFI1ZDBSNmQwUjdkMFI4ZDBSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTQ3UjEyZDBSMTNkMzQyLjAxNlIxNGFoZzozNG9SMWQxMDI0UjJhZDc5Ljg3MmQzNDUuMDg3ZDc5Ljg3MmQzMTMuMzQzZDk4LjMwNGQyOTMuMzc2ZDExNi43MzZkMjczLjQwOGQxNDcuNDU2ZDI3My40MDhkMTc4LjE3NmQyNzMuNDA4ZDE5Ni42MDhkMjkzLjM3NmQyMTUuMDRkMzEzLjM0M2QyMTUuMDRkMzQ1LjA4N2QyMTUuMDRkNTczLjQ0ZDIxNS4wNGQ2MDUuMTg0ZDE5Ni42MDhkNjI1LjE1MmQxNzguMTc2ZDY0NS4xMmQxNDcuNDU2ZDY0NS4xMmQxMTYuNzM2ZDY0NS4xMmQ5OC4zMDRkNjI1LjE1MmQ3OS44NzJkNjA1LjE4NGQ3OS44NzJkNTczLjQ0ZDc5Ljg3MmQzNDUuMDg3ZDI3Ny41MDRkMzQ1LjA4N2QyNzcuNTA0ZDMxMy4zNDNkMjk1LjkzNmQyOTMuMzc2ZDMxNC4zNjhkMjczLjQwOGQzNDUuMDg4ZDI3My40MDhkMzc1LjgwOGQyNzMuNDA4ZDM5NC4yNGQyOTMuMzc2ZDQxMi42NzJkMzEzLjM0M2Q0MTIuNjcyZDM0NS4wODdkNDEyLjY3MmQ1NzMuNDRkNDEyLjY3MmQ2MDUuMTg0ZDM5NC4yNGQ2MjUuMTUyZDM3NS44MDhkNjQ1LjEyZDM0NS4wODhkNjQ1LjEyZDMxNC4zNjhkNjQ1LjEyZDI5NS45MzZkNjI1LjE1MmQyNzcuNTA0ZDYwNS4xODRkMjc3LjUwNGQ1NzMuNDRkMjc3LjUwNGQzNDUuMDg3aFIzZDQ5Mi41NDRSNGQ0MTIuNjcyUjVkNzkuODcyUjZkNzUwLjU5MlI3ZDM3OC44OFI4ZDY3MC43MlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkzNFIxMmQ3OS44NzJSMTNkNDkyLjU0NFIxNGFpMWkzaTNpM2kzaTJpM2kzaTNpM2kyaTFpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjE0Nm9SMWQxMDI0UjJhaFIzZDM0Mi4wMTZSNGQwUjVkMFI2ZDBSN2QwUjhkMFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNDZSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjMzb1IxZDEwMjRSMmFkNzQuNzUyZDkxNS40NTZkNzQuNzUyZDg5MS45MDRkODMuOTY4ZDg3MC45MTJkOTMuMTg0ZDg0OS45MmQxMDguNTQ0ZDgzNC41NmQxMjMuOTA0ZDgxOS4yZDE0NC44OTZkODA5Ljk4NGQxNjUuODg4ZDgwMC43NjhkMTg5LjQ0ZDgwMC43NjhkMjEyLjk5MmQ4MDAuNzY4ZDIzMy45ODRkODA5Ljk4NGQyNTQuOTc2ZDgxOS4yZDI3MC4zMzZkODM0LjU2ZDI4NS42OTZkODQ5LjkyZDI5NC45MTJkODcwLjkxMmQzMDQuMTI4ZDg5MS45MDRkMzA0LjEyOGQ5MTUuNDU2ZDMwNC4xMjhkOTM5LjAwOGQyOTQuOTEyZDk2MGQyODUuNjk2ZDk4MC45OTJkMjcwLjMzNmQ5OTYuMzUyZDI1NC45NzZkMTAxMS43MTJkMjMzLjk4NGQxMDIwLjkyOGQyMTIuOTkyZDEwMzAuMTQ0ZDE4OS40NGQxMDMwLjE0NGQxNjUuODg4ZDEwMzAuMTQ0ZDE0NC44OTZkMTAyMC45MjhkMTIzLjkwNGQxMDExLjcxMmQxMDguNTQ0ZDk5Ni4zNTJkOTMuMTg0ZDk4MC45OTJkODMuOTY4ZDk2MGQ3NC43NTJkOTM5LjAwOGQ3NC43NTJkOTE1LjQ1NmQ3Ny44MjRkMzkzLjIxNmQ3Ny44MjRkMzM3LjkxOWQxMDMuNDI0ZDMwNS42NjRkMTI5LjAyNGQyNzMuNDA4ZDE4OS40NGQyNzMuNDA4ZDI0OS44NTZkMjczLjQwOGQyNzUuNDU2ZDMwNS42NjRkMzAxLjA1NmQzMzcuOTE5ZDMwMS4wNTZkMzkzLjIxNmQzMDEuMDU2ZDQ0OC41MTFkMjg4Ljc2OGQ1MjkuNDA4ZDI3Ni40OGQ2MTAuMzA0ZDI1NC45NzZkNzA5LjYzMmQyNDguODMyZDczNy4yOGQyMzUuNTJkNzUwLjA3OWQyMjIuMjA4ZDc2Mi44OGQxODkuNDRkNzYyLjg4ZDE1Ni42NzJkNzYyLjg4ZDE0My4zNmQ3NTAuMDc5ZDEzMC4wNDhkNzM3LjI4ZDEyMy45MDRkNzA5LjYzMmQxMDIuNGQ2MTAuMzA0ZDkwLjExMmQ1MjkuNDA4ZDc3LjgyNGQ0NDguNTExZDc3LjgyNGQzOTMuMjE2aFIzZDM3OC44OFI0ZDMwNC4xMjhSNWQ3NC43NTJSNmQ3NTAuNTkyUjdkLTYuMTQ0UjhkNjc1Ljg0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTMzUjEyZDc0Ljc1MlIxM2QzNzguODhSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6MTQ1b1IxZDEwMjRSMmFoUjNkMzQyLjAxNlI0ZDBSNWQwUjZkMFI3ZDBSOGQwUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE0NVIxMmQwUjEzZDM0Mi4wMTZSMTRhaGc6MzJvUjFkMTAyNFIyYWhSM2QzNDIuMDE2UjRkMFI1ZDBSNmQwUjdkMFI4ZDBSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMzJSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjE0NG9SMWQxMDI0UjJhaFIzZDM0Mi4wMTZSNGQwUjVkMFI2ZDBSN2QwUjhkMFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNDRSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjE0M29SMWQxMDI0UjJhaFIzZDM0Mi4wMTZSNGQwUjVkMFI2ZDBSN2QwUjhkMFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNDNSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjI1NW9SMWQxMDI0UjJhZDMxNC4zNjhkMzM0Ljg0N2QzMTQuMzY4ZDI5NS45MzZkMzQxLjUwNGQyNjguNzk5ZDM2OC42NGQyNDEuNjY0ZDQwNy41NTJkMjQxLjY2NGQ0NDYuNDY0ZDI0MS42NjRkNDczLjZkMjY4Ljc5OWQ1MDAuNzM2ZDI5NS45MzZkNTAwLjczNmQzMzQuODQ3ZDUwMC43MzZkMzczLjc2ZDQ3My42ZDQwMC44OTVkNDQ2LjQ2NGQ0MjguMDMyZDQwNy41NTJkNDI4LjAzMmQzNjguNjRkNDI4LjAzMmQzNDEuNTA0ZDQwMC44OTVkMzE0LjM2OGQzNzMuNzZkMzE0LjM2OGQzMzQuODQ3ZDY4LjYwOGQzMzQuODQ3ZDY4LjYwOGQyOTUuOTM2ZDk1Ljc0NGQyNjguNzk5ZDEyMi44OGQyNDEuNjY0ZDE2MS43OTJkMjQxLjY2NGQyMDAuNzA0ZDI0MS42NjRkMjI3Ljg0ZDI2OC43OTlkMjU0Ljk3NmQyOTUuOTM2ZDI1NC45NzZkMzM0Ljg0N2QyNTQuOTc2ZDM3My43NmQyMjcuODRkNDAwLjg5NWQyMDAuNzA0ZDQyOC4wMzJkMTYxLjc5MmQ0MjguMDMyZDEyMi44OGQ0MjguMDMyZDk1Ljc0NGQ0MDAuODk1ZDY4LjYwOGQzNzMuNzZkNjguNjA4ZDMzNC44NDdkMzUxLjIzMmQ1OTQuOTQ0ZDM2Ni41OTJkNTI5LjQwOGQzODkuMTJkNTAyLjI3MWQ0MTEuNjQ4ZDQ3NS4xMzVkNDUyLjYwOGQ0NzUuMTM1ZDQ3Mi4wNjRkNDc1LjEzNWQ0ODkuOTg0ZDQ4MC43NjhkNTA3LjkwNGQ0ODYuNGQ1MjEuNzI4ZDQ5Ny42NjRkNTM1LjU1MmQ1MDguOTI4ZDU0My43NDRkNTI1LjgyNGQ1NTEuOTM2ZDU0Mi43MmQ1NTEuOTM2ZDU2NS4yNDhkNTUxLjkzNmQ1NzguNTZkNTQxLjE4NGQ2MTMuMzc2ZDUzMC40MzJkNjQ4LjE5MmQ1MTJkNzAxLjQ0ZDM4OS4xMmQxMDYwLjg2NGQzNzEuNzEyZDExMTEuMDRkMzQ2LjYyNGQxMTQzLjI5NmQzMjEuNTM2ZDExNzUuNTUyZDI5MS44NGQxMTkzLjk4NGQyNjIuMTQ0ZDEyMTIuNDE2ZDIyOC44NjRkMTIxOS4wNzJkMTk1LjU4NGQxMjI1LjcyOGQxNjIuODE2ZDEyMjUuNzI4ZDk5LjMyOGQxMjI1LjcyOGQ2OC42MDhkMTIwMi4xNzZkMzcuODg4ZDExNzguNjI0ZDM3Ljg4OGQxMTM3LjY2NGQzNy44ODhkMTA5OS43NzZkNjAuNDE2ZDEwODUuOTUyZDgyLjk0NGQxMDcyLjEyOGQxMTguNzg0ZDEwNzIuMTI4ZDE1MS41NTJkMTA3Mi4xMjhkMTYyLjMwNGQxMDY0Ljk2ZDE3My4wNTZkMTA1Ny43OTJkMTczLjA1NmQxMDQ2LjUyOGQxNzMuMDU2ZDEwMzkuMzU5ZDE3MC40OTZkMTAyOC42MDhkMTY3LjkzNmQxMDE3Ljg1NmQxNjIuODE2ZDEwMDUuNTY4ZDUwLjE3NmQ2ODUuMDU2ZDMwLjcyZDYzMC43ODRkMjQuMDY0ZDYwNC4xNmQxNy40MDhkNTc3LjUzNmQxNy40MDhkNTY1LjI0OGQxNy40MDhkNTI2LjMzNmQ0Ni41OTJkNTAwLjczNmQ3NS43NzZkNDc1LjEzNWQxMjAuODMyZDQ3NS4xMzVkMTkxLjQ4OGQ0NzUuMTM1ZDIxMC45NDRkNTUzLjk4M2QyODcuNzQ0ZDg1MC45NDRkMjg5Ljc5MmQ4NTAuOTQ0ZDM1MS4yMzJkNTk0Ljk0NGhSM2Q1NjkuMzQ0UjRkNTUxLjkzNlI1ZDE3LjQwOFI2ZDc4Mi4zMzZSN2QtMjAxLjcyOFI4ZDc2NC45MjhSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjU1UjEyZDE3LjQwOFIxM2Q1NjkuMzQ0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTJpMmkyaGc6MTQyb1IxZDEwMjRSMmFoUjNkMzQyLjAxNlI0ZDBSNWQwUjZkMFI3ZDBSOGQwUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTE0MlIxMmQwUjEzZDM0Mi4wMTZSMTRhaGc6MjU0b1IxZDEwMjRSMmFkMjUzLjk1MmQ3NTUuNzEyZDI1My45NTJkODEyLjAzMWQyNzYuOTkyZDg0MS43MjhkMzAwLjAzMmQ4NzEuNDI0ZDMzNC44NDhkODcxLjQyNGQzNjIuNDk2ZDg3MS40MjRkMzgwLjQxNmQ4NjEuMTg0ZDM5OC4zMzZkODUwLjk0NGQ0MDkuNmQ4MzQuMDQ4ZDQyMC44NjRkODE3LjE1MmQ0MjUuNDcyZDc5NS42NDhkNDMwLjA4ZDc3NC4xNDRkNDMwLjA4ZDc1MC41OTJkNDMwLjA4ZDcyOS4wODhkNDI1Ljk4NGQ3MDcuNTg0ZDQyMS44ODhkNjg2LjA3OWQ0MTEuNjQ4ZDY2OC4xNmQ0MDEuNDA4ZDY1MC4yNGQzODMuNDg4ZDYzOS40ODhkMzY1LjU2OGQ2MjguNzM2ZDMzOC45NDRkNjI4LjczNmQyOTIuODY0ZDYyOC43MzZkMjczLjQwOGQ2NjMuNTUyZDI1My45NTJkNjk4LjM2N2QyNTMuOTUyZDc1NS43MTJkNTIuMjI0ZDM3OC44OGQ1Mi4yMjRkMzIzLjU4M2Q3OC44NDhkMjk4LjQ5NmQxMDUuNDcyZDI3My40MDhkMTU0LjYyNGQyNzMuNDA4ZDIwMy43NzZkMjczLjQwOGQyMzAuNGQyOTguNDk2ZDI1Ny4wMjRkMzIzLjU4M2QyNTcuMDI0ZDM3OC44OGQyNTcuMDI0ZDUzNi41NzZkMjU5LjA3MmQ1MzYuNTc2ZDI3OS41NTJkNTA2Ljg4ZDMxNy40NGQ0OTEuMDA4ZDM1NS4zMjhkNDc1LjEzNWQ0MDEuNDA4ZDQ3NS4xMzVkNDU2LjcwNGQ0NzUuMTM1ZDUwMS4yNDhkNDk1LjEwNGQ1NDUuNzkyZDUxNS4wNzJkNTc2LjUxMmQ1NTEuOTM1ZDYwNy4yMzJkNTg4LjhkNjI0LjEyOGQ2NDEuMDI0ZDY0MS4wMjRkNjkzLjI0OGQ2NDEuMDI0ZDc1Ny43NmQ2NDEuMDI0ZDc5Ni42NzJkNjI5LjI0OGQ4NDUuMzEyZDYxNy40NzJkODkzLjk1MmQ1ODkuODI0ZDkzNi40NDhkNTYyLjE3NmQ5NzguOTQ0ZDUxNi4wOTZkMTAwOC4xMjhkNDcwLjAxNmQxMDM3LjMxMWQ0MDIuNDMyZDEwMzcuMzExZDM1OC40ZDEwMzcuMzExZDMyMS41MzZkMTAxNy44NTZkMjg0LjY3MmQ5OTguNGQyNTkuMDcyZDk1NS4zOTJkMjU3LjAyNGQ5NTUuMzkyZDI1Ny4wMjRkMTEzMC40OTZkMjU3LjAyNGQxMTg1Ljc5MmQyMzAuNGQxMjEwLjg4ZDIwMy43NzZkMTIzNS45NjhkMTU0LjYyNGQxMjM1Ljk2OGQxMDUuNDcyZDEyMzUuOTY4ZDc4Ljg0OGQxMjEwLjg4ZDUyLjIyNGQxMTg1Ljc5MmQ1Mi4yMjRkMTEzMC40OTZkNTIuMjI0ZDM3OC44OGhSM2Q2ODEuOTg0UjRkNjQxLjAyNFI1ZDUyLjIyNFI2ZDc1MC41OTJSN2QtMjExLjk2OFI4ZDY5OC4zNjhSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjU0UjEyZDUyLjIyNFIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kyaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkyaTNpM2kzaTNpMmhnOjE0MW9SMWQxMDI0UjJhaFIzZDM0Mi4wMTZSNGQwUjVkMFI2ZDBSN2QwUjhkMFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNDFSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjI1M29SMWQxMDI0UjJhZDMxMy4zNDRkMjU3LjAyNGQzMzguOTQ0ZDIzNC40OTVkMzUyLjI1NmQyMjguODY0ZDM2NS41NjhkMjIzLjIzMWQzODAuOTI4ZDIyMy4yMzFkMzkxLjE2OGQyMjMuMjMxZDQwMi45NDRkMjI3Ljg0ZDQxNC43MmQyMzIuNDQ3ZDQyMy45MzZkMjQxLjE1MWQ0MzMuMTUyZDI0OS44NTZkNDM5LjI5NmQyNjEuMTJkNDQ1LjQ0ZDI3Mi4zODRkNDQ1LjQ0ZDI4NS42OTZkNDQ1LjQ0ZDMxNi40MTVkNDE2Ljc2OGQzMzkuOTY3ZDMzMS43NzZkNDEyLjY3MmQzMTguNDY0ZDQyMy45MzZkMzA5LjI0OGQ0MzAuNTkyZDMwMC4wMzJkNDM3LjI0N2QyOTIuMzUyZDQ0MC44MzJkMjg0LjY3MmQ0NDQuNDE1ZDI3OC4wMTZkNDQ1LjQzOWQyNzEuMzZkNDQ2LjQ2M2QyNjQuMTkyZDQ0Ni40NjNkMjUyLjkyOGQ0NDYuNDYzZDI0MS42NjRkNDQxLjg1NmQyMzAuNGQ0MzcuMjQ3ZDIyMS4xODRkNDI4LjU0NGQyMTEuOTY4ZDQxOS44NGQyMDUuODI0ZDQwOC41NzZkMTk5LjY4ZDM5Ny4zMTJkMTk5LjY4ZDM4NGQxOTkuNjhkMzUzLjI4ZDIyOC4zNTJkMzI5LjcyN2QzMTMuMzQ0ZDI1Ny4wMjRkMzUxLjIzMmQ1OTQuOTQ0ZDM2Ni41OTJkNTI5LjQwOGQzODkuMTJkNTAyLjI3MWQ0MTEuNjQ4ZDQ3NS4xMzVkNDUyLjYwOGQ0NzUuMTM1ZDQ3Mi4wNjRkNDc1LjEzNWQ0ODkuOTg0ZDQ4MC43NjhkNTA3LjkwNGQ0ODYuNGQ1MjEuNzI4ZDQ5Ny42NjRkNTM1LjU1MmQ1MDguOTI4ZDU0My43NDRkNTI1LjgyNGQ1NTEuOTM2ZDU0Mi43MmQ1NTEuOTM2ZDU2NS4yNDhkNTUxLjkzNmQ1NzguNTZkNTQxLjE4NGQ2MTMuMzc2ZDUzMC40MzJkNjQ4LjE5MmQ1MTJkNzAxLjQ0ZDM4OS4xMmQxMDYwLjg2NGQzNzEuNzEyZDExMTEuMDRkMzQ2LjYyNGQxMTQzLjI5NmQzMjEuNTM2ZDExNzUuNTUyZDI5MS44NGQxMTkzLjk4NGQyNjIuMTQ0ZDEyMTIuNDE2ZDIyOC44NjRkMTIxOS4wNzJkMTk1LjU4NGQxMjI1LjcyOGQxNjIuODE2ZDEyMjUuNzI4ZDk5LjMyOGQxMjI1LjcyOGQ2OC42MDhkMTIwMi4xNzZkMzcuODg4ZDExNzguNjI0ZDM3Ljg4OGQxMTM3LjY2NGQzNy44ODhkMTA5OS43NzZkNjAuNDE2ZDEwODUuOTUyZDgyLjk0NGQxMDcyLjEyOGQxMTguNzg0ZDEwNzIuMTI4ZDE1MS41NTJkMTA3Mi4xMjhkMTYyLjMwNGQxMDY0Ljk2ZDE3My4wNTZkMTA1Ny43OTJkMTczLjA1NmQxMDQ2LjUyOGQxNzMuMDU2ZDEwMzkuMzU5ZDE3MC40OTZkMTAyOC42MDhkMTY3LjkzNmQxMDE3Ljg1NmQxNjIuODE2ZDEwMDUuNTY4ZDUwLjE3NmQ2ODUuMDU2ZDMwLjcyZDYzMC43ODRkMjQuMDY0ZDYwNC4xNmQxNy40MDhkNTc3LjUzNmQxNy40MDhkNTY1LjI0OGQxNy40MDhkNTI2LjMzNmQ0Ni41OTJkNTAwLjczNmQ3NS43NzZkNDc1LjEzNWQxMjAuODMyZDQ3NS4xMzVkMTkxLjQ4OGQ0NzUuMTM1ZDIxMC45NDRkNTUzLjk4M2QyODcuNzQ0ZDg1MC45NDRkMjg5Ljc5MmQ4NTAuOTQ0ZDM1MS4yMzJkNTk0Ljk0NGhSM2Q1NjkuMzQ0UjRkNTUxLjkzNlI1ZDE3LjQwOFI2ZDgwMC43NjhSN2QtMjAxLjcyOFI4ZDc4My4zNlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyNTNSMTJkMTcuNDA4UjEzZDU2OS4zNDRSMTRhaTFpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kyaTJpMmhnOjE0MG9SMWQxMDI0UjJhaFIzZDM0Mi4wMTZSNGQwUjVkMFI2ZDBSN2QwUjhkMFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxNDBSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjI1Mm9SMWQxMDI0UjJhZDM3MC42ODhkMzM0Ljg0N2QzNzAuNjg4ZDI5NS45MzZkMzk3LjgyNGQyNjguNzk5ZDQyNC45NmQyNDEuNjY0ZDQ2My44NzJkMjQxLjY2NGQ1MDIuNzg0ZDI0MS42NjRkNTI5LjkyZDI2OC43OTlkNTU3LjA1NmQyOTUuOTM2ZDU1Ny4wNTZkMzM0Ljg0N2Q1NTcuMDU2ZDM3My43NmQ1MjkuOTJkNDAwLjg5NWQ1MDIuNzg0ZDQyOC4wMzJkNDYzLjg3MmQ0MjguMDMyZDQyNC45NmQ0MjguMDMyZDM5Ny44MjRkNDAwLjg5NWQzNzAuNjg4ZDM3My43NmQzNzAuNjg4ZDMzNC44NDdkMTI0LjkyOGQzMzQuODQ3ZDEyNC45MjhkMjk1LjkzNmQxNTIuMDY0ZDI2OC43OTlkMTc5LjJkMjQxLjY2NGQyMTguMTEyZDI0MS42NjRkMjU3LjAyNGQyNDEuNjY0ZDI4NC4xNmQyNjguNzk5ZDMxMS4yOTZkMjk1LjkzNmQzMTEuMjk2ZDMzNC44NDdkMzExLjI5NmQzNzMuNzZkMjg0LjE2ZDQwMC44OTVkMjU3LjAyNGQ0MjguMDMyZDIxOC4xMTJkNDI4LjAzMmQxNzkuMmQ0MjguMDMyZDE1Mi4wNjRkNDAwLjg5NWQxMjQuOTI4ZDM3My43NmQxMjQuOTI4ZDMzNC44NDdkNDE4LjgxNmQ1NzkuNTg0ZDQxOC44MTZkNTI1LjMxMmQ0NDguNTEyZDUwMC4yMjNkNDc4LjIwOGQ0NzUuMTM1ZDUyNC4yODhkNDc1LjEzNWQ1NzAuMzY4ZDQ3NS4xMzVkNjAwLjA2NGQ1MDAuMjIzZDYyOS43NmQ1MjUuMzEyZDYyOS43NmQ1NzkuNTg0ZDYyOS43NmQ5MzYuOTZkNjI5Ljc2ZDk4Ni4xMTJkNjA1LjE4NGQxMDExLjcxMmQ1ODAuNjA4ZDEwMzcuMzExZDUyOC4zODRkMTAzNy4zMTFkNDgxLjI4ZDEwMzcuMzExZDQ2MC4yODhkMTAxMS43MTJkNDM5LjI5NmQ5ODYuMTEyZDQzNC4xNzZkOTM3Ljk4NGQ0MzIuMTI4ZDkzNy45ODRkNDA1LjUwNGQ5ODYuMTEyZDM2Mi40OTZkMTAxMS43MTJkMzE5LjQ4OGQxMDM3LjMxMWQyNTguMDQ4ZDEwMzcuMzExZDIwMi43NTJkMTAzNy4zMTFkMTYzLjg0ZDEwMjEuNDRkMTI0LjkyOGQxMDA1LjU2OGQxMDAuMzUyZDk3Ny45MmQ3NS43NzZkOTUwLjI3MWQ2NGQ5MTIuMzg0ZDUyLjIyNGQ4NzQuNDk2ZDUyLjIyNGQ4MzAuNDY0ZDUyLjIyNGQ1NzkuNTg0ZDUyLjIyNGQ1MjUuMzEyZDgxLjkyZDUwMC4yMjNkMTExLjYxNmQ0NzUuMTM1ZDE1Ny42OTZkNDc1LjEzNWQyMDMuNzc2ZDQ3NS4xMzVkMjMzLjQ3MmQ1MDAuMjIzZDI2My4xNjhkNTI1LjMxMmQyNjMuMTY4ZDU3OS41ODRkMjYzLjE2OGQ3ODEuMzEyZDI2My4xNjhkODcxLjQyNGQzNDAuOTkyZDg3MS40MjRkMzc5LjkwNGQ4NzEuNDI0ZDM5OS4zNmQ4NDMuMjY0ZDQxOC44MTZkODE1LjEwNGQ0MTguODE2ZDc2Ni45NzZkNDE4LjgxNmQ1NzkuNTg0aFIzZDY4MS45ODRSNGQ2MjkuNzZSNWQ1Mi4yMjRSNmQ3ODIuMzM2UjdkLTEzLjMxMlI4ZDczMC4xMTJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjUyUjEyZDUyLjIyNFIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpMmhnOjEzOW9SMWQxMDI0UjJhaFIzZDM0Mi4wMTZSNGQwUjVkMFI2ZDBSN2QwUjhkMFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxMzlSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjI1MW9SMWQxMDI0UjJhZDE1NS42NDhkMzc0Ljc4NGQxNTUuNjQ4ZDM2OC42NGQxNTguNzJkMzU5LjkzNmQxNjEuNzkyZDM1MS4yMzJkMTcxLjAwOGQzMzkuOTY3ZDE4MC4yMjRkMzI4LjcwM2QxOTYuNjA4ZDMxMi44MzJkMjEyLjk5MmQyOTYuOTZkMjM5LjYxNmQyNzYuNDhkMjYxLjEyZDI1OS4wNzJkMjc1LjQ1NmQyNDguODMyZDI4OS43OTJkMjM4LjU5MWQzMDAuNTQ0ZDIzMi45NmQzMTEuMjk2ZDIyNy4zMjdkMzIwLjUxMmQyMjUuNzkyZDMyOS43MjhkMjI0LjI1NWQzNDAuOTkyZDIyNC4yNTVkMzUyLjI1NmQyMjQuMjU1ZDM2MS40NzJkMjI1Ljc5MmQzNzAuNjg4ZDIyNy4zMjdkMzgxLjQ0ZDIzMi45NmQzOTIuMTkyZDIzOC41OTFkNDA2LjUyOGQyNDguODMyZDQyMC44NjRkMjU5LjA3MmQ0NDIuMzY4ZDI3Ni40OGQ0NjguOTkyZDI5Ni45NmQ0ODUuMzc2ZDMxMi44MzJkNTAxLjc2ZDMyOC43MDNkNTEwLjk3NmQzMzkuOTY3ZDUyMC4xOTJkMzUxLjIzMmQ1MjMuMjY0ZDM1OS45MzZkNTI2LjMzNmQzNjguNjRkNTI2LjMzNmQzNzQuNzg0ZDUyNi4zMzZkMzk2LjI4OGQ1MTEuNDg4ZDQxNS43NDRkNDk2LjY0ZDQzNS4xOTlkNDY4Ljk5MmQ0MzUuMTk5ZDQ2MC44ZDQzNS4xOTlkNDUwLjA0OGQ0MzEuNjE2ZDQzOS4yOTZkNDI4LjAzMmQ0MjQuOTZkNDE4LjMwNGQ0MTAuNjI0ZDQwOC41NzZkMzkwLjE0NGQzOTIuNzAzZDM2OS42NjRkMzc2LjgzMmQzNDAuOTkyZDM1Mi4yNTZkMzEyLjMyZDM3Ni44MzJkMjkxLjg0ZDM5Mi43MDNkMjcxLjM2ZDQwOC41NzZkMjU3LjAyNGQ0MTguMzA0ZDI0Mi42ODhkNDI4LjAzMmQyMzEuOTM2ZDQzMS42MTZkMjIxLjE4NGQ0MzUuMTk5ZDIxMi45OTJkNDM1LjE5OWQxODUuMzQ0ZDQzNS4xOTlkMTcwLjQ5NmQ0MTUuNzQ0ZDE1NS42NDhkMzk2LjI4OGQxNTUuNjQ4ZDM3NC43ODRkNDE4LjgxNmQ1NzkuNTg0ZDQxOC44MTZkNTI1LjMxMmQ0NDguNTEyZDUwMC4yMjNkNDc4LjIwOGQ0NzUuMTM1ZDUyNC4yODhkNDc1LjEzNWQ1NzAuMzY4ZDQ3NS4xMzVkNjAwLjA2NGQ1MDAuMjIzZDYyOS43NmQ1MjUuMzEyZDYyOS43NmQ1NzkuNTg0ZDYyOS43NmQ5MzYuOTZkNjI5Ljc2ZDk4Ni4xMTJkNjA1LjE4NGQxMDExLjcxMmQ1ODAuNjA4ZDEwMzcuMzExZDUyOC4zODRkMTAzNy4zMTFkNDgxLjI4ZDEwMzcuMzExZDQ2MC4yODhkMTAxMS43MTJkNDM5LjI5NmQ5ODYuMTEyZDQzNC4xNzZkOTM3Ljk4NGQ0MzIuMTI4ZDkzNy45ODRkNDA1LjUwNGQ5ODYuMTEyZDM2Mi40OTZkMTAxMS43MTJkMzE5LjQ4OGQxMDM3LjMxMWQyNTguMDQ4ZDEwMzcuMzExZDIwMi43NTJkMTAzNy4zMTFkMTYzLjg0ZDEwMjEuNDRkMTI0LjkyOGQxMDA1LjU2OGQxMDAuMzUyZDk3Ny45MmQ3NS43NzZkOTUwLjI3MWQ2NGQ5MTIuMzg0ZDUyLjIyNGQ4NzQuNDk2ZDUyLjIyNGQ4MzAuNDY0ZDUyLjIyNGQ1NzkuNTg0ZDUyLjIyNGQ1MjUuMzEyZDgxLjkyZDUwMC4yMjNkMTExLjYxNmQ0NzUuMTM1ZDE1Ny42OTZkNDc1LjEzNWQyMDMuNzc2ZDQ3NS4xMzVkMjMzLjQ3MmQ1MDAuMjIzZDI2My4xNjhkNTI1LjMxMmQyNjMuMTY4ZDU3OS41ODRkMjYzLjE2OGQ3ODEuMzEyZDI2My4xNjhkODcxLjQyNGQzNDAuOTkyZDg3MS40MjRkMzc5LjkwNGQ4NzEuNDI0ZDM5OS4zNmQ4NDMuMjY0ZDQxOC44MTZkODE1LjEwNGQ0MTguODE2ZDc2Ni45NzZkNDE4LjgxNmQ1NzkuNTg0aFIzZDY4MS45ODRSNGQ2MjkuNzZSNWQ1Mi4yMjRSNmQ3OTkuNzQ0UjdkLTEzLjMxMlI4ZDc0Ny41MlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyNTFSMTJkNTIuMjI0UjEzZDY4MS45ODRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpMmhnOjEzOG9SMWQxMDI0UjJhaFIzZDM0Mi4wMTZSNGQwUjVkMFI2ZDBSN2QwUjhkMFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxMzhSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjI1MG9SMWQxMDI0UjJhZDM2OS42NjRkMjU3LjAyNGQzOTUuMjY0ZDIzNC40OTVkNDA4LjU3NmQyMjguODY0ZDQyMS44ODhkMjIzLjIzMWQ0MzcuMjQ4ZDIyMy4yMzFkNDQ3LjQ4OGQyMjMuMjMxZDQ1OS4yNjRkMjI3Ljg0ZDQ3MS4wNGQyMzIuNDQ3ZDQ4MC4yNTZkMjQxLjE1MWQ0ODkuNDcyZDI0OS44NTZkNDk1LjYxNmQyNjEuMTJkNTAxLjc2ZDI3Mi4zODRkNTAxLjc2ZDI4NS42OTZkNTAxLjc2ZDMxNi40MTVkNDczLjA4OGQzMzkuOTY3ZDM4OC4wOTZkNDEyLjY3MmQzNzQuNzg0ZDQyMy45MzZkMzY1LjU2OGQ0MzAuNTkyZDM1Ni4zNTJkNDM3LjI0N2QzNDguNjcyZDQ0MC44MzJkMzQwLjk5MmQ0NDQuNDE1ZDMzNC4zMzZkNDQ1LjQzOWQzMjcuNjhkNDQ2LjQ2M2QzMjAuNTEyZDQ0Ni40NjNkMzA5LjI0OGQ0NDYuNDYzZDI5Ny45ODRkNDQxLjg1NmQyODYuNzJkNDM3LjI0N2QyNzcuNTA0ZDQyOC41NDRkMjY4LjI4OGQ0MTkuODRkMjYyLjE0NGQ0MDguNTc2ZDI1NmQzOTcuMzEyZDI1NmQzODRkMjU2ZDM1My4yOGQyODQuNjcyZDMyOS43MjdkMzY5LjY2NGQyNTcuMDI0ZDQxOC44MTZkNTc5LjU4NGQ0MTguODE2ZDUyNS4zMTJkNDQ4LjUxMmQ1MDAuMjIzZDQ3OC4yMDhkNDc1LjEzNWQ1MjQuMjg4ZDQ3NS4xMzVkNTcwLjM2OGQ0NzUuMTM1ZDYwMC4wNjRkNTAwLjIyM2Q2MjkuNzZkNTI1LjMxMmQ2MjkuNzZkNTc5LjU4NGQ2MjkuNzZkOTM2Ljk2ZDYyOS43NmQ5ODYuMTEyZDYwNS4xODRkMTAxMS43MTJkNTgwLjYwOGQxMDM3LjMxMWQ1MjguMzg0ZDEwMzcuMzExZDQ4MS4yOGQxMDM3LjMxMWQ0NjAuMjg4ZDEwMTEuNzEyZDQzOS4yOTZkOTg2LjExMmQ0MzQuMTc2ZDkzNy45ODRkNDMyLjEyOGQ5MzcuOTg0ZDQwNS41MDRkOTg2LjExMmQzNjIuNDk2ZDEwMTEuNzEyZDMxOS40ODhkMTAzNy4zMTFkMjU4LjA0OGQxMDM3LjMxMWQyMDIuNzUyZDEwMzcuMzExZDE2My44NGQxMDIxLjQ0ZDEyNC45MjhkMTAwNS41NjhkMTAwLjM1MmQ5NzcuOTJkNzUuNzc2ZDk1MC4yNzFkNjRkOTEyLjM4NGQ1Mi4yMjRkODc0LjQ5NmQ1Mi4yMjRkODMwLjQ2NGQ1Mi4yMjRkNTc5LjU4NGQ1Mi4yMjRkNTI1LjMxMmQ4MS45MmQ1MDAuMjIzZDExMS42MTZkNDc1LjEzNWQxNTcuNjk2ZDQ3NS4xMzVkMjAzLjc3NmQ0NzUuMTM1ZDIzMy40NzJkNTAwLjIyM2QyNjMuMTY4ZDUyNS4zMTJkMjYzLjE2OGQ1NzkuNTg0ZDI2My4xNjhkNzgxLjMxMmQyNjMuMTY4ZDg3MS40MjRkMzQwLjk5MmQ4NzEuNDI0ZDM3OS45MDRkODcxLjQyNGQzOTkuMzZkODQzLjI2NGQ0MTguODE2ZDgxNS4xMDRkNDE4LjgxNmQ3NjYuOTc2ZDQxOC44MTZkNTc5LjU4NGhSM2Q2ODEuOTg0UjRkNjI5Ljc2UjVkNTIuMjI0UjZkODAwLjc2OFI3ZC0xMy4zMTJSOGQ3NDguNTQ0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTI1MFIxMmQ1Mi4yMjRSMTNkNjgxLjk4NFIxNGFpMWkzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpMmkxaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpMmhnOjEzN29SMWQxMDI0UjJhaFIzZDM0Mi4wMTZSNGQwUjVkMFI2ZDBSN2QwUjhkMFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxMzdSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjI0OW9SMWQxMDI0UjJhZDIwOC44OTZkMzM5Ljk2N2QxODAuMjI0ZDMxNi40MTVkMTgwLjIyNGQyODUuNjk2ZDE4MC4yMjRkMjcyLjM4NGQxODYuMzY4ZDI2MS4xMmQxOTIuNTEyZDI0OS44NTZkMjAxLjcyOGQyNDEuMTUxZDIxMC45NDRkMjMyLjQ0N2QyMjIuMjA4ZDIyNy44NGQyMzMuNDcyZDIyMy4yMzFkMjQ0LjczNmQyMjMuMjMxZDI1MS45MDRkMjIzLjIzMWQyNTguNTZkMjI0LjI1NWQyNjUuMjE2ZDIyNS4yNzlkMjcyLjg5NmQyMjguODY0ZDI4MC41NzZkMjMyLjQ0N2QyODkuNzkyZDIzOS4xMDNkMjk5LjAwOGQyNDUuNzZkMzEyLjMyZDI1Ny4wMjRkMzk3LjMxMmQzMjkuNzI3ZDQyNS45ODRkMzUzLjI4ZDQyNS45ODRkMzg0ZDQyNS45ODRkMzk3LjMxMmQ0MTkuODRkNDA4LjU3NmQ0MTMuNjk2ZDQxOS44NGQ0MDQuNDhkNDI4LjU0NGQzOTUuMjY0ZDQzNy4yNDdkMzgzLjQ4OGQ0NDEuODU2ZDM3MS43MTJkNDQ2LjQ2M2QzNjEuNDcyZDQ0Ni40NjNkMzQ2LjExMmQ0NDYuNDYzZDMzMi44ZDQ0MC44MzJkMzE5LjQ4OGQ0MzUuMTk5ZDI5My44ODhkNDEyLjY3MmQyMDguODk2ZDMzOS45NjdkNDE4LjgxNmQ1NzkuNTg0ZDQxOC44MTZkNTI1LjMxMmQ0NDguNTEyZDUwMC4yMjNkNDc4LjIwOGQ0NzUuMTM1ZDUyNC4yODhkNDc1LjEzNWQ1NzAuMzY4ZDQ3NS4xMzVkNjAwLjA2NGQ1MDAuMjIzZDYyOS43NmQ1MjUuMzEyZDYyOS43NmQ1NzkuNTg0ZDYyOS43NmQ5MzYuOTZkNjI5Ljc2ZDk4Ni4xMTJkNjA1LjE4NGQxMDExLjcxMmQ1ODAuNjA4ZDEwMzcuMzExZDUyOC4zODRkMTAzNy4zMTFkNDgxLjI4ZDEwMzcuMzExZDQ2MC4yODhkMTAxMS43MTJkNDM5LjI5NmQ5ODYuMTEyZDQzNC4xNzZkOTM3Ljk4NGQ0MzIuMTI4ZDkzNy45ODRkNDA1LjUwNGQ5ODYuMTEyZDM2Mi40OTZkMTAxMS43MTJkMzE5LjQ4OGQxMDM3LjMxMWQyNTguMDQ4ZDEwMzcuMzExZDIwMi43NTJkMTAzNy4zMTFkMTYzLjg0ZDEwMjEuNDRkMTI0LjkyOGQxMDA1LjU2OGQxMDAuMzUyZDk3Ny45MmQ3NS43NzZkOTUwLjI3MWQ2NGQ5MTIuMzg0ZDUyLjIyNGQ4NzQuNDk2ZDUyLjIyNGQ4MzAuNDY0ZDUyLjIyNGQ1NzkuNTg0ZDUyLjIyNGQ1MjUuMzEyZDgxLjkyZDUwMC4yMjNkMTExLjYxNmQ0NzUuMTM1ZDE1Ny42OTZkNDc1LjEzNWQyMDMuNzc2ZDQ3NS4xMzVkMjMzLjQ3MmQ1MDAuMjIzZDI2My4xNjhkNTI1LjMxMmQyNjMuMTY4ZDU3OS41ODRkMjYzLjE2OGQ3ODEuMzEyZDI2My4xNjhkODcxLjQyNGQzNDAuOTkyZDg3MS40MjRkMzc5LjkwNGQ4NzEuNDI0ZDM5OS4zNmQ4NDMuMjY0ZDQxOC44MTZkODE1LjEwNGQ0MTguODE2ZDc2Ni45NzZkNDE4LjgxNmQ1NzkuNTg0aFIzZDY4MS45ODRSNGQ2MjkuNzZSNWQ1Mi4yMjRSNmQ4MDAuNzY4UjdkLTEzLjMxMlI4ZDc0OC41NDRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjQ5UjEyZDUyLjIyNFIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kyaGc6MTM2b1IxZDEwMjRSMmFoUjNkMzQyLjAxNlI0ZDBSNWQwUjZkMFI3ZDBSOGQwUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTEzNlIxMmQwUjEzZDM0Mi4wMTZSMTRhaGc6MjQ4b1IxZDEwMjRSMmFkNDAxLjQwOGQ2MjMuNjE2ZDM3OC44OGQ2MDQuMTZkMzQwLjk5MmQ2MDQuMTZkMjg4Ljc2OGQ2MDQuMTZkMjY0LjE5MmQ2NDAuNTEyZDIzOS42MTZkNjc2Ljg2NGQyMzkuNjE2ZDc2MS44NTZkMjM5LjYxNmQ3NjhkMjM5LjYxNmQ3NzQuMTQ0ZDIzOS42MTZkNzc5LjI2NGQyNDAuNjRkNzg0LjM4NGQ0MDEuNDA4ZDYyMy42MTZkMjgwLjU3NmQ4ODguODMyZDMwMy4xMDRkOTA4LjI4OGQzNDAuOTkyZDkwOC4yODhkMzkzLjIxNmQ5MDguMjg4ZDQxNy43OTJkODczLjQ3MmQ0NDIuMzY4ZDgzOC42NTZkNDQyLjM2OGQ3NjEuODU2ZDQ0Mi4zNjhkNzUyLjY0ZDQ0Mi4zNjhkNzQ0LjQ0OGQ0NDIuMzY4ZDczNS4yMzJkNDQxLjM0NGQ3MjguMDY0ZDI4MC41NzZkODg4LjgzMmQ5My4xODRkOTMxLjg0ZDY4LjYwOGQ4OTkuMDcyZDU0Ljc4NGQ4NTUuNTUyZDQwLjk2ZDgxMi4wMzFkNDAuOTZkNzU1LjcxMmQ0MC45NmQ2ODMuMDA4ZDY0ZDYzMC4yNzFkODcuMDRkNTc3LjUzNmQxMjhkNTQyLjcyZDE2OC45NmQ1MDcuOTA0ZDIyMy4yMzJkNDkxLjUyZDI3Ny41MDRkNDc1LjEzNWQzNDAuOTkyZDQ3NS4xMzVkMzg4LjA5NmQ0NzUuMTM1ZDQzMS4xMDRkNDg0LjM1MmQ0NzQuMTEyZDQ5My41NjhkNTEwLjk3NmQ1MTQuMDQ4ZDU2NS4yNDhkNDU5Ljc3NWQ1NzguNTZkNDQ2LjQ2M2Q1OTAuMzM2ZDQ0My4zOTFkNjAyLjExMmQ0NDAuMzE5ZDYxMi4zNTJkNDQwLjMxOWQ2MjguNzM2ZDQ0MC4zMTlkNjQ0LjYwOGQ0NTIuMDk2ZDY2MC40OGQ0NjMuODcxZDY1OS40NTZkNDg4LjQ0OGQ2NTkuNDU2ZDQ5My41NjhkNjU1Ljg3MmQ1MDUuMzQzZDY1Mi4yODhkNTE3LjEyZDYzMi44MzJkNTM2LjU3NmQ1ODguOGQ1ODAuNjA4ZDYxMy4zNzZkNjEzLjM3NmQ2MjcuMmQ2NTYuODk2ZDY0MS4wMjRkNzAwLjQxNWQ2NDEuMDI0ZDc1NS43MTJkNjQxLjAyNGQ4MjguNDE1ZDYxNy45ODRkODgxLjY2NGQ1OTQuOTQ0ZDkzNC45MTJkNTUzLjk4NGQ5NjkuNzI4ZDUxMy4wMjRkMTAwNC41NDRkNDU4LjI0ZDEwMjAuOTI4ZDQwMy40NTZkMTAzNy4zMTFkMzQwLjk5MmQxMDM3LjMxMWQyOTIuODY0ZDEwMzcuMzExZDI0OS44NTZkMTAyOC4wOTZkMjA2Ljg0OGQxMDE4Ljg4ZDE3MS4wMDhkOTk4LjRkMTE2LjczNmQxMDUyLjY3MmQxMDMuNDI0ZDEwNjUuOTg0ZDkxLjY0OGQxMDY5LjA1NmQ3OS44NzJkMTA3Mi4xMjhkNjkuNjMyZDEwNzIuMTI4ZDUzLjI0OGQxMDcyLjEyOGQzNy4zNzZkMTA2MC4zNTJkMjEuNTA0ZDEwNDguNTc2ZDIyLjUyOGQxMDI0ZDIyLjUyOGQxMDE4Ljg4ZDI2LjExMmQxMDA3LjEwNGQyOS42OTZkOTk1LjMyOGQ0OS4xNTJkOTc1Ljg3MmQ5My4xODRkOTMxLjg0aFIzZDY4MS45ODRSNGQ2NjAuNDhSNWQyMS41MDRSNmQ1ODMuNjhSN2QtNDguMTI4UjhkNTYyLjE3NlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyNDhSMTJkMjEuNTA0UjEzZDY4MS45ODRSMTRhaTFpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTNpMmkxaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpMmhnOjEzNW9SMWQxMDI0UjJhaFIzZDM0Mi4wMTZSNGQwUjVkMFI2ZDBSN2QwUjhkMFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxMzVSMTJkMFIxM2QzNDIuMDE2UjE0YWhnOjI0N29SMWQxMDI0UjJhZDIxMC45NDRkOTUwLjI3MWQyMTAuOTQ0ZDkzMC44MTZkMjE4LjYyNGQ5MTIuODk2ZDIyNi4zMDRkODk0Ljk3NmQyMzkuMTA0ZDg4Mi4xNzVkMjUxLjkwNGQ4NjkuMzc2ZDI2OS4zMTJkODYxLjY5NmQyODYuNzJkODU0LjAxNmQzMDcuMmQ4NTQuMDE2ZDMyNi42NTZkODU0LjAxNmQzNDQuNTc2ZDg2MS42OTZkMzYyLjQ5NmQ4NjkuMzc2ZDM3NS4yOTZkODgyLjE3NWQzODguMDk2ZDg5NC45NzZkMzk1Ljc3NmQ5MTIuODk2ZDQwMy40NTZkOTMwLjgxNmQ0MDMuNDU2ZDk1MC4yNzFkNDAzLjQ1NmQ5NzAuNzUyZDM5NS43NzZkOTg4LjE2ZDM4OC4wOTZkMTAwNS41NjhkMzc1LjI5NmQxMDE4LjM2OGQzNjIuNDk2ZDEwMzEuMTY3ZDM0NC41NzZkMTAzOC44NDhkMzI2LjY1NmQxMDQ2LjUyOGQzMDcuMmQxMDQ2LjUyOGQyODYuNzJkMTA0Ni41MjhkMjY5LjMxMmQxMDM4Ljg0OGQyNTEuOTA0ZDEwMzEuMTY3ZDIzOS4xMDRkMTAxOC4zNjhkMjI2LjMwNGQxMDA1LjU2OGQyMTguNjI0ZDk4OC4xNmQyMTAuOTQ0ZDk3MC43NTJkMjEwLjk0NGQ5NTAuMjcxZDIxMC45NDRkNTE4LjE0NGQyMTAuOTQ0ZDQ5OC42ODhkMjE4LjYyNGQ0ODAuNzY4ZDIyNi4zMDRkNDYyLjg0N2QyMzkuMTA0ZDQ1MC4wNDhkMjUxLjkwNGQ0MzcuMjQ3ZDI2OS4zMTJkNDI5LjU2OGQyODYuNzJkNDIxLjg4OGQzMDcuMmQ0MjEuODg4ZDMyNi42NTZkNDIxLjg4OGQzNDQuNTc2ZDQyOS41NjhkMzYyLjQ5NmQ0MzcuMjQ3ZDM3NS4yOTZkNDUwLjA0OGQzODguMDk2ZDQ2Mi44NDdkMzk1Ljc3NmQ0ODAuNzY4ZDQwMy40NTZkNDk4LjY4OGQ0MDMuNDU2ZDUxOC4xNDRkNDAzLjQ1NmQ1MzguNjI0ZDM5NS43NzZkNTU2LjAzMWQzODguMDk2ZDU3My40NGQzNzUuMjk2ZDU4Ni4yNGQzNjIuNDk2ZDU5OS4wNGQzNDQuNTc2ZDYwNi43MmQzMjYuNjU2ZDYxNC40ZDMwNy4yZDYxNC40ZDI4Ni43MmQ2MTQuNGQyNjkuMzEyZDYwNi43MmQyNTEuOTA0ZDU5OS4wNGQyMzkuMTA0ZDU4Ni4yNGQyMjYuMzA0ZDU3My40NGQyMTguNjI0ZDU1Ni4wMzFkMjEwLjk0NGQ1MzguNjI0ZDIxMC45NDRkNTE4LjE0NGQ1MjUuMzEyZDY2Ni42MjRkNTU4LjA4ZDY2Ni42MjRkNTc3LjUzNmQ2ODQuMDMxZDU5Ni45OTJkNzAxLjQ0ZDU5Ni45OTJkNzM0LjIwOGQ1OTYuOTkyZDc2Ni45NzZkNTc3LjUzNmQ3ODQuMzg0ZDU1OC4wOGQ4MDEuNzkyZDUyNS4zMTJkODAxLjc5MmQ4OS4wODhkODAxLjc5MmQ1Ni4zMmQ4MDEuNzkyZDM2Ljg2NGQ3ODQuMzg0ZDE3LjQwOGQ3NjYuOTc2ZDE3LjQwOGQ3MzQuMjA4ZDE3LjQwOGQ3MDEuNDRkMzYuODY0ZDY4NC4wMzFkNTYuMzJkNjY2LjYyNGQ4OS4wODhkNjY2LjYyNGQ1MjUuMzEyZDY2Ni42MjRoUjNkNjE0LjRSNGQ1OTYuOTkyUjVkMTcuNDA4UjZkNjAyLjExMlI3ZC0yMi41MjhSOGQ1ODQuNzA0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTI0N1IxMmQxNy40MDhSMTNkNjE0LjRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTJpM2kzaTNpM2kyaGc6MTM0b1IxZDEwMjRSMmFoUjNkMzQyLjAxNlI0ZDBSNWQwUjZkMFI3ZDBSOGQwUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTEzNFIxMmQwUjEzZDM0Mi4wMTZSMTRhaGc6MjQ2b1IxZDEwMjRSMmFkMTI0LjkyOGQzMzQuODQ3ZDEyNC45MjhkMjk1LjkzNmQxNTIuMDY0ZDI2OC43OTlkMTc5LjJkMjQxLjY2NGQyMTguMTEyZDI0MS42NjRkMjU3LjAyNGQyNDEuNjY0ZDI4NC4xNmQyNjguNzk5ZDMxMS4yOTZkMjk1LjkzNmQzMTEuMjk2ZDMzNC44NDdkMzExLjI5NmQzNzMuNzZkMjg0LjE2ZDQwMC44OTVkMjU3LjAyNGQ0MjguMDMyZDIxOC4xMTJkNDI4LjAzMmQxNzkuMmQ0MjguMDMyZDE1Mi4wNjRkNDAwLjg5NWQxMjQuOTI4ZDM3My43NmQxMjQuOTI4ZDMzNC44NDdkMzcwLjY4OGQzMzQuODQ3ZDM3MC42ODhkMjk1LjkzNmQzOTcuODI0ZDI2OC43OTlkNDI0Ljk2ZDI0MS42NjRkNDYzLjg3MmQyNDEuNjY0ZDUwMi43ODRkMjQxLjY2NGQ1MjkuOTJkMjY4Ljc5OWQ1NTcuMDU2ZDI5NS45MzZkNTU3LjA1NmQzMzQuODQ3ZDU1Ny4wNTZkMzczLjc2ZDUyOS45MmQ0MDAuODk1ZDUwMi43ODRkNDI4LjAzMmQ0NjMuODcyZDQyOC4wMzJkNDI0Ljk2ZDQyOC4wMzJkMzk3LjgyNGQ0MDAuODk1ZDM3MC42ODhkMzczLjc2ZDM3MC42ODhkMzM0Ljg0N2Q0MzAuMDhkNzYxLjg1NmQ0MzAuMDhkNjg2LjA3OWQ0MDcuMDRkNjUxLjI2NGQzODRkNjE2LjQ0OGQzNDAuOTkyZDYxNi40NDhkMjk3Ljk4NGQ2MTYuNDQ4ZDI3NC45NDRkNjUxLjI2NGQyNTEuOTA0ZDY4Ni4wNzlkMjUxLjkwNGQ3NjEuODU2ZDI1MS45MDRkODI5LjQ0ZDI3NC45NDRkODYyLjcyZDI5Ny45ODRkODk2ZDM0MC45OTJkODk2ZDM4NGQ4OTZkNDA3LjA0ZDg2Mi43MmQ0MzAuMDhkODI5LjQ0ZDQzMC4wOGQ3NjEuODU2ZDQwLjk2ZDc1NS43MTJkNDAuOTZkNjgzLjAwOGQ2NGQ2MzAuMjcxZDg3LjA0ZDU3Ny41MzZkMTI4ZDU0Mi43MmQxNjguOTZkNTA3LjkwNGQyMjMuMjMyZDQ5MS41MmQyNzcuNTA0ZDQ3NS4xMzVkMzQwLjk5MmQ0NzUuMTM1ZDQwMy40NTZkNDc1LjEzNWQ0NTguMjRkNDkxLjUyZDUxMy4wMjRkNTA3LjkwNGQ1NTMuOTg0ZDU0Mi43MmQ1OTQuOTQ0ZDU3Ny41MzZkNjE3Ljk4NGQ2MzAuMjcxZDY0MS4wMjRkNjgzLjAwOGQ2NDEuMDI0ZDc1NS43MTJkNjQxLjAyNGQ4MjguNDE1ZDYxNy45ODRkODgxLjY2NGQ1OTQuOTQ0ZDkzNC45MTJkNTUzLjk4NGQ5NjkuNzI4ZDUxMy4wMjRkMTAwNC41NDRkNDU4LjI0ZDEwMjAuOTI4ZDQwMy40NTZkMTAzNy4zMTFkMzQwLjk5MmQxMDM3LjMxMWQyNzcuNTA0ZDEwMzcuMzExZDIyMy4yMzJkMTAyMC45MjhkMTY4Ljk2ZDEwMDQuNTQ0ZDEyOGQ5NjkuNzI4ZDg3LjA0ZDkzNC45MTJkNjRkODgxLjY2NGQ0MC45NmQ4MjguNDE1ZDQwLjk2ZDc1NS43MTJoUjNkNjgxLjk4NFI0ZDY0MS4wMjRSNWQ0MC45NlI2ZDc4Mi4zMzZSN2QtMTMuMzEyUjhkNzQxLjM3NlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyNDZSMTJkNDAuOTZSMTNkNjgxLjk4NFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6MTMzb1IxZDEwMjRSMmFoUjNkMzQyLjAxNlI0ZDBSNWQwUjZkMFI3ZDBSOGQwUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTEzM1IxMmQwUjEzZDM0Mi4wMTZSMTRhaGc6MjQ1b1IxZDEwMjRSMmFkNDMwLjA4ZDc2MS44NTZkNDMwLjA4ZDY4Ni4wNzlkNDA3LjA0ZDY1MS4yNjRkMzg0ZDYxNi40NDhkMzQwLjk5MmQ2MTYuNDQ4ZDI5Ny45ODRkNjE2LjQ0OGQyNzQuOTQ0ZDY1MS4yNjRkMjUxLjkwNGQ2ODYuMDc5ZDI1MS45MDRkNzYxLjg1NmQyNTEuOTA0ZDgyOS40NGQyNzQuOTQ0ZDg2Mi43MmQyOTcuOTg0ZDg5NmQzNDAuOTkyZDg5NmQzODRkODk2ZDQwNy4wNGQ4NjIuNzJkNDMwLjA4ZDgyOS40NGQ0MzAuMDhkNzYxLjg1NmQxNTAuNTI4ZDM1Ny4zNzZkMTUwLjUyOGQzMzkuOTY3ZDE1OC4yMDhkMzIyLjA0OGQxNjUuODg4ZDMwNC4xMjdkMTgwLjIyNGQyODkuMjhkMTk0LjU2ZDI3NC40MzJkMjE0LjUyOGQyNjUuMjE2ZDIzNC40OTZkMjU2ZDI1OC4wNDhkMjU2ZDI4My42NDhkMjU2ZDMwMy42MTZkMjYxLjEyZDMyMy41ODRkMjY2LjI0ZDMzOS40NTZkMjcyLjM4NGQzNTUuMzI4ZDI3OC41MjhkMzY4LjEyOGQyODMuNjQ4ZDM4MC45MjhkMjg4Ljc2OGQzOTIuMTkyZDI4OC43NjhkNDA1LjUwNGQyODguNzY4ZDQxNC43MmQyODMuNjQ4ZDQyMy45MzZkMjc4LjUyOGQ0MzIuNjRkMjcyLjM4NGQ0NDEuMzQ0ZDI2Ni4yNGQ0NTEuMDcyZDI2MS4xMmQ0NjAuOGQyNTZkNDc2LjE2ZDI1NmQ0OTguNjg4ZDI1NmQ1MTUuMDcyZDI3Mi4zODRkNTMxLjQ1NmQyODguNzY4ZDUzMS40NTZkMzE0LjM2N2Q1MzEuNDU2ZDMzMS43NzVkNTIzLjc3NmQzNTAuMjA3ZDUxNi4wOTZkMzY4LjY0ZDUwMS43NmQzODIuOTc2ZDQ4Ny40MjRkMzk3LjMxMmQ0NjcuNDU2ZDQwNi41MjhkNDQ3LjQ4OGQ0MTUuNzQ0ZDQyMy45MzZkNDE1Ljc0NGQzOTguMzM2ZDQxNS43NDRkMzc4LjM2OGQ0MTAuNjI0ZDM1OC40ZDQwNS41MDRkMzQyLjUyOGQzOTkuMzZkMzI2LjY1NmQzOTMuMjE2ZDMxMy44NTZkMzg4LjA5NmQzMDEuMDU2ZDM4Mi45NzZkMjg5Ljc5MmQzODIuOTc2ZDI3NS40NTZkMzgyLjk3NmQyNjYuNzUyZDM4OC4wOTZkMjU4LjA0OGQzOTMuMjE2ZDI0OS4zNDRkMzk5LjM2ZDI0MC42NGQ0MDUuNTA0ZDIzMC45MTJkNDEwLjYyNGQyMjEuMTg0ZDQxNS43NDRkMjA1LjgyNGQ0MTUuNzQ0ZDE4My4yOTZkNDE1Ljc0NGQxNjYuOTEyZDM5OS4zNmQxNTAuNTI4ZDM4Mi45NzZkMTUwLjUyOGQzNTcuMzc2ZDQwLjk2ZDc1NS43MTJkNDAuOTZkNjgzLjAwOGQ2NGQ2MzAuMjcxZDg3LjA0ZDU3Ny41MzZkMTI4ZDU0Mi43MmQxNjguOTZkNTA3LjkwNGQyMjMuMjMyZDQ5MS41MmQyNzcuNTA0ZDQ3NS4xMzVkMzQwLjk5MmQ0NzUuMTM1ZDQwMy40NTZkNDc1LjEzNWQ0NTguMjRkNDkxLjUyZDUxMy4wMjRkNTA3LjkwNGQ1NTMuOTg0ZDU0Mi43MmQ1OTQuOTQ0ZDU3Ny41MzZkNjE3Ljk4NGQ2MzAuMjcxZDY0MS4wMjRkNjgzLjAwOGQ2NDEuMDI0ZDc1NS43MTJkNjQxLjAyNGQ4MjguNDE1ZDYxNy45ODRkODgxLjY2NGQ1OTQuOTQ0ZDkzNC45MTJkNTUzLjk4NGQ5NjkuNzI4ZDUxMy4wMjRkMTAwNC41NDRkNDU4LjI0ZDEwMjAuOTI4ZDQwMy40NTZkMTAzNy4zMTFkMzQwLjk5MmQxMDM3LjMxMWQyNzcuNTA0ZDEwMzcuMzExZDIyMy4yMzJkMTAyMC45MjhkMTY4Ljk2ZDEwMDQuNTQ0ZDEyOGQ5NjkuNzI4ZDg3LjA0ZDkzNC45MTJkNjRkODgxLjY2NGQ0MC45NmQ4MjguNDE1ZDQwLjk2ZDc1NS43MTJoUjNkNjgxLjk4NFI0ZDY0MS4wMjRSNWQ0MC45NlI2ZDc2OFI3ZC0xMy4zMTJSOGQ3MjcuMDRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjQ1UjEyZDQwLjk2UjEzZDY4MS45ODRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzoxMzJvUjFkMTAyNFIyYWhSM2QzNDIuMDE2UjRkMFI1ZDBSNmQwUjdkMFI4ZDBSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTMyUjEyZDBSMTNkMzQyLjAxNlIxNGFoZzoyNDRvUjFkMTAyNFIyYWQ0MzAuMDhkNzYxLjg1NmQ0MzAuMDhkNjg2LjA3OWQ0MDcuMDRkNjUxLjI2NGQzODRkNjE2LjQ0OGQzNDAuOTkyZDYxNi40NDhkMjk3Ljk4NGQ2MTYuNDQ4ZDI3NC45NDRkNjUxLjI2NGQyNTEuOTA0ZDY4Ni4wNzlkMjUxLjkwNGQ3NjEuODU2ZDI1MS45MDRkODI5LjQ0ZDI3NC45NDRkODYyLjcyZDI5Ny45ODRkODk2ZDM0MC45OTJkODk2ZDM4NGQ4OTZkNDA3LjA0ZDg2Mi43MmQ0MzAuMDhkODI5LjQ0ZDQzMC4wOGQ3NjEuODU2ZDE1NS42NDhkMzc0Ljc4NGQxNTUuNjQ4ZDM2OC42NGQxNTguNzJkMzU5LjkzNmQxNjEuNzkyZDM1MS4yMzJkMTcxLjAwOGQzMzkuOTY3ZDE4MC4yMjRkMzI4LjcwM2QxOTYuNjA4ZDMxMi44MzJkMjEyLjk5MmQyOTYuOTZkMjM5LjYxNmQyNzYuNDhkMjYxLjEyZDI1OS4wNzJkMjc1LjQ1NmQyNDguODMyZDI4OS43OTJkMjM4LjU5MWQzMDAuNTQ0ZDIzMi45NmQzMTEuMjk2ZDIyNy4zMjdkMzIwLjUxMmQyMjUuNzkyZDMyOS43MjhkMjI0LjI1NWQzNDAuOTkyZDIyNC4yNTVkMzUyLjI1NmQyMjQuMjU1ZDM2MS40NzJkMjI1Ljc5MmQzNzAuNjg4ZDIyNy4zMjdkMzgxLjQ0ZDIzMi45NmQzOTIuMTkyZDIzOC41OTFkNDA2LjUyOGQyNDguODMyZDQyMC44NjRkMjU5LjA3MmQ0NDIuMzY4ZDI3Ni40OGQ0NjguOTkyZDI5Ni45NmQ0ODUuMzc2ZDMxMi44MzJkNTAxLjc2ZDMyOC43MDNkNTEwLjk3NmQzMzkuOTY3ZDUyMC4xOTJkMzUxLjIzMmQ1MjMuMjY0ZDM1OS45MzZkNTI2LjMzNmQzNjguNjRkNTI2LjMzNmQzNzQuNzg0ZDUyNi4zMzZkMzk2LjI4OGQ1MTEuNDg4ZDQxNS43NDRkNDk2LjY0ZDQzNS4xOTlkNDY4Ljk5MmQ0MzUuMTk5ZDQ2MC44ZDQzNS4xOTlkNDUwLjA0OGQ0MzEuNjE2ZDQzOS4yOTZkNDI4LjAzMmQ0MjQuOTZkNDE4LjMwNGQ0MTAuNjI0ZDQwOC41NzZkMzkwLjE0NGQzOTIuNzAzZDM2OS42NjRkMzc2LjgzMmQzNDAuOTkyZDM1Mi4yNTZkMzEyLjMyZDM3Ni44MzJkMjkxLjg0ZDM5Mi43MDNkMjcxLjM2ZDQwOC41NzZkMjU3LjAyNGQ0MTguMzA0ZDI0Mi42ODhkNDI4LjAzMmQyMzEuOTM2ZDQzMS42MTZkMjIxLjE4NGQ0MzUuMTk5ZDIxMi45OTJkNDM1LjE5OWQxODUuMzQ0ZDQzNS4xOTlkMTcwLjQ5NmQ0MTUuNzQ0ZDE1NS42NDhkMzk2LjI4OGQxNTUuNjQ4ZDM3NC43ODRkNDAuOTZkNzU1LjcxMmQ0MC45NmQ2ODMuMDA4ZDY0ZDYzMC4yNzFkODcuMDRkNTc3LjUzNmQxMjhkNTQyLjcyZDE2OC45NmQ1MDcuOTA0ZDIyMy4yMzJkNDkxLjUyZDI3Ny41MDRkNDc1LjEzNWQzNDAuOTkyZDQ3NS4xMzVkNDAzLjQ1NmQ0NzUuMTM1ZDQ1OC4yNGQ0OTEuNTJkNTEzLjAyNGQ1MDcuOTA0ZDU1My45ODRkNTQyLjcyZDU5NC45NDRkNTc3LjUzNmQ2MTcuOTg0ZDYzMC4yNzFkNjQxLjAyNGQ2ODMuMDA4ZDY0MS4wMjRkNzU1LjcxMmQ2NDEuMDI0ZDgyOC40MTVkNjE3Ljk4NGQ4ODEuNjY0ZDU5NC45NDRkOTM0LjkxMmQ1NTMuOTg0ZDk2OS43MjhkNTEzLjAyNGQxMDA0LjU0NGQ0NTguMjRkMTAyMC45MjhkNDAzLjQ1NmQxMDM3LjMxMWQzNDAuOTkyZDEwMzcuMzExZDI3Ny41MDRkMTAzNy4zMTFkMjIzLjIzMmQxMDIwLjkyOGQxNjguOTZkMTAwNC41NDRkMTI4ZDk2OS43MjhkODcuMDRkOTM0LjkxMmQ2NGQ4ODEuNjY0ZDQwLjk2ZDgyOC40MTVkNDAuOTZkNzU1LjcxMmhSM2Q2ODEuOTg0UjRkNjQxLjAyNFI1ZDQwLjk2UjZkNzk5Ljc0NFI3ZC0xMy4zMTJSOGQ3NTguNzg0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTI0NFIxMmQ0MC45NlIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6MTMxb1IxZDEwMjRSMmFoUjNkMzQyLjAxNlI0ZDBSNWQwUjZkMFI3ZDBSOGQwUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTEzMVIxMmQwUjEzZDM0Mi4wMTZSMTRhaGc6MjQzb1IxZDEwMjRSMmFkMzY5LjY2NGQyNTcuMDI0ZDM5NS4yNjRkMjM0LjQ5NWQ0MDguNTc2ZDIyOC44NjRkNDIxLjg4OGQyMjMuMjMxZDQzNy4yNDhkMjIzLjIzMWQ0NDcuNDg4ZDIyMy4yMzFkNDU5LjI2NGQyMjcuODRkNDcxLjA0ZDIzMi40NDdkNDgwLjI1NmQyNDEuMTUxZDQ4OS40NzJkMjQ5Ljg1NmQ0OTUuNjE2ZDI2MS4xMmQ1MDEuNzZkMjcyLjM4NGQ1MDEuNzZkMjg1LjY5NmQ1MDEuNzZkMzE2LjQxNWQ0NzMuMDg4ZDMzOS45NjdkMzg4LjA5NmQ0MTIuNjcyZDM3NC43ODRkNDIzLjkzNmQzNjUuNTY4ZDQzMC41OTJkMzU2LjM1MmQ0MzcuMjQ3ZDM0OC42NzJkNDQwLjgzMmQzNDAuOTkyZDQ0NC40MTVkMzM0LjMzNmQ0NDUuNDM5ZDMyNy42OGQ0NDYuNDYzZDMyMC41MTJkNDQ2LjQ2M2QzMDkuMjQ4ZDQ0Ni40NjNkMjk3Ljk4NGQ0NDEuODU2ZDI4Ni43MmQ0MzcuMjQ3ZDI3Ny41MDRkNDI4LjU0NGQyNjguMjg4ZDQxOS44NGQyNjIuMTQ0ZDQwOC41NzZkMjU2ZDM5Ny4zMTJkMjU2ZDM4NGQyNTZkMzUzLjI4ZDI4NC42NzJkMzI5LjcyN2QzNjkuNjY0ZDI1Ny4wMjRkNDMwLjA4ZDc2MS44NTZkNDMwLjA4ZDY4Ni4wNzlkNDA3LjA0ZDY1MS4yNjRkMzg0ZDYxNi40NDhkMzQwLjk5MmQ2MTYuNDQ4ZDI5Ny45ODRkNjE2LjQ0OGQyNzQuOTQ0ZDY1MS4yNjRkMjUxLjkwNGQ2ODYuMDc5ZDI1MS45MDRkNzYxLjg1NmQyNTEuOTA0ZDgyOS40NGQyNzQuOTQ0ZDg2Mi43MmQyOTcuOTg0ZDg5NmQzNDAuOTkyZDg5NmQzODRkODk2ZDQwNy4wNGQ4NjIuNzJkNDMwLjA4ZDgyOS40NGQ0MzAuMDhkNzYxLjg1NmQ0MC45NmQ3NTUuNzEyZDQwLjk2ZDY4My4wMDhkNjRkNjMwLjI3MWQ4Ny4wNGQ1NzcuNTM2ZDEyOGQ1NDIuNzJkMTY4Ljk2ZDUwNy45MDRkMjIzLjIzMmQ0OTEuNTJkMjc3LjUwNGQ0NzUuMTM1ZDM0MC45OTJkNDc1LjEzNWQ0MDMuNDU2ZDQ3NS4xMzVkNDU4LjI0ZDQ5MS41MmQ1MTMuMDI0ZDUwNy45MDRkNTUzLjk4NGQ1NDIuNzJkNTk0Ljk0NGQ1NzcuNTM2ZDYxNy45ODRkNjMwLjI3MWQ2NDEuMDI0ZDY4My4wMDhkNjQxLjAyNGQ3NTUuNzEyZDY0MS4wMjRkODI4LjQxNWQ2MTcuOTg0ZDg4MS42NjRkNTk0Ljk0NGQ5MzQuOTEyZDU1My45ODRkOTY5LjcyOGQ1MTMuMDI0ZDEwMDQuNTQ0ZDQ1OC4yNGQxMDIwLjkyOGQ0MDMuNDU2ZDEwMzcuMzExZDM0MC45OTJkMTAzNy4zMTFkMjc3LjUwNGQxMDM3LjMxMWQyMjMuMjMyZDEwMjAuOTI4ZDE2OC45NmQxMDA0LjU0NGQxMjhkOTY5LjcyOGQ4Ny4wNGQ5MzQuOTEyZDY0ZDg4MS42NjRkNDAuOTZkODI4LjQxNWQ0MC45NmQ3NTUuNzEyaFIzZDY4MS45ODRSNGQ2NDEuMDI0UjVkNDAuOTZSNmQ4MDAuNzY4UjdkLTEzLjMxMlI4ZDc1OS44MDhSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjQzUjEyZDQwLjk2UjEzZDY4MS45ODRSMTRhaTFpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6MTMwb1IxZDEwMjRSMmFoUjNkMzQyLjAxNlI0ZDBSNWQwUjZkMFI3ZDBSOGQwUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTEzMFIxMmQwUjEzZDM0Mi4wMTZSMTRhaGc6MjQyb1IxZDEwMjRSMmFkMjA4Ljg5NmQzMzkuOTY3ZDE4MC4yMjRkMzE2LjQxNWQxODAuMjI0ZDI4NS42OTZkMTgwLjIyNGQyNzIuMzg0ZDE4Ni4zNjhkMjYxLjEyZDE5Mi41MTJkMjQ5Ljg1NmQyMDEuNzI4ZDI0MS4xNTFkMjEwLjk0NGQyMzIuNDQ3ZDIyMi4yMDhkMjI3Ljg0ZDIzMy40NzJkMjIzLjIzMWQyNDQuNzM2ZDIyMy4yMzFkMjUxLjkwNGQyMjMuMjMxZDI1OC41NmQyMjQuMjU1ZDI2NS4yMTZkMjI1LjI3OWQyNzIuODk2ZDIyOC44NjRkMjgwLjU3NmQyMzIuNDQ3ZDI4OS43OTJkMjM5LjEwM2QyOTkuMDA4ZDI0NS43NmQzMTIuMzJkMjU3LjAyNGQzOTcuMzEyZDMyOS43MjdkNDI1Ljk4NGQzNTMuMjhkNDI1Ljk4NGQzODRkNDI1Ljk4NGQzOTcuMzEyZDQxOS44NGQ0MDguNTc2ZDQxMy42OTZkNDE5Ljg0ZDQwNC40OGQ0MjguNTQ0ZDM5NS4yNjRkNDM3LjI0N2QzODMuNDg4ZDQ0MS44NTZkMzcxLjcxMmQ0NDYuNDYzZDM2MS40NzJkNDQ2LjQ2M2QzNDYuMTEyZDQ0Ni40NjNkMzMyLjhkNDQwLjgzMmQzMTkuNDg4ZDQzNS4xOTlkMjkzLjg4OGQ0MTIuNjcyZDIwOC44OTZkMzM5Ljk2N2Q0MzAuMDhkNzYxLjg1NmQ0MzAuMDhkNjg2LjA3OWQ0MDcuMDRkNjUxLjI2NGQzODRkNjE2LjQ0OGQzNDAuOTkyZDYxNi40NDhkMjk3Ljk4NGQ2MTYuNDQ4ZDI3NC45NDRkNjUxLjI2NGQyNTEuOTA0ZDY4Ni4wNzlkMjUxLjkwNGQ3NjEuODU2ZDI1MS45MDRkODI5LjQ0ZDI3NC45NDRkODYyLjcyZDI5Ny45ODRkODk2ZDM0MC45OTJkODk2ZDM4NGQ4OTZkNDA3LjA0ZDg2Mi43MmQ0MzAuMDhkODI5LjQ0ZDQzMC4wOGQ3NjEuODU2ZDQwLjk2ZDc1NS43MTJkNDAuOTZkNjgzLjAwOGQ2NGQ2MzAuMjcxZDg3LjA0ZDU3Ny41MzZkMTI4ZDU0Mi43MmQxNjguOTZkNTA3LjkwNGQyMjMuMjMyZDQ5MS41MmQyNzcuNTA0ZDQ3NS4xMzVkMzQwLjk5MmQ0NzUuMTM1ZDQwMy40NTZkNDc1LjEzNWQ0NTguMjRkNDkxLjUyZDUxMy4wMjRkNTA3LjkwNGQ1NTMuOTg0ZDU0Mi43MmQ1OTQuOTQ0ZDU3Ny41MzZkNjE3Ljk4NGQ2MzAuMjcxZDY0MS4wMjRkNjgzLjAwOGQ2NDEuMDI0ZDc1NS43MTJkNjQxLjAyNGQ4MjguNDE1ZDYxNy45ODRkODgxLjY2NGQ1OTQuOTQ0ZDkzNC45MTJkNTUzLjk4NGQ5NjkuNzI4ZDUxMy4wMjRkMTAwNC41NDRkNDU4LjI0ZDEwMjAuOTI4ZDQwMy40NTZkMTAzNy4zMTFkMzQwLjk5MmQxMDM3LjMxMWQyNzcuNTA0ZDEwMzcuMzExZDIyMy4yMzJkMTAyMC45MjhkMTY4Ljk2ZDEwMDQuNTQ0ZDEyOGQ5NjkuNzI4ZDg3LjA0ZDkzNC45MTJkNjRkODgxLjY2NGQ0MC45NmQ4MjguNDE1ZDQwLjk2ZDc1NS43MTJoUjNkNjgxLjk4NFI0ZDY0MS4wMjRSNWQ0MC45NlI2ZDgwMC43NjhSN2QtMTMuMzEyUjhkNzU5LjgwOFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyNDJSMTJkNDAuOTZSMTNkNjgxLjk4NFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpMmkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzoxMjlvUjFkMTAyNFIyYWhSM2QzNDIuMDE2UjRkMFI1ZDBSNmQwUjdkMFI4ZDBSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTI5UjEyZDBSMTNkMzQyLjAxNlIxNGFoZzoyNDFvUjFkMTAyNFIyYWQxNTAuNTI4ZDM1Ny4zNzZkMTUwLjUyOGQzMzkuOTY3ZDE1OC4yMDhkMzIyLjA0OGQxNjUuODg4ZDMwNC4xMjdkMTgwLjIyNGQyODkuMjhkMTk0LjU2ZDI3NC40MzJkMjE0LjUyOGQyNjUuMjE2ZDIzNC40OTZkMjU2ZDI1OC4wNDhkMjU2ZDI4My42NDhkMjU2ZDMwMy42MTZkMjYxLjEyZDMyMy41ODRkMjY2LjI0ZDMzOS40NTZkMjcyLjM4NGQzNTUuMzI4ZDI3OC41MjhkMzY4LjEyOGQyODMuNjQ4ZDM4MC45MjhkMjg4Ljc2OGQzOTIuMTkyZDI4OC43NjhkNDA1LjUwNGQyODguNzY4ZDQxNC43MmQyODMuNjQ4ZDQyMy45MzZkMjc4LjUyOGQ0MzIuNjRkMjcyLjM4NGQ0NDEuMzQ0ZDI2Ni4yNGQ0NTEuMDcyZDI2MS4xMmQ0NjAuOGQyNTZkNDc2LjE2ZDI1NmQ0OTguNjg4ZDI1NmQ1MTUuMDcyZDI3Mi4zODRkNTMxLjQ1NmQyODguNzY4ZDUzMS40NTZkMzE0LjM2N2Q1MzEuNDU2ZDMzMS43NzVkNTIzLjc3NmQzNTAuMjA3ZDUxNi4wOTZkMzY4LjY0ZDUwMS43NmQzODIuOTc2ZDQ4Ny40MjRkMzk3LjMxMmQ0NjcuNDU2ZDQwNi41MjhkNDQ3LjQ4OGQ0MTUuNzQ0ZDQyMy45MzZkNDE1Ljc0NGQzOTguMzM2ZDQxNS43NDRkMzc4LjM2OGQ0MTAuNjI0ZDM1OC40ZDQwNS41MDRkMzQyLjUyOGQzOTkuMzZkMzI2LjY1NmQzOTMuMjE2ZDMxMy44NTZkMzg4LjA5NmQzMDEuMDU2ZDM4Mi45NzZkMjg5Ljc5MmQzODIuOTc2ZDI3NS40NTZkMzgyLjk3NmQyNjYuNzUyZDM4OC4wOTZkMjU4LjA0OGQzOTMuMjE2ZDI0OS4zNDRkMzk5LjM2ZDI0MC42NGQ0MDUuNTA0ZDIzMC45MTJkNDEwLjYyNGQyMjEuMTg0ZDQxNS43NDRkMjA1LjgyNGQ0MTUuNzQ0ZDE4My4yOTZkNDE1Ljc0NGQxNjYuOTEyZDM5OS4zNmQxNTAuNTI4ZDM4Mi45NzZkMTUwLjUyOGQzNTcuMzc2ZDQxOC44MTZkNzMxLjEzNmQ0MTguODE2ZDY0MS4wMjRkMzQwLjk5MmQ2NDEuMDI0ZDMwMi4wOGQ2NDEuMDI0ZDI4Mi42MjRkNjY5LjE4NGQyNjMuMTY4ZDY5Ny4zNDRkMjYzLjE2OGQ3NDUuNDcyZDI2My4xNjhkOTMyLjg2NGQyNjMuMTY4ZDk4Ny4xMzZkMjMzLjQ3MmQxMDEyLjIyNGQyMDMuNzc2ZDEwMzcuMzExZDE1Ny42OTZkMTAzNy4zMTFkMTExLjYxNmQxMDM3LjMxMWQ4MS45MmQxMDEyLjIyNGQ1Mi4yMjRkOTg3LjEzNmQ1Mi4yMjRkOTMyLjg2NGQ1Mi4yMjRkNTc1LjQ4OGQ1Mi4yMjRkNTI2LjMzNmQ3Ni44ZDUwMC43MzZkMTAxLjM3NmQ0NzUuMTM1ZDE1My42ZDQ3NS4xMzVkMjAwLjcwNGQ0NzUuMTM1ZDIyMS42OTZkNTAwLjczNmQyNDIuNjg4ZDUyNi4zMzZkMjQ3LjgwOGQ1NzQuNDY0ZDI0OS44NTZkNTc0LjQ2NGQyNzYuNDhkNTI2LjMzNmQzMTkuNDg4ZDUwMC43MzZkMzYyLjQ5NmQ0NzUuMTM1ZDQyMy45MzZkNDc1LjEzNWQ0NzkuMjMyZDQ3NS4xMzVkNTE4LjE0NGQ0OTEuMDA4ZDU1Ny4wNTZkNTA2Ljg4ZDU4MS42MzJkNTM0LjUyOGQ2MDYuMjA4ZDU2Mi4xNzVkNjE3Ljk4NGQ2MDAuMDY0ZDYyOS43NmQ2MzcuOTUyZDYyOS43NmQ2ODEuOTgzZDYyOS43NmQ5MzIuODY0ZDYyOS43NmQ5ODcuMTM2ZDYwMC4wNjRkMTAxMi4yMjRkNTcwLjM2OGQxMDM3LjMxMWQ1MjQuMjg4ZDEwMzcuMzExZDQ3OC4yMDhkMTAzNy4zMTFkNDQ4LjUxMmQxMDEyLjIyNGQ0MTguODE2ZDk4Ny4xMzZkNDE4LjgxNmQ5MzIuODY0ZDQxOC44MTZkNzMxLjEzNmhSM2Q2ODEuOTg0UjRkNjI5Ljc2UjVkNTIuMjI0UjZkNzY4UjdkLTEzLjMxMlI4ZDcxNS43NzZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjQxUjEyZDUyLjIyNFIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTJoZzoxMjhvUjFkMTAyNFIyYWhSM2QzNDIuMDE2UjRkMFI1ZDBSNmQwUjdkMFI4ZDBSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTI4UjEyZDBSMTNkMzQyLjAxNlIxNGFoZzoyNDBvUjFkMTAyNFIyYWQ0MzAuMDhkNzYxLjg1NmQ0MzAuMDhkNjg2LjA3OWQ0MDcuMDRkNjUxLjI2NGQzODRkNjE2LjQ0OGQzNDAuOTkyZDYxNi40NDhkMjk3Ljk4NGQ2MTYuNDQ4ZDI3NC45NDRkNjUxLjI2NGQyNTEuOTA0ZDY4Ni4wNzlkMjUxLjkwNGQ3NjEuODU2ZDI1MS45MDRkODI5LjQ0ZDI3NC45NDRkODYyLjcyZDI5Ny45ODRkODk2ZDM0MC45OTJkODk2ZDM4NGQ4OTZkNDA3LjA0ZDg2Mi43MmQ0MzAuMDhkODI5LjQ0ZDQzMC4wOGQ3NjEuODU2ZDQ2My44NzJkMjQyLjY4OGQ0ODQuMzUyZDIzMi40NDdkNDk3LjE1MmQyMjcuODRkNTA5Ljk1MmQyMjMuMjMxZDUyMS4yMTZkMjIzLjIzMWQ1MzguNjI0ZDIyMy4yMzFkNTUwLjRkMjM1LjAwOGQ1NjIuMTc2ZDI0Ni43ODRkNTYyLjE3NmQyNjQuMTkyZDU2Mi4xNzZkMjc4LjUyOGQ1NTQuNDk2ZDI4Ny4yMzJkNTQ2LjgxNmQyOTUuOTM2ZDUyNS4zMTJkMzA3LjE5OWQ0NzYuMTZkMzMwLjc1MWQ1MDEuNzZkMzQ4LjE1OWQ1MzAuOTQ0ZDM4My40ODdkNTYwLjEyOGQ0MTguODE2ZDU4NC43MDRkNDY0Ljg5NWQ2MDkuMjhkNTEwLjk3NmQ2MjUuMTUyZDU2NS4yNDhkNjQxLjAyNGQ2MTkuNTJkNjQxLjAyNGQ2NzMuNzkxZDY0MS4wMjRkNzc4LjI0ZDYxNy45ODRkODQ3Ljg3MmQ1OTQuOTQ0ZDkxNy41MDRkNTUzLjk4NGQ5NjBkNTEzLjAyNGQxMDAyLjQ5NmQ0NTguMjRkMTAxOS45MDRkNDAzLjQ1NmQxMDM3LjMxMWQzNDAuOTkyZDEwMzcuMzExZDI3Ny41MDRkMTAzNy4zMTFkMjIzLjIzMmQxMDIwLjkyOGQxNjguOTZkMTAwNC41NDRkMTI4ZDk2OS43MjhkODcuMDRkOTM0LjkxMmQ2NGQ4ODEuNjY0ZDQwLjk2ZDgyOC40MTVkNDAuOTZkNzU1LjcxMmQ0MC45NmQ2ODMuMDA4ZDY0LjUxMmQ2MzEuMjk2ZDg4LjA2NGQ1NzkuNTg0ZDEyNC40MTZkNTQ2LjMwNGQxNjAuNzY4ZDUxMy4wMjRkMjA0LjI4OGQ0OTcuMTUyZDI0Ny44MDhkNDgxLjI4ZDI4OC43NjhkNDgxLjI4ZDMyMS41MzZkNDgxLjI4ZDM0Ny4xMzZkNDg2LjkxMmQzNzIuNzM2ZDQ5Mi41NDRkMzk0LjI0ZDUwMS43NmQzODguMDk2ZDQ3My4wODdkMzY0LjAzMmQ0NTEuMDcyZDMzOS45NjhkNDI5LjA1NmQzMDkuMjQ4ZDQxMS42NDhkMjIyLjIwOGQ0NTQuNjU1ZDIwMS43MjhkNDY0Ljg5NWQxODguOTI4ZDQ2OS41MDRkMTc2LjEyOGQ0NzQuMTExZDE2NC44NjRkNDc0LjExMWQxNDcuNDU2ZDQ3NC4xMTFkMTM1LjY4ZDQ2Mi4zMzZkMTIzLjkwNGQ0NTAuNTU5ZDEyMy45MDRkNDMzLjE1MmQxMjMuOTA0ZDQxOC44MTZkMTMxLjU4NGQ0MTAuMTExZDEzOS4yNjRkNDAxLjQwOGQxNjAuNzY4ZDM5MC4xNDRkMjAwLjcwNGQzNzAuNjg4ZDE5OS42OGQzNjguNjRkMTQ5LjUwNGQzNjIuNDk2ZDEzMy4xMmQzNDUuNmQxMTYuNzM2ZDMyOC43MDNkMTE2LjczNmQzMDIuMDhkMTE2LjczNmQyNzcuNTA0ZDEzOS43NzZkMjYxLjYzMWQxNjIuODE2ZDI0NS43NmQxOTguNjU2ZDI0NS43NmQyMjguMzUyZDI0NS43NmQyNzkuMDRkMjUxLjM5MWQzMjkuNzI4ZDI1Ny4wMjRkMzg3LjA3MmQyNzkuNTUyZDQ2My44NzJkMjQyLjY4OGhSM2Q2ODEuOTg0UjRkNjQxLjAyNFI1ZDQwLjk2UjZkODAwLjc2OFI3ZC0xMy4zMTJSOGQ3NTkuODA4UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTI0MFIxMmQ0MC45NlIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpMmkyaTNpM2kzaTNpM2kzaTJoZzoxMjdvUjFkMTAyNFIyYWhSM2QzNDIuMDE2UjRkMFI1ZDBSNmQwUjdkMFI4ZDBSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTI3UjEyZDBSMTNkMzQyLjAxNlIxNGFoZzoyMzlvUjFkMTAyNFIyYWQxOTAuNDY0ZDMzNC44NDdkMTkwLjQ2NGQyOTUuOTM2ZDIxNy42ZDI2OC43OTlkMjQ0LjczNmQyNDEuNjY0ZDI4My42NDhkMjQxLjY2NGQzMjIuNTZkMjQxLjY2NGQzNDkuNjk2ZDI2OC43OTlkMzc2LjgzMmQyOTUuOTM2ZDM3Ni44MzJkMzM0Ljg0N2QzNzYuODMyZDM3My43NmQzNDkuNjk2ZDQwMC44OTVkMzIyLjU2ZDQyOC4wMzJkMjgzLjY0OGQ0MjguMDMyZDI0NC43MzZkNDI4LjAzMmQyMTcuNmQ0MDAuODk1ZDE5MC40NjRkMzczLjc2ZDE5MC40NjRkMzM0Ljg0N2QtNTUuMjk2ZDMzNC44NDdkLTU1LjI5NmQyOTUuOTM2ZC0yOC4xNmQyNjguNzk5ZC0xLjAyNGQyNDEuNjY0ZDM3Ljg4OGQyNDEuNjY0ZDc2LjhkMjQxLjY2NGQxMDMuOTM2ZDI2OC43OTlkMTMxLjA3MmQyOTUuOTM2ZDEzMS4wNzJkMzM0Ljg0N2QxMzEuMDcyZDM3My43NmQxMDMuOTM2ZDQwMC44OTVkNzYuOGQ0MjguMDMyZDM3Ljg4OGQ0MjguMDMyZC0xLjAyNGQ0MjguMDMyZC0yOC4xNmQ0MDAuODk1ZC01NS4yOTZkMzczLjc2ZC01NS4yOTZkMzM0Ljg0N2Q1NS4yOTZkNTc5LjU4NGQ1NS4yOTZkNTI1LjMxMmQ4NC45OTJkNTAwLjIyM2QxMTQuNjg4ZDQ3NS4xMzVkMTYwLjc2OGQ0NzUuMTM1ZDIwNi44NDhkNDc1LjEzNWQyMzYuNTQ0ZDUwMC4yMjNkMjY2LjI0ZDUyNS4zMTJkMjY2LjI0ZDU3OS41ODRkMjY2LjI0ZDkzMi44NjRkMjY2LjI0ZDk4Ny4xMzZkMjM2LjU0NGQxMDEyLjIyNGQyMDYuODQ4ZDEwMzcuMzExZDE2MC43NjhkMTAzNy4zMTFkMTE0LjY4OGQxMDM3LjMxMWQ4NC45OTJkMTAxMi4yMjRkNTUuMjk2ZDk4Ny4xMzZkNTUuMjk2ZDkzMi44NjRkNTUuMjk2ZDU3OS41ODRoUjNkMzIxLjUzNlI0ZDM3Ni44MzJSNWQtNTUuMjk2UjZkNzgyLjMzNlI3ZC0xMy4zMTJSOGQ4MzcuNjMyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTIzOVIxMmQtNTUuMjk2UjEzZDMyMS41MzZSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjEyNm9SMWQxMDI0UjJhZDQxLjk4NGQ3NzMuMTJkNDEuOTg0ZDc0Ny41MmQ1Mi4yMjRkNzIyLjQzMmQ2Mi40NjRkNjk3LjM0NGQ4MS40MDhkNjc3LjM3NmQxMDAuMzUyZDY1Ny40MDhkMTI2Ljk3NmQ2NDQuNjA4ZDE1My42ZDYzMS44MDhkMTg2LjM2OGQ2MzEuODA4ZDIxOS4xMzZkNjMxLjgwOGQyNTEuMzkyZDY0Mi41NmQyODMuNjQ4ZDY1My4zMTJkMzEzLjM0NGQ2NjYuNjI0ZDM0My4wNGQ2NzkuOTM1ZDM2OS4xNTJkNjkwLjY4OGQzOTUuMjY0ZDcwMS40NGQ0MTQuNzJkNzAxLjQ0ZDQzNi4yMjRkNzAxLjQ0ZDQ1MC41NmQ2OTEuNzEyZDQ2NC44OTZkNjgxLjk4M2Q0NzYuNjcyZDY3MC43MmQ0ODguNDQ4ZDY1OS40NTZkNTAwLjIyNGQ2NDkuNzI4ZDUxMmQ2NDBkNTI4LjM4NGQ2NDBkNTUyLjk2ZDY0MGQ1NjIuNjg4ZDY1Ni4zODRkNTcyLjQxNmQ2NzIuNzY4ZDU3Mi40MTZkNjk1LjI5NmQ1NzIuNDE2ZDcyMC44OTZkNTYyLjE3NmQ3NDUuOTgzZDU1MS45MzZkNzcxLjA3MmQ1MzIuOTkyZDc5MS4wNGQ1MTQuMDQ4ZDgxMS4wMDhkNDg3LjQyNGQ4MjMuODA4ZDQ2MC44ZDgzNi42MDhkNDI4LjAzMmQ4MzYuNjA4ZDM5NS4yNjRkODM2LjYwOGQzNjMuMDA4ZDgyNS44NTZkMzMwLjc1MmQ4MTUuMTA0ZDMwMS4wNTZkODAxLjc5MmQyNzEuMzZkNzg4LjQ4ZDI0NS4yNDhkNzc3LjcyOGQyMTkuMTM2ZDc2Ni45NzZkMTk5LjY4ZDc2Ni45NzZkMTc4LjE3NmQ3NjYuOTc2ZDE2My44NGQ3NzYuNzA0ZDE0OS41MDRkNzg2LjQzMmQxMzcuNzI4ZDc5Ny42OTZkMTI1Ljk1MmQ4MDguOTZkMTE0LjE3NmQ4MTguNjg4ZDEwMi40ZDgyOC40MTVkODYuMDE2ZDgyOC40MTVkNjEuNDRkODI4LjQxNWQ1MS43MTJkODEyLjAzMWQ0MS45ODRkNzk1LjY0OGQ0MS45ODRkNzczLjEyaFIzZDYxNC40UjRkNTcyLjQxNlI1ZDQxLjk4NFI2ZDM5Mi4xOTJSN2QxODcuMzkyUjhkMzUwLjIwOFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxMjZSMTJkNDEuOTg0UjEzZDYxNC40UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzoyMzhvUjFkMTAyNFIyYWQtMjQuNTc2ZDM3NC43ODRkLTI0LjU3NmQzNjguNjRkLTIxLjUwNGQzNTkuOTM2ZC0xOC40MzJkMzUxLjIzMmQtOS4yMTZkMzM5Ljk2N2QwZDMyOC43MDNkMTYuMzg0ZDMxMi44MzJkMzIuNzY4ZDI5Ni45NmQ1OS4zOTJkMjc2LjQ4ZDgwLjg5NmQyNTkuMDcyZDk1LjIzMmQyNDguODMyZDEwOS41NjhkMjM4LjU5MWQxMjAuMzJkMjMyLjk2ZDEzMS4wNzJkMjI3LjMyN2QxNDAuMjg4ZDIyNS43OTJkMTQ5LjUwNGQyMjQuMjU1ZDE2MC43NjhkMjI0LjI1NWQxNzIuMDMyZDIyNC4yNTVkMTgxLjI0OGQyMjUuNzkyZDE5MC40NjRkMjI3LjMyN2QyMDEuMjE2ZDIzMi45NmQyMTEuOTY4ZDIzOC41OTFkMjI2LjMwNGQyNDguODMyZDI0MC42NGQyNTkuMDcyZDI2Mi4xNDRkMjc2LjQ4ZDI4OC43NjhkMjk2Ljk2ZDMwNS4xNTJkMzEyLjgzMmQzMjEuNTM2ZDMyOC43MDNkMzMwLjc1MmQzMzkuOTY3ZDMzOS45NjhkMzUxLjIzMmQzNDMuMDRkMzU5LjkzNmQzNDYuMTEyZDM2OC42NGQzNDYuMTEyZDM3NC43ODRkMzQ2LjExMmQzOTYuMjg4ZDMzMS4yNjRkNDE1Ljc0NGQzMTYuNDE2ZDQzNS4xOTlkMjg4Ljc2OGQ0MzUuMTk5ZDI4MC41NzZkNDM1LjE5OWQyNjkuODI0ZDQzMS42MTZkMjU5LjA3MmQ0MjguMDMyZDI0NC43MzZkNDE4LjMwNGQyMzAuNGQ0MDguNTc2ZDIwOS45MmQzOTIuNzAzZDE4OS40NGQzNzYuODMyZDE2MC43NjhkMzUyLjI1NmQxMzIuMDk2ZDM3Ni44MzJkMTExLjYxNmQzOTIuNzAzZDkxLjEzNmQ0MDguNTc2ZDc2LjhkNDE4LjMwNGQ2Mi40NjRkNDI4LjAzMmQ1MS43MTJkNDMxLjYxNmQ0MC45NmQ0MzUuMTk5ZDMyLjc2OGQ0MzUuMTk5ZDUuMTJkNDM1LjE5OWQtOS43MjhkNDE1Ljc0NGQtMjQuNTc2ZDM5Ni4yODhkLTI0LjU3NmQzNzQuNzg0ZDU1LjI5NmQ1NzkuNTg0ZDU1LjI5NmQ1MjUuMzEyZDg0Ljk5MmQ1MDAuMjIzZDExNC42ODhkNDc1LjEzNWQxNjAuNzY4ZDQ3NS4xMzVkMjA2Ljg0OGQ0NzUuMTM1ZDIzNi41NDRkNTAwLjIyM2QyNjYuMjRkNTI1LjMxMmQyNjYuMjRkNTc5LjU4NGQyNjYuMjRkOTMyLjg2NGQyNjYuMjRkOTg3LjEzNmQyMzYuNTQ0ZDEwMTIuMjI0ZDIwNi44NDhkMTAzNy4zMTFkMTYwLjc2OGQxMDM3LjMxMWQxMTQuNjg4ZDEwMzcuMzExZDg0Ljk5MmQxMDEyLjIyNGQ1NS4yOTZkOTg3LjEzNmQ1NS4yOTZkOTMyLjg2NGQ1NS4yOTZkNTc5LjU4NGhSM2QzMjEuNTM2UjRkMzQ2LjExMlI1ZC0yNC41NzZSNmQ3OTkuNzQ0UjdkLTEzLjMxMlI4ZDgyNC4zMlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMzhSMTJkLTI0LjU3NlIxM2QzMjEuNTM2UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTJpM2kzaTNpM2kyaGc6MTI1b1IxZDEwMjRSMmFkMjg1LjY5NmQ2MjcuNzEyZDI4NS42OTZkNjY4LjY3MmQyOTUuOTM2ZDY4MS45ODNkMzA2LjE3NmQ2OTUuMjk2ZDMzMy44MjRkNjk1LjI5NmQzNTkuNDI0ZDY5NS4yOTZkMzcxLjJkNzEwLjY1NmQzODIuOTc2ZDcyNi4wMTZkMzgyLjk3NmQ3NDQuNDQ4ZDM4Mi45NzZkNzYyLjg4ZDM3MS4yZDc3OC4yNGQzNTkuNDI0ZDc5My42ZDMzMy44MjRkNzkzLjZkMzA2LjE3NmQ3OTMuNmQyOTUuOTM2ZDgwNi45MTJkMjg1LjY5NmQ4MjAuMjIzZDI4NS42OTZkODYxLjE4NGQyODUuNjk2ZDEwNjguMDMyZDI4NS42OTZkMTEzNy42NjRkMjQ1Ljc2ZDExNjkuOTJkMjA1LjgyNGQxMjAyLjE3NmQxMTEuNjE2ZDEyMDIuMTc2ZDM1Ljg0ZDEyMDIuMTc2ZDE1LjM2ZDEyMDIuMTc2ZDIuNTZkMTE5MC40ZC0xMC4yNGQxMTc4LjYyNGQtMTAuMjRkMTE1My4wMjRkLTEwLjI0ZDExMjcuNDI0ZDIuNTZkMTExNS42NDhkMTUuMzZkMTEwMy44NzJkMzUuODRkMTEwMy44NzJkNjEuNDRkMTEwMy44NzJkODIuOTQ0ZDExMDMuODcyZDk0LjIwOGQxMDkwLjA0OGQxMDUuNDcyZDEwNzYuMjI0ZDEwNS40NzJkMTA0NC40OGQxMDUuNDcyZDg0OC44OTZkMTA1LjQ3MmQ3NTAuNTkyZDIxNy4wODhkNzQ1LjQ3MmQyMTcuMDg4ZDc0My40MjRkMTA1LjQ3MmQ3MzguMzA0ZDEwNS40NzJkNjQwZDEwNS40NzJkNDQ0LjQxNWQxMDUuNDcyZDQxMi42NzJkOTQuMjA4ZDM5OC44NDdkODIuOTQ0ZDM4NS4wMjRkNjEuNDRkMzg1LjAyNGQzNS44NGQzODUuMDI0ZDE1LjM2ZDM4NS4wMjRkMi41NmQzNzMuMjQ3ZC0xMC4yNGQzNjEuNDcyZC0xMC4yNGQzMzUuODcxZC0xMC4yNGQzMTAuMjcxZDIuNTZkMjk4LjQ5NmQxNS4zNmQyODYuNzJkMzUuODRkMjg2LjcyZDExMS42MTZkMjg2LjcyZDIwNS44MjRkMjg2LjcyZDI0NS43NmQzMTguOTc2ZDI4NS42OTZkMzUxLjIzMmQyODUuNjk2ZDQyMC44NjRkMjg1LjY5NmQ2MjcuNzEyaFIzZDM5OC4zMzZSNGQzODIuOTc2UjVkLTEwLjI0UjZkNzM3LjI4UjdkLTE3OC4xNzZSOGQ3NDcuNTJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTI1UjEyZC0xMC4yNFIxM2QzOTguMzM2UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kyaTNpM2kzaTNpMmkzaTNpMmkzaTJpM2kyaTNpM2kyaTNpM2kzaTNpMmkzaTNpMmhnOjIzN29SMWQxMDI0UjJhZDE4OS40NGQyNTcuMDI0ZDIxNS4wNGQyMzQuNDk1ZDIyOC4zNTJkMjI4Ljg2NGQyNDEuNjY0ZDIyMy4yMzFkMjU3LjAyNGQyMjMuMjMxZDI2Ny4yNjRkMjIzLjIzMWQyNzkuMDRkMjI3Ljg0ZDI5MC44MTZkMjMyLjQ0N2QzMDAuMDMyZDI0MS4xNTFkMzA5LjI0OGQyNDkuODU2ZDMxNS4zOTJkMjYxLjEyZDMyMS41MzZkMjcyLjM4NGQzMjEuNTM2ZDI4NS42OTZkMzIxLjUzNmQzMTYuNDE1ZDI5Mi44NjRkMzM5Ljk2N2QyMDcuODcyZDQxMi42NzJkMTk0LjU2ZDQyMy45MzZkMTg1LjM0NGQ0MzAuNTkyZDE3Ni4xMjhkNDM3LjI0N2QxNjguNDQ4ZDQ0MC44MzJkMTYwLjc2OGQ0NDQuNDE1ZDE1NC4xMTJkNDQ1LjQzOWQxNDcuNDU2ZDQ0Ni40NjNkMTQwLjI4OGQ0NDYuNDYzZDEyOS4wMjRkNDQ2LjQ2M2QxMTcuNzZkNDQxLjg1NmQxMDYuNDk2ZDQzNy4yNDdkOTcuMjhkNDI4LjU0NGQ4OC4wNjRkNDE5Ljg0ZDgxLjkyZDQwOC41NzZkNzUuNzc2ZDM5Ny4zMTJkNzUuNzc2ZDM4NGQ3NS43NzZkMzUzLjI4ZDEwNC40NDhkMzI5LjcyN2QxODkuNDRkMjU3LjAyNGQ1NS4yOTZkNTc5LjU4NGQ1NS4yOTZkNTI1LjMxMmQ4NC45OTJkNTAwLjIyM2QxMTQuNjg4ZDQ3NS4xMzVkMTYwLjc2OGQ0NzUuMTM1ZDIwNi44NDhkNDc1LjEzNWQyMzYuNTQ0ZDUwMC4yMjNkMjY2LjI0ZDUyNS4zMTJkMjY2LjI0ZDU3OS41ODRkMjY2LjI0ZDkzMi44NjRkMjY2LjI0ZDk4Ny4xMzZkMjM2LjU0NGQxMDEyLjIyNGQyMDYuODQ4ZDEwMzcuMzExZDE2MC43NjhkMTAzNy4zMTFkMTE0LjY4OGQxMDM3LjMxMWQ4NC45OTJkMTAxMi4yMjRkNTUuMjk2ZDk4Ny4xMzZkNTUuMjk2ZDkzMi44NjRkNTUuMjk2ZDU3OS41ODRoUjNkMzIxLjUzNlI0ZDMyMS41MzZSNWQ1NS4yOTZSNmQ4MDAuNzY4UjdkLTEzLjMxMlI4ZDc0NS40NzJSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjM3UjEyZDU1LjI5NlIxM2QzMjEuNTM2UjE0YWkxaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjEyNG9SMWQxMDI0UjJhZDM5LjkzNmQzNTQuMzA0ZDM5LjkzNmQyNjkuMzEyZDExMy42NjRkMjY5LjMxMmQxODcuMzkyZDI2OS4zMTJkMTg3LjM5MmQzNTQuMzA0ZDE4Ny4zOTJkOTU2LjQxNWQxODcuMzkyZDEwNDEuNDA3ZDExMy42NjRkMTA0MS40MDdkMzkuOTM2ZDEwNDEuNDA3ZDM5LjkzNmQ5NTYuNDE1ZDM5LjkzNmQzNTQuMzA0aFIzZDIyNy4zMjhSNGQxODcuMzkyUjVkMzkuOTM2UjZkNzU0LjY4OFI3ZC0xNy40MDhSOGQ3MTQuNzUyUjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTEyNFIxMmQzOS45MzZSMTNkMjI3LjMyOFIxNGFpMWkzaTNpMmkzaTNpMmhnOjIzNm9SMWQxMDI0UjJhZDI4LjY3MmQzMzkuOTY3ZDBkMzE2LjQxNWQwZDI4NS42OTZkMGQyNzIuMzg0ZDYuMTQ0ZDI2MS4xMmQxMi4yODhkMjQ5Ljg1NmQyMS41MDRkMjQxLjE1MWQzMC43MmQyMzIuNDQ3ZDQxLjk4NGQyMjcuODRkNTMuMjQ4ZDIyMy4yMzFkNjQuNTEyZDIyMy4yMzFkNzEuNjhkMjIzLjIzMWQ3OC4zMzZkMjI0LjI1NWQ4NC45OTJkMjI1LjI3OWQ5Mi42NzJkMjI4Ljg2NGQxMDAuMzUyZDIzMi40NDdkMTA5LjU2OGQyMzkuMTAzZDExOC43ODRkMjQ1Ljc2ZDEzMi4wOTZkMjU3LjAyNGQyMTcuMDg4ZDMyOS43MjdkMjQ1Ljc2ZDM1My4yOGQyNDUuNzZkMzg0ZDI0NS43NmQzOTcuMzEyZDIzOS42MTZkNDA4LjU3NmQyMzMuNDcyZDQxOS44NGQyMjQuMjU2ZDQyOC41NDRkMjE1LjA0ZDQzNy4yNDdkMjAzLjI2NGQ0NDEuODU2ZDE5MS40ODhkNDQ2LjQ2M2QxODEuMjQ4ZDQ0Ni40NjNkMTY1Ljg4OGQ0NDYuNDYzZDE1Mi41NzZkNDQwLjgzMmQxMzkuMjY0ZDQzNS4xOTlkMTEzLjY2NGQ0MTIuNjcyZDI4LjY3MmQzMzkuOTY3ZDU1LjI5NmQ1NzkuNTg0ZDU1LjI5NmQ1MjUuMzEyZDg0Ljk5MmQ1MDAuMjIzZDExNC42ODhkNDc1LjEzNWQxNjAuNzY4ZDQ3NS4xMzVkMjA2Ljg0OGQ0NzUuMTM1ZDIzNi41NDRkNTAwLjIyM2QyNjYuMjRkNTI1LjMxMmQyNjYuMjRkNTc5LjU4NGQyNjYuMjRkOTMyLjg2NGQyNjYuMjRkOTg3LjEzNmQyMzYuNTQ0ZDEwMTIuMjI0ZDIwNi44NDhkMTAzNy4zMTFkMTYwLjc2OGQxMDM3LjMxMWQxMTQuNjg4ZDEwMzcuMzExZDg0Ljk5MmQxMDEyLjIyNGQ1NS4yOTZkOTg3LjEzNmQ1NS4yOTZkOTMyLjg2NGQ1NS4yOTZkNTc5LjU4NGhSM2QzMjEuNTM2UjRkMjY2LjI0UjVkMFI2ZDgwMC43NjhSN2QtMTMuMzEyUjhkODAwLjc2OFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMzZSMTJkMFIxM2QzMjEuNTM2UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kyaTNpM2kzaTNpMmhnOjEyM29SMWQxMDI0UjJhZDExMi42NGQ4NjEuMTg0ZDExMi42NGQ4MjAuMjIzZDEwMi40ZDgwNi45MTJkOTIuMTZkNzkzLjZkNjQuNTEyZDc5My42ZDM4LjkxMmQ3OTMuNmQyNy4xMzZkNzc4LjI0ZDE1LjM2ZDc2Mi44OGQxNS4zNmQ3NDQuNDQ4ZDE1LjM2ZDcyNi4wMTZkMjcuMTM2ZDcxMC42NTZkMzguOTEyZDY5NS4yOTZkNjQuNTEyZDY5NS4yOTZkOTIuMTZkNjk1LjI5NmQxMDIuNGQ2ODEuOTgzZDExMi42NGQ2NjguNjcyZDExMi42NGQ2MjcuNzEyZDExMi42NGQ0MjAuODY0ZDExMi42NGQzNTEuMjMyZDE1Mi41NzZkMzE4Ljk3NmQxOTIuNTEyZDI4Ni43MmQyODYuNzJkMjg2LjcyZDM2Mi40OTZkMjg2LjcyZDM4Mi45NzZkMjg2LjcyZDM5NS43NzZkMjk4LjQ5NmQ0MDguNTc2ZDMxMC4yNzFkNDA4LjU3NmQzMzUuODcxZDQwOC41NzZkMzYxLjQ3MmQzOTUuNzc2ZDM3My4yNDdkMzgyLjk3NmQzODUuMDI0ZDM2Mi40OTZkMzg1LjAyNGQzMzYuODk2ZDM4NS4wMjRkMzE1LjM5MmQzODUuMDI0ZDMwNC4xMjhkMzk4Ljg0N2QyOTIuODY0ZDQxMi42NzJkMjkyLjg2NGQ0NDQuNDE1ZDI5Mi44NjRkNjQwZDI5Mi44NjRkNzM4LjMwNGQxODEuMjQ4ZDc0My40MjRkMTgxLjI0OGQ3NDUuNDcyZDI5Mi44NjRkNzUwLjU5MmQyOTIuODY0ZDg0OC44OTZkMjkyLjg2NGQxMDQ0LjQ4ZDI5Mi44NjRkMTA3Ni4yMjRkMzA0LjEyOGQxMDkwLjA0OGQzMTUuMzkyZDExMDMuODcyZDMzNi44OTZkMTEwMy44NzJkMzYyLjQ5NmQxMTAzLjg3MmQzODIuOTc2ZDExMDMuODcyZDM5NS43NzZkMTExNS42NDhkNDA4LjU3NmQxMTI3LjQyNGQ0MDguNTc2ZDExNTMuMDI0ZDQwOC41NzZkMTE3OC42MjRkMzk1Ljc3NmQxMTkwLjRkMzgyLjk3NmQxMjAyLjE3NmQzNjIuNDk2ZDEyMDIuMTc2ZDI4Ni43MmQxMjAyLjE3NmQxOTIuNTEyZDEyMDIuMTc2ZDE1Mi41NzZkMTE2OS45MmQxMTIuNjRkMTEzNy42NjRkMTEyLjY0ZDEwNjguMDMyZDExMi42NGQ4NjEuMTg0aFIzZDM5OC4zMzZSNGQ0MDguNTc2UjVkMTUuMzZSNmQ3MzcuMjhSN2QtMTc4LjE3NlI4ZDcyMS45MlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxMjNSMTJkMTUuMzZSMTNkMzk4LjMzNlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpMmkzaTNpMmkzaTNpM2kzaTJpM2kzaTJpM2kyaTNpMmkzaTNpMmkzaTNpM2kzaTJpM2kzaTJoZzoyMzVvUjFkMTAyNFIyYWQ0NDkuNTM2ZDY5OC4zNjdkNDQ5LjUzNmQ2NzAuNzJkNDQxLjM0NGQ2NTEuNzc2ZDQzMy4xNTJkNjMyLjgzMmQ0MTkuODRkNjIwLjU0NGQ0MDYuNTI4ZDYwOC4yNTZkMzg4LjYwOGQ2MDMuMTM2ZDM3MC42ODhkNTk4LjAxNmQzNTEuMjMyZDU5OC4wMTZkMzMzLjgyNGQ1OTguMDE2ZDMxNi40MTZkNjAzLjEzNmQyOTkuMDA4ZDYwOC4yNTZkMjg1LjE4NGQ2MjAuMDMxZDI3MS4zNmQ2MzEuODA4ZDI2Mi4xNDRkNjUxLjI2NGQyNTIuOTI4ZDY3MC43MmQyNTEuOTA0ZDY5OC4zNjdkNDQ5LjUzNmQ2OTguMzY3ZDM3MC42ODhkMzM0Ljg0N2QzNzAuNjg4ZDI5NS45MzZkMzk3LjgyNGQyNjguNzk5ZDQyNC45NmQyNDEuNjY0ZDQ2My44NzJkMjQxLjY2NGQ1MDIuNzg0ZDI0MS42NjRkNTI5LjkyZDI2OC43OTlkNTU3LjA1NmQyOTUuOTM2ZDU1Ny4wNTZkMzM0Ljg0N2Q1NTcuMDU2ZDM3My43NmQ1MjkuOTJkNDAwLjg5NWQ1MDIuNzg0ZDQyOC4wMzJkNDYzLjg3MmQ0MjguMDMyZDQyNC45NmQ0MjguMDMyZDM5Ny44MjRkNDAwLjg5NWQzNzAuNjg4ZDM3My43NmQzNzAuNjg4ZDMzNC44NDdkMTI0LjkyOGQzMzQuODQ3ZDEyNC45MjhkMjk1LjkzNmQxNTIuMDY0ZDI2OC43OTlkMTc5LjJkMjQxLjY2NGQyMTguMTEyZDI0MS42NjRkMjU3LjAyNGQyNDEuNjY0ZDI4NC4xNmQyNjguNzk5ZDMxMS4yOTZkMjk1LjkzNmQzMTEuMjk2ZDMzNC44NDdkMzExLjI5NmQzNzMuNzZkMjg0LjE2ZDQwMC44OTVkMjU3LjAyNGQ0MjguMDMyZDIxOC4xMTJkNDI4LjAzMmQxNzkuMmQ0MjguMDMyZDE1Mi4wNjRkNDAwLjg5NWQxMjQuOTI4ZDM3My43NmQxMjQuOTI4ZDMzNC44NDdkNjE2LjQ0OGQ5MTguNTI4ZDYxNi40NDhkOTQwLjAzMmQ2MDIuMTEyZDk2MS41MzZkNTg3Ljc3NmQ5ODMuMDRkNTU1LjAwOGQ5OTkuOTM2ZDUyMi4yNGQxMDE2LjgzMmQ0NzAuMDE2ZDEwMjcuMDcxZDQxNy43OTJkMTAzNy4zMTFkMzQwLjk5MmQxMDM3LjMxMWQyNzcuNTA0ZDEwMzcuMzExZDIyMy4yMzJkMTAyMC45MjhkMTY4Ljk2ZDEwMDQuNTQ0ZDEyOGQ5NjkuNzI4ZDg3LjA0ZDkzNC45MTJkNjRkODgxLjY2NGQ0MC45NmQ4MjguNDE1ZDQwLjk2ZDc1NS43MTJkNDAuOTZkNjgzLjAwOGQ2NGQ2MzAuMjcxZDg3LjA0ZDU3Ny41MzZkMTI4ZDU0Mi43MmQxNjguOTZkNTA3LjkwNGQyMjMuMjMyZDQ5MS41MmQyNzcuNTA0ZDQ3NS4xMzVkMzQwLjk5MmQ0NzUuMTM1ZDQyOS4wNTZkNDc1LjEzNWQ0ODguNDQ4ZDUwMS43NmQ1NDcuODRkNTI4LjM4NGQ1ODMuMTY4ZDU2Ni4yNzFkNjE4LjQ5NmQ2MDQuMTZkNjMzLjM0NGQ2NDUuNjMyZDY0OC4xOTJkNjg3LjEwNGQ2NDguMTkyZDcxNi44ZDY0OC4xOTJkNzY0LjkyOGQ2MjUuMTUyZDc4My44NzJkNjAyLjExMmQ4MDIuODE2ZDU1MC45MTJkODAyLjgxNmQyNTEuOTA0ZDgwMi44MTZkMjU2ZDg1NC4wMTZkMjg0LjE2ZDg4NC4yMjNkMzEyLjMyZDkxNC40MzJkMzY0LjU0NGQ5MTQuNDMyZDM5My4yMTZkOTE0LjQzMmQ0MTYuNzY4ZDkwNC4xOTJkNDQwLjMyZDg5My45NTJkNDYyLjMzNmQ4ODEuNjY0ZDQ4NC4zNTJkODY5LjM3NmQ1MDUuMzQ0ZDg1OS4xMzZkNTI2LjMzNmQ4NDguODk2ZDU1MC45MTJkODQ4Ljg5NmQ1NzguNTZkODQ4Ljg5NmQ1OTcuNTA0ZDg3MC45MTJkNjE2LjQ0OGQ4OTIuOTI4ZDYxNi40NDhkOTE4LjUyOGhSM2Q2ODEuOTg0UjRkNjQ4LjE5MlI1ZDQwLjk2UjZkNzgyLjMzNlI3ZC0xMy4zMTJSOGQ3NDEuMzc2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTIzNVIxMmQ0MC45NlIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNoZzoxMjJvUjFkMTAyNFIyYWQ0ODAuMjU2ZDg3Ni41NDRkNTE2LjA5NmQ4NzYuNTQ0ZDUzNy42ZDg5MS4zOTJkNTU5LjEwNGQ5MDYuMjRkNTU5LjEwNGQ5NTAuMjcxZDU1OS4xMDRkOTk0LjMwNGQ1MzcuNmQxMDA5LjE1MmQ1MTYuMDk2ZDEwMjRkNDgwLjI1NmQxMDI0ZDEwMC4zNTJkMTAyNGQ4MS45MmQxMDI0ZDY4LjA5NmQxMDE2LjgzMmQ1NC4yNzJkMTAwOS42NjRkNDUuNTY4ZDk5OC45MTJkMzYuODY0ZDk4OC4xNmQzMi43NjhkOTc0LjMzNmQyOC42NzJkOTYwLjUxMmQyOC42NzJkOTQ3LjJkMjguNjcyZDkyMS42ZDM4LjRkOTAxLjEyZDQ4LjEyOGQ4ODAuNjRkNzQuNzUyZDg1NC4wMTZkMjk2Ljk2ZDYzNS45MDRkMTMwLjA0OGQ2MzUuOTA0ZDk0LjIwOGQ2MzUuOTA0ZDcyLjcwNGQ2MjEuMDU2ZDUxLjJkNjA2LjIwOGQ1MS4yZDU2Mi4xNzVkNTEuMmQ1MjEuMjE2ZDcxLjY4ZDUwNC44MzJkOTIuMTZkNDg4LjQ0OGQxNDEuMzEyZDQ4OC40NDhkNDc1LjEzNmQ0ODguNDQ4ZDUxNS4wNzJkNDg4LjQ0OGQ1MzMuNTA0ZDUxNC4wNDhkNTUxLjkzNmQ1MzkuNjQ3ZDU1MS45MzZkNTc4LjU2ZDU1MS45MzZkNjA0LjE2ZDU0NC43NjhkNjIwLjAzMWQ1MzcuNmQ2MzUuOTA0ZDUxNi4wOTZkNjU3LjQwOGQyOTYuOTZkODc2LjU0NGQ0ODAuMjU2ZDg3Ni41NDRoUjNkNTg3Ljc3NlI0ZDU1OS4xMDRSNWQyOC42NzJSNmQ1MzUuNTUyUjdkMFI4ZDUwNi44OFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxMjJSMTJkMjguNjcyUjEzZDU4Ny43NzZSMTRhaTFpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTJpMmkzaTNpM2kzaTJpM2kzaTNpM2kyaTJoZzoyMzRvUjFkMTAyNFIyYWQ0NDkuNTM2ZDY5OC4zNjdkNDQ5LjUzNmQ2NzAuNzJkNDQxLjM0NGQ2NTEuNzc2ZDQzMy4xNTJkNjMyLjgzMmQ0MTkuODRkNjIwLjU0NGQ0MDYuNTI4ZDYwOC4yNTZkMzg4LjYwOGQ2MDMuMTM2ZDM3MC42ODhkNTk4LjAxNmQzNTEuMjMyZDU5OC4wMTZkMzMzLjgyNGQ1OTguMDE2ZDMxNi40MTZkNjAzLjEzNmQyOTkuMDA4ZDYwOC4yNTZkMjg1LjE4NGQ2MjAuMDMxZDI3MS4zNmQ2MzEuODA4ZDI2Mi4xNDRkNjUxLjI2NGQyNTIuOTI4ZDY3MC43MmQyNTEuOTA0ZDY5OC4zNjdkNDQ5LjUzNmQ2OTguMzY3ZDE1NS42NDhkMzc0Ljc4NGQxNTUuNjQ4ZDM2OC42NGQxNTguNzJkMzU5LjkzNmQxNjEuNzkyZDM1MS4yMzJkMTcxLjAwOGQzMzkuOTY3ZDE4MC4yMjRkMzI4LjcwM2QxOTYuNjA4ZDMxMi44MzJkMjEyLjk5MmQyOTYuOTZkMjM5LjYxNmQyNzYuNDhkMjYxLjEyZDI1OS4wNzJkMjc1LjQ1NmQyNDguODMyZDI4OS43OTJkMjM4LjU5MWQzMDAuNTQ0ZDIzMi45NmQzMTEuMjk2ZDIyNy4zMjdkMzIwLjUxMmQyMjUuNzkyZDMyOS43MjhkMjI0LjI1NWQzNDAuOTkyZDIyNC4yNTVkMzUyLjI1NmQyMjQuMjU1ZDM2MS40NzJkMjI1Ljc5MmQzNzAuNjg4ZDIyNy4zMjdkMzgxLjQ0ZDIzMi45NmQzOTIuMTkyZDIzOC41OTFkNDA2LjUyOGQyNDguODMyZDQyMC44NjRkMjU5LjA3MmQ0NDIuMzY4ZDI3Ni40OGQ0NjguOTkyZDI5Ni45NmQ0ODUuMzc2ZDMxMi44MzJkNTAxLjc2ZDMyOC43MDNkNTEwLjk3NmQzMzkuOTY3ZDUyMC4xOTJkMzUxLjIzMmQ1MjMuMjY0ZDM1OS45MzZkNTI2LjMzNmQzNjguNjRkNTI2LjMzNmQzNzQuNzg0ZDUyNi4zMzZkMzk2LjI4OGQ1MTEuNDg4ZDQxNS43NDRkNDk2LjY0ZDQzNS4xOTlkNDY4Ljk5MmQ0MzUuMTk5ZDQ2MC44ZDQzNS4xOTlkNDUwLjA0OGQ0MzEuNjE2ZDQzOS4yOTZkNDI4LjAzMmQ0MjQuOTZkNDE4LjMwNGQ0MTAuNjI0ZDQwOC41NzZkMzkwLjE0NGQzOTIuNzAzZDM2OS42NjRkMzc2LjgzMmQzNDAuOTkyZDM1Mi4yNTZkMzEyLjMyZDM3Ni44MzJkMjkxLjg0ZDM5Mi43MDNkMjcxLjM2ZDQwOC41NzZkMjU3LjAyNGQ0MTguMzA0ZDI0Mi42ODhkNDI4LjAzMmQyMzEuOTM2ZDQzMS42MTZkMjIxLjE4NGQ0MzUuMTk5ZDIxMi45OTJkNDM1LjE5OWQxODUuMzQ0ZDQzNS4xOTlkMTcwLjQ5NmQ0MTUuNzQ0ZDE1NS42NDhkMzk2LjI4OGQxNTUuNjQ4ZDM3NC43ODRkNjE2LjQ0OGQ5MTguNTI4ZDYxNi40NDhkOTQwLjAzMmQ2MDIuMTEyZDk2MS41MzZkNTg3Ljc3NmQ5ODMuMDRkNTU1LjAwOGQ5OTkuOTM2ZDUyMi4yNGQxMDE2LjgzMmQ0NzAuMDE2ZDEwMjcuMDcxZDQxNy43OTJkMTAzNy4zMTFkMzQwLjk5MmQxMDM3LjMxMWQyNzcuNTA0ZDEwMzcuMzExZDIyMy4yMzJkMTAyMC45MjhkMTY4Ljk2ZDEwMDQuNTQ0ZDEyOGQ5NjkuNzI4ZDg3LjA0ZDkzNC45MTJkNjRkODgxLjY2NGQ0MC45NmQ4MjguNDE1ZDQwLjk2ZDc1NS43MTJkNDAuOTZkNjgzLjAwOGQ2NGQ2MzAuMjcxZDg3LjA0ZDU3Ny41MzZkMTI4ZDU0Mi43MmQxNjguOTZkNTA3LjkwNGQyMjMuMjMyZDQ5MS41MmQyNzcuNTA0ZDQ3NS4xMzVkMzQwLjk5MmQ0NzUuMTM1ZDQyOS4wNTZkNDc1LjEzNWQ0ODguNDQ4ZDUwMS43NmQ1NDcuODRkNTI4LjM4NGQ1ODMuMTY4ZDU2Ni4yNzFkNjE4LjQ5NmQ2MDQuMTZkNjMzLjM0NGQ2NDUuNjMyZDY0OC4xOTJkNjg3LjEwNGQ2NDguMTkyZDcxNi44ZDY0OC4xOTJkNzY0LjkyOGQ2MjUuMTUyZDc4My44NzJkNjAyLjExMmQ4MDIuODE2ZDU1MC45MTJkODAyLjgxNmQyNTEuOTA0ZDgwMi44MTZkMjU2ZDg1NC4wMTZkMjg0LjE2ZDg4NC4yMjNkMzEyLjMyZDkxNC40MzJkMzY0LjU0NGQ5MTQuNDMyZDM5My4yMTZkOTE0LjQzMmQ0MTYuNzY4ZDkwNC4xOTJkNDQwLjMyZDg5My45NTJkNDYyLjMzNmQ4ODEuNjY0ZDQ4NC4zNTJkODY5LjM3NmQ1MDUuMzQ0ZDg1OS4xMzZkNTI2LjMzNmQ4NDguODk2ZDU1MC45MTJkODQ4Ljg5NmQ1NzguNTZkODQ4Ljg5NmQ1OTcuNTA0ZDg3MC45MTJkNjE2LjQ0OGQ4OTIuOTI4ZDYxNi40NDhkOTE4LjUyOGhSM2Q2ODEuOTg0UjRkNjQ4LjE5MlI1ZDQwLjk2UjZkNzk5Ljc0NFI3ZC0xMy4zMTJSOGQ3NTguNzg0UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTIzNFIxMmQ0MC45NlIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaGc6MTIxb1IxZDEwMjRSMmFkMzUxLjIzMmQ1OTQuOTQ0ZDM2Ni41OTJkNTI5LjQwOGQzODkuMTJkNTAyLjI3MWQ0MTEuNjQ4ZDQ3NS4xMzVkNDUyLjYwOGQ0NzUuMTM1ZDQ3Mi4wNjRkNDc1LjEzNWQ0ODkuOTg0ZDQ4MC43NjhkNTA3LjkwNGQ0ODYuNGQ1MjEuNzI4ZDQ5Ny42NjRkNTM1LjU1MmQ1MDguOTI4ZDU0My43NDRkNTI1LjgyNGQ1NTEuOTM2ZDU0Mi43MmQ1NTEuOTM2ZDU2NS4yNDhkNTUxLjkzNmQ1NzguNTZkNTQxLjE4NGQ2MTMuMzc2ZDUzMC40MzJkNjQ4LjE5MmQ1MTJkNzAxLjQ0ZDM4OS4xMmQxMDYwLjg2NGQzNzEuNzEyZDExMTEuMDRkMzQ2LjYyNGQxMTQzLjI5NmQzMjEuNTM2ZDExNzUuNTUyZDI5MS44NGQxMTkzLjk4NGQyNjIuMTQ0ZDEyMTIuNDE2ZDIyOC44NjRkMTIxOS4wNzJkMTk1LjU4NGQxMjI1LjcyOGQxNjIuODE2ZDEyMjUuNzI4ZDk5LjMyOGQxMjI1LjcyOGQ2OC42MDhkMTIwMi4xNzZkMzcuODg4ZDExNzguNjI0ZDM3Ljg4OGQxMTM3LjY2NGQzNy44ODhkMTA5OS43NzZkNjAuNDE2ZDEwODUuOTUyZDgyLjk0NGQxMDcyLjEyOGQxMTguNzg0ZDEwNzIuMTI4ZDE1MS41NTJkMTA3Mi4xMjhkMTYyLjMwNGQxMDY0Ljk2ZDE3My4wNTZkMTA1Ny43OTJkMTczLjA1NmQxMDQ2LjUyOGQxNzMuMDU2ZDEwMzkuMzU5ZDE3MC40OTZkMTAyOC42MDhkMTY3LjkzNmQxMDE3Ljg1NmQxNjIuODE2ZDEwMDUuNTY4ZDUwLjE3NmQ2ODUuMDU2ZDMwLjcyZDYzMC43ODRkMjQuMDY0ZDYwNC4xNmQxNy40MDhkNTc3LjUzNmQxNy40MDhkNTY1LjI0OGQxNy40MDhkNTI2LjMzNmQ0Ni41OTJkNTAwLjczNmQ3NS43NzZkNDc1LjEzNWQxMjAuODMyZDQ3NS4xMzVkMTkxLjQ4OGQ0NzUuMTM1ZDIxMC45NDRkNTUzLjk4M2QyODcuNzQ0ZDg1MC45NDRkMjg5Ljc5MmQ4NTAuOTQ0ZDM1MS4yMzJkNTk0Ljk0NGhSM2Q1NjkuMzQ0UjRkNTUxLjkzNlI1ZDE3LjQwOFI2ZDU0OC44NjRSN2QtMjAxLjcyOFI4ZDUzMS40NTZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTIxUjEyZDE3LjQwOFIxM2Q1NjkuMzQ0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTJpMmkyaGc6MjMzb1IxZDEwMjRSMmFkNDQ5LjUzNmQ2OTguMzY3ZDQ0OS41MzZkNjcwLjcyZDQ0MS4zNDRkNjUxLjc3NmQ0MzMuMTUyZDYzMi44MzJkNDE5Ljg0ZDYyMC41NDRkNDA2LjUyOGQ2MDguMjU2ZDM4OC42MDhkNjAzLjEzNmQzNzAuNjg4ZDU5OC4wMTZkMzUxLjIzMmQ1OTguMDE2ZDMzMy44MjRkNTk4LjAxNmQzMTYuNDE2ZDYwMy4xMzZkMjk5LjAwOGQ2MDguMjU2ZDI4NS4xODRkNjIwLjAzMWQyNzEuMzZkNjMxLjgwOGQyNjIuMTQ0ZDY1MS4yNjRkMjUyLjkyOGQ2NzAuNzJkMjUxLjkwNGQ2OTguMzY3ZDQ0OS41MzZkNjk4LjM2N2QzNjkuNjY0ZDI1Ny4wMjRkMzk1LjI2NGQyMzQuNDk1ZDQwOC41NzZkMjI4Ljg2NGQ0MjEuODg4ZDIyMy4yMzFkNDM3LjI0OGQyMjMuMjMxZDQ0Ny40ODhkMjIzLjIzMWQ0NTkuMjY0ZDIyNy44NGQ0NzEuMDRkMjMyLjQ0N2Q0ODAuMjU2ZDI0MS4xNTFkNDg5LjQ3MmQyNDkuODU2ZDQ5NS42MTZkMjYxLjEyZDUwMS43NmQyNzIuMzg0ZDUwMS43NmQyODUuNjk2ZDUwMS43NmQzMTYuNDE1ZDQ3My4wODhkMzM5Ljk2N2QzODguMDk2ZDQxMi42NzJkMzc0Ljc4NGQ0MjMuOTM2ZDM2NS41NjhkNDMwLjU5MmQzNTYuMzUyZDQzNy4yNDdkMzQ4LjY3MmQ0NDAuODMyZDM0MC45OTJkNDQ0LjQxNWQzMzQuMzM2ZDQ0NS40MzlkMzI3LjY4ZDQ0Ni40NjNkMzIwLjUxMmQ0NDYuNDYzZDMwOS4yNDhkNDQ2LjQ2M2QyOTcuOTg0ZDQ0MS44NTZkMjg2LjcyZDQzNy4yNDdkMjc3LjUwNGQ0MjguNTQ0ZDI2OC4yODhkNDE5Ljg0ZDI2Mi4xNDRkNDA4LjU3NmQyNTZkMzk3LjMxMmQyNTZkMzg0ZDI1NmQzNTMuMjhkMjg0LjY3MmQzMjkuNzI3ZDM2OS42NjRkMjU3LjAyNGQ2MTYuNDQ4ZDkxOC41MjhkNjE2LjQ0OGQ5NDAuMDMyZDYwMi4xMTJkOTYxLjUzNmQ1ODcuNzc2ZDk4My4wNGQ1NTUuMDA4ZDk5OS45MzZkNTIyLjI0ZDEwMTYuODMyZDQ3MC4wMTZkMTAyNy4wNzFkNDE3Ljc5MmQxMDM3LjMxMWQzNDAuOTkyZDEwMzcuMzExZDI3Ny41MDRkMTAzNy4zMTFkMjIzLjIzMmQxMDIwLjkyOGQxNjguOTZkMTAwNC41NDRkMTI4ZDk2OS43MjhkODcuMDRkOTM0LjkxMmQ2NGQ4ODEuNjY0ZDQwLjk2ZDgyOC40MTVkNDAuOTZkNzU1LjcxMmQ0MC45NmQ2ODMuMDA4ZDY0ZDYzMC4yNzFkODcuMDRkNTc3LjUzNmQxMjhkNTQyLjcyZDE2OC45NmQ1MDcuOTA0ZDIyMy4yMzJkNDkxLjUyZDI3Ny41MDRkNDc1LjEzNWQzNDAuOTkyZDQ3NS4xMzVkNDI5LjA1NmQ0NzUuMTM1ZDQ4OC40NDhkNTAxLjc2ZDU0Ny44NGQ1MjguMzg0ZDU4My4xNjhkNTY2LjI3MWQ2MTguNDk2ZDYwNC4xNmQ2MzMuMzQ0ZDY0NS42MzJkNjQ4LjE5MmQ2ODcuMTA0ZDY0OC4xOTJkNzE2LjhkNjQ4LjE5MmQ3NjQuOTI4ZDYyNS4xNTJkNzgzLjg3MmQ2MDIuMTEyZDgwMi44MTZkNTUwLjkxMmQ4MDIuODE2ZDI1MS45MDRkODAyLjgxNmQyNTZkODU0LjAxNmQyODQuMTZkODg0LjIyM2QzMTIuMzJkOTE0LjQzMmQzNjQuNTQ0ZDkxNC40MzJkMzkzLjIxNmQ5MTQuNDMyZDQxNi43NjhkOTA0LjE5MmQ0NDAuMzJkODkzLjk1MmQ0NjIuMzM2ZDg4MS42NjRkNDg0LjM1MmQ4NjkuMzc2ZDUwNS4zNDRkODU5LjEzNmQ1MjYuMzM2ZDg0OC44OTZkNTUwLjkxMmQ4NDguODk2ZDU3OC41NmQ4NDguODk2ZDU5Ny41MDRkODcwLjkxMmQ2MTYuNDQ4ZDg5Mi45MjhkNjE2LjQ0OGQ5MTguNTI4aFIzZDY4MS45ODRSNGQ2NDguMTkyUjVkNDAuOTZSNmQ4MDAuNzY4UjdkLTEzLjMxMlI4ZDc1OS44MDhSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjMzUjEyZDQwLjk2UjEzZDY4MS45ODRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpMmkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaGc6MTIwb1IxZDEwMjRSMmFkMzEzLjM0NGQ1MzEuNDU2ZDMzMS43NzZkNDk2LjY0ZDM1MS43NDRkNDg1Ljg4OGQzNzEuNzEyZDQ3NS4xMzVkMzk4LjMzNmQ0NzUuMTM1ZDQxOC44MTZkNDc1LjEzNWQ0MzcuMjQ4ZDQ4Mi44MTZkNDU1LjY4ZDQ5MC40OTZkNDY4Ljk5MmQ1MDIuNzg0ZDQ4Mi4zMDRkNTE1LjA3MmQ0ODkuOTg0ZDUzMC45NDRkNDk3LjY2NGQ1NDYuODE2ZDQ5Ny42NjRkNTYyLjE3NWQ0OTcuNjY0ZDU4MS42MzJkNDkwLjQ5NmQ1OTcuNTA0ZDQ4My4zMjhkNjEzLjM3NmQ0NzAuMDE2ZDYzMi44MzJkMzk0LjI0ZDc0NS40NzJkNDcyLjA2NGQ4NjAuMTZkNDg5LjQ3MmQ4ODYuNzg0ZDQ5OC42ODhkOTA2LjI0ZDUwNy45MDRkOTI1LjY5NmQ1MDcuOTA0ZDk0OS4yNDhkNTA3LjkwNGQ5NjMuNTg0ZDUwMi4yNzJkOTc4Ljk0NGQ0OTYuNjRkOTk0LjMwNGQ0ODUuMzc2ZDEwMDcuNjE2ZDQ3NC4xMTJkMTAyMC45MjhkNDU2LjE5MmQxMDI5LjExOWQ0MzguMjcyZDEwMzcuMzExZDQxMi42NzJkMTAzNy4zMTFkMzgyLjk3NmQxMDM3LjMxMWQzNjEuNDcyZDEwMjUuMDIzZDMzOS45NjhkMTAxMi43MzZkMzE5LjQ4OGQ5NzQuODQ4ZDI2NS4yMTZkODcyLjQ0OGQyMTAuOTQ0ZDk3NC44NDhkMTkwLjQ2NGQxMDEyLjczNmQxNjguOTZkMTAyNS4wMjNkMTQ3LjQ1NmQxMDM3LjMxMWQxMTcuNzZkMTAzNy4zMTFkOTIuMTZkMTAzNy4zMTFkNzQuMjRkMTAyOS4xMTlkNTYuMzJkMTAyMC45MjhkNDQuNTQ0ZDEwMDcuNjE2ZDMyLjc2OGQ5OTQuMzA0ZDI3LjY0OGQ5NzguOTQ0ZDIyLjUyOGQ5NjMuNTg0ZDIyLjUyOGQ5NDkuMjQ4ZDIyLjUyOGQ5MjUuNjk2ZDMxLjc0NGQ5MDYuMjRkNDAuOTZkODg2Ljc4NGQ1OC4zNjhkODYwLjE2ZDEzNi4xOTJkNzQ1LjQ3MmQ2MC40MTZkNjMyLjgzMmQ0Ny4xMDRkNjEzLjM3NmQzOS45MzZkNTk3LjUwNGQzMi43NjhkNTgxLjYzMmQzMi43NjhkNTYyLjE3NWQzMi43NjhkNTQ2LjgxNmQ0MC40NDhkNTMwLjk0NGQ0OC4xMjhkNTE1LjA3MmQ2MS40NGQ1MDIuNzg0ZDc0Ljc1MmQ0OTAuNDk2ZDkzLjE4NGQ0ODIuODE2ZDExMS42MTZkNDc1LjEzNWQxMzIuMDk2ZDQ3NS4xMzVkMTU4LjcyZDQ3NS4xMzVkMTc4LjY4OGQ0ODYuNGQxOTguNjU2ZDQ5Ny42NjRkMjE4LjExMmQ1MzMuNTAzZDI2NS4yMTZkNjIzLjYxNmQzMTMuMzQ0ZDUzMS40NTZoUjNkNTMwLjQzMlI0ZDUwNy45MDRSNWQyMi41MjhSNmQ1NDguODY0UjdkLTEzLjMxMlI4ZDUyNi4zMzZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTIwUjEyZDIyLjUyOFIxM2Q1MzAuNDMyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kyaTJpM2kzaTNpM2kzaTNpM2kzaTJpMmkzaTNpM2kzaTNpM2kzaTNpMmkyaTNpM2kzaTNpM2kzaTNpM2kyaTJoZzoyMzJvUjFkMTAyNFIyYWQ0NDkuNTM2ZDY5OC4zNjdkNDQ5LjUzNmQ2NzAuNzJkNDQxLjM0NGQ2NTEuNzc2ZDQzMy4xNTJkNjMyLjgzMmQ0MTkuODRkNjIwLjU0NGQ0MDYuNTI4ZDYwOC4yNTZkMzg4LjYwOGQ2MDMuMTM2ZDM3MC42ODhkNTk4LjAxNmQzNTEuMjMyZDU5OC4wMTZkMzMzLjgyNGQ1OTguMDE2ZDMxNi40MTZkNjAzLjEzNmQyOTkuMDA4ZDYwOC4yNTZkMjg1LjE4NGQ2MjAuMDMxZDI3MS4zNmQ2MzEuODA4ZDI2Mi4xNDRkNjUxLjI2NGQyNTIuOTI4ZDY3MC43MmQyNTEuOTA0ZDY5OC4zNjdkNDQ5LjUzNmQ2OTguMzY3ZDIwOC44OTZkMzM5Ljk2N2QxODAuMjI0ZDMxNi40MTVkMTgwLjIyNGQyODUuNjk2ZDE4MC4yMjRkMjcyLjM4NGQxODYuMzY4ZDI2MS4xMmQxOTIuNTEyZDI0OS44NTZkMjAxLjcyOGQyNDEuMTUxZDIxMC45NDRkMjMyLjQ0N2QyMjIuMjA4ZDIyNy44NGQyMzMuNDcyZDIyMy4yMzFkMjQ0LjczNmQyMjMuMjMxZDI1MS45MDRkMjIzLjIzMWQyNTguNTZkMjI0LjI1NWQyNjUuMjE2ZDIyNS4yNzlkMjcyLjg5NmQyMjguODY0ZDI4MC41NzZkMjMyLjQ0N2QyODkuNzkyZDIzOS4xMDNkMjk5LjAwOGQyNDUuNzZkMzEyLjMyZDI1Ny4wMjRkMzk3LjMxMmQzMjkuNzI3ZDQyNS45ODRkMzUzLjI4ZDQyNS45ODRkMzg0ZDQyNS45ODRkMzk3LjMxMmQ0MTkuODRkNDA4LjU3NmQ0MTMuNjk2ZDQxOS44NGQ0MDQuNDhkNDI4LjU0NGQzOTUuMjY0ZDQzNy4yNDdkMzgzLjQ4OGQ0NDEuODU2ZDM3MS43MTJkNDQ2LjQ2M2QzNjEuNDcyZDQ0Ni40NjNkMzQ2LjExMmQ0NDYuNDYzZDMzMi44ZDQ0MC44MzJkMzE5LjQ4OGQ0MzUuMTk5ZDI5My44ODhkNDEyLjY3MmQyMDguODk2ZDMzOS45NjdkNjE2LjQ0OGQ5MTguNTI4ZDYxNi40NDhkOTQwLjAzMmQ2MDIuMTEyZDk2MS41MzZkNTg3Ljc3NmQ5ODMuMDRkNTU1LjAwOGQ5OTkuOTM2ZDUyMi4yNGQxMDE2LjgzMmQ0NzAuMDE2ZDEwMjcuMDcxZDQxNy43OTJkMTAzNy4zMTFkMzQwLjk5MmQxMDM3LjMxMWQyNzcuNTA0ZDEwMzcuMzExZDIyMy4yMzJkMTAyMC45MjhkMTY4Ljk2ZDEwMDQuNTQ0ZDEyOGQ5NjkuNzI4ZDg3LjA0ZDkzNC45MTJkNjRkODgxLjY2NGQ0MC45NmQ4MjguNDE1ZDQwLjk2ZDc1NS43MTJkNDAuOTZkNjgzLjAwOGQ2NGQ2MzAuMjcxZDg3LjA0ZDU3Ny41MzZkMTI4ZDU0Mi43MmQxNjguOTZkNTA3LjkwNGQyMjMuMjMyZDQ5MS41MmQyNzcuNTA0ZDQ3NS4xMzVkMzQwLjk5MmQ0NzUuMTM1ZDQyOS4wNTZkNDc1LjEzNWQ0ODguNDQ4ZDUwMS43NmQ1NDcuODRkNTI4LjM4NGQ1ODMuMTY4ZDU2Ni4yNzFkNjE4LjQ5NmQ2MDQuMTZkNjMzLjM0NGQ2NDUuNjMyZDY0OC4xOTJkNjg3LjEwNGQ2NDguMTkyZDcxNi44ZDY0OC4xOTJkNzY0LjkyOGQ2MjUuMTUyZDc4My44NzJkNjAyLjExMmQ4MDIuODE2ZDU1MC45MTJkODAyLjgxNmQyNTEuOTA0ZDgwMi44MTZkMjU2ZDg1NC4wMTZkMjg0LjE2ZDg4NC4yMjNkMzEyLjMyZDkxNC40MzJkMzY0LjU0NGQ5MTQuNDMyZDM5My4yMTZkOTE0LjQzMmQ0MTYuNzY4ZDkwNC4xOTJkNDQwLjMyZDg5My45NTJkNDYyLjMzNmQ4ODEuNjY0ZDQ4NC4zNTJkODY5LjM3NmQ1MDUuMzQ0ZDg1OS4xMzZkNTI2LjMzNmQ4NDguODk2ZDU1MC45MTJkODQ4Ljg5NmQ1NzguNTZkODQ4Ljg5NmQ1OTcuNTA0ZDg3MC45MTJkNjE2LjQ0OGQ4OTIuOTI4ZDYxNi40NDhkOTE4LjUyOGhSM2Q2ODEuOTg0UjRkNjQ4LjE5MlI1ZDQwLjk2UjZkODAwLjc2OFI3ZC0xMy4zMTJSOGQ3NTkuODA4UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTIzMlIxMmQ0MC45NlIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2hnOjExOW9SMWQxMDI0UjJhZDM0MC45OTJkNTc3LjUzNmQzNDcuMTM2ZDU0Ni44MTZkMzU0LjMwNGQ1MjYuODQ4ZDM2MS40NzJkNTA2Ljg4ZDM3My43NmQ0OTUuNjE2ZDM4Ni4wNDhkNDg0LjM1MmQ0MDQuOTkyZDQ3OS43NDRkNDIzLjkzNmQ0NzUuMTM1ZDQ1NC42NTZkNDc1LjEzNWQ0ODUuMzc2ZDQ3NS4xMzVkNTA0LjMyZDQ3OS43NDRkNTIzLjI2NGQ0ODQuMzUyZDUzNS4wNGQ0OTYuMTI4ZDU0Ni44MTZkNTA3LjkwNGQ1NTMuOTg0ZDUyNy4zNmQ1NjEuMTUyZDU0Ni44MTZkNTY4LjMyZDU3Ny41MzZkNjI5Ljc2ZDg0My43NzZkNjMxLjgwOGQ4NDMuNzc2ZDY5Ny4zNDRkNTQyLjcyZDcwNC41MTJkNTEzLjAyNGQ3MjMuOTY4ZDQ5NC4wOGQ3NDMuNDI0ZDQ3NS4xMzVkNzg4LjQ4ZDQ3NS4xMzVkODM1LjU4NGQ0NzUuMTM1ZDg2MS4xODRkNTAxLjI0N2Q4ODYuNzg0ZDUyNy4zNmQ4ODYuNzg0ZDU2Mi4xNzVkODg2Ljc4NGQ1ODIuNjU2ZDg4Mi4xNzZkNjAzLjEzNmQ4NzcuNTY4ZDYyMy42MTZkODY2LjMwNGQ2NTYuMzg0ZDc3NC4xNDRkOTM5LjAwOGQ3NjMuOTA0ZDk3MC43NTJkNzUzLjY2NGQ5OTAuMjA4ZDc0My40MjRkMTAwOS42NjRkNzI5LjZkMTAxOS45MDRkNzE1Ljc3NmQxMDMwLjE0NGQ2OTcuMzQ0ZDEwMzMuNzI4ZDY3OC45MTJkMTAzNy4zMTFkNjUxLjI2NGQxMDM3LjMxMWQ2MjEuNTY4ZDEwMzcuMzExZDU5OC4wMTZkMTAzNC43NTJkNTc0LjQ2NGQxMDMyLjE5MmQ1NTcuMDU2ZDEwMjEuOTUyZDUzOS42NDhkMTAxMS43MTJkNTI2Ljg0OGQ5OTEuNzQ0ZDUxNC4wNDhkOTcxLjc3NmQ1MDUuODU2ZDkzNS45MzZkNDU1LjY4ZDcxMC42NTZkNDUzLjYzMmQ3MTAuNjU2ZDQwMy40NTZkOTM1LjkzNmQzOTUuMjY0ZDk3MS43NzZkMzgyLjQ2NGQ5OTEuNzQ0ZDM2OS42NjRkMTAxMS43MTJkMzUyLjI1NmQxMDIxLjk1MmQzMzQuODQ4ZDEwMzIuMTkyZDMxMS4yOTZkMTAzNC43NTJkMjg3Ljc0NGQxMDM3LjMxMWQyNTguMDQ4ZDEwMzcuMzExZDIzMC40ZDEwMzcuMzExZDIxMS45NjhkMTAzMy43MjhkMTkzLjUzNmQxMDMwLjE0NGQxNzkuNzEyZDEwMTkuOTA0ZDE2NS44ODhkMTAwOS42NjRkMTU1LjY0OGQ5OTAuMjA4ZDE0NS40MDhkOTcwLjc1MmQxMzUuMTY4ZDkzOS4wMDhkNDMuMDA4ZDY1Ni4zODRkMzEuNzQ0ZDYyMy42MTZkMjcuMTM2ZDYwMy4xMzZkMjIuNTI4ZDU4Mi42NTZkMjIuNTI4ZDU2Mi4xNzVkMjIuNTI4ZDUyNy4zNmQ0OC4xMjhkNTAxLjI0N2Q3My43MjhkNDc1LjEzNWQxMjAuODMyZDQ3NS4xMzVkMTY1Ljg4OGQ0NzUuMTM1ZDE4NS4zNDRkNDk0LjA4ZDIwNC44ZDUxMy4wMjRkMjExLjk2OGQ1NDIuNzJkMjgzLjY0OGQ4NDMuNzc2ZDI4NS42OTZkODQzLjc3NmQzNDAuOTkyZDU3Ny41MzZoUjNkOTA5LjMxMlI0ZDg4Ni43ODRSNWQyMi41MjhSNmQ1NDguODY0UjdkLTEzLjMxMlI4ZDUyNi4zMzZSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTE5UjEyZDIyLjUyOFIxM2Q5MDkuMzEyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kyaTJpMmkzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kyaTJpMmkzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kyaTJpMmhnOjIzMW9SMWQxMDI0UjJhZDQwLjk2ZDc1NS43MTJkNDAuOTZkNjgzLjAwOGQ2NGQ2MzAuMjcxZDg3LjA0ZDU3Ny41MzZkMTI4ZDU0Mi43MmQxNjguOTZkNTA3LjkwNGQyMjMuMjMyZDQ5MS41MmQyNzcuNTA0ZDQ3NS4xMzVkMzQwLjk5MmQ0NzUuMTM1ZDM5Ni4yODhkNDc1LjEzNWQ0NDEuMzQ0ZDQ4Ny40MjRkNDg2LjRkNDk5LjcxMmQ1MTguNjU2ZDUxOS42OGQ1NTAuOTEyZDUzOS42NDdkNTY4LjMyZDU2NS43NmQ1ODUuNzI4ZDU5MS44NzJkNTg1LjcyOGQ2MTkuNTJkNTg1LjcyOGQ2NTUuMzZkNTYzLjcxMmQ2NzYuMzUyZDU0MS42OTZkNjk3LjM0NGQ1MDkuOTUyZDY5Ny4zNDRkNDg5LjQ3MmQ2OTcuMzQ0ZDQ3My42ZDY4NS41NjhkNDU3LjcyOGQ2NzMuNzkxZDQ0MS4zNDRkNjU5Ljk2OGQ0MjQuOTZkNjQ2LjE0NGQ0MDQuOTkyZDYzNC4zNjdkMzg1LjAyNGQ2MjIuNTkyZDM1Ny4zNzZkNjIyLjU5MmQzMjQuNjA4ZDYyMi41OTJkMzA0LjEyOGQ2MzQuODhkMjgzLjY0OGQ2NDcuMTY4ZDI3Mi4zODRkNjY1LjU5OWQyNjEuMTJkNjg0LjAzMWQyNTYuNTEyZDcwNy4wNzJkMjUxLjkwNGQ3MzAuMTEyZDI1MS45MDRkNzUxLjYxNmQyNTEuOTA0ZDc3OC4yNGQyNTYuNTEyZDgwMi44MTZkMjYxLjEyZDgyNy4zOTJkMjcyLjM4NGQ4NDYuODQ4ZDI4My42NDhkODY2LjMwNGQzMDIuMDhkODc4LjA3OWQzMjAuNTEyZDg4OS44NTZkMzQ4LjE2ZDg4OS44NTZkMzc0Ljc4NGQ4ODkuODU2ZDM5NC43NTJkODc4LjA3OWQ0MTQuNzJkODY2LjMwNGQ0MzMuMTUyZDg1Mi40OGQ0NTEuNTg0ZDgzOC42NTZkNDY5LjUwNGQ4MjYuODhkNDg3LjQyNGQ4MTUuMTA0ZDUwOC45MjhkODE1LjEwNGQ1NDYuODE2ZDgxNS4xMDRkNTY3LjI5NmQ4NDAuMTkyZDU4Ny43NzZkODY1LjI4ZDU4Ny43NzZkODkyLjkyOGQ1ODcuNzc2ZDkwOS4zMTJkNTc1LjQ4OGQ5MzMuODg4ZDU2My4yZDk1OC40NjRkNTM0LjUyOGQ5ODEuNTA0ZDUwNS44NTZkMTAwNC41NDRkNDU4Ljc1MmQxMDIwLjkyOGQ0MTEuNjQ4ZDEwMzcuMzExZDM0MC45OTJkMTAzNy4zMTFkMzMwLjc1MmQxMDM3LjMxMWQzMjYuNjU2ZDEwMzYuMjg4ZDMwOS4yNDhkMTA1My42OTZkMjk5LjAwOGQxMDc0LjE3NmQzMDguMjI0ZDEwNzMuMTUyZDMxNy45NTJkMTA3Mi4xMjhkMzI3LjY4ZDEwNzEuMTA0ZDMzOC45NDRkMTA3MS4xMDRkMzcyLjczNmQxMDcxLjEwNGQzOTkuODcyZDEwODkuMDI0ZDQyNy4wMDhkMTEwNi45NDRkNDI3LjAwOGQxMTQ3LjkwNGQ0MjcuMDA4ZDExNjYuMzM2ZDQxOS44NGQxMTgzLjc0NGQ0MTIuNjcyZDEyMDEuMTUyZDM5NC43NTJkMTIxNC40NjRkMzc2LjgzMmQxMjI3Ljc3NmQzNDcuNjQ4ZDEyMzUuOTY4ZDMxOC40NjRkMTI0NC4xNmQyNzUuNDU2ZDEyNDQuMTZkMjE4LjExMmQxMjQ0LjE2ZDE5Ny42MzJkMTIzMS44NzJkMTc3LjE1MmQxMjE5LjU4NGQxNzcuMTUyZDEyMDIuMTc2ZDE3Ny4xNTJkMTE4Ny44NGQxODMuMjk2ZDExODAuMTZkMTg5LjQ0ZDExNzIuNDhkMjA0LjhkMTE3Mi40OGQyMTkuMTM2ZDExNzIuNDhkMjMzLjQ3MmQxMTc3LjZkMjQ3LjgwOGQxMTgyLjcyZDI3MS4zNmQxMTgyLjcyZDI4NS42OTZkMTE4Mi43MmQyOTQuOTEyZDExNzUuMDRkMzA0LjEyOGQxMTY3LjM2ZDMwNC4xMjhkMTE1My4wMjRkMzA0LjEyOGQxMTQyLjc4NGQyOTcuOTg0ZDExMzUuMTA0ZDI5MS44NGQxMTI3LjQyNGQyODAuNTc2ZDExMjcuNDI0ZDI0OS44NTZkMTEyNy40MjRkMjIxLjE4NGQxMTI3LjQyNGQyMjEuMTg0ZDExMDQuODk2ZDIyMS4xODRkMTA5OC43NTJkMjIyLjIwOGQxMDkzLjYzMmQyMjMuMjMyZDEwODguNTEyZDIyNy44NGQxMDgwLjgzMmQyMzIuNDQ4ZDEwNzMuMTUyZDI0MS4xNTJkMTA2MC44NjRkMjQ5Ljg1NmQxMDQ4LjU3NmQyNjUuMjE2ZDEwMzAuMTQ0ZDIxNi4wNjRkMTAyMS45NTJkMTc1LjEwNGQxMDAwLjk2ZDEzNC4xNDRkOTc5Ljk2OGQxMDQuNDQ4ZDk0Ni4xNzZkNzQuNzUyZDkxMi4zODRkNTcuODU2ZDg2NC43NjhkNDAuOTZkODE3LjE1MmQ0MC45NmQ3NTUuNzEyaFIzZDYyNS42NjRSNGQ1ODcuNzc2UjVkNDAuOTZSNmQ1NDguODY0UjdkLTIyMC4xNlI4ZDUwNy45MDRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjMxUjEyZDQwLjk2UjEzZDYyNS42NjRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaGc6MTE4b1IxZDEwMjRSMmFkMzU2LjM1MmQ1NzAuMzY3ZDM2MS40NzJkNTQ4Ljg2NGQzNjguMTI4ZDUzMC45NDRkMzc0Ljc4NGQ1MTMuMDI0ZDM4Ni4wNDhkNTAwLjczNmQzOTcuMzEyZDQ4OC40NDhkNDE0LjIwOGQ0ODEuNzkyZDQzMS4xMDRkNDc1LjEzNWQ0NTYuNzA0ZDQ3NS4xMzVkNDk4LjY4OGQ0NzUuMTM1ZDUyNi4zMzZkNDk5LjJkNTUzLjk4NGQ1MjMuMjY0ZDU1My45ODRkNTY0LjIyM2Q1NTMuOTg0ZDU4NS43MjhkNTQ5LjM3NmQ2MDcuNzQzZDU0NC43NjhkNjI5Ljc2ZDUzMy41MDRkNjU5LjQ1NmQ0MjMuOTM2ZDk2NC42MDhkNDE0LjcyZDk5MS4yMzJkNDAyLjQzMmQxMDA1LjU2OGQzOTAuMTQ0ZDEwMTkuOTA0ZDM3My4yNDhkMTAyNy4wNzFkMzU2LjM1MmQxMDM0LjI0ZDMzNC4zMzZkMTAzNS43NzZkMzEyLjMyZDEwMzcuMzExZDI4NC42NzJkMTAzNy4zMTFkMjU4LjA0OGQxMDM3LjMxMWQyMzYuNTQ0ZDEwMzUuNzc2ZDIxNS4wNGQxMDM0LjI0ZDE5OC42NTZkMTAyNy4wNzFkMTgyLjI3MmQxMDE5LjkwNGQxNjkuOTg0ZDEwMDUuNTY4ZDE1Ny42OTZkOTkxLjIzMmQxNDguNDhkOTY0LjYwOGQzOC45MTJkNjU5LjQ1NmQyNy42NDhkNjI4LjczNmQyMS41MDRkNjA3LjIzMmQxNS4zNmQ1ODUuNzI4ZDE1LjM2ZDU2NC4yMjNkMTUuMzZkNTIzLjI2NGQ0My4wMDhkNDk5LjJkNzAuNjU2ZDQ3NS4xMzVkMTEyLjY0ZDQ3NS4xMzVkMTM4LjI0ZDQ3NS4xMzVkMTU1LjEzNmQ0ODAuMjU2ZDE3Mi4wMzJkNDg1LjM3NmQxODMuMjk2ZDQ5Ni42NGQxOTQuNTZkNTA3LjkwNGQyMDEuNzI4ZDUyNS44MjRkMjA4Ljg5NmQ1NDMuNzQzZDIxNi4wNjRkNTcwLjM2N2QyODYuNzJkODQyLjc1MmQyODguNzY4ZDg0Mi43NTJkMzU2LjM1MmQ1NzAuMzY3aFIzZDU2OS4zNDRSNGQ1NTMuOTg0UjVkMTUuMzZSNmQ1NDguODY0UjdkLTEzLjMxMlI4ZDUzMy41MDRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTE4UjEyZDE1LjM2UjEzZDU2OS4zNDRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTJpMmkyaGc6MjMwb1IxZDEwMjRSMmFkNDA0LjQ4ZDc4My4zNmQzOTMuMjE2ZDc5NS42NDhkMzc1LjgwOGQ4MDEuMjhkMzU4LjRkODA2LjkxMmQzMzkuNDU2ZDgwOS45ODRkMzIwLjUxMmQ4MTMuMDU2ZDMwMS41NjhkODE1LjYxNmQyODIuNjI0ZDgxOC4xNzVkMjY4LjI4OGQ4MjQuMzE5ZDI1NC45NzZkODI5LjQ0ZDI0Ny4yOTZkODQwLjE5MmQyMzkuNjE2ZDg1MC45NDRkMjM5LjYxNmQ4NjguMzUyZDIzOS42MTZkODkxLjkwNGQyNTkuMDcyZDkwNi4yNGQyNzguNTI4ZDkyMC41NzZkMzA0LjEyOGQ5MjAuNTc2ZDMyNi42NTZkOTIwLjU3NmQzNDUuMDg4ZDkxNC40MzJkMzYzLjUyZDkwOC4yODhkMzc2LjgzMmQ4OTcuNTM2ZDM5MC4xNDRkODg2Ljc4NGQzOTcuMzEyZDg3Mi45NmQ0MDQuNDhkODU5LjEzNmQ0MDQuNDhkODQzLjc3NmQ0MDQuNDhkNzgzLjM2ZDc4Mi4zMzZkNjk4LjM2N2Q3ODIuMzM2ZDY3MC43MmQ3NzQuMTQ0ZDY1MS43NzZkNzY1Ljk1MmQ2MzIuODMyZDc1Mi42NGQ2MjAuNTQ0ZDczOS4zMjhkNjA4LjI1NmQ3MjEuNDA4ZDYwMy4xMzZkNzAzLjQ4OGQ1OTguMDE2ZDY4NC4wMzJkNTk4LjAxNmQ2NjYuNjI0ZDU5OC4wMTZkNjQ5LjIxNmQ2MDMuMTM2ZDYzMS44MDhkNjA4LjI1NmQ2MTcuOTg0ZDYyMC4wMzFkNjA0LjE2ZDYzMS44MDhkNTk0Ljk0NGQ2NTEuMjY0ZDU4NS43MjhkNjcwLjcyZDU4NC43MDRkNjk4LjM2N2Q3ODIuMzM2ZDY5OC4zNjdkMjIuNTI4ZDg3MS40MjRkMjIuNTI4ZDgzNy42MzJkMzUuMzI4ZDgwOC45NmQ0OC4xMjhkNzgwLjI4OGQ3OS4zNmQ3NTguMjcxZDExMC41OTJkNzM2LjI1NmQxNjIuODE2ZDcyMS45MmQyMTUuMDRkNzA3LjU4NGQyOTMuODg4ZDcwMi40NjRkMzUzLjI4ZDY5OC4zNjdkMzc4LjM2OGQ2ODcuNjE2ZDQwMy40NTZkNjc2Ljg2NGQ0MDMuNDU2ZDY1MC4yNGQ0MDMuNDU2ZDU5OC4wMTZkMzE5LjQ4OGQ1OTguMDE2ZDI4NS42OTZkNTk4LjAxNmQyNjIuNjU2ZDYwOS4yOGQyMzkuNjE2ZDYyMC41NDRkMjIwLjE2ZDYzNC4zNjdkMjAwLjcwNGQ2NDguMTkyZDE4MS4yNDhkNjU5LjQ1NmQxNjEuNzkyZDY3MC43MmQxMzUuMTY4ZDY3MC43MmQxMDMuNDI0ZDY3MC43MmQ4Ni4wMTZkNjUyLjI4OGQ2OC42MDhkNjMzLjg1NmQ2OC42MDhkNTk0Ljk0NGQ2OC42MDhkNTY5LjM0NGQ4OS42ZDU0Ny4zMjhkMTEwLjU5MmQ1MjUuMzEyZDE0Ni40MzJkNTA5LjQzOWQxODIuMjcyZDQ5My41NjhkMjI4LjM1MmQ0ODQuMzUyZDI3NC40MzJkNDc1LjEzNWQzMjUuNjMyZDQ3NS4xMzVkMzc3Ljg1NmQ0NzUuMTM1ZDQxOS4zMjhkNDgzLjMyOGQ0NjAuOGQ0OTEuNTJkNDk2LjY0ZDUxNS4wNzJkNTczLjQ0ZDQ3NS4xMzVkNjczLjc5MmQ0NzUuMTM1ZDc2MS44NTZkNDc1LjEzNWQ4MjEuMjQ4ZDUwMS43NmQ4ODAuNjRkNTI4LjM4NGQ5MTUuOTY4ZDU2Ni4yNzFkOTUxLjI5NmQ2MDQuMTZkOTY2LjE0NGQ2NDUuNjMyZDk4MC45OTJkNjg3LjEwNGQ5ODAuOTkyZDcxNi44ZDk4MC45OTJkNzY0LjkyOGQ5NTcuOTUyZDc4My44NzJkOTM0LjkxMmQ4MDIuODE2ZDg4My43MTJkODAyLjgxNmQ1ODQuNzA0ZDgwMi44MTZkNTg4LjhkODU0LjAxNmQ2MTYuOTZkODg0LjIyM2Q2NDUuMTJkOTE0LjQzMmQ2OTcuMzQ0ZDkxNC40MzJkNzI2LjAxNmQ5MTQuNDMyZDc0OS41NjhkOTA0LjE5MmQ3NzMuMTJkODkzLjk1MmQ3OTUuMTM2ZDg4MS42NjRkODE3LjE1MmQ4NjkuMzc2ZDgzOC4xNDRkODU5LjEzNmQ4NTkuMTM2ZDg0OC44OTZkODgzLjcxMmQ4NDguODk2ZDkxMS4zNmQ4NDguODk2ZDkzMC4zMDRkODcwLjkxMmQ5NDkuMjQ4ZDg5Mi45MjhkOTQ5LjI0OGQ5MTguNTI4ZDk0OS4yNDhkOTQwLjAzMmQ5MzQuOTEyZDk2MS41MzZkOTIwLjU3NmQ5ODMuMDRkODg3LjgwOGQ5OTkuOTM2ZDg1NS4wNGQxMDE2LjgzMmQ4MDIuODE2ZDEwMjcuMDcxZDc1MC41OTJkMTAzNy4zMTFkNjczLjc5MmQxMDM3LjMxMWQ2MDkuMjhkMTAzNy4zMTFkNTU1LjUyZDEwMjEuNDRkNTAxLjc2ZDEwMDUuNTY4ZDQ1OC43NTJkOTcxLjc3NmQ0MDQuNDhkMTAxMC42ODhkMzQ0LjA2NGQxMDI0ZDI4My42NDhkMTAzNy4zMTFkMjIyLjIwOGQxMDM3LjMxMWQxNzguMTc2ZDEwMzcuMzExZDE0MS44MjRkMTAyOC4wOTZkMTA1LjQ3MmQxMDE4Ljg4ZDc4Ljg0OGQ5OTguOTEyZDUyLjIyNGQ5NzguOTQ0ZDM3LjM3NmQ5NDcuMmQyMi41MjhkOTE1LjQ1NmQyMi41MjhkODcxLjQyNGhSM2QxMDAzLjUyUjRkOTgwLjk5MlI1ZDIyLjUyOFI2ZDU0OC44NjRSN2QtMTMuMzEyUjhkNTI2LjMzNlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMzBSMTJkMjIuNTI4UjEzZDEwMDMuNTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkxaTNpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6MTE3b1IxZDEwMjRSMmFkNDE4LjgxNmQ1NzkuNTg0ZDQxOC44MTZkNTI1LjMxMmQ0NDguNTEyZDUwMC4yMjNkNDc4LjIwOGQ0NzUuMTM1ZDUyNC4yODhkNDc1LjEzNWQ1NzAuMzY4ZDQ3NS4xMzVkNjAwLjA2NGQ1MDAuMjIzZDYyOS43NmQ1MjUuMzEyZDYyOS43NmQ1NzkuNTg0ZDYyOS43NmQ5MzYuOTZkNjI5Ljc2ZDk4Ni4xMTJkNjA1LjE4NGQxMDExLjcxMmQ1ODAuNjA4ZDEwMzcuMzExZDUyOC4zODRkMTAzNy4zMTFkNDgxLjI4ZDEwMzcuMzExZDQ2MC4yODhkMTAxMS43MTJkNDM5LjI5NmQ5ODYuMTEyZDQzNC4xNzZkOTM3Ljk4NGQ0MzIuMTI4ZDkzNy45ODRkNDA1LjUwNGQ5ODYuMTEyZDM2Mi40OTZkMTAxMS43MTJkMzE5LjQ4OGQxMDM3LjMxMWQyNTguMDQ4ZDEwMzcuMzExZDIwMi43NTJkMTAzNy4zMTFkMTYzLjg0ZDEwMjEuNDRkMTI0LjkyOGQxMDA1LjU2OGQxMDAuMzUyZDk3Ny45MmQ3NS43NzZkOTUwLjI3MWQ2NGQ5MTIuMzg0ZDUyLjIyNGQ4NzQuNDk2ZDUyLjIyNGQ4MzAuNDY0ZDUyLjIyNGQ1NzkuNTg0ZDUyLjIyNGQ1MjUuMzEyZDgxLjkyZDUwMC4yMjNkMTExLjYxNmQ0NzUuMTM1ZDE1Ny42OTZkNDc1LjEzNWQyMDMuNzc2ZDQ3NS4xMzVkMjMzLjQ3MmQ1MDAuMjIzZDI2My4xNjhkNTI1LjMxMmQyNjMuMTY4ZDU3OS41ODRkMjYzLjE2OGQ3ODEuMzEyZDI2My4xNjhkODcxLjQyNGQzNDAuOTkyZDg3MS40MjRkMzc5LjkwNGQ4NzEuNDI0ZDM5OS4zNmQ4NDMuMjY0ZDQxOC44MTZkODE1LjEwNGQ0MTguODE2ZDc2Ni45NzZkNDE4LjgxNmQ1NzkuNTg0aFIzZDY4MS45ODRSNGQ2MjkuNzZSNWQ1Mi4yMjRSNmQ1NDguODY0UjdkLTEzLjMxMlI4ZDQ5Ni42NFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxMTdSMTJkNTIuMjI0UjEzZDY4MS45ODRSMTRhaTFpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kyaGc6MjI5b1IxZDEwMjRSMmFkMzA3LjJkMzE4LjQ2M2QzMDcuMmQzNDAuOTkxZDMyMy4wNzJkMzU2Ljg2NGQzMzguOTQ0ZDM3Mi43MzZkMzYxLjQ3MmQzNzIuNzM2ZDM4NGQzNzIuNzM2ZDM5OS44NzJkMzU2Ljg2NGQ0MTUuNzQ0ZDM0MC45OTFkNDE1Ljc0NGQzMTguNDYzZDQxNS43NDRkMjk1LjkzNmQzOTkuODcyZDI4MC4wNjNkMzg0ZDI2NC4xOTJkMzYxLjQ3MmQyNjQuMTkyZDMzOC45NDRkMjY0LjE5MmQzMjMuMDcyZDI4MC4wNjNkMzA3LjJkMjk1LjkzNmQzMDcuMmQzMTguNDYzZDQyNC45NmQ3ODMuMzZkNDEzLjY5NmQ3OTUuNjQ4ZDM5Ni4yODhkODAxLjI4ZDM3OC44OGQ4MDYuOTEyZDM1OS45MzZkODA5Ljk4NGQzNDAuOTkyZDgxMy4wNTZkMzIyLjA0OGQ4MTUuNjE2ZDMwMy4xMDRkODE4LjE3NWQyODguNzY4ZDgyNC4zMTlkMjc1LjQ1NmQ4MjkuNDRkMjY3Ljc3NmQ4NDAuMTkyZDI2MC4wOTZkODUwLjk0NGQyNjAuMDk2ZDg2OC4zNTJkMjYwLjA5NmQ4OTEuOTA0ZDI3OS41NTJkOTA2LjI0ZDI5OS4wMDhkOTIwLjU3NmQzMjQuNjA4ZDkyMC41NzZkMzQ3LjEzNmQ5MjAuNTc2ZDM2NS41NjhkOTE0LjQzMmQzODRkOTA4LjI4OGQzOTcuMzEyZDg5Ny41MzZkNDEwLjYyNGQ4ODYuNzg0ZDQxNy43OTJkODcyLjk2ZDQyNC45NmQ4NTkuMTM2ZDQyNC45NmQ4NDMuNzc2ZDQyNC45NmQ3ODMuMzZkMjM5LjYxNmQzMTguNDYzZDIzOS42MTZkMjkyLjg2NGQyNDkuMzQ0ZDI3MC44NDdkMjU5LjA3MmQyNDguODMyZDI3NS40NTZkMjMyLjQ0N2QyOTEuODRkMjE2LjA2M2QzMTMuODU2ZDIwNi4zMzZkMzM1Ljg3MmQxOTYuNjA3ZDM2MS40NzJkMTk2LjYwN2QzODcuMDcyZDE5Ni42MDdkNDA5LjA4OGQyMDYuMzM2ZDQzMS4xMDRkMjE2LjA2M2Q0NDcuNDg4ZDIzMi40NDdkNDYzLjg3MmQyNDguODMyZDQ3My42ZDI3MC44NDdkNDgzLjMyOGQyOTIuODY0ZDQ4My4zMjhkMzE4LjQ2M2Q0ODMuMzI4ZDM0NC4wNjNkNDczLjZkMzY2LjA4ZDQ2My44NzJkMzg4LjA5NmQ0NDcuNDg4ZDQwNC40OGQ0MzEuMTA0ZDQyMC44NjRkNDA5LjA4OGQ0MzAuNTkyZDM4Ny4wNzJkNDQwLjMxOWQzNjEuNDcyZDQ0MC4zMTlkMzM1Ljg3MmQ0NDAuMzE5ZDMxMy44NTZkNDMwLjU5MmQyOTEuODRkNDIwLjg2NGQyNzUuNDU2ZDQwNC40OGQyNTkuMDcyZDM4OC4wOTZkMjQ5LjM0NGQzNjYuMDhkMjM5LjYxNmQzNDQuMDYzZDIzOS42MTZkMzE4LjQ2M2Q2MjkuNzZkODY3LjMyOGQ2MjkuNzZkODk0Ljk3NmQ2MzIuODMyZDkxOS4wNGQ2MzUuOTA0ZDk0My4xMDRkNjM1LjkwNGQ5NjIuNTZkNjM1LjkwNGQ5ODIuMDE2ZDYyNy43MTJkOTk2LjM1MmQ2MTkuNTJkMTAxMC42ODhkNjA1LjY5NmQxMDE5LjkwNGQ1OTEuODcyZDEwMjkuMTE5ZDU3My45NTJkMTAzMy4yMTVkNTU2LjAzMmQxMDM3LjMxMWQ1MzcuNmQxMDM3LjMxMWQ0ODMuMzI4ZDEwMzcuMzExZDQ1OS43NzZkMTAxMi43MzZkNDM2LjIyNGQ5ODguMTZkNDMxLjEwNGQ5NTIuMzE5ZDQwMC4zODRkOTk4LjRkMzQ5LjE4NGQxMDE3Ljg1NmQyOTcuOTg0ZDEwMzcuMzExZDI0Mi42ODhkMTAzNy4zMTFkMTk4LjY1NmQxMDM3LjMxMWQxNjIuMzA0ZDEwMjguMDk2ZDEyNS45NTJkMTAxOC44OGQ5OS4zMjhkOTk4LjkxMmQ3Mi43MDRkOTc4Ljk0NGQ1Ny44NTZkOTQ3LjJkNDMuMDA4ZDkxNS40NTZkNDMuMDA4ZDg3MS40MjRkNDMuMDA4ZDgzNy42MzJkNTUuODA4ZDgwOC45NmQ2OC42MDhkNzgwLjI4OGQ5OS44NGQ3NTguMjcxZDEzMS4wNzJkNzM2LjI1NmQxODMuMjk2ZDcyMS45MmQyMzUuNTJkNzA3LjU4NGQzMTQuMzY4ZDcwMi40NjRkMzczLjc2ZDY5OC4zNjdkMzk5LjM2ZDY4Ny42MTZkNDI0Ljk2ZDY3Ni44NjRkNDI0Ljk2ZDY1MC4yNGQ0MjQuOTZkNTk4LjAxNmQzMzkuOTY4ZDU5OC4wMTZkMzA2LjE3NmQ1OTguMDE2ZDI4My4xMzZkNjA5LjI4ZDI2MC4wOTZkNjIwLjU0NGQyNDAuNjRkNjM0LjM2N2QyMjEuMTg0ZDY0OC4xOTJkMjAxLjcyOGQ2NTkuNDU2ZDE4Mi4yNzJkNjcwLjcyZDE1NS42NDhkNjcwLjcyZDEyMy45MDRkNjcwLjcyZDEwNi40OTZkNjUzLjgyNGQ4OS4wODhkNjM2LjkyOGQ4OS4wODhkNjA1LjE4NGQ4OS4wODhkNTc1LjQ4OGQxMDguNTQ0ZDU1MS40MjRkMTI4ZDUyNy4zNmQxNjIuODE2ZDUxMC40NjNkMTk3LjYzMmQ0OTMuNTY4ZDI0NC4yMjRkNDg0LjM1MmQyOTAuODE2ZDQ3NS4xMzVkMzQ2LjExMmQ0NzUuMTM1ZDM4OC4wOTZkNDc1LjEzNWQ0MzcuNzZkNDgxLjI4ZDQ4Ny40MjRkNDg3LjQyNGQ1MjkuOTJkNTA0LjMxOWQ1NzIuNDE2ZDUyMS4yMTZkNjAxLjA4OGQ1NTIuNDQ4ZDYyOS43NmQ1ODMuNjhkNjI5Ljc2ZDYzMi44MzJkNjI5Ljc2ZDg2Ny4zMjhoUjNkNjgxLjk4NFI0ZDYzNS45MDRSNWQ0My4wMDhSNmQ4MjcuMzkyUjdkLTEzLjMxMlI4ZDc4NC4zODRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMjI5UjEyZDQzLjAwOFIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJoZzoxMTZvUjFkMTAyNFIyYWQxMDQuNDQ4ZDQyMC44NjRkMTA0LjQ0OGQzNjUuNTY4ZDEzMS4wNzJkMzQwLjQ4ZDE1Ny42OTZkMzE1LjM5MWQyMDYuODQ4ZDMxNS4zOTFkMjU2ZDMxNS4zOTFkMjgyLjYyNGQzNDAuNDhkMzA5LjI0OGQzNjUuNTY4ZDMwOS4yNDhkNDIwLjg2NGQzMDkuMjQ4ZDQ4OC40NDhkMzcwLjY4OGQ0ODguNDQ4ZDQzNi4yMjRkNDg4LjQ0OGQ0MzYuMjI0ZDU0OS44ODdkNDM2LjIyNGQ2MTEuMzI4ZDM3MC42ODhkNjExLjMyOGQzMDkuMjQ4ZDYxMS4zMjhkMzA5LjI0OGQ4NTkuMTM2ZDMwOS4yNDhkODcxLjQyNGQzMTUuOTA0ZDg3Ny41NjhkMzIyLjU2ZDg4My43MTJkMzMyLjhkODgzLjcxMmQzOTMuMjE2ZDg4My43MTJkNDE0LjcyZDkwMi4xNDRkNDM2LjIyNGQ5MjAuNTc2ZDQzNi4yMjRkOTU3LjQ0ZDQzNi4yMjRkOTczLjgyNGQ0MzAuMDhkOTg4LjE2ZDQyMy45MzZkMTAwMi40OTZkNDA3LjU1MmQxMDEzLjI0OGQzOTEuMTY4ZDEwMjRkMzYyLjQ5NmQxMDMwLjY1NmQzMzMuODI0ZDEwMzcuMzExZDI4OC43NjhkMTAzNy4zMTFkMTk4LjY1NmQxMDM3LjMxMWQxNTEuNTUyZDk5Mi43NjhkMTA0LjQ0OGQ5NDguMjI0ZDEwNC40NDhkODU4LjExMmQxMDQuNDQ4ZDYxMS4zMjhkNjUuNTM2ZDYxMS4zMjhkMGQ2MTEuMzI4ZDBkNTQ5Ljg4N2QwZDQ4OC40NDhkNjUuNTM2ZDQ4OC40NDhkMTA0LjQ0OGQ0ODguNDQ4ZDEwNC40NDhkNDIwLjg2NGhSM2Q0MzYuMjI0UjRkNDM2LjIyNFI1ZDBSNmQ3MDguNjA4UjdkLTEzLjMxMlI4ZDcwOC42MDhSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTE2UjEyZDBSMTNkNDM2LjIyNFIxNGFpMWkzaTNpM2kzaTJpMmkzaTNpMmkyaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkyaTNpM2kyaTJoZzoyMjhvUjFkMTAyNFIyYWQ0MjQuOTZkNzgzLjM2ZDQxMy42OTZkNzk1LjY0OGQzOTYuMjg4ZDgwMS4yOGQzNzguODhkODA2LjkxMmQzNTkuOTM2ZDgwOS45ODRkMzQwLjk5MmQ4MTMuMDU2ZDMyMi4wNDhkODE1LjYxNmQzMDMuMTA0ZDgxOC4xNzVkMjg4Ljc2OGQ4MjQuMzE5ZDI3NS40NTZkODI5LjQ0ZDI2Ny43NzZkODQwLjE5MmQyNjAuMDk2ZDg1MC45NDRkMjYwLjA5NmQ4NjguMzUyZDI2MC4wOTZkODkxLjkwNGQyNzkuNTUyZDkwNi4yNGQyOTkuMDA4ZDkyMC41NzZkMzI0LjYwOGQ5MjAuNTc2ZDM0Ny4xMzZkOTIwLjU3NmQzNjUuNTY4ZDkxNC40MzJkMzg0ZDkwOC4yODhkMzk3LjMxMmQ4OTcuNTM2ZDQxMC42MjRkODg2Ljc4NGQ0MTcuNzkyZDg3Mi45NmQ0MjQuOTZkODU5LjEzNmQ0MjQuOTZkODQzLjc3NmQ0MjQuOTZkNzgzLjM2ZDM3MC42ODhkMzM0Ljg0N2QzNzAuNjg4ZDI5NS45MzZkMzk3LjgyNGQyNjguNzk5ZDQyNC45NmQyNDEuNjY0ZDQ2My44NzJkMjQxLjY2NGQ1MDIuNzg0ZDI0MS42NjRkNTI5LjkyZDI2OC43OTlkNTU3LjA1NmQyOTUuOTM2ZDU1Ny4wNTZkMzM0Ljg0N2Q1NTcuMDU2ZDM3My43NmQ1MjkuOTJkNDAwLjg5NWQ1MDIuNzg0ZDQyOC4wMzJkNDYzLjg3MmQ0MjguMDMyZDQyNC45NmQ0MjguMDMyZDM5Ny44MjRkNDAwLjg5NWQzNzAuNjg4ZDM3My43NmQzNzAuNjg4ZDMzNC44NDdkMTI0LjkyOGQzMzQuODQ3ZDEyNC45MjhkMjk1LjkzNmQxNTIuMDY0ZDI2OC43OTlkMTc5LjJkMjQxLjY2NGQyMTguMTEyZDI0MS42NjRkMjU3LjAyNGQyNDEuNjY0ZDI4NC4xNmQyNjguNzk5ZDMxMS4yOTZkMjk1LjkzNmQzMTEuMjk2ZDMzNC44NDdkMzExLjI5NmQzNzMuNzZkMjg0LjE2ZDQwMC44OTVkMjU3LjAyNGQ0MjguMDMyZDIxOC4xMTJkNDI4LjAzMmQxNzkuMmQ0MjguMDMyZDE1Mi4wNjRkNDAwLjg5NWQxMjQuOTI4ZDM3My43NmQxMjQuOTI4ZDMzNC44NDdkNjI5Ljc2ZDg2Ny4zMjhkNjI5Ljc2ZDg5NC45NzZkNjMyLjgzMmQ5MTkuMDRkNjM1LjkwNGQ5NDMuMTA0ZDYzNS45MDRkOTYyLjU2ZDYzNS45MDRkOTgyLjAxNmQ2MjcuNzEyZDk5Ni4zNTJkNjE5LjUyZDEwMTAuNjg4ZDYwNS42OTZkMTAxOS45MDRkNTkxLjg3MmQxMDI5LjExOWQ1NzMuOTUyZDEwMzMuMjE1ZDU1Ni4wMzJkMTAzNy4zMTFkNTM3LjZkMTAzNy4zMTFkNDgzLjMyOGQxMDM3LjMxMWQ0NTkuNzc2ZDEwMTIuNzM2ZDQzNi4yMjRkOTg4LjE2ZDQzMS4xMDRkOTUyLjMxOWQ0MDAuMzg0ZDk5OC40ZDM0OS4xODRkMTAxNy44NTZkMjk3Ljk4NGQxMDM3LjMxMWQyNDIuNjg4ZDEwMzcuMzExZDE5OC42NTZkMTAzNy4zMTFkMTYyLjMwNGQxMDI4LjA5NmQxMjUuOTUyZDEwMTguODhkOTkuMzI4ZDk5OC45MTJkNzIuNzA0ZDk3OC45NDRkNTcuODU2ZDk0Ny4yZDQzLjAwOGQ5MTUuNDU2ZDQzLjAwOGQ4NzEuNDI0ZDQzLjAwOGQ4MzcuNjMyZDU1LjgwOGQ4MDguOTZkNjguNjA4ZDc4MC4yODhkOTkuODRkNzU4LjI3MWQxMzEuMDcyZDczNi4yNTZkMTgzLjI5NmQ3MjEuOTJkMjM1LjUyZDcwNy41ODRkMzE0LjM2OGQ3MDIuNDY0ZDM3My43NmQ2OTguMzY3ZDM5OS4zNmQ2ODcuNjE2ZDQyNC45NmQ2NzYuODY0ZDQyNC45NmQ2NTAuMjRkNDI0Ljk2ZDU5OC4wMTZkMzM5Ljk2OGQ1OTguMDE2ZDMwNi4xNzZkNTk4LjAxNmQyODMuMTM2ZDYwOS4yOGQyNjAuMDk2ZDYyMC41NDRkMjQwLjY0ZDYzNC4zNjdkMjIxLjE4NGQ2NDguMTkyZDIwMS43MjhkNjU5LjQ1NmQxODIuMjcyZDY3MC43MmQxNTUuNjQ4ZDY3MC43MmQxMjMuOTA0ZDY3MC43MmQxMDYuNDk2ZDY1My44MjRkODkuMDg4ZDYzNi45MjhkODkuMDg4ZDYwNS4xODRkODkuMDg4ZDU3NS40ODhkMTA4LjU0NGQ1NTEuNDI0ZDEyOGQ1MjcuMzZkMTYyLjgxNmQ1MTAuNDYzZDE5Ny42MzJkNDkzLjU2OGQyNDQuMjI0ZDQ4NC4zNTJkMjkwLjgxNmQ0NzUuMTM1ZDM0Ni4xMTJkNDc1LjEzNWQzODguMDk2ZDQ3NS4xMzVkNDM3Ljc2ZDQ4MS4yOGQ0ODcuNDI0ZDQ4Ny40MjRkNTI5LjkyZDUwNC4zMTlkNTcyLjQxNmQ1MjEuMjE2ZDYwMS4wODhkNTUyLjQ0OGQ2MjkuNzZkNTgzLjY4ZDYyOS43NmQ2MzIuODMyZDYyOS43NmQ4NjcuMzI4aFIzZDY4MS45ODRSNGQ2MzUuOTA0UjVkNDMuMDA4UjZkNzgyLjMzNlI3ZC0xMy4zMTJSOGQ3MzkuMzI4UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTIyOFIxMmQ0My4wMDhSMTNkNjgxLjk4NFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJoZzoxMTVvUjFkMTAyNFIyYWQzNjAuNDQ4ZDg3OC41OTJkMzYwLjQ0OGQ4NjQuMjU2ZDM0OC4xNmQ4NTEuNDU2ZDMzNS44NzJkODM4LjY1NmQyOTEuODRkODI5LjQ0ZDIyOS4zNzZkODE2LjEyN2QxNzIuMDMyZDgwMy44NGQxMzMuNjMyZDc4Ny40NTZkOTUuMjMyZDc3MS4wNzJkNzIuMTkyZDc1MC4wNzlkNDkuMTUyZDcyOS4wODhkMzkuOTM2ZDcwNGQzMC43MmQ2NzguOTEyZDMwLjcyZDY0OS4yMTZkMzAuNzJkNjE4LjQ5NmQ0My41MmQ1ODcuMjY0ZDU2LjMyZDU1Ni4wMzFkODcuMDRkNTMxLjQ1NmQxMTcuNzZkNTA2Ljg4ZDE2OS45ODRkNDkxLjAwOGQyMjIuMjA4ZDQ3NS4xMzVkMzAxLjA1NmQ0NzUuMTM1ZDM0OC4xNmQ0NzUuMTM1ZDM5My43MjhkNDgxLjc5MmQ0MzkuMjk2ZDQ4OC40NDhkNDc1LjEzNmQ1MDIuNzg0ZDUxMC45NzZkNTE3LjEyZDUzMy41MDRkNTM5LjEzNmQ1NTYuMDMyZDU2MS4xNTJkNTU2LjAzMmQ1OTEuODcyZDU1Ni4wMzJkNjE5LjUyZDUzNi41NzZkNjM4LjQ2NGQ1MTcuMTJkNjU3LjQwOGQ0ODYuNGQ2NTcuNDA4ZDQ1OS43NzZkNjU3LjQwOGQ0NDAuODMyZDY0Ny4xNjhkNDIxLjg4OGQ2MzYuOTI4ZDQwMS45MmQ2MjQuNjRkMzgxLjk1MmQ2MTIuMzUyZDM1Ny4zNzZkNjAyLjExMmQzMzIuOGQ1OTEuODcyZDI5NC45MTJkNTkxLjg3MmQyMzUuNTJkNTkxLjg3MmQyMzUuNTJkNjI5Ljc2ZDIzNS41MmQ2NDUuMTJkMjQ3LjI5NmQ2NTQuMzM2ZDI1OS4wNzJkNjYzLjU1MmQzMDEuMDU2ZDY3Mi43NjhkMzkwLjE0NGQ2OTIuMjIzZDQ3Ny4xODRkNzExLjY4ZDUyNy4zNmQ3NDkuNTY4ZDU3Ny41MzZkNzg3LjQ1NmQ1NzcuNTM2ZDg1MS45NjhkNTc3LjUzNmQ4ODYuNzg0ZDU2My4yZDkyMC4wNjRkNTQ4Ljg2NGQ5NTMuMzQ0ZDUxNS4wNzJkOTc5LjQ1NmQ0ODEuMjhkMTAwNS41NjhkNDI1LjQ3MmQxMDIxLjQ0ZDM2OS42NjRkMTAzNy4zMTFkMjg2LjcyZDEwMzcuMzExZDIzNS41MmQxMDM3LjMxMWQxODguOTI4ZDEwMjkuNjMyZDE0Mi4zMzZkMTAyMS45NTJkMTA3LjAwOGQxMDA1LjU2OGQ3MS42OGQ5ODkuMTg0ZDUwLjY4OGQ5NjUuMTJkMjkuNjk2ZDk0MS4wNTZkMjkuNjk2ZDkwNy4yNjRkMjkuNjk2ZDg4MC42NGQ1MS43MTJkODYxLjY5NmQ3My43MjhkODQyLjc1MmQxMDQuNDQ4ZDg0Mi43NTJkMTI2Ljk3NmQ4NDIuNzUyZDE0NC44OTZkODU1LjA0ZDE2Mi44MTZkODY3LjMyOGQxODMuMjk2ZDg4MS42NjRkMjAzLjc3NmQ4OTZkMjI5Ljg4OGQ5MDguMjg4ZDI1NmQ5MjAuNTc2ZDI5My44ODhkOTIwLjU3NmQzMjcuNjhkOTIwLjU3NmQzNDQuMDY0ZDkwNy4yNjRkMzYwLjQ0OGQ4OTMuOTUyZDM2MC40NDhkODc4LjU5MmhSM2Q2MDcuMjMyUjRkNTc3LjUzNlI1ZDI5LjY5NlI2ZDU0OC44NjRSN2QtMTMuMzEyUjhkNTE5LjE2OFI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkxMTVSMTJkMjkuNjk2UjEzZDYwNy4yMzJSMTRhaTFpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjIyN29SMWQxMDI0UjJhZDQyNC45NmQ3ODMuMzZkNDEzLjY5NmQ3OTUuNjQ4ZDM5Ni4yODhkODAxLjI4ZDM3OC44OGQ4MDYuOTEyZDM1OS45MzZkODA5Ljk4NGQzNDAuOTkyZDgxMy4wNTZkMzIyLjA0OGQ4MTUuNjE2ZDMwMy4xMDRkODE4LjE3NWQyODguNzY4ZDgyNC4zMTlkMjc1LjQ1NmQ4MjkuNDRkMjY3Ljc3NmQ4NDAuMTkyZDI2MC4wOTZkODUwLjk0NGQyNjAuMDk2ZDg2OC4zNTJkMjYwLjA5NmQ4OTEuOTA0ZDI3OS41NTJkOTA2LjI0ZDI5OS4wMDhkOTIwLjU3NmQzMjQuNjA4ZDkyMC41NzZkMzQ3LjEzNmQ5MjAuNTc2ZDM2NS41NjhkOTE0LjQzMmQzODRkOTA4LjI4OGQzOTcuMzEyZDg5Ny41MzZkNDEwLjYyNGQ4ODYuNzg0ZDQxNy43OTJkODcyLjk2ZDQyNC45NmQ4NTkuMTM2ZDQyNC45NmQ4NDMuNzc2ZDQyNC45NmQ3ODMuMzZkMTUwLjUyOGQzNTcuMzc2ZDE1MC41MjhkMzM5Ljk2N2QxNTguMjA4ZDMyMi4wNDhkMTY1Ljg4OGQzMDQuMTI3ZDE4MC4yMjRkMjg5LjI4ZDE5NC41NmQyNzQuNDMyZDIxNC41MjhkMjY1LjIxNmQyMzQuNDk2ZDI1NmQyNTguMDQ4ZDI1NmQyODMuNjQ4ZDI1NmQzMDMuNjE2ZDI2MS4xMmQzMjMuNTg0ZDI2Ni4yNGQzMzkuNDU2ZDI3Mi4zODRkMzU1LjMyOGQyNzguNTI4ZDM2OC4xMjhkMjgzLjY0OGQzODAuOTI4ZDI4OC43NjhkMzkyLjE5MmQyODguNzY4ZDQwNS41MDRkMjg4Ljc2OGQ0MTQuNzJkMjgzLjY0OGQ0MjMuOTM2ZDI3OC41MjhkNDMyLjY0ZDI3Mi4zODRkNDQxLjM0NGQyNjYuMjRkNDUxLjA3MmQyNjEuMTJkNDYwLjhkMjU2ZDQ3Ni4xNmQyNTZkNDk4LjY4OGQyNTZkNTE1LjA3MmQyNzIuMzg0ZDUzMS40NTZkMjg4Ljc2OGQ1MzEuNDU2ZDMxNC4zNjdkNTMxLjQ1NmQzMzEuNzc1ZDUyMy43NzZkMzUwLjIwN2Q1MTYuMDk2ZDM2OC42NGQ1MDEuNzZkMzgyLjk3NmQ0ODcuNDI0ZDM5Ny4zMTJkNDY3LjQ1NmQ0MDYuNTI4ZDQ0Ny40ODhkNDE1Ljc0NGQ0MjMuOTM2ZDQxNS43NDRkMzk4LjMzNmQ0MTUuNzQ0ZDM3OC4zNjhkNDEwLjYyNGQzNTguNGQ0MDUuNTA0ZDM0Mi41MjhkMzk5LjM2ZDMyNi42NTZkMzkzLjIxNmQzMTMuODU2ZDM4OC4wOTZkMzAxLjA1NmQzODIuOTc2ZDI4OS43OTJkMzgyLjk3NmQyNzUuNDU2ZDM4Mi45NzZkMjY2Ljc1MmQzODguMDk2ZDI1OC4wNDhkMzkzLjIxNmQyNDkuMzQ0ZDM5OS4zNmQyNDAuNjRkNDA1LjUwNGQyMzAuOTEyZDQxMC42MjRkMjIxLjE4NGQ0MTUuNzQ0ZDIwNS44MjRkNDE1Ljc0NGQxODMuMjk2ZDQxNS43NDRkMTY2LjkxMmQzOTkuMzZkMTUwLjUyOGQzODIuOTc2ZDE1MC41MjhkMzU3LjM3NmQ2MjkuNzZkODY3LjMyOGQ2MjkuNzZkODk0Ljk3NmQ2MzIuODMyZDkxOS4wNGQ2MzUuOTA0ZDk0My4xMDRkNjM1LjkwNGQ5NjIuNTZkNjM1LjkwNGQ5ODIuMDE2ZDYyNy43MTJkOTk2LjM1MmQ2MTkuNTJkMTAxMC42ODhkNjA1LjY5NmQxMDE5LjkwNGQ1OTEuODcyZDEwMjkuMTE5ZDU3My45NTJkMTAzMy4yMTVkNTU2LjAzMmQxMDM3LjMxMWQ1MzcuNmQxMDM3LjMxMWQ0ODMuMzI4ZDEwMzcuMzExZDQ1OS43NzZkMTAxMi43MzZkNDM2LjIyNGQ5ODguMTZkNDMxLjEwNGQ5NTIuMzE5ZDQwMC4zODRkOTk4LjRkMzQ5LjE4NGQxMDE3Ljg1NmQyOTcuOTg0ZDEwMzcuMzExZDI0Mi42ODhkMTAzNy4zMTFkMTk4LjY1NmQxMDM3LjMxMWQxNjIuMzA0ZDEwMjguMDk2ZDEyNS45NTJkMTAxOC44OGQ5OS4zMjhkOTk4LjkxMmQ3Mi43MDRkOTc4Ljk0NGQ1Ny44NTZkOTQ3LjJkNDMuMDA4ZDkxNS40NTZkNDMuMDA4ZDg3MS40MjRkNDMuMDA4ZDgzNy42MzJkNTUuODA4ZDgwOC45NmQ2OC42MDhkNzgwLjI4OGQ5OS44NGQ3NTguMjcxZDEzMS4wNzJkNzM2LjI1NmQxODMuMjk2ZDcyMS45MmQyMzUuNTJkNzA3LjU4NGQzMTQuMzY4ZDcwMi40NjRkMzczLjc2ZDY5OC4zNjdkMzk5LjM2ZDY4Ny42MTZkNDI0Ljk2ZDY3Ni44NjRkNDI0Ljk2ZDY1MC4yNGQ0MjQuOTZkNTk4LjAxNmQzMzkuOTY4ZDU5OC4wMTZkMzA2LjE3NmQ1OTguMDE2ZDI4My4xMzZkNjA5LjI4ZDI2MC4wOTZkNjIwLjU0NGQyNDAuNjRkNjM0LjM2N2QyMjEuMTg0ZDY0OC4xOTJkMjAxLjcyOGQ2NTkuNDU2ZDE4Mi4yNzJkNjcwLjcyZDE1NS42NDhkNjcwLjcyZDEyMy45MDRkNjcwLjcyZDEwNi40OTZkNjUzLjgyNGQ4OS4wODhkNjM2LjkyOGQ4OS4wODhkNjA1LjE4NGQ4OS4wODhkNTc1LjQ4OGQxMDguNTQ0ZDU1MS40MjRkMTI4ZDUyNy4zNmQxNjIuODE2ZDUxMC40NjNkMTk3LjYzMmQ0OTMuNTY4ZDI0NC4yMjRkNDg0LjM1MmQyOTAuODE2ZDQ3NS4xMzVkMzQ2LjExMmQ0NzUuMTM1ZDM4OC4wOTZkNDc1LjEzNWQ0MzcuNzZkNDgxLjI4ZDQ4Ny40MjRkNDg3LjQyNGQ1MjkuOTJkNTA0LjMxOWQ1NzIuNDE2ZDUyMS4yMTZkNjAxLjA4OGQ1NTIuNDQ4ZDYyOS43NmQ1ODMuNjhkNjI5Ljc2ZDYzMi44MzJkNjI5Ljc2ZDg2Ny4zMjhoUjNkNjgxLjk4NFI0ZDYzNS45MDRSNWQ0My4wMDhSNmQ3NjhSN2QtMTMuMzEyUjhkNzI0Ljk5MlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMjdSMTJkNDMuMDA4UjEzZDY4MS45ODRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmhnOjExNG9SMWQxMDI0UjJhZDUyLjIyNGQ1NzkuNTg0ZDUyLjIyNGQ1MjUuMzEyZDgwLjM4NGQ1MDAuMjIzZDEwOC41NDRkNDc1LjEzNWQxNDcuNDU2ZDQ3NS4xMzVkMTg2LjM2OGQ0NzUuMTM1ZDIxNC4wMTZkNDk5LjJkMjQxLjY2NGQ1MjMuMjY0ZDI0MS42NjRkNTgzLjY4ZDI0MS42NjRkNjI0LjY0ZDI0My43MTJkNjI0LjY0ZDI3MC4zMzZkNTUwLjkxMmQzMDIuNTkyZDUxMy4wMjRkMzM0Ljg0OGQ0NzUuMTM1ZDM4MC45MjhkNDc1LjEzNWQ0MDUuNTA0ZDQ3NS4xMzVkNDIxLjg4OGQ0ODMuODRkNDM4LjI3MmQ0OTIuNTQ0ZDQ0OGQ1MDYuMzY3ZDQ1Ny43MjhkNTIwLjE5MmQ0NjIuMzM2ZDUzNy41OTlkNDY2Ljk0NGQ1NTUuMDA4ZDQ2Ni45NDRkNTcyLjQxNWQ0NjYuOTQ0ZDYxMS4zMjhkNDUxLjU4NGQ2MzUuMzkyZDQzNi4yMjRkNjU5LjQ1NmQ0MDkuNmQ2NjYuNjI0ZDM1Mi4yNTZkNjgwLjk2ZDMzMC43NTJkNjg2LjA3OWQzMTQuMzY4ZDY5My43NmQyOTcuOTg0ZDcwMS40NGQyODYuNzJkNzEzLjIxNmQyNzUuNDU2ZDcyNC45OTJkMjY5LjMxMmQ3NDIuOTEyZDI2My4xNjhkNzYwLjgzMmQyNjMuMTY4ZDc4Ni40MzJkMjYzLjE2OGQ5MzIuODY0ZDI2My4xNjhkOTg3LjEzNmQyMzMuNDcyZDEwMTIuMjI0ZDIwMy43NzZkMTAzNy4zMTFkMTU3LjY5NmQxMDM3LjMxMWQxMTEuNjE2ZDEwMzcuMzExZDgxLjkyZDEwMTIuMjI0ZDUyLjIyNGQ5ODcuMTM2ZDUyLjIyNGQ5MzIuODY0ZDUyLjIyNGQ1NzkuNTg0aFIzZDQ5Mi41NDRSNGQ0NjYuOTQ0UjVkNTIuMjI0UjZkNTQ4Ljg2NFI3ZC0xMy4zMTJSOGQ0OTYuNjRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTE0UjEyZDUyLjIyNFIxM2Q0OTIuNTQ0UjE0YWkxaTNpM2kzaTNpMmkyaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpMmkzaTNpM2kzaTJoZzoyMjZvUjFkMTAyNFIyYWQ0MjQuOTZkNzgzLjM2ZDQxMy42OTZkNzk1LjY0OGQzOTYuMjg4ZDgwMS4yOGQzNzguODhkODA2LjkxMmQzNTkuOTM2ZDgwOS45ODRkMzQwLjk5MmQ4MTMuMDU2ZDMyMi4wNDhkODE1LjYxNmQzMDMuMTA0ZDgxOC4xNzVkMjg4Ljc2OGQ4MjQuMzE5ZDI3NS40NTZkODI5LjQ0ZDI2Ny43NzZkODQwLjE5MmQyNjAuMDk2ZDg1MC45NDRkMjYwLjA5NmQ4NjguMzUyZDI2MC4wOTZkODkxLjkwNGQyNzkuNTUyZDkwNi4yNGQyOTkuMDA4ZDkyMC41NzZkMzI0LjYwOGQ5MjAuNTc2ZDM0Ny4xMzZkOTIwLjU3NmQzNjUuNTY4ZDkxNC40MzJkMzg0ZDkwOC4yODhkMzk3LjMxMmQ4OTcuNTM2ZDQxMC42MjRkODg2Ljc4NGQ0MTcuNzkyZDg3Mi45NmQ0MjQuOTZkODU5LjEzNmQ0MjQuOTZkODQzLjc3NmQ0MjQuOTZkNzgzLjM2ZDE1NS42NDhkMzc0Ljc4NGQxNTUuNjQ4ZDM2OC42NGQxNTguNzJkMzU5LjkzNmQxNjEuNzkyZDM1MS4yMzJkMTcxLjAwOGQzMzkuOTY3ZDE4MC4yMjRkMzI4LjcwM2QxOTYuNjA4ZDMxMi44MzJkMjEyLjk5MmQyOTYuOTZkMjM5LjYxNmQyNzYuNDhkMjYxLjEyZDI1OS4wNzJkMjc1LjQ1NmQyNDguODMyZDI4OS43OTJkMjM4LjU5MWQzMDAuNTQ0ZDIzMi45NmQzMTEuMjk2ZDIyNy4zMjdkMzIwLjUxMmQyMjUuNzkyZDMyOS43MjhkMjI0LjI1NWQzNDAuOTkyZDIyNC4yNTVkMzUyLjI1NmQyMjQuMjU1ZDM2MS40NzJkMjI1Ljc5MmQzNzAuNjg4ZDIyNy4zMjdkMzgxLjQ0ZDIzMi45NmQzOTIuMTkyZDIzOC41OTFkNDA2LjUyOGQyNDguODMyZDQyMC44NjRkMjU5LjA3MmQ0NDIuMzY4ZDI3Ni40OGQ0NjguOTkyZDI5Ni45NmQ0ODUuMzc2ZDMxMi44MzJkNTAxLjc2ZDMyOC43MDNkNTEwLjk3NmQzMzkuOTY3ZDUyMC4xOTJkMzUxLjIzMmQ1MjMuMjY0ZDM1OS45MzZkNTI2LjMzNmQzNjguNjRkNTI2LjMzNmQzNzQuNzg0ZDUyNi4zMzZkMzk2LjI4OGQ1MTEuNDg4ZDQxNS43NDRkNDk2LjY0ZDQzNS4xOTlkNDY4Ljk5MmQ0MzUuMTk5ZDQ2MC44ZDQzNS4xOTlkNDUwLjA0OGQ0MzEuNjE2ZDQzOS4yOTZkNDI4LjAzMmQ0MjQuOTZkNDE4LjMwNGQ0MTAuNjI0ZDQwOC41NzZkMzkwLjE0NGQzOTIuNzAzZDM2OS42NjRkMzc2LjgzMmQzNDAuOTkyZDM1Mi4yNTZkMzEyLjMyZDM3Ni44MzJkMjkxLjg0ZDM5Mi43MDNkMjcxLjM2ZDQwOC41NzZkMjU3LjAyNGQ0MTguMzA0ZDI0Mi42ODhkNDI4LjAzMmQyMzEuOTM2ZDQzMS42MTZkMjIxLjE4NGQ0MzUuMTk5ZDIxMi45OTJkNDM1LjE5OWQxODUuMzQ0ZDQzNS4xOTlkMTcwLjQ5NmQ0MTUuNzQ0ZDE1NS42NDhkMzk2LjI4OGQxNTUuNjQ4ZDM3NC43ODRkNjI5Ljc2ZDg2Ny4zMjhkNjI5Ljc2ZDg5NC45NzZkNjMyLjgzMmQ5MTkuMDRkNjM1LjkwNGQ5NDMuMTA0ZDYzNS45MDRkOTYyLjU2ZDYzNS45MDRkOTgyLjAxNmQ2MjcuNzEyZDk5Ni4zNTJkNjE5LjUyZDEwMTAuNjg4ZDYwNS42OTZkMTAxOS45MDRkNTkxLjg3MmQxMDI5LjExOWQ1NzMuOTUyZDEwMzMuMjE1ZDU1Ni4wMzJkMTAzNy4zMTFkNTM3LjZkMTAzNy4zMTFkNDgzLjMyOGQxMDM3LjMxMWQ0NTkuNzc2ZDEwMTIuNzM2ZDQzNi4yMjRkOTg4LjE2ZDQzMS4xMDRkOTUyLjMxOWQ0MDAuMzg0ZDk5OC40ZDM0OS4xODRkMTAxNy44NTZkMjk3Ljk4NGQxMDM3LjMxMWQyNDIuNjg4ZDEwMzcuMzExZDE5OC42NTZkMTAzNy4zMTFkMTYyLjMwNGQxMDI4LjA5NmQxMjUuOTUyZDEwMTguODhkOTkuMzI4ZDk5OC45MTJkNzIuNzA0ZDk3OC45NDRkNTcuODU2ZDk0Ny4yZDQzLjAwOGQ5MTUuNDU2ZDQzLjAwOGQ4NzEuNDI0ZDQzLjAwOGQ4MzcuNjMyZDU1LjgwOGQ4MDguOTZkNjguNjA4ZDc4MC4yODhkOTkuODRkNzU4LjI3MWQxMzEuMDcyZDczNi4yNTZkMTgzLjI5NmQ3MjEuOTJkMjM1LjUyZDcwNy41ODRkMzE0LjM2OGQ3MDIuNDY0ZDM3My43NmQ2OTguMzY3ZDM5OS4zNmQ2ODcuNjE2ZDQyNC45NmQ2NzYuODY0ZDQyNC45NmQ2NTAuMjRkNDI0Ljk2ZDU5OC4wMTZkMzM5Ljk2OGQ1OTguMDE2ZDMwNi4xNzZkNTk4LjAxNmQyODMuMTM2ZDYwOS4yOGQyNjAuMDk2ZDYyMC41NDRkMjQwLjY0ZDYzNC4zNjdkMjIxLjE4NGQ2NDguMTkyZDIwMS43MjhkNjU5LjQ1NmQxODIuMjcyZDY3MC43MmQxNTUuNjQ4ZDY3MC43MmQxMjMuOTA0ZDY3MC43MmQxMDYuNDk2ZDY1My44MjRkODkuMDg4ZDYzNi45MjhkODkuMDg4ZDYwNS4xODRkODkuMDg4ZDU3NS40ODhkMTA4LjU0NGQ1NTEuNDI0ZDEyOGQ1MjcuMzZkMTYyLjgxNmQ1MTAuNDYzZDE5Ny42MzJkNDkzLjU2OGQyNDQuMjI0ZDQ4NC4zNTJkMjkwLjgxNmQ0NzUuMTM1ZDM0Ni4xMTJkNDc1LjEzNWQzODguMDk2ZDQ3NS4xMzVkNDM3Ljc2ZDQ4MS4yOGQ0ODcuNDI0ZDQ4Ny40MjRkNTI5LjkyZDUwNC4zMTlkNTcyLjQxNmQ1MjEuMjE2ZDYwMS4wODhkNTUyLjQ0OGQ2MjkuNzZkNTgzLjY4ZDYyOS43NmQ2MzIuODMyZDYyOS43NmQ4NjcuMzI4aFIzZDY4MS45ODRSNGQ2MzUuOTA0UjVkNDMuMDA4UjZkNzk5Ljc0NFI3ZC0xMy4zMTJSOGQ3NTYuNzM2UjlkMjI3LjMyOFIxMGQyMjcuMzI4UjExaTIyNlIxMmQ0My4wMDhSMTNkNjgxLjk4NFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaGc6MTEzb1IxZDEwMjRSMmFkNDI4LjAzMmQ3NTUuNzEyZDQyOC4wMzJkNjk4LjM2N2Q0MDguNTc2ZDY2My41NTJkMzg5LjEyZDYyOC43MzZkMzQzLjA0ZDYyOC43MzZkMzE2LjQxNmQ2MjguNzM2ZDI5OC40OTZkNjM5LjQ4OGQyODAuNTc2ZDY1MC4yNGQyNzAuMzM2ZDY2OC4xNmQyNjAuMDk2ZDY4Ni4wNzlkMjU2ZDcwNy41ODRkMjUxLjkwNGQ3MjkuMDg4ZDI1MS45MDRkNzUwLjU5MmQyNTEuOTA0ZDc3NC4xNDRkMjU2LjUxMmQ3OTUuNjQ4ZDI2MS4xMmQ4MTcuMTUyZDI3Mi4zODRkODM0LjA0OGQyODMuNjQ4ZDg1MC45NDRkMzAxLjU2OGQ4NjEuMTg0ZDMxOS40ODhkODcxLjQyNGQzNDcuMTM2ZDg3MS40MjRkMzgxLjk1MmQ4NzEuNDI0ZDQwNC45OTJkODQxLjcyOGQ0MjguMDMyZDgxMi4wMzFkNDI4LjAzMmQ3NTUuNzEyZDQyNC45NmQ5NTUuMzkyZDQyMi45MTJkOTU1LjM5MmQzOTkuMzZkOTkyLjI1NmQzNjMuMDA4ZDEwMTQuNzg0ZDMyNi42NTZkMTAzNy4zMTFkMjc0LjQzMmQxMDM3LjMxMWQyMDcuODcyZDEwMzcuMzExZDE2My4zMjhkMTAwOC4xMjhkMTE4Ljc4NGQ5NzguOTQ0ZDkxLjY0OGQ5MzYuNDQ4ZDY0LjUxMmQ4OTMuOTUyZDUyLjczNmQ4NDUuMzEyZDQwLjk2ZDc5Ni42NzJkNDAuOTZkNzU3Ljc2ZDQwLjk2ZDY5My4yNDhkNTcuODU2ZDY0MS4wMjRkNzQuNzUyZDU4OC44ZDEwNS40NzJkNTUxLjkzNWQxMzYuMTkyZDUxNS4wNzJkMTgwLjczNmQ0OTUuMTA0ZDIyNS4yOGQ0NzUuMTM1ZDI4MC41NzZkNDc1LjEzNWQzMDMuMTA0ZDQ3NS4xMzVkMzI4LjcwNGQ0ODAuNzY4ZDM1NC4zMDRkNDg2LjRkMzc3LjM0NGQ0OTguMTc2ZDQwMC4zODRkNTA5Ljk1MmQ0MTcuNzkyZDUyNy44NzJkNDM1LjJkNTQ1Ljc5MWQ0NDEuMzQ0ZDU3MS4zOTJkNDQzLjM5MmQ1NzEuMzkyZDQ0My4zOTJkNTMwLjQzMmQ0NjYuNDMyZDUwMi43ODRkNDg5LjQ3MmQ0NzUuMTM1ZDUzNS41NTJkNDc1LjEzNWQ2MjkuNzZkNDc1LjEzNWQ2MjkuNzZkNTc3LjUzNmQ2MjkuNzZkMTEzMC40OTZkNjI5Ljc2ZDExODUuNzkyZDYwMy4xMzZkMTIxMC44OGQ1NzYuNTEyZDEyMzUuOTY4ZDUyNy4zNmQxMjM1Ljk2OGQ0NzguMjA4ZDEyMzUuOTY4ZDQ1MS41ODRkMTIxMC44OGQ0MjQuOTZkMTE4NS43OTJkNDI0Ljk2ZDExMzAuNDk2ZDQyNC45NmQ5NTUuMzkyaFIzZDY4MS45ODRSNGQ2MjkuNzZSNWQ0MC45NlI2ZDU0OC44NjRSN2QtMjExLjk2OFI4ZDUwNy45MDRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTEzUjEyZDQwLjk2UjEzZDY4MS45ODRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkyaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTJpM2kzaTNpM2kyaGc6MjI1b1IxZDEwMjRSMmFkNDI0Ljk2ZDc4My4zNmQ0MTMuNjk2ZDc5NS42NDhkMzk2LjI4OGQ4MDEuMjhkMzc4Ljg4ZDgwNi45MTJkMzU5LjkzNmQ4MDkuOTg0ZDM0MC45OTJkODEzLjA1NmQzMjIuMDQ4ZDgxNS42MTZkMzAzLjEwNGQ4MTguMTc1ZDI4OC43NjhkODI0LjMxOWQyNzUuNDU2ZDgyOS40NGQyNjcuNzc2ZDg0MC4xOTJkMjYwLjA5NmQ4NTAuOTQ0ZDI2MC4wOTZkODY4LjM1MmQyNjAuMDk2ZDg5MS45MDRkMjc5LjU1MmQ5MDYuMjRkMjk5LjAwOGQ5MjAuNTc2ZDMyNC42MDhkOTIwLjU3NmQzNDcuMTM2ZDkyMC41NzZkMzY1LjU2OGQ5MTQuNDMyZDM4NGQ5MDguMjg4ZDM5Ny4zMTJkODk3LjUzNmQ0MTAuNjI0ZDg4Ni43ODRkNDE3Ljc5MmQ4NzIuOTZkNDI0Ljk2ZDg1OS4xMzZkNDI0Ljk2ZDg0My43NzZkNDI0Ljk2ZDc4My4zNmQzNjkuNjY0ZDI1Ny4wMjRkMzk1LjI2NGQyMzQuNDk1ZDQwOC41NzZkMjI4Ljg2NGQ0MjEuODg4ZDIyMy4yMzFkNDM3LjI0OGQyMjMuMjMxZDQ0Ny40ODhkMjIzLjIzMWQ0NTkuMjY0ZDIyNy44NGQ0NzEuMDRkMjMyLjQ0N2Q0ODAuMjU2ZDI0MS4xNTFkNDg5LjQ3MmQyNDkuODU2ZDQ5NS42MTZkMjYxLjEyZDUwMS43NmQyNzIuMzg0ZDUwMS43NmQyODUuNjk2ZDUwMS43NmQzMTYuNDE1ZDQ3My4wODhkMzM5Ljk2N2QzODguMDk2ZDQxMi42NzJkMzc0Ljc4NGQ0MjMuOTM2ZDM2NS41NjhkNDMwLjU5MmQzNTYuMzUyZDQzNy4yNDdkMzQ4LjY3MmQ0NDAuODMyZDM0MC45OTJkNDQ0LjQxNWQzMzQuMzM2ZDQ0NS40MzlkMzI3LjY4ZDQ0Ni40NjNkMzIwLjUxMmQ0NDYuNDYzZDMwOS4yNDhkNDQ2LjQ2M2QyOTcuOTg0ZDQ0MS44NTZkMjg2LjcyZDQzNy4yNDdkMjc3LjUwNGQ0MjguNTQ0ZDI2OC4yODhkNDE5Ljg0ZDI2Mi4xNDRkNDA4LjU3NmQyNTZkMzk3LjMxMmQyNTZkMzg0ZDI1NmQzNTMuMjhkMjg0LjY3MmQzMjkuNzI3ZDM2OS42NjRkMjU3LjAyNGQ2MjkuNzZkODY3LjMyOGQ2MjkuNzZkODk0Ljk3NmQ2MzIuODMyZDkxOS4wNGQ2MzUuOTA0ZDk0My4xMDRkNjM1LjkwNGQ5NjIuNTZkNjM1LjkwNGQ5ODIuMDE2ZDYyNy43MTJkOTk2LjM1MmQ2MTkuNTJkMTAxMC42ODhkNjA1LjY5NmQxMDE5LjkwNGQ1OTEuODcyZDEwMjkuMTE5ZDU3My45NTJkMTAzMy4yMTVkNTU2LjAzMmQxMDM3LjMxMWQ1MzcuNmQxMDM3LjMxMWQ0ODMuMzI4ZDEwMzcuMzExZDQ1OS43NzZkMTAxMi43MzZkNDM2LjIyNGQ5ODguMTZkNDMxLjEwNGQ5NTIuMzE5ZDQwMC4zODRkOTk4LjRkMzQ5LjE4NGQxMDE3Ljg1NmQyOTcuOTg0ZDEwMzcuMzExZDI0Mi42ODhkMTAzNy4zMTFkMTk4LjY1NmQxMDM3LjMxMWQxNjIuMzA0ZDEwMjguMDk2ZDEyNS45NTJkMTAxOC44OGQ5OS4zMjhkOTk4LjkxMmQ3Mi43MDRkOTc4Ljk0NGQ1Ny44NTZkOTQ3LjJkNDMuMDA4ZDkxNS40NTZkNDMuMDA4ZDg3MS40MjRkNDMuMDA4ZDgzNy42MzJkNTUuODA4ZDgwOC45NmQ2OC42MDhkNzgwLjI4OGQ5OS44NGQ3NTguMjcxZDEzMS4wNzJkNzM2LjI1NmQxODMuMjk2ZDcyMS45MmQyMzUuNTJkNzA3LjU4NGQzMTQuMzY4ZDcwMi40NjRkMzczLjc2ZDY5OC4zNjdkMzk5LjM2ZDY4Ny42MTZkNDI0Ljk2ZDY3Ni44NjRkNDI0Ljk2ZDY1MC4yNGQ0MjQuOTZkNTk4LjAxNmQzMzkuOTY4ZDU5OC4wMTZkMzA2LjE3NmQ1OTguMDE2ZDI4My4xMzZkNjA5LjI4ZDI2MC4wOTZkNjIwLjU0NGQyNDAuNjRkNjM0LjM2N2QyMjEuMTg0ZDY0OC4xOTJkMjAxLjcyOGQ2NTkuNDU2ZDE4Mi4yNzJkNjcwLjcyZDE1NS42NDhkNjcwLjcyZDEyMy45MDRkNjcwLjcyZDEwNi40OTZkNjUzLjgyNGQ4OS4wODhkNjM2LjkyOGQ4OS4wODhkNjA1LjE4NGQ4OS4wODhkNTc1LjQ4OGQxMDguNTQ0ZDU1MS40MjRkMTI4ZDUyNy4zNmQxNjIuODE2ZDUxMC40NjNkMTk3LjYzMmQ0OTMuNTY4ZDI0NC4yMjRkNDg0LjM1MmQyOTAuODE2ZDQ3NS4xMzVkMzQ2LjExMmQ0NzUuMTM1ZDM4OC4wOTZkNDc1LjEzNWQ0MzcuNzZkNDgxLjI4ZDQ4Ny40MjRkNDg3LjQyNGQ1MjkuOTJkNTA0LjMxOWQ1NzIuNDE2ZDUyMS4yMTZkNjAxLjA4OGQ1NTIuNDQ4ZDYyOS43NmQ1ODMuNjhkNjI5Ljc2ZDYzMi44MzJkNjI5Ljc2ZDg2Ny4zMjhoUjNkNjgxLjk4NFI0ZDYzNS45MDRSNWQ0My4wMDhSNmQ4MDAuNzY4UjdkLTEzLjMxMlI4ZDc1Ny43NlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMjVSMTJkNDMuMDA4UjEzZDY4MS45ODRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkxaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJoZzoxMTJvUjFkMTAyNFIyYWQyNTMuOTUyZDc1NS43MTJkMjUzLjk1MmQ4MTIuMDMxZDI3Ni45OTJkODQxLjcyOGQzMDAuMDMyZDg3MS40MjRkMzM0Ljg0OGQ4NzEuNDI0ZDM2Mi40OTZkODcxLjQyNGQzODAuNDE2ZDg2MS4xODRkMzk4LjMzNmQ4NTAuOTQ0ZDQwOS42ZDgzNC4wNDhkNDIwLjg2NGQ4MTcuMTUyZDQyNS40NzJkNzk1LjY0OGQ0MzAuMDhkNzc0LjE0NGQ0MzAuMDhkNzUwLjU5MmQ0MzAuMDhkNzI5LjA4OGQ0MjUuOTg0ZDcwNy41ODRkNDIxLjg4OGQ2ODYuMDc5ZDQxMS42NDhkNjY4LjE2ZDQwMS40MDhkNjUwLjI0ZDM4My40ODhkNjM5LjQ4OGQzNjUuNTY4ZDYyOC43MzZkMzM4Ljk0NGQ2MjguNzM2ZDI5Mi44NjRkNjI4LjczNmQyNzMuNDA4ZDY2My41NTJkMjUzLjk1MmQ2OTguMzY3ZDI1My45NTJkNzU1LjcxMmQ1Mi4yMjRkNTc3LjUzNmQ1Mi4yMjRkNDc1LjEzNWQxNDYuNDMyZDQ3NS4xMzVkMTkyLjUxMmQ0NzUuMTM1ZDIxNS41NTJkNTAyLjc4NGQyMzguNTkyZDUzMC40MzJkMjM4LjU5MmQ1NzEuMzkyZDI0MC42NGQ1NzEuMzkyZDI0Ni43ODRkNTQ1Ljc5MWQyNjQuMTkyZDUyNy44NzJkMjgxLjZkNTA5Ljk1MmQzMDQuNjRkNDk4LjE3NmQzMjcuNjhkNDg2LjRkMzUzLjI4ZDQ4MC43NjhkMzc4Ljg4ZDQ3NS4xMzVkNDAxLjQwOGQ0NzUuMTM1ZDQ1Ni43MDRkNDc1LjEzNWQ1MDEuMjQ4ZDQ5NS4xMDRkNTQ1Ljc5MmQ1MTUuMDcyZDU3Ni41MTJkNTUxLjkzNWQ2MDcuMjMyZDU4OC44ZDYyNC4xMjhkNjQxLjAyNGQ2NDEuMDI0ZDY5My4yNDhkNjQxLjAyNGQ3NTcuNzZkNjQxLjAyNGQ3OTYuNjcyZDYyOS4yNDhkODQ1LjMxMmQ2MTcuNDcyZDg5My45NTJkNTkwLjMzNmQ5MzYuNDQ4ZDU2My4yZDk3OC45NDRkNTE4LjE0NGQxMDA4LjEyOGQ0NzMuMDg4ZDEwMzcuMzExZDQwNy41NTJkMTAzNy4zMTFkMzU1LjMyOGQxMDM3LjMxMWQzMTguOTc2ZDEwMTQuNzg0ZDI4Mi42MjRkOTkyLjI1NmQyNTkuMDcyZDk1NS4zOTJkMjU3LjAyNGQ5NTUuMzkyZDI1Ny4wMjRkMTEzMC40OTZkMjU3LjAyNGQxMTg1Ljc5MmQyMzAuNGQxMjEwLjg4ZDIwMy43NzZkMTIzNS45NjhkMTU0LjYyNGQxMjM1Ljk2OGQxMDUuNDcyZDEyMzUuOTY4ZDc4Ljg0OGQxMjEwLjg4ZDUyLjIyNGQxMTg1Ljc5MmQ1Mi4yMjRkMTEzMC40OTZkNTIuMjI0ZDU3Ny41MzZoUjNkNjgxLjk4NFI0ZDY0MS4wMjRSNWQ1Mi4yMjRSNmQ1NDguODY0UjdkLTIxMS45NjhSOGQ0OTYuNjRSOWQyMjcuMzI4UjEwZDIyNy4zMjhSMTFpMTEyUjEyZDUyLjIyNFIxM2Q2ODEuOTg0UjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkyaTNpM2kzaTNpMmhnOjIyNG9SMWQxMDI0UjJhZDQyNC45NmQ3ODMuMzZkNDEzLjY5NmQ3OTUuNjQ4ZDM5Ni4yODhkODAxLjI4ZDM3OC44OGQ4MDYuOTEyZDM1OS45MzZkODA5Ljk4NGQzNDAuOTkyZDgxMy4wNTZkMzIyLjA0OGQ4MTUuNjE2ZDMwMy4xMDRkODE4LjE3NWQyODguNzY4ZDgyNC4zMTlkMjc1LjQ1NmQ4MjkuNDRkMjY3Ljc3NmQ4NDAuMTkyZDI2MC4wOTZkODUwLjk0NGQyNjAuMDk2ZDg2OC4zNTJkMjYwLjA5NmQ4OTEuOTA0ZDI3OS41NTJkOTA2LjI0ZDI5OS4wMDhkOTIwLjU3NmQzMjQuNjA4ZDkyMC41NzZkMzQ3LjEzNmQ5MjAuNTc2ZDM2NS41NjhkOTE0LjQzMmQzODRkOTA4LjI4OGQzOTcuMzEyZDg5Ny41MzZkNDEwLjYyNGQ4ODYuNzg0ZDQxNy43OTJkODcyLjk2ZDQyNC45NmQ4NTkuMTM2ZDQyNC45NmQ4NDMuNzc2ZDQyNC45NmQ3ODMuMzZkMjA4Ljg5NmQzMzkuOTY3ZDE4MC4yMjRkMzE2LjQxNWQxODAuMjI0ZDI4NS42OTZkMTgwLjIyNGQyNzIuMzg0ZDE4Ni4zNjhkMjYxLjEyZDE5Mi41MTJkMjQ5Ljg1NmQyMDEuNzI4ZDI0MS4xNTFkMjEwLjk0NGQyMzIuNDQ3ZDIyMi4yMDhkMjI3Ljg0ZDIzMy40NzJkMjIzLjIzMWQyNDQuNzM2ZDIyMy4yMzFkMjUxLjkwNGQyMjMuMjMxZDI1OC41NmQyMjQuMjU1ZDI2NS4yMTZkMjI1LjI3OWQyNzIuODk2ZDIyOC44NjRkMjgwLjU3NmQyMzIuNDQ3ZDI4OS43OTJkMjM5LjEwM2QyOTkuMDA4ZDI0NS43NmQzMTIuMzJkMjU3LjAyNGQzOTcuMzEyZDMyOS43MjdkNDI1Ljk4NGQzNTMuMjhkNDI1Ljk4NGQzODRkNDI1Ljk4NGQzOTcuMzEyZDQxOS44NGQ0MDguNTc2ZDQxMy42OTZkNDE5Ljg0ZDQwNC40OGQ0MjguNTQ0ZDM5NS4yNjRkNDM3LjI0N2QzODMuNDg4ZDQ0MS44NTZkMzcxLjcxMmQ0NDYuNDYzZDM2MS40NzJkNDQ2LjQ2M2QzNDYuMTEyZDQ0Ni40NjNkMzMyLjhkNDQwLjgzMmQzMTkuNDg4ZDQzNS4xOTlkMjkzLjg4OGQ0MTIuNjcyZDIwOC44OTZkMzM5Ljk2N2Q2MjkuNzZkODY3LjMyOGQ2MjkuNzZkODk0Ljk3NmQ2MzIuODMyZDkxOS4wNGQ2MzUuOTA0ZDk0My4xMDRkNjM1LjkwNGQ5NjIuNTZkNjM1LjkwNGQ5ODIuMDE2ZDYyNy43MTJkOTk2LjM1MmQ2MTkuNTJkMTAxMC42ODhkNjA1LjY5NmQxMDE5LjkwNGQ1OTEuODcyZDEwMjkuMTE5ZDU3My45NTJkMTAzMy4yMTVkNTU2LjAzMmQxMDM3LjMxMWQ1MzcuNmQxMDM3LjMxMWQ0ODMuMzI4ZDEwMzcuMzExZDQ1OS43NzZkMTAxMi43MzZkNDM2LjIyNGQ5ODguMTZkNDMxLjEwNGQ5NTIuMzE5ZDQwMC4zODRkOTk4LjRkMzQ5LjE4NGQxMDE3Ljg1NmQyOTcuOTg0ZDEwMzcuMzExZDI0Mi42ODhkMTAzNy4zMTFkMTk4LjY1NmQxMDM3LjMxMWQxNjIuMzA0ZDEwMjguMDk2ZDEyNS45NTJkMTAxOC44OGQ5OS4zMjhkOTk4LjkxMmQ3Mi43MDRkOTc4Ljk0NGQ1Ny44NTZkOTQ3LjJkNDMuMDA4ZDkxNS40NTZkNDMuMDA4ZDg3MS40MjRkNDMuMDA4ZDgzNy42MzJkNTUuODA4ZDgwOC45NmQ2OC42MDhkNzgwLjI4OGQ5OS44NGQ3NTguMjcxZDEzMS4wNzJkNzM2LjI1NmQxODMuMjk2ZDcyMS45MmQyMzUuNTJkNzA3LjU4NGQzMTQuMzY4ZDcwMi40NjRkMzczLjc2ZDY5OC4zNjdkMzk5LjM2ZDY4Ny42MTZkNDI0Ljk2ZDY3Ni44NjRkNDI0Ljk2ZDY1MC4yNGQ0MjQuOTZkNTk4LjAxNmQzMzkuOTY4ZDU5OC4wMTZkMzA2LjE3NmQ1OTguMDE2ZDI4My4xMzZkNjA5LjI4ZDI2MC4wOTZkNjIwLjU0NGQyNDAuNjRkNjM0LjM2N2QyMjEuMTg0ZDY0OC4xOTJkMjAxLjcyOGQ2NTkuNDU2ZDE4Mi4yNzJkNjcwLjcyZDE1NS42NDhkNjcwLjcyZDEyMy45MDRkNjcwLjcyZDEwNi40OTZkNjUzLjgyNGQ4OS4wODhkNjM2LjkyOGQ4OS4wODhkNjA1LjE4NGQ4OS4wODhkNTc1LjQ4OGQxMDguNTQ0ZDU1MS40MjRkMTI4ZDUyNy4zNmQxNjIuODE2ZDUxMC40NjNkMTk3LjYzMmQ0OTMuNTY4ZDI0NC4yMjRkNDg0LjM1MmQyOTAuODE2ZDQ3NS4xMzVkMzQ2LjExMmQ0NzUuMTM1ZDM4OC4wOTZkNDc1LjEzNWQ0MzcuNzZkNDgxLjI4ZDQ4Ny40MjRkNDg3LjQyNGQ1MjkuOTJkNTA0LjMxOWQ1NzIuNDE2ZDUyMS4yMTZkNjAxLjA4OGQ1NTIuNDQ4ZDYyOS43NmQ1ODMuNjhkNjI5Ljc2ZDYzMi44MzJkNjI5Ljc2ZDg2Ny4zMjhoUjNkNjgxLjk4NFI0ZDYzNS45MDRSNWQ0My4wMDhSNmQ4MDAuNzY4UjdkLTEzLjMxMlI4ZDc1Ny43NlI5ZDIyNy4zMjhSMTBkMjI3LjMyOFIxMWkyMjRSMTJkNDMuMDA4UjEzZDY4MS45ODRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkxaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kyaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJoZ2h5ODpmb250TmFtZXkzMjpIZWx2ZXRpY2ElMjBSb3VuZGVkJTIwTFQlMjBCbGFja2c"}];
var __map_reserved = {}
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
var DataView = $global.DataView || js_html_compat_DataView;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
var this1;
this1 = new Uint32Array(256);
lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16 = this1;
var _g = 0;
while(_g < 256) {
	var i = _g++;
	var val = Math.ceil(i * 257.00392156862745);
	lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[i] = val;
}
var this2;
this2 = new Uint8Array(510);
lime_math_color__$RGBA_RGBA_$Impl_$.__clamp = this2;
var _g1 = 0;
while(_g1 < 255) {
	var i1 = _g1++;
	lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[i1] = i1;
}
var _g11 = 255;
var _g2 = 511;
while(_g11 < _g2) {
	var i2 = _g11++;
	lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[i2] = 255;
}
lime_system_CFFI.available = false;
lime_system_CFFI.enabled = false;
if(window.createjs != null) createjs.Sound.alternateExtensions = ["ogg","mp3","wav"];
openfl_ui_Multitouch.maxTouchPoints = 2;
openfl_ui_Multitouch.supportedGestures = null;
openfl_ui_Multitouch.supportsGestureEvents = false;
openfl_display_DisplayObject.__instanceCount = 0;
openfl_display_DisplayObject.__worldRenderDirty = 0;
openfl_display_DisplayObject.__worldTransformDirty = 0;
openfl_display_DisplayObject.__cacheAsBitmapMode = false;
Main.screenWidth = 640;
Main.screenHeight = 480;
Main.NOMINAL_WIDTH = 640;
Main.NOMINAL_HEIGHT = 480;
openfl_text_Font.__registeredFonts = [];
Helvetica.resourceName = "LIME_font_Helvetica";
openfl_display_BitmapData.__isGLES = null;
Splash.resourceType = "image/png";
Splash.resourceName = "__ASSET__:bitmap_Splash";
Bar.resourceType = "image/png";
Bar.resourceName = "__ASSET__:bitmap_Bar";
Preloader.color = 0;
Preloader.backgroundColor = 0;
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
gameplay_AnimatedDecoration.FPS = 20;
gameplay_Box.FPS = 30;
gameplay_Collectable.FPS = 30;
gameplay_Explotion.FPS = 30;
gameplay_Mine.FPS = 30;
gameplay_Omnitrix.FPS = 30;
gameplay_SpeedMod.FPS = 30;
gameplay_Trap.FPS = 30;
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = Type;
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.CODES = null;
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ds_ObjectMap.count = 0;
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var x = new haxe__$Int64__$_$_$Int64(0,0);
	$r = x;
	return $r;
}(this));
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	if(__map_reserved.lt != null) h.setReserved("lt","<"); else h.h["lt"] = "<";
	if(__map_reserved.gt != null) h.setReserved("gt",">"); else h.h["gt"] = ">";
	if(__map_reserved.amp != null) h.setReserved("amp","&"); else h.h["amp"] = "&";
	if(__map_reserved.quot != null) h.setReserved("quot","\""); else h.h["quot"] = "\"";
	if(__map_reserved.apos != null) h.setReserved("apos","'"); else h.h["apos"] = "'";
	$r = h;
	return $r;
}(this));
hud_GUI.level = 1;
hud_GUI.score = 0;
joypad_Joypad.enabledX = true;
js_Boot.__toStr = {}.toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
lime_Assets.cache = new lime_AssetCache();
lime_Assets.libraries = new haxe_ds_StringMap();
lime_Assets.onChange = new lime_app_Event_$Void_$Void();
lime_Assets.initialized = false;
lime__$backend_html5_HTML5Window.windowID = 0;
lime_app_Preloader.images = new haxe_ds_StringMap();
lime_app_Preloader.loaders = new haxe_ds_StringMap();
lime_audio_openal_AL.NONE = 0;
lime_audio_openal_AL.FALSE = 0;
lime_audio_openal_AL.TRUE = 1;
lime_audio_openal_AL.SOURCE_RELATIVE = 514;
lime_audio_openal_AL.CONE_INNER_ANGLE = 4097;
lime_audio_openal_AL.CONE_OUTER_ANGLE = 4098;
lime_audio_openal_AL.PITCH = 4099;
lime_audio_openal_AL.POSITION = 4100;
lime_audio_openal_AL.DIRECTION = 4101;
lime_audio_openal_AL.VELOCITY = 4102;
lime_audio_openal_AL.LOOPING = 4103;
lime_audio_openal_AL.BUFFER = 4105;
lime_audio_openal_AL.GAIN = 4106;
lime_audio_openal_AL.MIN_GAIN = 4109;
lime_audio_openal_AL.MAX_GAIN = 4110;
lime_audio_openal_AL.ORIENTATION = 4111;
lime_audio_openal_AL.SOURCE_STATE = 4112;
lime_audio_openal_AL.INITIAL = 4113;
lime_audio_openal_AL.PLAYING = 4114;
lime_audio_openal_AL.PAUSED = 4115;
lime_audio_openal_AL.STOPPED = 4116;
lime_audio_openal_AL.BUFFERS_QUEUED = 4117;
lime_audio_openal_AL.BUFFERS_PROCESSED = 4118;
lime_audio_openal_AL.REFERENCE_DISTANCE = 4128;
lime_audio_openal_AL.ROLLOFF_FACTOR = 4129;
lime_audio_openal_AL.CONE_OUTER_GAIN = 4130;
lime_audio_openal_AL.MAX_DISTANCE = 4131;
lime_audio_openal_AL.SEC_OFFSET = 4132;
lime_audio_openal_AL.SAMPLE_OFFSET = 4133;
lime_audio_openal_AL.BYTE_OFFSET = 4134;
lime_audio_openal_AL.SOURCE_TYPE = 4135;
lime_audio_openal_AL.STATIC = 4136;
lime_audio_openal_AL.STREAMING = 4137;
lime_audio_openal_AL.UNDETERMINED = 4144;
lime_audio_openal_AL.FORMAT_MONO8 = 4352;
lime_audio_openal_AL.FORMAT_MONO16 = 4353;
lime_audio_openal_AL.FORMAT_STEREO8 = 4354;
lime_audio_openal_AL.FORMAT_STEREO16 = 4355;
lime_audio_openal_AL.FREQUENCY = 8193;
lime_audio_openal_AL.BITS = 8194;
lime_audio_openal_AL.CHANNELS = 8195;
lime_audio_openal_AL.SIZE = 8196;
lime_audio_openal_AL.NO_ERROR = 0;
lime_audio_openal_AL.INVALID_NAME = 40961;
lime_audio_openal_AL.INVALID_ENUM = 40962;
lime_audio_openal_AL.INVALID_VALUE = 40963;
lime_audio_openal_AL.INVALID_OPERATION = 40964;
lime_audio_openal_AL.OUT_OF_MEMORY = 40965;
lime_audio_openal_AL.VENDOR = 45057;
lime_audio_openal_AL.VERSION = 45058;
lime_audio_openal_AL.RENDERER = 45059;
lime_audio_openal_AL.EXTENSIONS = 45060;
lime_audio_openal_AL.DOPPLER_FACTOR = 49152;
lime_audio_openal_AL.SPEED_OF_SOUND = 49155;
lime_audio_openal_AL.DOPPLER_VELOCITY = 49153;
lime_audio_openal_AL.DISTANCE_MODEL = 53248;
lime_audio_openal_AL.INVERSE_DISTANCE = 53249;
lime_audio_openal_AL.INVERSE_DISTANCE_CLAMPED = 53250;
lime_audio_openal_AL.LINEAR_DISTANCE = 53251;
lime_audio_openal_AL.LINEAR_DISTANCE_CLAMPED = 53252;
lime_audio_openal_AL.EXPONENT_DISTANCE = 53253;
lime_audio_openal_AL.EXPONENT_DISTANCE_CLAMPED = 53254;
lime_audio_openal_ALC.FALSE = 0;
lime_audio_openal_ALC.TRUE = 1;
lime_audio_openal_ALC.FREQUENCY = 4103;
lime_audio_openal_ALC.REFRESH = 4104;
lime_audio_openal_ALC.SYNC = 4105;
lime_audio_openal_ALC.MONO_SOURCES = 4112;
lime_audio_openal_ALC.STEREO_SOURCES = 4113;
lime_audio_openal_ALC.NO_ERROR = 0;
lime_audio_openal_ALC.INVALID_DEVICE = 40961;
lime_audio_openal_ALC.INVALID_CONTEXT = 40962;
lime_audio_openal_ALC.INVALID_ENUM = 40963;
lime_audio_openal_ALC.INVALID_VALUE = 40964;
lime_audio_openal_ALC.OUT_OF_MEMORY = 40965;
lime_audio_openal_ALC.ATTRIBUTES_SIZE = 4098;
lime_audio_openal_ALC.ALL_ATTRIBUTES = 4099;
lime_audio_openal_ALC.DEFAULT_DEVICE_SPECIFIER = 4100;
lime_audio_openal_ALC.DEVICE_SPECIFIER = 4101;
lime_audio_openal_ALC.EXTENSIONS = 4102;
lime_audio_openal_ALC.ENUMERATE_ALL_EXT = 1;
lime_audio_openal_ALC.DEFAULT_ALL_DEVICES_SPECIFIER = 4114;
lime_audio_openal_ALC.ALL_DEVICES_SPECIFIER = 4115;
lime_graphics_Image.__base64Chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
lime_graphics_cairo__$CairoFTFontFace_CairoFTFontFace_$Impl_$.FT_LOAD_FORCE_AUTOHINT = 32;
lime_graphics_opengl_GL.DEPTH_BUFFER_BIT = 256;
lime_graphics_opengl_GL.STENCIL_BUFFER_BIT = 1024;
lime_graphics_opengl_GL.COLOR_BUFFER_BIT = 16384;
lime_graphics_opengl_GL.POINTS = 0;
lime_graphics_opengl_GL.LINES = 1;
lime_graphics_opengl_GL.LINE_LOOP = 2;
lime_graphics_opengl_GL.LINE_STRIP = 3;
lime_graphics_opengl_GL.TRIANGLES = 4;
lime_graphics_opengl_GL.TRIANGLE_STRIP = 5;
lime_graphics_opengl_GL.TRIANGLE_FAN = 6;
lime_graphics_opengl_GL.ZERO = 0;
lime_graphics_opengl_GL.ONE = 1;
lime_graphics_opengl_GL.SRC_COLOR = 768;
lime_graphics_opengl_GL.ONE_MINUS_SRC_COLOR = 769;
lime_graphics_opengl_GL.SRC_ALPHA = 770;
lime_graphics_opengl_GL.ONE_MINUS_SRC_ALPHA = 771;
lime_graphics_opengl_GL.DST_ALPHA = 772;
lime_graphics_opengl_GL.ONE_MINUS_DST_ALPHA = 773;
lime_graphics_opengl_GL.DST_COLOR = 774;
lime_graphics_opengl_GL.ONE_MINUS_DST_COLOR = 775;
lime_graphics_opengl_GL.SRC_ALPHA_SATURATE = 776;
lime_graphics_opengl_GL.FUNC_ADD = 32774;
lime_graphics_opengl_GL.BLEND_EQUATION = 32777;
lime_graphics_opengl_GL.BLEND_EQUATION_RGB = 32777;
lime_graphics_opengl_GL.BLEND_EQUATION_ALPHA = 34877;
lime_graphics_opengl_GL.FUNC_SUBTRACT = 32778;
lime_graphics_opengl_GL.FUNC_REVERSE_SUBTRACT = 32779;
lime_graphics_opengl_GL.BLEND_DST_RGB = 32968;
lime_graphics_opengl_GL.BLEND_SRC_RGB = 32969;
lime_graphics_opengl_GL.BLEND_DST_ALPHA = 32970;
lime_graphics_opengl_GL.BLEND_SRC_ALPHA = 32971;
lime_graphics_opengl_GL.CONSTANT_COLOR = 32769;
lime_graphics_opengl_GL.ONE_MINUS_CONSTANT_COLOR = 32770;
lime_graphics_opengl_GL.CONSTANT_ALPHA = 32771;
lime_graphics_opengl_GL.ONE_MINUS_CONSTANT_ALPHA = 32772;
lime_graphics_opengl_GL.BLEND_COLOR = 32773;
lime_graphics_opengl_GL.ARRAY_BUFFER = 34962;
lime_graphics_opengl_GL.ELEMENT_ARRAY_BUFFER = 34963;
lime_graphics_opengl_GL.ARRAY_BUFFER_BINDING = 34964;
lime_graphics_opengl_GL.ELEMENT_ARRAY_BUFFER_BINDING = 34965;
lime_graphics_opengl_GL.STREAM_DRAW = 35040;
lime_graphics_opengl_GL.STATIC_DRAW = 35044;
lime_graphics_opengl_GL.DYNAMIC_DRAW = 35048;
lime_graphics_opengl_GL.BUFFER_SIZE = 34660;
lime_graphics_opengl_GL.BUFFER_USAGE = 34661;
lime_graphics_opengl_GL.CURRENT_VERTEX_ATTRIB = 34342;
lime_graphics_opengl_GL.FRONT = 1028;
lime_graphics_opengl_GL.BACK = 1029;
lime_graphics_opengl_GL.FRONT_AND_BACK = 1032;
lime_graphics_opengl_GL.CULL_FACE = 2884;
lime_graphics_opengl_GL.BLEND = 3042;
lime_graphics_opengl_GL.DITHER = 3024;
lime_graphics_opengl_GL.STENCIL_TEST = 2960;
lime_graphics_opengl_GL.DEPTH_TEST = 2929;
lime_graphics_opengl_GL.SCISSOR_TEST = 3089;
lime_graphics_opengl_GL.POLYGON_OFFSET_FILL = 32823;
lime_graphics_opengl_GL.SAMPLE_ALPHA_TO_COVERAGE = 32926;
lime_graphics_opengl_GL.SAMPLE_COVERAGE = 32928;
lime_graphics_opengl_GL.NO_ERROR = 0;
lime_graphics_opengl_GL.INVALID_ENUM = 1280;
lime_graphics_opengl_GL.INVALID_VALUE = 1281;
lime_graphics_opengl_GL.INVALID_OPERATION = 1282;
lime_graphics_opengl_GL.OUT_OF_MEMORY = 1285;
lime_graphics_opengl_GL.CW = 2304;
lime_graphics_opengl_GL.CCW = 2305;
lime_graphics_opengl_GL.LINE_WIDTH = 2849;
lime_graphics_opengl_GL.ALIASED_POINT_SIZE_RANGE = 33901;
lime_graphics_opengl_GL.ALIASED_LINE_WIDTH_RANGE = 33902;
lime_graphics_opengl_GL.CULL_FACE_MODE = 2885;
lime_graphics_opengl_GL.FRONT_FACE = 2886;
lime_graphics_opengl_GL.DEPTH_RANGE = 2928;
lime_graphics_opengl_GL.DEPTH_WRITEMASK = 2930;
lime_graphics_opengl_GL.DEPTH_CLEAR_VALUE = 2931;
lime_graphics_opengl_GL.DEPTH_FUNC = 2932;
lime_graphics_opengl_GL.STENCIL_CLEAR_VALUE = 2961;
lime_graphics_opengl_GL.STENCIL_FUNC = 2962;
lime_graphics_opengl_GL.STENCIL_FAIL = 2964;
lime_graphics_opengl_GL.STENCIL_PASS_DEPTH_FAIL = 2965;
lime_graphics_opengl_GL.STENCIL_PASS_DEPTH_PASS = 2966;
lime_graphics_opengl_GL.STENCIL_REF = 2967;
lime_graphics_opengl_GL.STENCIL_VALUE_MASK = 2963;
lime_graphics_opengl_GL.STENCIL_WRITEMASK = 2968;
lime_graphics_opengl_GL.STENCIL_BACK_FUNC = 34816;
lime_graphics_opengl_GL.STENCIL_BACK_FAIL = 34817;
lime_graphics_opengl_GL.STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
lime_graphics_opengl_GL.STENCIL_BACK_PASS_DEPTH_PASS = 34819;
lime_graphics_opengl_GL.STENCIL_BACK_REF = 36003;
lime_graphics_opengl_GL.STENCIL_BACK_VALUE_MASK = 36004;
lime_graphics_opengl_GL.STENCIL_BACK_WRITEMASK = 36005;
lime_graphics_opengl_GL.VIEWPORT = 2978;
lime_graphics_opengl_GL.SCISSOR_BOX = 3088;
lime_graphics_opengl_GL.COLOR_CLEAR_VALUE = 3106;
lime_graphics_opengl_GL.COLOR_WRITEMASK = 3107;
lime_graphics_opengl_GL.UNPACK_ALIGNMENT = 3317;
lime_graphics_opengl_GL.PACK_ALIGNMENT = 3333;
lime_graphics_opengl_GL.MAX_TEXTURE_SIZE = 3379;
lime_graphics_opengl_GL.MAX_VIEWPORT_DIMS = 3386;
lime_graphics_opengl_GL.SUBPIXEL_BITS = 3408;
lime_graphics_opengl_GL.RED_BITS = 3410;
lime_graphics_opengl_GL.GREEN_BITS = 3411;
lime_graphics_opengl_GL.BLUE_BITS = 3412;
lime_graphics_opengl_GL.ALPHA_BITS = 3413;
lime_graphics_opengl_GL.DEPTH_BITS = 3414;
lime_graphics_opengl_GL.STENCIL_BITS = 3415;
lime_graphics_opengl_GL.POLYGON_OFFSET_UNITS = 10752;
lime_graphics_opengl_GL.POLYGON_OFFSET_FACTOR = 32824;
lime_graphics_opengl_GL.TEXTURE_BINDING_2D = 32873;
lime_graphics_opengl_GL.SAMPLE_BUFFERS = 32936;
lime_graphics_opengl_GL.SAMPLES = 32937;
lime_graphics_opengl_GL.SAMPLE_COVERAGE_VALUE = 32938;
lime_graphics_opengl_GL.SAMPLE_COVERAGE_INVERT = 32939;
lime_graphics_opengl_GL.COMPRESSED_TEXTURE_FORMATS = 34467;
lime_graphics_opengl_GL.DONT_CARE = 4352;
lime_graphics_opengl_GL.FASTEST = 4353;
lime_graphics_opengl_GL.NICEST = 4354;
lime_graphics_opengl_GL.GENERATE_MIPMAP_HINT = 33170;
lime_graphics_opengl_GL.BYTE = 5120;
lime_graphics_opengl_GL.UNSIGNED_BYTE = 5121;
lime_graphics_opengl_GL.SHORT = 5122;
lime_graphics_opengl_GL.UNSIGNED_SHORT = 5123;
lime_graphics_opengl_GL.INT = 5124;
lime_graphics_opengl_GL.UNSIGNED_INT = 5125;
lime_graphics_opengl_GL.FLOAT = 5126;
lime_graphics_opengl_GL.DEPTH_COMPONENT = 6402;
lime_graphics_opengl_GL.ALPHA = 6406;
lime_graphics_opengl_GL.RGB = 6407;
lime_graphics_opengl_GL.RGBA = 6408;
lime_graphics_opengl_GL.BGR_EXT = 32992;
lime_graphics_opengl_GL.BGRA_EXT = 32993;
lime_graphics_opengl_GL.LUMINANCE = 6409;
lime_graphics_opengl_GL.LUMINANCE_ALPHA = 6410;
lime_graphics_opengl_GL.UNSIGNED_SHORT_4_4_4_4 = 32819;
lime_graphics_opengl_GL.UNSIGNED_SHORT_5_5_5_1 = 32820;
lime_graphics_opengl_GL.UNSIGNED_SHORT_5_6_5 = 33635;
lime_graphics_opengl_GL.FRAGMENT_SHADER = 35632;
lime_graphics_opengl_GL.VERTEX_SHADER = 35633;
lime_graphics_opengl_GL.MAX_VERTEX_ATTRIBS = 34921;
lime_graphics_opengl_GL.MAX_VERTEX_UNIFORM_VECTORS = 36347;
lime_graphics_opengl_GL.MAX_VARYING_VECTORS = 36348;
lime_graphics_opengl_GL.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
lime_graphics_opengl_GL.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
lime_graphics_opengl_GL.MAX_TEXTURE_IMAGE_UNITS = 34930;
lime_graphics_opengl_GL.MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
lime_graphics_opengl_GL.SHADER_TYPE = 35663;
lime_graphics_opengl_GL.DELETE_STATUS = 35712;
lime_graphics_opengl_GL.LINK_STATUS = 35714;
lime_graphics_opengl_GL.VALIDATE_STATUS = 35715;
lime_graphics_opengl_GL.ATTACHED_SHADERS = 35717;
lime_graphics_opengl_GL.ACTIVE_UNIFORMS = 35718;
lime_graphics_opengl_GL.ACTIVE_ATTRIBUTES = 35721;
lime_graphics_opengl_GL.SHADING_LANGUAGE_VERSION = 35724;
lime_graphics_opengl_GL.CURRENT_PROGRAM = 35725;
lime_graphics_opengl_GL.NEVER = 512;
lime_graphics_opengl_GL.LESS = 513;
lime_graphics_opengl_GL.EQUAL = 514;
lime_graphics_opengl_GL.LEQUAL = 515;
lime_graphics_opengl_GL.GREATER = 516;
lime_graphics_opengl_GL.NOTEQUAL = 517;
lime_graphics_opengl_GL.GEQUAL = 518;
lime_graphics_opengl_GL.ALWAYS = 519;
lime_graphics_opengl_GL.KEEP = 7680;
lime_graphics_opengl_GL.REPLACE = 7681;
lime_graphics_opengl_GL.INCR = 7682;
lime_graphics_opengl_GL.DECR = 7683;
lime_graphics_opengl_GL.INVERT = 5386;
lime_graphics_opengl_GL.INCR_WRAP = 34055;
lime_graphics_opengl_GL.DECR_WRAP = 34056;
lime_graphics_opengl_GL.VENDOR = 7936;
lime_graphics_opengl_GL.RENDERER = 7937;
lime_graphics_opengl_GL.VERSION = 7938;
lime_graphics_opengl_GL.NEAREST = 9728;
lime_graphics_opengl_GL.LINEAR = 9729;
lime_graphics_opengl_GL.NEAREST_MIPMAP_NEAREST = 9984;
lime_graphics_opengl_GL.LINEAR_MIPMAP_NEAREST = 9985;
lime_graphics_opengl_GL.NEAREST_MIPMAP_LINEAR = 9986;
lime_graphics_opengl_GL.LINEAR_MIPMAP_LINEAR = 9987;
lime_graphics_opengl_GL.TEXTURE_MAG_FILTER = 10240;
lime_graphics_opengl_GL.TEXTURE_MIN_FILTER = 10241;
lime_graphics_opengl_GL.TEXTURE_WRAP_S = 10242;
lime_graphics_opengl_GL.TEXTURE_WRAP_T = 10243;
lime_graphics_opengl_GL.TEXTURE_2D = 3553;
lime_graphics_opengl_GL.TEXTURE = 5890;
lime_graphics_opengl_GL.TEXTURE_CUBE_MAP = 34067;
lime_graphics_opengl_GL.TEXTURE_BINDING_CUBE_MAP = 34068;
lime_graphics_opengl_GL.TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
lime_graphics_opengl_GL.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
lime_graphics_opengl_GL.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
lime_graphics_opengl_GL.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
lime_graphics_opengl_GL.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
lime_graphics_opengl_GL.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
lime_graphics_opengl_GL.MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
lime_graphics_opengl_GL.TEXTURE0 = 33984;
lime_graphics_opengl_GL.TEXTURE1 = 33985;
lime_graphics_opengl_GL.TEXTURE2 = 33986;
lime_graphics_opengl_GL.TEXTURE3 = 33987;
lime_graphics_opengl_GL.TEXTURE4 = 33988;
lime_graphics_opengl_GL.TEXTURE5 = 33989;
lime_graphics_opengl_GL.TEXTURE6 = 33990;
lime_graphics_opengl_GL.TEXTURE7 = 33991;
lime_graphics_opengl_GL.TEXTURE8 = 33992;
lime_graphics_opengl_GL.TEXTURE9 = 33993;
lime_graphics_opengl_GL.TEXTURE10 = 33994;
lime_graphics_opengl_GL.TEXTURE11 = 33995;
lime_graphics_opengl_GL.TEXTURE12 = 33996;
lime_graphics_opengl_GL.TEXTURE13 = 33997;
lime_graphics_opengl_GL.TEXTURE14 = 33998;
lime_graphics_opengl_GL.TEXTURE15 = 33999;
lime_graphics_opengl_GL.TEXTURE16 = 34000;
lime_graphics_opengl_GL.TEXTURE17 = 34001;
lime_graphics_opengl_GL.TEXTURE18 = 34002;
lime_graphics_opengl_GL.TEXTURE19 = 34003;
lime_graphics_opengl_GL.TEXTURE20 = 34004;
lime_graphics_opengl_GL.TEXTURE21 = 34005;
lime_graphics_opengl_GL.TEXTURE22 = 34006;
lime_graphics_opengl_GL.TEXTURE23 = 34007;
lime_graphics_opengl_GL.TEXTURE24 = 34008;
lime_graphics_opengl_GL.TEXTURE25 = 34009;
lime_graphics_opengl_GL.TEXTURE26 = 34010;
lime_graphics_opengl_GL.TEXTURE27 = 34011;
lime_graphics_opengl_GL.TEXTURE28 = 34012;
lime_graphics_opengl_GL.TEXTURE29 = 34013;
lime_graphics_opengl_GL.TEXTURE30 = 34014;
lime_graphics_opengl_GL.TEXTURE31 = 34015;
lime_graphics_opengl_GL.ACTIVE_TEXTURE = 34016;
lime_graphics_opengl_GL.REPEAT = 10497;
lime_graphics_opengl_GL.CLAMP_TO_EDGE = 33071;
lime_graphics_opengl_GL.MIRRORED_REPEAT = 33648;
lime_graphics_opengl_GL.FLOAT_VEC2 = 35664;
lime_graphics_opengl_GL.FLOAT_VEC3 = 35665;
lime_graphics_opengl_GL.FLOAT_VEC4 = 35666;
lime_graphics_opengl_GL.INT_VEC2 = 35667;
lime_graphics_opengl_GL.INT_VEC3 = 35668;
lime_graphics_opengl_GL.INT_VEC4 = 35669;
lime_graphics_opengl_GL.BOOL = 35670;
lime_graphics_opengl_GL.BOOL_VEC2 = 35671;
lime_graphics_opengl_GL.BOOL_VEC3 = 35672;
lime_graphics_opengl_GL.BOOL_VEC4 = 35673;
lime_graphics_opengl_GL.FLOAT_MAT2 = 35674;
lime_graphics_opengl_GL.FLOAT_MAT3 = 35675;
lime_graphics_opengl_GL.FLOAT_MAT4 = 35676;
lime_graphics_opengl_GL.SAMPLER_2D = 35678;
lime_graphics_opengl_GL.SAMPLER_CUBE = 35680;
lime_graphics_opengl_GL.VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
lime_graphics_opengl_GL.VERTEX_ATTRIB_ARRAY_SIZE = 34339;
lime_graphics_opengl_GL.VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
lime_graphics_opengl_GL.VERTEX_ATTRIB_ARRAY_TYPE = 34341;
lime_graphics_opengl_GL.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
lime_graphics_opengl_GL.VERTEX_ATTRIB_ARRAY_POINTER = 34373;
lime_graphics_opengl_GL.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
lime_graphics_opengl_GL.VERTEX_PROGRAM_POINT_SIZE = 34370;
lime_graphics_opengl_GL.POINT_SPRITE = 34913;
lime_graphics_opengl_GL.COMPILE_STATUS = 35713;
lime_graphics_opengl_GL.LOW_FLOAT = 36336;
lime_graphics_opengl_GL.MEDIUM_FLOAT = 36337;
lime_graphics_opengl_GL.HIGH_FLOAT = 36338;
lime_graphics_opengl_GL.LOW_INT = 36339;
lime_graphics_opengl_GL.MEDIUM_INT = 36340;
lime_graphics_opengl_GL.HIGH_INT = 36341;
lime_graphics_opengl_GL.FRAMEBUFFER = 36160;
lime_graphics_opengl_GL.RENDERBUFFER = 36161;
lime_graphics_opengl_GL.RGBA4 = 32854;
lime_graphics_opengl_GL.RGB5_A1 = 32855;
lime_graphics_opengl_GL.RGB565 = 36194;
lime_graphics_opengl_GL.DEPTH_COMPONENT16 = 33189;
lime_graphics_opengl_GL.STENCIL_INDEX = 6401;
lime_graphics_opengl_GL.STENCIL_INDEX8 = 36168;
lime_graphics_opengl_GL.DEPTH_STENCIL = 34041;
lime_graphics_opengl_GL.RENDERBUFFER_WIDTH = 36162;
lime_graphics_opengl_GL.RENDERBUFFER_HEIGHT = 36163;
lime_graphics_opengl_GL.RENDERBUFFER_INTERNAL_FORMAT = 36164;
lime_graphics_opengl_GL.RENDERBUFFER_RED_SIZE = 36176;
lime_graphics_opengl_GL.RENDERBUFFER_GREEN_SIZE = 36177;
lime_graphics_opengl_GL.RENDERBUFFER_BLUE_SIZE = 36178;
lime_graphics_opengl_GL.RENDERBUFFER_ALPHA_SIZE = 36179;
lime_graphics_opengl_GL.RENDERBUFFER_DEPTH_SIZE = 36180;
lime_graphics_opengl_GL.RENDERBUFFER_STENCIL_SIZE = 36181;
lime_graphics_opengl_GL.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
lime_graphics_opengl_GL.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
lime_graphics_opengl_GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
lime_graphics_opengl_GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
lime_graphics_opengl_GL.COLOR_ATTACHMENT0 = 36064;
lime_graphics_opengl_GL.DEPTH_ATTACHMENT = 36096;
lime_graphics_opengl_GL.STENCIL_ATTACHMENT = 36128;
lime_graphics_opengl_GL.DEPTH_STENCIL_ATTACHMENT = 33306;
lime_graphics_opengl_GL.NONE = 0;
lime_graphics_opengl_GL.FRAMEBUFFER_COMPLETE = 36053;
lime_graphics_opengl_GL.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
lime_graphics_opengl_GL.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
lime_graphics_opengl_GL.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
lime_graphics_opengl_GL.FRAMEBUFFER_UNSUPPORTED = 36061;
lime_graphics_opengl_GL.FRAMEBUFFER_BINDING = 36006;
lime_graphics_opengl_GL.RENDERBUFFER_BINDING = 36007;
lime_graphics_opengl_GL.MAX_RENDERBUFFER_SIZE = 34024;
lime_graphics_opengl_GL.INVALID_FRAMEBUFFER_OPERATION = 1286;
lime_graphics_opengl_GL.UNPACK_FLIP_Y_WEBGL = 37440;
lime_graphics_opengl_GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
lime_graphics_opengl_GL.CONTEXT_LOST_WEBGL = 37442;
lime_graphics_opengl_GL.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443;
lime_graphics_opengl_GL.BROWSER_DEFAULT_WEBGL = 37444;
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__identity = [1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0];
lime_math_Matrix3.__identity = new lime_math_Matrix3();
lime_math__$Matrix4_Matrix4_$Impl_$.__identity = [1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0];
lime_net_curl__$CURL_CURL_$Impl_$.GLOBAL_SSL = 1;
lime_net_curl__$CURL_CURL_$Impl_$.GLOBAL_WIN32 = 2;
lime_net_curl__$CURL_CURL_$Impl_$.GLOBAL_ALL = 3;
lime_net_curl__$CURL_CURL_$Impl_$.GLOBAL_NOTHING = 0;
lime_net_curl__$CURL_CURL_$Impl_$.GLOBAL_DEFAULT = 3;
lime_net_curl__$CURL_CURL_$Impl_$.GLOBAL_ACK_EINTR = 4;
lime_system_BackgroundWorker.MESSAGE_COMPLETE = "__COMPLETE__";
lime_system_BackgroundWorker.MESSAGE_ERROR = "__ERROR__";
lime_system_CFFI.__moduleNames = null;
lime_text__$TextDirection_TextDirection_$Impl_$.INVALID = 0;
lime_text__$TextDirection_TextDirection_$Impl_$.LEFT_TO_RIGHT = 4;
lime_text__$TextDirection_TextDirection_$Impl_$.RIGHT_TO_LEFT = 5;
lime_text__$TextDirection_TextDirection_$Impl_$.TOP_TO_BOTTOM = 6;
lime_text__$TextDirection_TextDirection_$Impl_$.BOTTOM_TO_TOP = 7;
lime_text__$TextScript_TextScript_$Impl_$.COMMON = "Zyyy";
lime_text__$TextScript_TextScript_$Impl_$.INHERITED = "Zinh";
lime_text__$TextScript_TextScript_$Impl_$.UNKNOWN = "Zzzz";
lime_text__$TextScript_TextScript_$Impl_$.ARABIC = "Arab";
lime_text__$TextScript_TextScript_$Impl_$.ARMENIAN = "Armn";
lime_text__$TextScript_TextScript_$Impl_$.BENGALI = "Beng";
lime_text__$TextScript_TextScript_$Impl_$.CYRILLIC = "Cyrl";
lime_text__$TextScript_TextScript_$Impl_$.DEVANAGARI = "Deva";
lime_text__$TextScript_TextScript_$Impl_$.GEORGIAN = "Geor";
lime_text__$TextScript_TextScript_$Impl_$.GREEK = "Grek";
lime_text__$TextScript_TextScript_$Impl_$.GUJARATI = "Gujr";
lime_text__$TextScript_TextScript_$Impl_$.GURMUKHI = "Guru";
lime_text__$TextScript_TextScript_$Impl_$.HANGUL = "Hang";
lime_text__$TextScript_TextScript_$Impl_$.HAN = "Hani";
lime_text__$TextScript_TextScript_$Impl_$.HEBREW = "Hebr";
lime_text__$TextScript_TextScript_$Impl_$.HIRAGANA = "Hira";
lime_text__$TextScript_TextScript_$Impl_$.KANNADA = "Knda";
lime_text__$TextScript_TextScript_$Impl_$.KATAKANA = "Kana";
lime_text__$TextScript_TextScript_$Impl_$.LAO = "Laoo";
lime_text__$TextScript_TextScript_$Impl_$.LATIN = "Latn";
lime_text__$TextScript_TextScript_$Impl_$.MALAYALAM = "Mlym";
lime_text__$TextScript_TextScript_$Impl_$.ORIYA = "Orya";
lime_text__$TextScript_TextScript_$Impl_$.TAMIL = "Taml";
lime_text__$TextScript_TextScript_$Impl_$.TELUGA = "Telu";
lime_text__$TextScript_TextScript_$Impl_$.THAI = "Thai";
lime_text__$TextScript_TextScript_$Impl_$.TIBETAN = "Tibt";
lime_text__$TextScript_TextScript_$Impl_$.BOPOMOFO = "Bopo";
lime_text__$TextScript_TextScript_$Impl_$.BRAILLE = "Brai";
lime_text__$TextScript_TextScript_$Impl_$.CANADIAN_SYLLABICS = "Cans";
lime_text__$TextScript_TextScript_$Impl_$.CHEROKEE = "Cher";
lime_text__$TextScript_TextScript_$Impl_$.ETHIOPIC = "Ethi";
lime_text__$TextScript_TextScript_$Impl_$.KHMER = "Khmr";
lime_text__$TextScript_TextScript_$Impl_$.MONGOLIAN = "Mong";
lime_text__$TextScript_TextScript_$Impl_$.MYANMAR = "Mymr";
lime_text__$TextScript_TextScript_$Impl_$.OGHAM = "Ogam";
lime_text__$TextScript_TextScript_$Impl_$.RUNIC = "Runr";
lime_text__$TextScript_TextScript_$Impl_$.SINHALA = "Sinh";
lime_text__$TextScript_TextScript_$Impl_$.SYRIAC = "Syrc";
lime_text__$TextScript_TextScript_$Impl_$.THAANA = "Thaa";
lime_text__$TextScript_TextScript_$Impl_$.YI = "Yiii";
lime_text__$TextScript_TextScript_$Impl_$.DESERET = "Dsrt";
lime_text__$TextScript_TextScript_$Impl_$.GOTHIC = "Goth";
lime_text__$TextScript_TextScript_$Impl_$.OLD_ITALIC = "Ital";
lime_text__$TextScript_TextScript_$Impl_$.BUHID = "Buhd";
lime_text__$TextScript_TextScript_$Impl_$.HANUNOO = "Hano";
lime_text__$TextScript_TextScript_$Impl_$.TAGALOG = "Tglg";
lime_text__$TextScript_TextScript_$Impl_$.TAGBANWA = "Tagb";
lime_text__$TextScript_TextScript_$Impl_$.CYPRIOT = "Cprt";
lime_text__$TextScript_TextScript_$Impl_$.LIMBU = "Limb";
lime_text__$TextScript_TextScript_$Impl_$.LINEAR_B = "Linb";
lime_text__$TextScript_TextScript_$Impl_$.OSMANYA = "Osma";
lime_text__$TextScript_TextScript_$Impl_$.SHAVIAN = "Shaw";
lime_text__$TextScript_TextScript_$Impl_$.TAI_LE = "Tale";
lime_text__$TextScript_TextScript_$Impl_$.UGARITIC = "Ugar";
lime_text__$TextScript_TextScript_$Impl_$.BUGINESE = "Bugi";
lime_text__$TextScript_TextScript_$Impl_$.COPTIC = "Copt";
lime_text__$TextScript_TextScript_$Impl_$.GLAGOLITIC = "Glag";
lime_text__$TextScript_TextScript_$Impl_$.KHAROSHTHI = "Khar";
lime_text__$TextScript_TextScript_$Impl_$.NEW_TAI_LUE = "Talu";
lime_text__$TextScript_TextScript_$Impl_$.OLD_PERSIAN = "Xpeo";
lime_text__$TextScript_TextScript_$Impl_$.SYLOTI_NAGRI = "Sylo";
lime_text__$TextScript_TextScript_$Impl_$.TIFINAGH = "Tfng";
lime_text__$TextScript_TextScript_$Impl_$.BALINESE = "Bali";
lime_text__$TextScript_TextScript_$Impl_$.CUNEIFORM = "Xsux";
lime_text__$TextScript_TextScript_$Impl_$.NKO = "Nkoo";
lime_text__$TextScript_TextScript_$Impl_$.PHAGS_PA = "Phag";
lime_text__$TextScript_TextScript_$Impl_$.PHOENICIAN = "Phnx";
lime_text__$TextScript_TextScript_$Impl_$.CARIAN = "Cari";
lime_text__$TextScript_TextScript_$Impl_$.CHAM = "Cham";
lime_text__$TextScript_TextScript_$Impl_$.KAYAH_LI = "Kali";
lime_text__$TextScript_TextScript_$Impl_$.LEPCHA = "Lepc";
lime_text__$TextScript_TextScript_$Impl_$.LYCIAN = "Lyci";
lime_text__$TextScript_TextScript_$Impl_$.LYDIAN = "Lydi";
lime_text__$TextScript_TextScript_$Impl_$.OL_CHIKI = "Olck";
lime_text__$TextScript_TextScript_$Impl_$.REJANG = "Rjng";
lime_text__$TextScript_TextScript_$Impl_$.SAURASHTRA = "Saur";
lime_text__$TextScript_TextScript_$Impl_$.SUNDANESE = "Sund";
lime_text__$TextScript_TextScript_$Impl_$.VAI = "Vaii";
lime_text__$TextScript_TextScript_$Impl_$.AVESTAN = "Avst";
lime_text__$TextScript_TextScript_$Impl_$.BAMUM = "Bamu";
lime_text__$TextScript_TextScript_$Impl_$.EGYPTIAN_HIEROGLYPHS = "Egyp";
lime_text__$TextScript_TextScript_$Impl_$.IMPERIAL_ARAMAIC = "Armi";
lime_text__$TextScript_TextScript_$Impl_$.INSCRIPTIONAL_PAHLAVI = "Phli";
lime_text__$TextScript_TextScript_$Impl_$.INSCRIPTIONAL_PARTHIAN = "Prti";
lime_text__$TextScript_TextScript_$Impl_$.JAVANESE = "Java";
lime_text__$TextScript_TextScript_$Impl_$.KAITHI = "Kthi";
lime_text__$TextScript_TextScript_$Impl_$.LISU = "Lisu";
lime_text__$TextScript_TextScript_$Impl_$.MEETEI_MAYEK = "Mtei";
lime_text__$TextScript_TextScript_$Impl_$.OLD_SOUTH_ARABIAN = "Sarb";
lime_text__$TextScript_TextScript_$Impl_$.OLD_TURKIC = "Orkh";
lime_text__$TextScript_TextScript_$Impl_$.SAMARITAN = "Samr";
lime_text__$TextScript_TextScript_$Impl_$.TAI_THAM = "Lana";
lime_text__$TextScript_TextScript_$Impl_$.TAI_VIET = "Tavt";
lime_text__$TextScript_TextScript_$Impl_$.BATAK = "Batk";
lime_text__$TextScript_TextScript_$Impl_$.BRAHMI = "Brah";
lime_text__$TextScript_TextScript_$Impl_$.MANDAIC = "Mand";
lime_text__$TextScript_TextScript_$Impl_$.CHAKMA = "Cakm";
lime_text__$TextScript_TextScript_$Impl_$.MEROITIC_CURSIVE = "Merc";
lime_text__$TextScript_TextScript_$Impl_$.MEROITIC_HIEROGLYPHS = "Mero";
lime_text__$TextScript_TextScript_$Impl_$.MIAO = "Plrd";
lime_text__$TextScript_TextScript_$Impl_$.SHARADA = "Shrd";
lime_text__$TextScript_TextScript_$Impl_$.SORA_SOMPENG = "Sora";
lime_text__$TextScript_TextScript_$Impl_$.TAKRI = "Takr";
lime_text__$TextScript_TextScript_$Impl_$.BASSA_VAH = "Bass";
lime_text__$TextScript_TextScript_$Impl_$.CAUCASIAN_ALBANIAN = "Aghb";
lime_text__$TextScript_TextScript_$Impl_$.DUPLOYAN = "Dupl";
lime_text__$TextScript_TextScript_$Impl_$.ELBASAN = "Elba";
lime_text__$TextScript_TextScript_$Impl_$.GRANTHA = "Gran";
lime_text__$TextScript_TextScript_$Impl_$.KHOJKI = "Khoj";
lime_text__$TextScript_TextScript_$Impl_$.KHUDAWADI = "Sind";
lime_text__$TextScript_TextScript_$Impl_$.LINEAR_A = "Lina";
lime_text__$TextScript_TextScript_$Impl_$.MAHAJANI = "Mahj";
lime_text__$TextScript_TextScript_$Impl_$.MANICHAEAN = "Mani";
lime_text__$TextScript_TextScript_$Impl_$.MENDE_KIKAKUI = "Mend";
lime_text__$TextScript_TextScript_$Impl_$.MODI = "Modi";
lime_text__$TextScript_TextScript_$Impl_$.MRO = "Mroo";
lime_text__$TextScript_TextScript_$Impl_$.NABATAEAN = "Nbat";
lime_text__$TextScript_TextScript_$Impl_$.OLD_NORTH_ARABIAN = "Narb";
lime_text__$TextScript_TextScript_$Impl_$.OLD_PERMIC = "Perm";
lime_text__$TextScript_TextScript_$Impl_$.PAHAWH_HMONG = "Hmng";
lime_text__$TextScript_TextScript_$Impl_$.PALMYRENE = "Palm";
lime_text__$TextScript_TextScript_$Impl_$.PAU_CIN_HAU = "Pauc";
lime_text__$TextScript_TextScript_$Impl_$.PSALTER_PAHLAVI = "Phlp";
lime_text__$TextScript_TextScript_$Impl_$.SIDDHAM = "Sidd";
lime_text__$TextScript_TextScript_$Impl_$.TIRHUTA = "Tirh";
lime_text__$TextScript_TextScript_$Impl_$.WARANG_CITI = "Wara";
lime_ui_Gamepad.devices = new haxe_ds_IntMap();
lime_ui_Gamepad.onConnect = new lime_app_Event_$lime_$ui_$Gamepad_$Void();
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.LEFT_X = 0;
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.LEFT_Y = 1;
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.RIGHT_X = 2;
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.RIGHT_Y = 3;
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.TRIGGER_LEFT = 4;
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.TRIGGER_RIGHT = 5;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.A = 0;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.B = 1;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.X = 2;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.Y = 3;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.BACK = 4;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.GUIDE = 5;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.START = 6;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.LEFT_STICK = 7;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.RIGHT_STICK = 8;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.LEFT_SHOULDER = 9;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.RIGHT_SHOULDER = 10;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.DPAD_UP = 11;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.DPAD_DOWN = 12;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.DPAD_LEFT = 13;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.DPAD_RIGHT = 14;
lime_ui_Joystick.devices = new haxe_ds_IntMap();
lime_ui_Joystick.onConnect = new lime_app_Event_$lime_$ui_$Joystick_$Void();
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.CENTER = 0;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.DOWN = 4;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.LEFT = 8;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.RIGHT = 2;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.UP = 1;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.DOWN_LEFT = 12;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.DOWN_RIGHT = 6;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.UP_LEFT = 9;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.UP_RIGHT = 3;
lime_ui__$KeyCode_KeyCode_$Impl_$.UNKNOWN = 0;
lime_ui__$KeyCode_KeyCode_$Impl_$.BACKSPACE = 8;
lime_ui__$KeyCode_KeyCode_$Impl_$.TAB = 9;
lime_ui__$KeyCode_KeyCode_$Impl_$.RETURN = 13;
lime_ui__$KeyCode_KeyCode_$Impl_$.ESCAPE = 27;
lime_ui__$KeyCode_KeyCode_$Impl_$.SPACE = 32;
lime_ui__$KeyCode_KeyCode_$Impl_$.EXCLAMATION = 33;
lime_ui__$KeyCode_KeyCode_$Impl_$.QUOTE = 34;
lime_ui__$KeyCode_KeyCode_$Impl_$.HASH = 35;
lime_ui__$KeyCode_KeyCode_$Impl_$.DOLLAR = 36;
lime_ui__$KeyCode_KeyCode_$Impl_$.PERCENT = 37;
lime_ui__$KeyCode_KeyCode_$Impl_$.AMPERSAND = 38;
lime_ui__$KeyCode_KeyCode_$Impl_$.SINGLE_QUOTE = 39;
lime_ui__$KeyCode_KeyCode_$Impl_$.LEFT_PARENTHESIS = 40;
lime_ui__$KeyCode_KeyCode_$Impl_$.RIGHT_PARENTHESIS = 41;
lime_ui__$KeyCode_KeyCode_$Impl_$.ASTERISK = 42;
lime_ui__$KeyCode_KeyCode_$Impl_$.PLUS = 43;
lime_ui__$KeyCode_KeyCode_$Impl_$.COMMA = 44;
lime_ui__$KeyCode_KeyCode_$Impl_$.MINUS = 45;
lime_ui__$KeyCode_KeyCode_$Impl_$.PERIOD = 46;
lime_ui__$KeyCode_KeyCode_$Impl_$.SLASH = 47;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_0 = 48;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_1 = 49;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_2 = 50;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_3 = 51;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_4 = 52;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_5 = 53;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_6 = 54;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_7 = 55;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_8 = 56;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_9 = 57;
lime_ui__$KeyCode_KeyCode_$Impl_$.COLON = 58;
lime_ui__$KeyCode_KeyCode_$Impl_$.SEMICOLON = 59;
lime_ui__$KeyCode_KeyCode_$Impl_$.LESS_THAN = 60;
lime_ui__$KeyCode_KeyCode_$Impl_$.EQUALS = 61;
lime_ui__$KeyCode_KeyCode_$Impl_$.GREATER_THAN = 62;
lime_ui__$KeyCode_KeyCode_$Impl_$.QUESTION = 63;
lime_ui__$KeyCode_KeyCode_$Impl_$.AT = 64;
lime_ui__$KeyCode_KeyCode_$Impl_$.LEFT_BRACKET = 91;
lime_ui__$KeyCode_KeyCode_$Impl_$.BACKSLASH = 92;
lime_ui__$KeyCode_KeyCode_$Impl_$.RIGHT_BRACKET = 93;
lime_ui__$KeyCode_KeyCode_$Impl_$.CARET = 94;
lime_ui__$KeyCode_KeyCode_$Impl_$.UNDERSCORE = 95;
lime_ui__$KeyCode_KeyCode_$Impl_$.GRAVE = 96;
lime_ui__$KeyCode_KeyCode_$Impl_$.A = 97;
lime_ui__$KeyCode_KeyCode_$Impl_$.B = 98;
lime_ui__$KeyCode_KeyCode_$Impl_$.C = 99;
lime_ui__$KeyCode_KeyCode_$Impl_$.D = 100;
lime_ui__$KeyCode_KeyCode_$Impl_$.E = 101;
lime_ui__$KeyCode_KeyCode_$Impl_$.F = 102;
lime_ui__$KeyCode_KeyCode_$Impl_$.G = 103;
lime_ui__$KeyCode_KeyCode_$Impl_$.H = 104;
lime_ui__$KeyCode_KeyCode_$Impl_$.I = 105;
lime_ui__$KeyCode_KeyCode_$Impl_$.J = 106;
lime_ui__$KeyCode_KeyCode_$Impl_$.K = 107;
lime_ui__$KeyCode_KeyCode_$Impl_$.L = 108;
lime_ui__$KeyCode_KeyCode_$Impl_$.M = 109;
lime_ui__$KeyCode_KeyCode_$Impl_$.N = 110;
lime_ui__$KeyCode_KeyCode_$Impl_$.O = 111;
lime_ui__$KeyCode_KeyCode_$Impl_$.P = 112;
lime_ui__$KeyCode_KeyCode_$Impl_$.Q = 113;
lime_ui__$KeyCode_KeyCode_$Impl_$.R = 114;
lime_ui__$KeyCode_KeyCode_$Impl_$.S = 115;
lime_ui__$KeyCode_KeyCode_$Impl_$.T = 116;
lime_ui__$KeyCode_KeyCode_$Impl_$.U = 117;
lime_ui__$KeyCode_KeyCode_$Impl_$.V = 118;
lime_ui__$KeyCode_KeyCode_$Impl_$.W = 119;
lime_ui__$KeyCode_KeyCode_$Impl_$.X = 120;
lime_ui__$KeyCode_KeyCode_$Impl_$.Y = 121;
lime_ui__$KeyCode_KeyCode_$Impl_$.Z = 122;
lime_ui__$KeyCode_KeyCode_$Impl_$.DELETE = 127;
lime_ui__$KeyCode_KeyCode_$Impl_$.CAPS_LOCK = 1073741881;
lime_ui__$KeyCode_KeyCode_$Impl_$.F1 = 1073741882;
lime_ui__$KeyCode_KeyCode_$Impl_$.F2 = 1073741883;
lime_ui__$KeyCode_KeyCode_$Impl_$.F3 = 1073741884;
lime_ui__$KeyCode_KeyCode_$Impl_$.F4 = 1073741885;
lime_ui__$KeyCode_KeyCode_$Impl_$.F5 = 1073741886;
lime_ui__$KeyCode_KeyCode_$Impl_$.F6 = 1073741887;
lime_ui__$KeyCode_KeyCode_$Impl_$.F7 = 1073741888;
lime_ui__$KeyCode_KeyCode_$Impl_$.F8 = 1073741889;
lime_ui__$KeyCode_KeyCode_$Impl_$.F9 = 1073741890;
lime_ui__$KeyCode_KeyCode_$Impl_$.F10 = 1073741891;
lime_ui__$KeyCode_KeyCode_$Impl_$.F11 = 1073741892;
lime_ui__$KeyCode_KeyCode_$Impl_$.F12 = 1073741893;
lime_ui__$KeyCode_KeyCode_$Impl_$.PRINT_SCREEN = 1073741894;
lime_ui__$KeyCode_KeyCode_$Impl_$.SCROLL_LOCK = 1073741895;
lime_ui__$KeyCode_KeyCode_$Impl_$.PAUSE = 1073741896;
lime_ui__$KeyCode_KeyCode_$Impl_$.INSERT = 1073741897;
lime_ui__$KeyCode_KeyCode_$Impl_$.HOME = 1073741898;
lime_ui__$KeyCode_KeyCode_$Impl_$.PAGE_UP = 1073741899;
lime_ui__$KeyCode_KeyCode_$Impl_$.END = 1073741901;
lime_ui__$KeyCode_KeyCode_$Impl_$.PAGE_DOWN = 1073741902;
lime_ui__$KeyCode_KeyCode_$Impl_$.RIGHT = 1073741903;
lime_ui__$KeyCode_KeyCode_$Impl_$.LEFT = 1073741904;
lime_ui__$KeyCode_KeyCode_$Impl_$.DOWN = 1073741905;
lime_ui__$KeyCode_KeyCode_$Impl_$.UP = 1073741906;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUM_LOCK = 1073741907;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_DIVIDE = 1073741908;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MULTIPLY = 1073741909;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MINUS = 1073741910;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_PLUS = 1073741911;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_ENTER = 1073741912;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_1 = 1073741913;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_2 = 1073741914;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_3 = 1073741915;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_4 = 1073741916;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_5 = 1073741917;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_6 = 1073741918;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_7 = 1073741919;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_8 = 1073741920;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_9 = 1073741921;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_0 = 1073741922;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_PERIOD = 1073741923;
lime_ui__$KeyCode_KeyCode_$Impl_$.APPLICATION = 1073741925;
lime_ui__$KeyCode_KeyCode_$Impl_$.POWER = 1073741926;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_EQUALS = 1073741927;
lime_ui__$KeyCode_KeyCode_$Impl_$.F13 = 1073741928;
lime_ui__$KeyCode_KeyCode_$Impl_$.F14 = 1073741929;
lime_ui__$KeyCode_KeyCode_$Impl_$.F15 = 1073741930;
lime_ui__$KeyCode_KeyCode_$Impl_$.F16 = 1073741931;
lime_ui__$KeyCode_KeyCode_$Impl_$.F17 = 1073741932;
lime_ui__$KeyCode_KeyCode_$Impl_$.F18 = 1073741933;
lime_ui__$KeyCode_KeyCode_$Impl_$.F19 = 1073741934;
lime_ui__$KeyCode_KeyCode_$Impl_$.F20 = 1073741935;
lime_ui__$KeyCode_KeyCode_$Impl_$.F21 = 1073741936;
lime_ui__$KeyCode_KeyCode_$Impl_$.F22 = 1073741937;
lime_ui__$KeyCode_KeyCode_$Impl_$.F23 = 1073741938;
lime_ui__$KeyCode_KeyCode_$Impl_$.F24 = 1073741939;
lime_ui__$KeyCode_KeyCode_$Impl_$.EXECUTE = 1073741940;
lime_ui__$KeyCode_KeyCode_$Impl_$.HELP = 1073741941;
lime_ui__$KeyCode_KeyCode_$Impl_$.MENU = 1073741942;
lime_ui__$KeyCode_KeyCode_$Impl_$.SELECT = 1073741943;
lime_ui__$KeyCode_KeyCode_$Impl_$.STOP = 1073741944;
lime_ui__$KeyCode_KeyCode_$Impl_$.AGAIN = 1073741945;
lime_ui__$KeyCode_KeyCode_$Impl_$.UNDO = 1073741946;
lime_ui__$KeyCode_KeyCode_$Impl_$.CUT = 1073741947;
lime_ui__$KeyCode_KeyCode_$Impl_$.COPY = 1073741948;
lime_ui__$KeyCode_KeyCode_$Impl_$.PASTE = 1073741949;
lime_ui__$KeyCode_KeyCode_$Impl_$.FIND = 1073741950;
lime_ui__$KeyCode_KeyCode_$Impl_$.MUTE = 1073741951;
lime_ui__$KeyCode_KeyCode_$Impl_$.VOLUME_UP = 1073741952;
lime_ui__$KeyCode_KeyCode_$Impl_$.VOLUME_DOWN = 1073741953;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_COMMA = 1073741957;
lime_ui__$KeyCode_KeyCode_$Impl_$.ALT_ERASE = 1073741977;
lime_ui__$KeyCode_KeyCode_$Impl_$.SYSTEM_REQUEST = 1073741978;
lime_ui__$KeyCode_KeyCode_$Impl_$.CANCEL = 1073741979;
lime_ui__$KeyCode_KeyCode_$Impl_$.CLEAR = 1073741980;
lime_ui__$KeyCode_KeyCode_$Impl_$.PRIOR = 1073741981;
lime_ui__$KeyCode_KeyCode_$Impl_$.RETURN2 = 1073741982;
lime_ui__$KeyCode_KeyCode_$Impl_$.SEPARATOR = 1073741983;
lime_ui__$KeyCode_KeyCode_$Impl_$.OUT = 1073741984;
lime_ui__$KeyCode_KeyCode_$Impl_$.OPER = 1073741985;
lime_ui__$KeyCode_KeyCode_$Impl_$.CLEAR_AGAIN = 1073741986;
lime_ui__$KeyCode_KeyCode_$Impl_$.CRSEL = 1073741987;
lime_ui__$KeyCode_KeyCode_$Impl_$.EXSEL = 1073741988;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_00 = 1073742000;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_000 = 1073742001;
lime_ui__$KeyCode_KeyCode_$Impl_$.THOUSAND_SEPARATOR = 1073742002;
lime_ui__$KeyCode_KeyCode_$Impl_$.DECIMAL_SEPARATOR = 1073742003;
lime_ui__$KeyCode_KeyCode_$Impl_$.CURRENCY_UNIT = 1073742004;
lime_ui__$KeyCode_KeyCode_$Impl_$.CURRENCY_SUBUNIT = 1073742005;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_LEFT_PARENTHESIS = 1073742006;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_RIGHT_PARENTHESIS = 1073742007;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_LEFT_BRACE = 1073742008;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_RIGHT_BRACE = 1073742009;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_TAB = 1073742010;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_BACKSPACE = 1073742011;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_A = 1073742012;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_B = 1073742013;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_C = 1073742014;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_D = 1073742015;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_E = 1073742016;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_F = 1073742017;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_XOR = 1073742018;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_POWER = 1073742019;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_PERCENT = 1073742020;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_LESS_THAN = 1073742021;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_GREATER_THAN = 1073742022;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_AMPERSAND = 1073742023;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_DOUBLE_AMPERSAND = 1073742024;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_VERTICAL_BAR = 1073742025;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_DOUBLE_VERTICAL_BAR = 1073742026;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_COLON = 1073742027;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_HASH = 1073742028;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_SPACE = 1073742029;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_AT = 1073742030;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_EXCLAMATION = 1073742031;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MEM_STORE = 1073742032;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MEM_RECALL = 1073742033;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MEM_CLEAR = 1073742034;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MEM_ADD = 1073742035;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MEM_SUBTRACT = 1073742036;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MEM_MULTIPLY = 1073742037;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MEM_DIVIDE = 1073742038;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_PLUS_MINUS = 1073742039;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_CLEAR = 1073742040;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_CLEAR_ENTRY = 1073742041;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_BINARY = 1073742042;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_OCTAL = 1073742043;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_DECIMAL = 1073742044;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_HEXADECIMAL = 1073742045;
lime_ui__$KeyCode_KeyCode_$Impl_$.LEFT_CTRL = 1073742048;
lime_ui__$KeyCode_KeyCode_$Impl_$.LEFT_SHIFT = 1073742049;
lime_ui__$KeyCode_KeyCode_$Impl_$.LEFT_ALT = 1073742050;
lime_ui__$KeyCode_KeyCode_$Impl_$.LEFT_META = 1073742051;
lime_ui__$KeyCode_KeyCode_$Impl_$.RIGHT_CTRL = 1073742052;
lime_ui__$KeyCode_KeyCode_$Impl_$.RIGHT_SHIFT = 1073742053;
lime_ui__$KeyCode_KeyCode_$Impl_$.RIGHT_ALT = 1073742054;
lime_ui__$KeyCode_KeyCode_$Impl_$.RIGHT_META = 1073742055;
lime_ui__$KeyCode_KeyCode_$Impl_$.MODE = 1073742081;
lime_ui__$KeyCode_KeyCode_$Impl_$.AUDIO_NEXT = 1073742082;
lime_ui__$KeyCode_KeyCode_$Impl_$.AUDIO_PREVIOUS = 1073742083;
lime_ui__$KeyCode_KeyCode_$Impl_$.AUDIO_STOP = 1073742084;
lime_ui__$KeyCode_KeyCode_$Impl_$.AUDIO_PLAY = 1073742085;
lime_ui__$KeyCode_KeyCode_$Impl_$.AUDIO_MUTE = 1073742086;
lime_ui__$KeyCode_KeyCode_$Impl_$.MEDIA_SELECT = 1073742087;
lime_ui__$KeyCode_KeyCode_$Impl_$.WWW = 1073742088;
lime_ui__$KeyCode_KeyCode_$Impl_$.MAIL = 1073742089;
lime_ui__$KeyCode_KeyCode_$Impl_$.CALCULATOR = 1073742090;
lime_ui__$KeyCode_KeyCode_$Impl_$.COMPUTER = 1073742091;
lime_ui__$KeyCode_KeyCode_$Impl_$.APP_CONTROL_SEARCH = 1073742092;
lime_ui__$KeyCode_KeyCode_$Impl_$.APP_CONTROL_HOME = 1073742093;
lime_ui__$KeyCode_KeyCode_$Impl_$.APP_CONTROL_BACK = 1073742094;
lime_ui__$KeyCode_KeyCode_$Impl_$.APP_CONTROL_FORWARD = 1073742095;
lime_ui__$KeyCode_KeyCode_$Impl_$.APP_CONTROL_STOP = 1073742096;
lime_ui__$KeyCode_KeyCode_$Impl_$.APP_CONTROL_REFRESH = 1073742097;
lime_ui__$KeyCode_KeyCode_$Impl_$.APP_CONTROL_BOOKMARKS = 1073742098;
lime_ui__$KeyCode_KeyCode_$Impl_$.BRIGHTNESS_DOWN = 1073742099;
lime_ui__$KeyCode_KeyCode_$Impl_$.BRIGHTNESS_UP = 1073742100;
lime_ui__$KeyCode_KeyCode_$Impl_$.DISPLAY_SWITCH = 1073742101;
lime_ui__$KeyCode_KeyCode_$Impl_$.BACKLIGHT_TOGGLE = 1073742102;
lime_ui__$KeyCode_KeyCode_$Impl_$.BACKLIGHT_DOWN = 1073742103;
lime_ui__$KeyCode_KeyCode_$Impl_$.BACKLIGHT_UP = 1073742104;
lime_ui__$KeyCode_KeyCode_$Impl_$.EJECT = 1073742105;
lime_ui__$KeyCode_KeyCode_$Impl_$.SLEEP = 1073742106;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.NONE = 0;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.LEFT_SHIFT = 1;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.RIGHT_SHIFT = 2;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.LEFT_CTRL = 64;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.RIGHT_CTRL = 128;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.LEFT_ALT = 256;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.RIGHT_ALT = 512;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.LEFT_META = 1024;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.RIGHT_META = 2048;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.NUM_LOCK = 4096;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.CAPS_LOCK = 8192;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.MODE = 16384;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.CTRL = 192;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.SHIFT = 3;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.ALT = 768;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.META = 3072;
lime_ui_Touch.onEnd = new lime_app_Event_$lime_$ui_$Touch_$Void();
lime_ui_Touch.onMove = new lime_app_Event_$lime_$ui_$Touch_$Void();
lime_ui_Touch.onStart = new lime_app_Event_$lime_$ui_$Touch_$Void();
lime_utils_Bytes.cffi_lime_bytes_from_data_pointer = (function($this) {
	var $r;
	var inValue = lime_system_CFFI.load("lime","lime_bytes_from_data_pointer",2,false);
	$r = inValue;
	return $r;
}(this));
lime_utils_Bytes.cffi_lime_bytes_get_data_pointer = (function($this) {
	var $r;
	var inValue = lime_system_CFFI.load("lime","lime_bytes_get_data_pointer",1,false);
	$r = inValue;
	return $r;
}(this));
lime_utils_Bytes.cffi_lime_bytes_read_file = (function($this) {
	var $r;
	var inValue = lime_system_CFFI.load("lime","lime_bytes_read_file",1,false);
	$r = inValue;
	return $r;
}(this));
lime_utils__$Float32Array_Float32Array_$Impl_$.BYTES_PER_ELEMENT = 4;
lime_utils__$Int16Array_Int16Array_$Impl_$.BYTES_PER_ELEMENT = 2;
lime_utils__$Int32Array_Int32Array_$Impl_$.BYTES_PER_ELEMENT = 4;
lime_utils__$UInt16Array_UInt16Array_$Impl_$.BYTES_PER_ELEMENT = 2;
lime_utils__$UInt32Array_UInt32Array_$Impl_$.BYTES_PER_ELEMENT = 4;
lime_utils__$UInt8Array_UInt8Array_$Impl_$.BYTES_PER_ELEMENT = 1;
motion_actuators_SimpleActuator.actuators = [];
motion_actuators_SimpleActuator.actuatorsLength = 0;
motion_actuators_SimpleActuator.addedEvent = false;
motion_Actuate.defaultActuator = motion_actuators_SimpleActuator;
motion_Actuate.defaultEase = motion_easing_Expo.get_easeOut();
motion_Actuate.targetLibraries = new haxe_ds_ObjectMap();
objects_BaseSprite.S_STATES = 0;
objects_BaseSprite.S_KEYS = 1;
objects_BaseSprite.S_ANIMS = 2;
objects_Ben.S_STILL = 0;
objects_Ben.S_STOP = 1;
objects_Ben.S_SHOOT = 2;
objects_Ben.S_CHARGED = 3;
objects_Ben.S_HIT = 4;
objects_Ben.S_DOWN = 5;
objects_Ben.S_LEFT = 6;
objects_Ben.S_RIGHT = 7;
objects_Ben.S_UP = 8;
objects_Ben.S_CHARGING = 9;
objects_Ben.S_SWAPPING_ALIENS = 10;
objects_Ben.S_TEST = 11;
objects_Ben.S_CANT = 12;
objects_Ben.A_INSECT = 1;
objects_Ben.A_OVER = 2;
objects_Ben.A_HEAT = 3;
objects_Ben.A_BEN = 4;
objects_Ben.DMG_BULLET = 10;
objects_Ben.DMG_KAMIKAZE = 10;
objects_Ben.DMG_SOLDIER = 7;
objects_Ben.DMG_SPIKE = 15;
objects_Ben.DMG_MINE = 15;
objects_Ben.DMG_BEE = 25;
objects_Ben.DMG_AXOLOTE = 25;
objects_Ben.DMG_ZOMBOZO = 25;
objects_Enemy.TYPE_KAMIKAZE_1 = 1;
objects_Enemy.TYPE_KAMIKAZE_2 = 2;
objects_Enemy.TYPE_KAMIKAZE_3 = 3;
objects_Enemy.TYPE_KAMIKAZE_4 = 4;
objects_Enemy.TYPE_KAMIKAZE_5 = 5;
objects_Enemy.TYPE_KAMIKAZE_6 = 6;
objects_Enemy.TYPE_KAMIKAZE_7 = 7;
objects_Enemy.TYPE_KAMIKAZE_8 = 8;
objects_Enemy.TYPE_SOLDIER_1 = 9;
objects_Enemy.TYPE_SOLDIER_2 = 10;
objects_Enemy.TYPE_SOLDIER_3 = 11;
objects_Enemy.TYPE_SOLDIER_4 = 12;
objects_Enemy.TYPE_SOLDIER_5 = 13;
objects_Enemy.TYPE_SOLDIER_6 = 14;
objects_Enemy.TYPE_SOLDIER_7 = 15;
objects_Enemy.TYPE_SOLDIER_8 = 16;
objects_Enemy.TYPE_SOLDIER_9 = 17;
objects_Enemy.TYPE_SOLDIER_10 = 18;
objects_Enemy.TYPE_SOLDIER_11 = 19;
objects_Enemy.TYPE_SOLDIER_12 = 20;
objects_Enemy.TYPE_HEAVY_1 = 21;
objects_Enemy.TYPE_HEAVY_2 = 22;
objects_Enemy.TYPE_HEAVY_3 = 23;
objects_Enemy.TYPE_HEAVY_4 = 24;
objects_Enemy.TYPE_HEAVY_5 = 25;
objects_Enemy.TYPE_HEAVY_6 = 26;
objects_Enemy.TYPE_CAMPER = 99;
objects_Enemy.TYPE_BOSS_1 = 100;
objects_Enemy.TYPE_BOSS_2 = 101;
objects_Enemy.TYPE_BOSS_3 = 102;
objects_Enemy.SHOOT_PATTERN_NONE = 0;
objects_Enemy.SHOOT_PATTERN_SIMPLE = 1;
objects_Enemy.SHOOT_PATTERN_BURST = 2;
objects_Enemy.SHOOT_PATTERN_OPEN = 3;
objects_Enemy.PUNCH_PATTERN_SIMPLE = 4;
objects_Enemy.PUNCH_PATTERN_BURST = 5;
objects_Enemy.PUNCH_PATTERN_CONSTANT = 6;
objects_Enemy.STAND = 0;
objects_Enemy.WALK_FORWARD = 1;
objects_Enemy.RUSH = 2;
objects_Enemy.RUSH_TARGET = 3;
objects_Enemy.CHASE = 4;
objects_Enemy.CHASE_X = 5;
objects_Enemy.CHASE_RUSH = 6;
objects_Enemy.ZIG_ZAG = 7;
objects_Enemy.ZIG_ZAG_RUSH = 8;
objects_Enemy.NOTHING = 9;
objects_Enemy.ENTER_UP = 10;
objects_Enemy.ENTER_SIDE = 11;
objects_Enemy.EXIT_UP = 12;
objects_Enemy.EXIT_DOWN = 13;
objects_Enemy.CHASE_RADIOUS = 300;
objects_Enemy.RUSH_RADIOUS = 200;
objects_Enemy.CHASE_SPEED = 0.1;
objects_Enemy.EXPLODE_DISTANCE = 25;
objects_Enemy.SECONDS_TO_MILLISECONDS = 1000;
objects_Enemy.bpool = new utils_Pooler_$objects_$AnimatedBullet();
objects_Enemy.S_STOP = 0;
objects_Enemy.S_SHOOT = 1;
objects_Enemy.S_WALK = 2;
objects_Enemy.S_FOCUS = 3;
objects_Enemy.S_UNFOCUS = 4;
objects_Enemy.S_FOCUSED = 5;
objects_Enemy.T_KAMIKAZES = [objects_Enemy.TYPE_KAMIKAZE_1,objects_Enemy.TYPE_KAMIKAZE_2,objects_Enemy.TYPE_KAMIKAZE_3,objects_Enemy.TYPE_KAMIKAZE_4,objects_Enemy.TYPE_KAMIKAZE_5,objects_Enemy.TYPE_KAMIKAZE_6,objects_Enemy.TYPE_KAMIKAZE_7,objects_Enemy.TYPE_KAMIKAZE_8];
objects_Enemy.T_SOLDIERS = [objects_Enemy.TYPE_SOLDIER_1,objects_Enemy.TYPE_SOLDIER_2,objects_Enemy.TYPE_SOLDIER_3,objects_Enemy.TYPE_SOLDIER_4,objects_Enemy.TYPE_SOLDIER_5,objects_Enemy.TYPE_SOLDIER_6,objects_Enemy.TYPE_SOLDIER_7,objects_Enemy.TYPE_SOLDIER_8,objects_Enemy.TYPE_SOLDIER_9,objects_Enemy.TYPE_SOLDIER_10,objects_Enemy.TYPE_SOLDIER_11,objects_Enemy.TYPE_SOLDIER_12];
objects_Enemy.T_HEAVIES = [objects_Enemy.TYPE_HEAVY_1,objects_Enemy.TYPE_HEAVY_2,objects_Enemy.TYPE_HEAVY_3,objects_Enemy.TYPE_HEAVY_4,objects_Enemy.TYPE_HEAVY_5,objects_Enemy.TYPE_HEAVY_6];
objects_Generator.ET_ENEMY = 0;
objects_Generator.ET_BOX = 1;
objects_Generator.ET_WALL = 2;
objects_Generator.ET_MINE = 3;
objects_Generator.ET_COLLECTABLE = 4;
objects_Generator.y_limit = -150;
objects_ScrollingBorderLeft.SCROLLING_RATIO = 1.25;
objects_ScrollingBorderRight.SCROLLING_RATIO = 1.25;
objects_bosses_Axolotl.BOSS_HP = 100;
objects_bosses_Axolotl.BOSS_STATE_SCROLL = -1;
objects_bosses_Axolotl.BOSS_STATE_STAND = 0;
objects_bosses_Axolotl.BOSS_STATE_CRAZY = 1;
objects_bosses_Axolotl.BOSS_STATE_TONGUE_PREV = 2;
objects_bosses_Axolotl.BOSS_STATE_CALM = 3;
objects_bosses_Axolotl.BOSS_STATE_TONGUE_GO = 4;
objects_bosses_Axolotl.BOSS_STATE_TONGUE_MOVE = 5;
objects_bosses_Axolotl.BOSS_STATE_TONGUE_BACK = 6;
objects_bosses_Axolotl.BOSS_STATE_BACK = 7;
objects_bosses_Axolotl.BOSS_STATE_SCROLLBACK = 8;
objects_bosses_Axolotl.STANCE = 0;
objects_bosses_Axolotl.EXPLODE_DISTANCE = 20;
objects_bosses_Axolotl.INITIAL_AMPLITUDE = 120.0;
objects_bosses_Axolotl.MAX_AMPLITUDE = 180.0;
objects_bosses_Axolotl.CIRCLES_MAX_TIME = 5000;
objects_bosses_Bee.BOSS_HP = 100;
objects_bosses_Bee.BOSS_STATE_SCROLL = -1;
objects_bosses_Bee.BOSS_STATE_STAND = 0;
objects_bosses_Bee.BOSS_STATE_GO = 1;
objects_bosses_Bee.BOSS_STATE_CRAZY = 2;
objects_bosses_Bee.BOSS_STATE_BACK = 3;
objects_bosses_Bee.BOSS_STATE_EXPLODE = 4;
objects_bosses_Bee.STANCE = 0;
objects_bosses_Bee.EXPLODE_DISTANCE = 20;
objects_bosses_Bee.INITIAL_AMPLITUDE = 120.0;
objects_bosses_Bee.MAX_AMPLITUDE = 200.0;
objects_bosses_Bee.CIRCLES_MAX_TIME = 8000;
objects_bosses_Bomb.SPEED = 0.2;
objects_bosses_Zombozo.BOSS_HP = 100;
objects_bosses_Zombozo.BOSS_STATE_SCROLL = -1;
objects_bosses_Zombozo.BOSS_STATE_DROP_MINES = 0;
objects_bosses_Zombozo.BOSS_STATE_STAND = 1;
objects_bosses_Zombozo.BOSS_STATE_BOMB = 2;
objects_bosses_Zombozo.BOSS_STATE_BACK = 3;
objects_bosses_Zombozo.BOSS_STATE_SCROLLBACK = 4;
objects_bosses_Zombozo.EXPLODE_DISTANCE = 20;
objects_bosses_Zombozo.STANCE = 0;
objects_bosses_Zombozo.DROP_MINES_EVERY_MS = 1000;
objects_bosses_Zombozo.DROP_MINES_TIME_MS = 7000;
openfl_Assets.cache = new openfl_AssetCache();
openfl_Assets.dispatcher = new openfl_events_EventDispatcher();
openfl_display_LoaderInfo.__rootURL = window.document.URL;
openfl_system_ApplicationDomain.currentDomain = new openfl_system_ApplicationDomain(null);
openfl_geom_Matrix.__identity = new openfl_geom_Matrix();
openfl_geom_Matrix.__temp = new openfl_geom_Matrix();
openfl_Lib.current = new openfl_display_MovieClip();
openfl_Lib.__sentWarnings = new haxe_ds_StringMap();
openfl__$internal_renderer_GraphicsPaths.SIN45 = 0.70710678118654752440084436210485;
openfl__$internal_renderer_GraphicsPaths.TAN22 = 0.4142135623730950488016887242097;
openfl__$internal_renderer_cairo_CairoGraphics.SIN45 = 0.70710678118654752440084436210485;
openfl__$internal_renderer_cairo_CairoGraphics.TAN22 = 0.4142135623730950488016887242097;
openfl__$internal_renderer_cairo_CairoGraphics.fillCommands = new openfl__$internal_renderer_DrawCommandBuffer();
openfl__$internal_renderer_cairo_CairoGraphics.strokeCommands = new openfl__$internal_renderer_DrawCommandBuffer();
openfl__$internal_renderer_canvas_CanvasGraphics.SIN45 = 0.70710678118654752440084436210485;
openfl__$internal_renderer_canvas_CanvasGraphics.TAN22 = 0.4142135623730950488016887242097;
openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands = new openfl__$internal_renderer_DrawCommandBuffer();
openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands = new openfl__$internal_renderer_DrawCommandBuffer();
openfl__$internal_renderer_opengl_GLBitmap.fbData = [];
openfl__$internal_renderer_opengl_GLRenderer.glContextId = 0;
openfl__$internal_renderer_opengl_GLRenderer.glContexts = [];
openfl__$internal_renderer_opengl_shaders2_Shader.UID = 0;
openfl__$internal_renderer_opengl_shaders2_DefaultShader.VERTEX_SRC = ["attribute vec2 " + "openfl_aPosition" + ";","attribute vec2 " + "openfl_aTexCoord0" + ";","attribute vec4 " + "openfl_aColor" + ";","uniform mat3 " + "openfl_uProjectionMatrix" + ";","uniform bool " + "openfl_uUseColorTransform" + ";","varying vec2 " + "openfl_vTexCoord" + ";","varying vec4 " + "openfl_vColor" + ";","void main(void) {","   gl_Position = vec4((" + "openfl_uProjectionMatrix" + " * vec3(" + "openfl_aPosition" + ", 1.0)).xy, 0.0, 1.0);","   " + "openfl_vTexCoord" + " = " + "openfl_aTexCoord0" + ";","   if(" + "openfl_uUseColorTransform" + ")","   \t" + "openfl_vColor" + " = " + "openfl_aColor" + ";","   else","   \t" + "openfl_vColor" + " = vec4(" + "openfl_aColor" + ".rgb * " + "openfl_aColor" + ".a, " + "openfl_aColor" + ".a);","}"];
openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding = 0;
openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex = 0;
openfl_geom_Rectangle.__temp = new openfl_geom_Rectangle();
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.fillVertexAttributes = [new openfl__$internal_renderer_opengl_utils_VertexAttribute(2,5126,false,"openfl_aPosition")];
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.drawTrianglesVertexAttributes = [new openfl__$internal_renderer_opengl_utils_VertexAttribute(2,5126,false,"openfl_aPosition"),new openfl__$internal_renderer_opengl_utils_VertexAttribute(2,5126,false,"openfl_aTexCoord0"),new openfl__$internal_renderer_opengl_utils_VertexAttribute(4,5121,true,"openfl_aColor")];
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.primitiveVertexAttributes = [new openfl__$internal_renderer_opengl_utils_VertexAttribute(2,5126,false,"openfl_aPosition"),new openfl__$internal_renderer_opengl_utils_VertexAttribute(4,5126,false,"openfl_aColor")];
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.graphicsDataPool = [];
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.bucketPool = [];
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.SIN45 = 0.70710678118654752440084436210485;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.TAN22 = 0.4142135623730950488016887242097;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectPosition = new openfl_geom_Point();
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds = new openfl_geom_Rectangle();
openfl__$internal_renderer_opengl_utils_ShaderManager.compiledShadersCache = new haxe_ds_StringMap();
openfl__$internal_renderer_opengl_utils_SpriteBatch.VERTS_PER_SPRITE = 4;
openfl__$internal_text_TextEngine.UTF8_TAB = 9;
openfl__$internal_text_TextEngine.UTF8_ENDLINE = 10;
openfl__$internal_text_TextEngine.UTF8_SPACE = 32;
openfl__$internal_text_TextEngine.UTF8_HYPHEN = 45;
openfl__$internal_text_TextEngine.__defaultFonts = new haxe_ds_StringMap();
openfl_display__$BlendMode_BlendMode_$Impl_$.ADD = 0;
openfl_display__$BlendMode_BlendMode_$Impl_$.ALPHA = 1;
openfl_display__$BlendMode_BlendMode_$Impl_$.DARKEN = 2;
openfl_display__$BlendMode_BlendMode_$Impl_$.DIFFERENCE = 3;
openfl_display__$BlendMode_BlendMode_$Impl_$.ERASE = 4;
openfl_display__$BlendMode_BlendMode_$Impl_$.HARDLIGHT = 5;
openfl_display__$BlendMode_BlendMode_$Impl_$.INVERT = 6;
openfl_display__$BlendMode_BlendMode_$Impl_$.LAYER = 7;
openfl_display__$BlendMode_BlendMode_$Impl_$.LIGHTEN = 8;
openfl_display__$BlendMode_BlendMode_$Impl_$.MULTIPLY = 9;
openfl_display__$BlendMode_BlendMode_$Impl_$.NORMAL = 10;
openfl_display__$BlendMode_BlendMode_$Impl_$.OVERLAY = 11;
openfl_display__$BlendMode_BlendMode_$Impl_$.SCREEN = 12;
openfl_display__$BlendMode_BlendMode_$Impl_$.SHADER = 13;
openfl_display__$BlendMode_BlendMode_$Impl_$.SUBTRACT = 14;
openfl_display__$CapsStyle_CapsStyle_$Impl_$.NONE = 0;
openfl_display__$CapsStyle_CapsStyle_$Impl_$.ROUND = 1;
openfl_display__$CapsStyle_CapsStyle_$Impl_$.SQUARE = 2;
openfl_display__$GradientType_GradientType_$Impl_$.LINEAR = 0;
openfl_display__$GradientType_GradientType_$Impl_$.RADIAL = 1;
openfl_display_Graphics.TILE_SCALE = 1;
openfl_display_Graphics.TILE_ROTATION = 2;
openfl_display_Graphics.TILE_RGB = 4;
openfl_display_Graphics.TILE_ALPHA = 8;
openfl_display_Graphics.TILE_TRANS_2x2 = 16;
openfl_display_Graphics.TILE_RECT = 32;
openfl_display_Graphics.TILE_ORIGIN = 64;
openfl_display_Graphics.TILE_BLEND_NORMAL = 0;
openfl_display_Graphics.TILE_BLEND_ADD = 65536;
openfl_display_Graphics.TILE_BLEND_MULTIPLY = 131072;
openfl_display_Graphics.TILE_BLEND_SCREEN = 262144;
openfl_display_Graphics.TILE_BLEND_SUBTRACT = 524288;
openfl_display_Graphics.TILE_BLEND_DARKEN = 1048576;
openfl_display_Graphics.TILE_BLEND_LIGHTEN = 2097152;
openfl_display_Graphics.TILE_BLEND_OVERLAY = 4194304;
openfl_display_Graphics.TILE_BLEND_HARDLIGHT = 8388608;
openfl_display_Graphics.TILE_BLEND_DIFFERENCE = 16777216;
openfl_display_Graphics.TILE_BLEND_INVERT = 33554432;
openfl_display__$InterpolationMethod_InterpolationMethod_$Impl_$.LINEAR_RGB = 0;
openfl_display__$InterpolationMethod_InterpolationMethod_$Impl_$.RGB = 1;
openfl_display__$JointStyle_JointStyle_$Impl_$.BEVEL = 0;
openfl_display__$JointStyle_JointStyle_$Impl_$.MITER = 1;
openfl_display__$JointStyle_JointStyle_$Impl_$.ROUND = 2;
openfl_display__$LineScaleMode_LineScaleMode_$Impl_$.HORIZONTAL = 0;
openfl_display__$LineScaleMode_LineScaleMode_$Impl_$.NONE = 1;
openfl_display__$LineScaleMode_LineScaleMode_$Impl_$.NORMAL = 2;
openfl_display__$LineScaleMode_LineScaleMode_$Impl_$.VERTICAL = 3;
openfl_display_OpenGLView.CONTEXT_LOST = "glcontextlost";
openfl_display_OpenGLView.CONTEXT_RESTORED = "glcontextrestored";
openfl_display__$PixelSnapping_PixelSnapping_$Impl_$.ALWAYS = 0;
openfl_display__$PixelSnapping_PixelSnapping_$Impl_$.AUTO = 1;
openfl_display__$PixelSnapping_PixelSnapping_$Impl_$.NEVER = 2;
openfl_display_Shader.uniformRegex = new EReg("^\\s*uniform\\s+(sampler(?:2D|Cube)|[bi]?vec[234]|float|int|bool|mat[234])\\s+(\\w+)\\s*(?:\\[(\\d+)\\])?\\s*;.*$","gmi");
openfl_display_Shader.aPosition = "openfl_aPosition";
openfl_display_Shader.aTexCoord = "openfl_aTexCoord0";
openfl_display_Shader.aColor = "openfl_aColor";
openfl_display_Shader.uSampler = "openfl_uSampler0";
openfl_display_Shader.uProjectionMatrix = "openfl_uProjectionMatrix";
openfl_display_Shader.uColorMultiplier = "openfl_uColorMultiplier";
openfl_display_Shader.uColorOffset = "openfl_uColorOffset";
openfl_display_Shader.uObjectSize = "openfl_uObjectSize";
openfl_display_Shader.uTextureSize = "openfl_uTextureSize";
openfl_display_Shader.vTexCoord = "openfl_vTexCoord";
openfl_display_Shader.vColor = "openfl_vColor";
openfl_display_Shader.vertexHeader = ["attribute vec2 " + openfl_display_Shader.aPosition + ";","attribute vec2 " + openfl_display_Shader.aTexCoord + ";","attribute vec4 " + openfl_display_Shader.aColor + ";","uniform mat3 " + openfl_display_Shader.uProjectionMatrix + ";","uniform vec2 " + openfl_display_Shader.uObjectSize + ";","uniform vec2 " + openfl_display_Shader.uTextureSize + ";","varying vec2 " + openfl_display_Shader.vTexCoord + ";","varying vec4 " + openfl_display_Shader.vColor + ";"];
openfl_display_Shader.fragmentHeader = ["uniform sampler2D " + openfl_display_Shader.uSampler + ";","uniform vec4 " + openfl_display_Shader.uColorMultiplier + ";","uniform vec4 " + openfl_display_Shader.uColorOffset + ";","uniform vec2 " + openfl_display_Shader.uObjectSize + ";","uniform vec2 " + openfl_display_Shader.uTextureSize + ";","varying vec2 " + openfl_display_Shader.vTexCoord + ";","varying vec4 " + openfl_display_Shader.vColor + ";","vec4 colorTransform(const vec4 color, const vec4 tint, const vec4 multiplier, const vec4 offset) {","   vec4 unmultiply = vec4(color.rgb / color.a, color.a);","   vec4 result = unmultiply * tint * multiplier;","   result = result + offset;","   result = clamp(result, 0., 1.);","   result = vec4(result.rgb * result.a, result.a);","   return result;","}"];
openfl_display__$SpreadMethod_SpreadMethod_$Impl_$.PAD = 0;
openfl_display__$SpreadMethod_SpreadMethod_$Impl_$.REFLECT = 1;
openfl_display__$SpreadMethod_SpreadMethod_$Impl_$.REPEAT = 2;
openfl_display__$StageAlign_StageAlign_$Impl_$.BOTTOM = 0;
openfl_display__$StageAlign_StageAlign_$Impl_$.BOTTOM_LEFT = 1;
openfl_display__$StageAlign_StageAlign_$Impl_$.BOTTOM_RIGHT = 2;
openfl_display__$StageAlign_StageAlign_$Impl_$.LEFT = 3;
openfl_display__$StageAlign_StageAlign_$Impl_$.RIGHT = 4;
openfl_display__$StageAlign_StageAlign_$Impl_$.TOP = 5;
openfl_display__$StageAlign_StageAlign_$Impl_$.TOP_LEFT = 6;
openfl_display__$StageAlign_StageAlign_$Impl_$.TOP_RIGHT = 7;
openfl_display__$StageDisplayState_StageDisplayState_$Impl_$.FULL_SCREEN = 0;
openfl_display__$StageDisplayState_StageDisplayState_$Impl_$.FULL_SCREEN_INTERACTIVE = 1;
openfl_display__$StageDisplayState_StageDisplayState_$Impl_$.NORMAL = 2;
openfl_display__$StageQuality_StageQuality_$Impl_$.BEST = 0;
openfl_display__$StageQuality_StageQuality_$Impl_$.HIGH = 1;
openfl_display__$StageQuality_StageQuality_$Impl_$.LOW = 2;
openfl_display__$StageQuality_StageQuality_$Impl_$.MEDIUM = 3;
openfl_display__$StageScaleMode_StageScaleMode_$Impl_$.EXACT_FIT = 0;
openfl_display__$StageScaleMode_StageScaleMode_$Impl_$.NO_BORDER = 1;
openfl_display__$StageScaleMode_StageScaleMode_$Impl_$.NO_SCALE = 2;
openfl_display__$StageScaleMode_StageScaleMode_$Impl_$.SHOW_ALL = 3;
openfl_display_Tilesheet.TILE_SCALE = 1;
openfl_display_Tilesheet.TILE_ROTATION = 2;
openfl_display_Tilesheet.TILE_RGB = 4;
openfl_display_Tilesheet.TILE_ALPHA = 8;
openfl_display_Tilesheet.TILE_TRANS_2x2 = 16;
openfl_display_Tilesheet.TILE_RECT = 32;
openfl_display_Tilesheet.TILE_ORIGIN = 64;
openfl_display_Tilesheet.TILE_TRANS_COLOR = 128;
openfl_display_Tilesheet.TILE_BLEND_NORMAL = 0;
openfl_display_Tilesheet.TILE_BLEND_ADD = 65536;
openfl_display_Tilesheet.TILE_BLEND_MULTIPLY = 131072;
openfl_display_Tilesheet.TILE_BLEND_SCREEN = 262144;
openfl_display_Tilesheet.TILE_BLEND_SUBTRACT = 524288;
openfl_display_Tilesheet.TILE_BLEND_DARKEN = 1048576;
openfl_display_Tilesheet.TILE_BLEND_LIGHTEN = 2097152;
openfl_display_Tilesheet.TILE_BLEND_OVERLAY = 4194304;
openfl_display_Tilesheet.TILE_BLEND_HARDLIGHT = 8388608;
openfl_display_Tilesheet.TILE_BLEND_DIFFERENCE = 16777216;
openfl_display_Tilesheet.TILE_BLEND_INVERT = 33554432;
openfl_display_Tilesheet.__defaultPoint = new openfl_geom_Point(0,0);
openfl_display__$TriangleCulling_TriangleCulling_$Impl_$.NEGATIVE = 0;
openfl_display__$TriangleCulling_TriangleCulling_$Impl_$.NONE = 1;
openfl_display__$TriangleCulling_TriangleCulling_$Impl_$.POSITIVE = 2;
openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT = 34046;
openfl_display3D_Context3D.MAX_SAMPLERS = 8;
openfl_display3D_Context3D.MAX_TEXTURE_MAX_ANISOTROPY_EXT = 34047;
openfl_display3D_Context3D.anisotropySupportTested = false;
openfl_display3D_Context3D.supportsAnisotropy = false;
openfl_display3D_Context3D.maxSupportedAnisotropy = 256;
openfl_display3D_Context3DClearMask.ALL = 17664;
openfl_display3D_Context3DClearMask.COLOR = 16384;
openfl_display3D_Context3DClearMask.DEPTH = 256;
openfl_display3D_Context3DClearMask.STENCIL = 1024;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.ALWAYS = 519;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.EQUAL = 514;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.GREATER = 516;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.GREATER_EQUAL = 518;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.LESS = 513;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.LESS_EQUAL = 515;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.NEVER = 512;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.NOT_EQUAL = 517;
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$.BACK = 1028;
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$.FRONT = 1029;
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$.FRONT_AND_BACK = 1032;
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$.NONE = 0;
openfl_display3D_textures_Texture.internalFormat = -1;
openfl_errors_Error.DEFAULT_TO_STRING = "Error";
openfl_events_Event.ACTIVATE = "activate";
openfl_events_Event.ADDED = "added";
openfl_events_Event.ADDED_TO_STAGE = "addedToStage";
openfl_events_Event.CANCEL = "cancel";
openfl_events_Event.CHANGE = "change";
openfl_events_Event.CLOSE = "close";
openfl_events_Event.COMPLETE = "complete";
openfl_events_Event.CONNECT = "connect";
openfl_events_Event.CONTEXT3D_CREATE = "context3DCreate";
openfl_events_Event.DEACTIVATE = "deactivate";
openfl_events_Event.ENTER_FRAME = "enterFrame";
openfl_events_Event.ID3 = "id3";
openfl_events_Event.INIT = "init";
openfl_events_Event.MOUSE_LEAVE = "mouseLeave";
openfl_events_Event.OPEN = "open";
openfl_events_Event.REMOVED = "removed";
openfl_events_Event.REMOVED_FROM_STAGE = "removedFromStage";
openfl_events_Event.RENDER = "render";
openfl_events_Event.RESIZE = "resize";
openfl_events_Event.SCROLL = "scroll";
openfl_events_Event.SELECT = "select";
openfl_events_Event.SOUND_COMPLETE = "soundComplete";
openfl_events_Event.TAB_CHILDREN_CHANGE = "tabChildrenChange";
openfl_events_Event.TAB_ENABLED_CHANGE = "tabEnabledChange";
openfl_events_Event.TAB_INDEX_CHANGE = "tabIndexChange";
openfl_events_Event.UNLOAD = "unload";
openfl_events_ActivityEvent.ACTIVITY = "activity";
openfl_events_TextEvent.LINK = "link";
openfl_events_TextEvent.TEXT_INPUT = "textInput";
openfl_events_ErrorEvent.ERROR = "error";
openfl_events_FocusEvent.FOCUS_IN = "focusIn";
openfl_events_FocusEvent.FOCUS_OUT = "focusOut";
openfl_events_FocusEvent.KEY_FOCUS_CHANGE = "keyFocusChange";
openfl_events_FocusEvent.MOUSE_FOCUS_CHANGE = "mouseFocusChange";
openfl_events_FullScreenEvent.FULL_SCREEN = "fullScreen";
openfl_events_FullScreenEvent.FULL_SCREEN_INTERACTIVE_ACCEPTED = "fullScreenInteractiveAccepted";
openfl_events_GameInputEvent.DEVICE_ADDED = "deviceAdded";
openfl_events_GameInputEvent.DEVICE_REMOVED = "deviceRemoved";
openfl_events_GameInputEvent.DEVICE_UNUSABLE = "deviceUnusable";
openfl_events_HTTPStatusEvent.HTTP_RESPONSE_STATUS = "httpResponseStatus";
openfl_events_HTTPStatusEvent.HTTP_STATUS = "httpStatus";
openfl_events_IOErrorEvent.IO_ERROR = "ioError";
openfl_events_KeyboardEvent.KEY_DOWN = "keyDown";
openfl_events_KeyboardEvent.KEY_UP = "keyUp";
openfl_events_MouseEvent.CLICK = "click";
openfl_events_MouseEvent.DOUBLE_CLICK = "doubleClick";
openfl_events_MouseEvent.MIDDLE_CLICK = "middleClick";
openfl_events_MouseEvent.MIDDLE_MOUSE_DOWN = "middleMouseDown";
openfl_events_MouseEvent.MIDDLE_MOUSE_UP = "middleMouseUp";
openfl_events_MouseEvent.MOUSE_DOWN = "mouseDown";
openfl_events_MouseEvent.MOUSE_MOVE = "mouseMove";
openfl_events_MouseEvent.MOUSE_OUT = "mouseOut";
openfl_events_MouseEvent.MOUSE_OVER = "mouseOver";
openfl_events_MouseEvent.MOUSE_UP = "mouseUp";
openfl_events_MouseEvent.MOUSE_WHEEL = "mouseWheel";
openfl_events_MouseEvent.RIGHT_CLICK = "rightClick";
openfl_events_MouseEvent.RIGHT_MOUSE_DOWN = "rightMouseDown";
openfl_events_MouseEvent.RIGHT_MOUSE_UP = "rightMouseUp";
openfl_events_MouseEvent.ROLL_OUT = "rollOut";
openfl_events_MouseEvent.ROLL_OVER = "rollOver";
openfl_events_NetStatusEvent.NET_STATUS = "netStatus";
openfl_events_ProgressEvent.PROGRESS = "progress";
openfl_events_ProgressEvent.SOCKET_DATA = "socketData";
openfl_events_SecurityErrorEvent.SECURITY_ERROR = "securityError";
openfl_events_TouchEvent.TOUCH_BEGIN = "touchBegin";
openfl_events_TouchEvent.TOUCH_END = "touchEnd";
openfl_events_TouchEvent.TOUCH_MOVE = "touchMove";
openfl_events_TouchEvent.TOUCH_OUT = "touchOut";
openfl_events_TouchEvent.TOUCH_OVER = "touchOver";
openfl_events_TouchEvent.TOUCH_ROLL_OUT = "touchRollOut";
openfl_events_TouchEvent.TOUCH_ROLL_OVER = "touchRollOver";
openfl_events_TouchEvent.TOUCH_TAP = "touchTap";
openfl_filters__$BlurFilter_BlurShader.__meta__ = { fields : { vertex : { vertex : null}, fragment : { fragment : null}, get_uRadius : { noCompletion : null}, set_uRadius : { noCompletion : null}}};
openfl_geom__$Orientation3D_Orientation3D_$Impl_$.AXIS_ANGLE = 0;
openfl_geom__$Orientation3D_Orientation3D_$Impl_$.EULER_ANGLES = 1;
openfl_geom__$Orientation3D_Orientation3D_$Impl_$.QUATERNION = 2;
openfl_media_Sound.__registeredSounds = new haxe_ds_StringMap();
openfl_net_NetConnection.CONNECT_SUCCESS = "connectSuccess";
openfl_net_SharedObject.defaultObjectEncoding = 3;
openfl_net__$SharedObjectFlushStatus_SharedObjectFlushStatus_$Impl_$.FLUSHED = 0;
openfl_net__$SharedObjectFlushStatus_SharedObjectFlushStatus_$Impl_$.PENDING = 1;
openfl_net__$URLLoaderDataFormat_URLLoaderDataFormat_$Impl_$.BINARY = 0;
openfl_net__$URLLoaderDataFormat_URLLoaderDataFormat_$Impl_$.TEXT = 1;
openfl_net__$URLLoaderDataFormat_URLLoaderDataFormat_$Impl_$.VARIABLES = 2;
openfl_net__$URLRequestMethod_URLRequestMethod_$Impl_$.DELETE = 0;
openfl_net__$URLRequestMethod_URLRequestMethod_$Impl_$.GET = 1;
openfl_net__$URLRequestMethod_URLRequestMethod_$Impl_$.HEAD = 2;
openfl_net__$URLRequestMethod_URLRequestMethod_$Impl_$.OPTIONS = 3;
openfl_net__$URLRequestMethod_URLRequestMethod_$Impl_$.POST = 4;
openfl_net__$URLRequestMethod_URLRequestMethod_$Impl_$.PUT = 5;
openfl_system_SecurityDomain.currentDomain = new openfl_system_SecurityDomain();
openfl_system_System.useCodePage = false;
openfl_text__$AntiAliasType_AntiAliasType_$Impl_$.ADVANCED = 0;
openfl_text__$AntiAliasType_AntiAliasType_$Impl_$.NORMAL = 1;
openfl_text__$FontStyle_FontStyle_$Impl_$.BOLD = 0;
openfl_text__$FontStyle_FontStyle_$Impl_$.BOLD_ITALIC = 1;
openfl_text__$FontStyle_FontStyle_$Impl_$.ITALIC = 2;
openfl_text__$FontStyle_FontStyle_$Impl_$.REGULAR = 3;
openfl_text__$FontType_FontType_$Impl_$.DEVICE = 0;
openfl_text__$FontType_FontType_$Impl_$.EMBEDDED = 1;
openfl_text__$FontType_FontType_$Impl_$.EMBEDDED_CFF = 2;
openfl_text__$GridFitType_GridFitType_$Impl_$.NONE = 0;
openfl_text__$GridFitType_GridFitType_$Impl_$.PIXEL = 1;
openfl_text__$GridFitType_GridFitType_$Impl_$.SUBPIXEL = 2;
openfl_text__$TextFieldAutoSize_TextFieldAutoSize_$Impl_$.CENTER = 0;
openfl_text__$TextFieldAutoSize_TextFieldAutoSize_$Impl_$.LEFT = 1;
openfl_text__$TextFieldAutoSize_TextFieldAutoSize_$Impl_$.NONE = 2;
openfl_text__$TextFieldAutoSize_TextFieldAutoSize_$Impl_$.RIGHT = 3;
openfl_text__$TextFieldType_TextFieldType_$Impl_$.DYNAMIC = 0;
openfl_text__$TextFieldType_TextFieldType_$Impl_$.INPUT = 1;
openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$.CENTER = 0;
openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$.END = 1;
openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$.JUSTIFY = 2;
openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$.LEFT = 3;
openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$.RIGHT = 4;
openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$.START = 5;
openfl_ui_GameInput.isSupported = true;
openfl_ui_GameInput.numDevices = 0;
openfl_ui_GameInput.__deviceList = [];
openfl_ui_GameInput.__devices = new haxe_ds_ObjectMap();
openfl_ui_GameInput.__instances = [];
openfl_ui_GameInputDevice.MAX_BUFFER_SIZE = 32000;
openfl_ui_Keyboard.NUMBER_0 = 48;
openfl_ui_Keyboard.NUMBER_1 = 49;
openfl_ui_Keyboard.NUMBER_2 = 50;
openfl_ui_Keyboard.NUMBER_3 = 51;
openfl_ui_Keyboard.NUMBER_4 = 52;
openfl_ui_Keyboard.NUMBER_5 = 53;
openfl_ui_Keyboard.NUMBER_6 = 54;
openfl_ui_Keyboard.NUMBER_7 = 55;
openfl_ui_Keyboard.NUMBER_8 = 56;
openfl_ui_Keyboard.NUMBER_9 = 57;
openfl_ui_Keyboard.A = 65;
openfl_ui_Keyboard.B = 66;
openfl_ui_Keyboard.C = 67;
openfl_ui_Keyboard.D = 68;
openfl_ui_Keyboard.E = 69;
openfl_ui_Keyboard.F = 70;
openfl_ui_Keyboard.G = 71;
openfl_ui_Keyboard.H = 72;
openfl_ui_Keyboard.I = 73;
openfl_ui_Keyboard.J = 74;
openfl_ui_Keyboard.K = 75;
openfl_ui_Keyboard.L = 76;
openfl_ui_Keyboard.M = 77;
openfl_ui_Keyboard.N = 78;
openfl_ui_Keyboard.O = 79;
openfl_ui_Keyboard.P = 80;
openfl_ui_Keyboard.Q = 81;
openfl_ui_Keyboard.R = 82;
openfl_ui_Keyboard.S = 83;
openfl_ui_Keyboard.T = 84;
openfl_ui_Keyboard.U = 85;
openfl_ui_Keyboard.V = 86;
openfl_ui_Keyboard.W = 87;
openfl_ui_Keyboard.X = 88;
openfl_ui_Keyboard.Y = 89;
openfl_ui_Keyboard.Z = 90;
openfl_ui_Keyboard.NUMPAD_0 = 96;
openfl_ui_Keyboard.NUMPAD_1 = 97;
openfl_ui_Keyboard.NUMPAD_2 = 98;
openfl_ui_Keyboard.NUMPAD_3 = 99;
openfl_ui_Keyboard.NUMPAD_4 = 100;
openfl_ui_Keyboard.NUMPAD_5 = 101;
openfl_ui_Keyboard.NUMPAD_6 = 102;
openfl_ui_Keyboard.NUMPAD_7 = 103;
openfl_ui_Keyboard.NUMPAD_8 = 104;
openfl_ui_Keyboard.NUMPAD_9 = 105;
openfl_ui_Keyboard.NUMPAD_MULTIPLY = 106;
openfl_ui_Keyboard.NUMPAD_ADD = 107;
openfl_ui_Keyboard.NUMPAD_ENTER = 108;
openfl_ui_Keyboard.NUMPAD_SUBTRACT = 109;
openfl_ui_Keyboard.NUMPAD_DECIMAL = 110;
openfl_ui_Keyboard.NUMPAD_DIVIDE = 111;
openfl_ui_Keyboard.F1 = 112;
openfl_ui_Keyboard.F2 = 113;
openfl_ui_Keyboard.F3 = 114;
openfl_ui_Keyboard.F4 = 115;
openfl_ui_Keyboard.F5 = 116;
openfl_ui_Keyboard.F6 = 117;
openfl_ui_Keyboard.F7 = 118;
openfl_ui_Keyboard.F8 = 119;
openfl_ui_Keyboard.F9 = 120;
openfl_ui_Keyboard.F10 = 121;
openfl_ui_Keyboard.F11 = 122;
openfl_ui_Keyboard.F12 = 123;
openfl_ui_Keyboard.F13 = 124;
openfl_ui_Keyboard.F14 = 125;
openfl_ui_Keyboard.F15 = 126;
openfl_ui_Keyboard.BACKSPACE = 8;
openfl_ui_Keyboard.TAB = 9;
openfl_ui_Keyboard.ALTERNATE = 18;
openfl_ui_Keyboard.ENTER = 13;
openfl_ui_Keyboard.COMMAND = 15;
openfl_ui_Keyboard.SHIFT = 16;
openfl_ui_Keyboard.CONTROL = 17;
openfl_ui_Keyboard.BREAK = 19;
openfl_ui_Keyboard.CAPS_LOCK = 20;
openfl_ui_Keyboard.NUMPAD = 21;
openfl_ui_Keyboard.ESCAPE = 27;
openfl_ui_Keyboard.SPACE = 32;
openfl_ui_Keyboard.PAGE_UP = 33;
openfl_ui_Keyboard.PAGE_DOWN = 34;
openfl_ui_Keyboard.END = 35;
openfl_ui_Keyboard.HOME = 36;
openfl_ui_Keyboard.LEFT = 37;
openfl_ui_Keyboard.RIGHT = 39;
openfl_ui_Keyboard.UP = 38;
openfl_ui_Keyboard.DOWN = 40;
openfl_ui_Keyboard.INSERT = 45;
openfl_ui_Keyboard.DELETE = 46;
openfl_ui_Keyboard.NUMLOCK = 144;
openfl_ui_Keyboard.SEMICOLON = 186;
openfl_ui_Keyboard.EQUAL = 187;
openfl_ui_Keyboard.COMMA = 188;
openfl_ui_Keyboard.MINUS = 189;
openfl_ui_Keyboard.PERIOD = 190;
openfl_ui_Keyboard.SLASH = 191;
openfl_ui_Keyboard.BACKQUOTE = 192;
openfl_ui_Keyboard.LEFTBRACKET = 219;
openfl_ui_Keyboard.BACKSLASH = 220;
openfl_ui_Keyboard.RIGHTBRACKET = 221;
openfl_ui_Keyboard.QUOTE = 222;
openfl_ui__$MultitouchInputMode_MultitouchInputMode_$Impl_$.GESTURE = 0;
openfl_ui__$MultitouchInputMode_MultitouchInputMode_$Impl_$.NONE = 1;
openfl_ui__$MultitouchInputMode_MultitouchInputMode_$Impl_$.TOUCH_POINT = 2;
openfl_utils__$CompressionAlgorithm_CompressionAlgorithm_$Impl_$.DEFLATE = 0;
openfl_utils__$CompressionAlgorithm_CompressionAlgorithm_$Impl_$.LZMA = 1;
openfl_utils__$CompressionAlgorithm_CompressionAlgorithm_$Impl_$.ZLIB = 2;
openfl_utils__$Endian_Endian_$Impl_$.BIG_ENDIAN = 0;
openfl_utils__$Endian_Endian_$Impl_$.LITTLE_ENDIAN = 1;
scenes_End.ENTER_DURATION = 1.0;
scenes_End.EXIT_DURATION = 1.0;
scenes_Gameplay.SCROLLING = 0.1;
scenes_Gameplay.SCROLLING_SPRINT = 0.25;
scenes_Gameplay.scrollingSpeed = scenes_Gameplay.SCROLLING;
scenes_Gameplay.paused = false;
scenes_Gameplay.gameover = false;
scenes_Gameplay.lostFocus = false;
scenes_Gameplay.assetSet = 1;
scenes_Gameplay.actualLevel = 1;
scenes_Gameplay.difficult = "normal";
scenes_Gameplay.GP_INTRO = 0;
scenes_Gameplay.GP_PLAYING = 1;
scenes_Gameplay.GP_PAUSED = 2;
scenes_Gameplay.GP_OUTRO = 3;
scenes_Gameplay.GP_FINISHED = 4;
scenes_MainMenu.ENTER_DURATION = 1.0;
scenes_MainMenu.EXIT_DURATION = 1.0;
scenes_Manager.nextLevel = 1;
scenes_Manager.levelselect_flag = false;
spritesheet_data_BehaviorData.uniqueID = 0;
ui_MissionCompleteBoard.HEIGHT = 80;
ui_MissionCompleteBoard.WIDTH = 240;
ui_MissionCompleteBoard.BORDER_RADIOUS = 30;
ui_MissionCompleteBoard.PADDING = 30;
ui_MissionCompleteBoard.COLOR = 9358387;
ui_buttons_Button.STATE_IDLE = 0;
ui_buttons_Button.STATE_OVER = 1;
ui_buttons_Button.STATE_DOWN = 2;
ui_buttons_Button.HEIGHT = 40;
ui_buttons_Button.WIDTH = 160;
ui_buttons_Button.BORDER_RADIOUS = 30;
ui_buttons_Button.COLOR = 0;
utils_DataManager.LEVELS = 9;
utils_DataManager.SHARED_OBJECT_NAME = "KB_BEN10_REBOOT";
utils_DataManager.currentLevel = 0;
utils_FadeMusic.volumenFix = 0.025;
utils_KeyboardMap.active = true;
utils_KeyboardMap.KEY_CODES_LENGHT = 256;
utils_LevelLoader.gridWidth = 30;
utils_LevelLoader.gridHeight = 30;
utils_LevelLoader.offsetX = 64;
utils_LevelLoader.offsetY = -Main.screenHeight;
utils_LevelLoader.levelWidth = 16;
utils_LevelLoader.levelHeight = 32;
utils_Missions.NAME_BASE = "mission";
utils_SoundLib.PATH = "audio/";
utils_SoundLib.FORMAT_MP3 = ".mp3";
utils_SoundLib.FORMAT_OGG = ".ogg";
utils_SoundLib.USE_MP3 = false;
utils_SoundLib.FORMAT = ".ogg";
utils_SoundLib.actual_track = "intro";
utils_SoundLib.zeroVolume = new openfl_media_SoundTransform(0,-0.0001);
utils_SoundLib.fullVolume = new openfl_media_SoundTransform(1,-0.0001);
utils_SoundLib.playingVolume = 1.0;
utils_SoundLib.musicEnabled = true;
utils_Utils.toRad = Math.PI / 180.0;
utils_Utils.OFFSCREEN_OFFSET = 142;
utils_Utils.IS_DEBUG = false;
utils_Utils.DEBUG_COLLIDERS = utils_Utils.IS_DEBUG;
utils_particles_Dust.POOL_SIZE = 10;
utils_particles_DustParticle.MAX_SPEED = 3;
utils_particles_DustParticle.ACCELERATION = 1.03;
utils_particles_DustParticle.INITIAL_ALPHA = 0.45;
utils_particles_DustParticle.INITIAL_SCALE = 0.1;
utils_particles_DustParticle.INITIAL_SPEED = 0.1;
utils_particles_DustParticle.FINAL_RADIOUS = 20;
utils_particles_DustParticle.COLOR = 16754253;
utils_particles_Particle.MAX_SPEED = 35;
utils_particles_Particle.FRICTION = 0.75;
utils_particles_Particle.COLOR = 13434624;
utils_particles_Particle.SIZE = 14;
utils_particles_Particles.POOL_SIZE = 50;
utils_particles_ShootDustParticle.MAX_SPEED = 3;
utils_particles_ShootDustParticle.ACCELERATION = 1.0;
utils_particles_ShootDustParticle.INITIAL_ALPHA = 0.45;
utils_particles_ShootDustParticle.INITIAL_SCALE = 0.20;
utils_particles_ShootDustParticle.INITIAL_SPEED = 0.1;
utils_particles_ShootDustParticle.FINAL_RADIUS = 5;
utils_particles_ShootDustParticle.COLOR = 16754253;
ApplicationMain.main();
})(typeof console != "undefined" ? console : {log:function(){}}, typeof window != "undefined" ? window : exports, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
