(function(){CocoonJS=window.CocoonJS?window.CocoonJS:{};CocoonJS.nativeExtensionObjectAvailable=typeof window.ext!=='undefined';CocoonJS.Size={width:0,height:0};CocoonJS.extend=function(subc,superc){var subcp=subc.prototype;var CocoonJSExtendHierarchyChainClass=function(){};CocoonJSExtendHierarchyChainClass.prototype=superc.prototype;subc.prototype=new CocoonJSExtendHierarchyChainClass();subc.superclass=superc.prototype;subc.prototype.constructor=subc;if(superc.prototype.constructor===Object.prototype.constructor){superc.prototype.constructor=superc;}
for(var method in subcp){if(subcp.hasOwnProperty(method)){subc.prototype[method]=subcp[method];}}}
CocoonJS.makeNativeExtensionObjectFunctionCall=function(nativeExtensionObjectName,nativeFunctionName,args,async){if(CocoonJS.nativeExtensionObjectAvailable){var argumentsArray=Array.prototype.slice.call(args);argumentsArray.unshift(nativeFunctionName);var nativeExtensionObject=ext[nativeExtensionObjectName];var makeCallFunction=async?nativeExtensionObject.makeCallAsync:nativeExtensionObject.makeCall;var ret=makeCallFunction.apply(nativeExtensionObject,argumentsArray);var finalRet=ret;if(typeof ret==="string"){try{finalRet=JSON.parse(ret);}catch(error){}}
return finalRet;}};CocoonJS.getObjectFromPath=function(baseObject,objectPath){var parts=objectPath.split('.');var obj=baseObject;for(var i=0,len=parts.length;i<len;++i){obj[parts[i]]=obj[parts[i]]||undefined;obj=obj[parts[i]];}
return obj;};CocoonJS.getKeyForValueInDictionary=function(dictionary,value){var finalKey=null;for(var key in dictionary){if(dictionary[key]===value){finalKey=key;break;}}
return finalKey;}
CocoonJS.findStringInStringArrayThatIsIndexOf=function(stringArray,subString,caseSensitive){var foundString=null;subString=caseSensitive?subString:subString.toUpperCase();for(var i=0;foundString==null&&i<stringArray.length;i++){foundString=caseSensitive?stringArray[i]:stringArray[i].toUpperCase();foundString=foundString.indexOf(subString)>=0?stringArray[i]:null;}
return foundString;};CocoonJS.EventHandler=function(nativeExtensionObjectName,cocoonJSExtensionObjectName,nativeEventName,chainFunction){this.listeners=[];this.listenersOnce=[];this.chainFunction=chainFunction;this.addEventListener=function(listener){if(chainFunction){var f=function(){chainFunction.call(this,arguments.callee.sourceListener,Array.prototype.slice.call(arguments));};listener.CocoonJSEventHandlerChainFunction=f;f.sourceListener=listener;listener=f;}
var cocoonJSExtensionObject=CocoonJS.getObjectFromPath(CocoonJS,cocoonJSExtensionObjectName);if(cocoonJSExtensionObject&&cocoonJSExtensionObject.nativeExtensionObjectAvailable){ext[nativeExtensionObjectName].addEventListener(nativeEventName,listener);}
var indexOfListener=this.listeners.indexOf(listener);if(indexOfListener<0){this.listeners.push(listener);}};this.addEventListenerOnce=function(listener){if(chainFunction){var f=function(){chainFunction(arguments.callee.sourceListener,Array.prototype.slice.call(arguments));};f.sourceListener=listener;listener=f;}
var cocoonJSExtensionObject=CocoonJS.getObjectFromPath(CocoonJS,cocoonJSExtensionObjectName);if(cocoonJSExtensionObject.nativeExtensionObjectAvailable){ext[nativeExtensionObjectName].addEventListenerOnce(nativeEventName,listener);}else{var indexOfListener=this.listeners.indexOf(listener);if(indexOfListener<0){this.listenersOnce.push(listener);}}};this.removeEventListener=function(listener){if(chainFunction){listener=listener.CocoonJSEventHandlerChainFunction;delete listener.CocoonJSEventHandlerChainFunction;}
var cocoonJSExtensionObject=CocoonJS.getObjectFromPath(CocoonJS,cocoonJSExtensionObjectName);if(cocoonJSExtensionObject.nativeExtensionObjectAvailable){ext[nativeExtensionObjectName].removeEventListener(nativeEventName,listener);}else{var indexOfListener=this.listeners.indexOf(listener);if(indexOfListener>=0){this.listeners.splice(indexOfListener,1);}}};this.notifyEventListeners=function(){var cocoonJSExtensionObject=CocoonJS.getObjectFromPath(CocoonJS,cocoonJSExtensionObjectName);var argumentsArray=Array.prototype.slice.call(arguments);if(cocoonJSExtensionObject&&cocoonJSExtensionObject.nativeExtensionObjectAvailable){ext[nativeExtensionObjectName].notifyEventListeners(nativeEventName,argumentsArray);}else{var listeners=Array.prototype.slice.call(this.listeners);var listenersOnce=Array.prototype.slice.call(this.listenersOnce);var _this=this;setTimeout(function(){for(var i=0;i<listeners.length;i++){listeners[i].apply(_this,argumentsArray);}
for(var i=0;i<listenersOnce.length;i++){listenersOnce[i].apply(_this,argumentsArray);}},0);_this.listenersOnce=[];}};return this;};CocoonJS.Timer=function(){this.reset();return this;};CocoonJS.Timer.prototype={currentTimeInMillis:0,lastTimeInMillis:0,elapsedTimeInMillis:0,elapsedTimeInSeconds:0,accumTimeInMillis:0,reset:function(){this.currentTimeInMillis=this.lastTimeInMillis=new Date().getTime();this.accumTimeInMillis=this.elapsedTimeInMillis=this.elapsedTimeInSeconds=0;},update:function(){this.currentTimeInMillis=new Date().getTime();this.elapsedTimeInMillis=this.currentTimeInMillis-this.lastTimeInMillis;this.elapsedTimeInSeconds=this.elapsedTimeInMillis/1000.0;this.lastTimeInMillis=this.currentTimeInMillis;this.accumTimeInMillis+=this.elapsedTimeInMillis;}};})();