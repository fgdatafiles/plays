pc.script.attribute("enableOffsetX","number",100),pc.script.attribute("enableOffsetY","number",200),pc.script.attribute("alwaysEnable","boolean",!1),pc.script.create("ForceField",function(a){var b=function(a){this.entity=a};return b.prototype={initialize:function(){this.zp=this.entity.findByName("ZP"),this.zn=this.entity.findByName("ZN"),this.xp=this.entity.findByName("XP"),this.xn=this.entity.findByName("XN");var b=this.zp.model.model.meshInstances[0].material,c=this.zn.model.model.meshInstances[0].material,d=this.xp.model.model.meshInstances[0].material,e=this.xn.model.model.meshInstances[0].material;this.zpMaterial=b.clone(),this.znMaterial=c.clone(),this.xpMaterial=d.clone(),this.xnMaterial=e.clone(),this.zp.model.model.meshInstances[0].material=this.zpMaterial,this.zn.model.model.meshInstances[0].material=this.znMaterial,this.xp.model.model.meshInstances[0].material=this.xpMaterial,this.xn.model.model.meshInstances[0].material=this.xnMaterial,this.zpMaterial.opacity=0,this.znMaterial.opacity=0,this.xpMaterial.opacity=0,this.xnMaterial.opacity=0,this.zpMaterial.update(),this.znMaterial.update(),this.xpMaterial.update(),this.xnMaterial.update(),this.bound={minX:0,maxY:0,minZ:0,maxZ:0},this.bound.minX=this.xn.getPosition().x,this.bound.maxX=this.xp.getPosition().x,this.bound.minZ=this.zn.getPosition().z,this.bound.maxZ=this.zp.getPosition().z,this.halfX=(this.bound.maxX-this.bound.minX)/2,this.halfZ=(this.bound.maxZ-this.bound.minZ)/2,this.player=a.root.findByName("Player"),this.levelController=a.root.findByName("Master").script.LevelController},update:function(a){this.alwaysEnable||this._checkPlayerPosition()},_setEnable:function(a,b){a.enabled=b},_changeAlpha:function(a,b,c){b.opacity!==a&&(pc.Utils.fp_less_than(a,0)||pc.Utils.approx_eq(a,0)?c.enabled&&(c.enabled=!1):c.enabled||(c.enabled=!0),c.enabled&&(b.opacity=a,b.update()))},_checkPlayerPosition:function(){var a=this.player.getPosition(),b=Math.abs(a.x-this.bound.minX)/(this.halfX-this.enableOffsetX),c=Math.abs(a.x-this.bound.maxX)/(this.halfX-this.enableOffsetX),d=Math.abs(a.z-this.bound.minZ)/(this.halfZ-this.enableOffsetY),e=Math.abs(a.z-this.bound.maxZ)/(this.halfZ-this.enableOffsetY);this._changeAlpha(1-b,this.xnMaterial,this.xn),this._changeAlpha(1-c,this.xpMaterial,this.xp),this._changeAlpha(1-d,this.znMaterial,this.zn),this._changeAlpha(1-e,this.zpMaterial,this.zp)}},b});